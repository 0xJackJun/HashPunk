{"id":"c065c4f502670640d771306d8c3681cc","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155Upgradeable.sol\";\nimport \"./IERC1155ReceiverUpgradeable.sol\";\nimport \"./extensions/IERC1155MetadataURIUpgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {\n    using AddressUpgradeable for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\n        __ERC1155_init_unchained(uri_);\n    }\n\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\n        return\n            interfaceId == type(IERC1155Upgradeable).interfaceId ||\n            interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[47] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155Upgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n */\nabstract contract ERC1155SupplyUpgradeable is Initializable, ERC1155Upgradeable {\n    function __ERC1155Supply_init() internal onlyInitializing {\n    }\n\n    function __ERC1155Supply_init_unchained() internal onlyInitializing {\n    }\n    mapping(uint256 => uint256) private _totalSupply;\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return ERC1155SupplyUpgradeable.totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        if (from == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                _totalSupply[ids[i]] += amounts[i];\n            }\n        }\n\n        if (to == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 id = ids[i];\n                uint256 amount = amounts[i];\n                uint256 supply = _totalSupply[id];\n                require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\");\n                unchecked {\n                    _totalSupply[id] = supply - amount;\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Upgradeable.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/HValue.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./HValueStorage.sol\";\n\ncontract HValue is ERC1155SupplyUpgradeable, HValueStorage {\n\n    function initialize(\n        string memory _uri\n    ) public initializer {\n        __ERC1155Supply_init();\n        name = \"HValue\";\n        symbol = \"HV\";\n        setBaseUri(_uri);\n        owner = msg.sender;\n        currentTimeStamp = block.timestamp;\n    }\n\n    modifier onlyOwner() {\n        require(\n            msg.sender == owner,\n            \"HValue: caller is not the owner\"\n        );\n        _;\n    }\n    \n    modifier onlyController() {\n        require(\n            msg.sender == controller,\n            \"HValue: caller is not the controller\"\n        );\n        _;\n    }\n\n    modifier onlyNewYear() {\n        require(\n            block.timestamp >= currentTimeStamp + 365 days,\n            \"HValue: not new year\"\n        );\n        _;\n    }\n\n    function mintBatch(\n        address[] memory to,\n        uint256[] memory tokenIds,\n        uint256[] memory amounts,\n        uint256[] memory negtiveValues,\n        bytes memory data\n    ) public onlyOwner {\n        for (uint256 i = 0; i < to.length; i++) {\n            _mintBatch(to[i], tokenIds, amounts, data);\n            negtiveValue[to[i]] = negtiveValues[i];\n        }\n    }\n\n    function burnBatch(\n        address[] memory from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) public onlyOwner {\n        for (uint256 i = 0; i < from.length; i++) {\n            _burnBatch(from[i], ids, amounts);\n        }\n    }\n\n    function mint(\n        address to,\n        uint256 tokenId,\n        uint256 amount,\n        bytes memory data\n    ) external onlyController {\n        _mint(to, tokenId, amount, data);\n    }\n\n    function burn(\n        address from,\n        uint256 tokenId,\n        uint256 amount\n    ) external onlyController {\n        _burn(from, tokenId, amount);\n    }\n\n    function exchangeHoliday(\n        uint256 amount\n    ) external {\n        require(exchangeTimes[msg.sender] <= exchangeLimit, \"exceed exchange limit\");\n        require(balanceOf(msg.sender, voucher) >= amount, \"HValue: not enough voucher\");\n        _burn(msg.sender, voucher, amount);\n        exchangeTimes[msg.sender] += amount;\n    }\n\n    function exchangeHValue(uint256 tokenId) public {\n        require(\n            hashPunk.ownerOf(tokenId) == msg.sender,\n            \"HValue: not punk owner\"\n        );\n        require(\n            tokenId >= luckyStart && tokenId <= luckyEnd,\n            \"HValue: not lucky punk\"\n        );\n        _mint(msg.sender, Hpoint, 70, \"\");\n        _burn(msg.sender, voucher, 1);\n        hashPunk.transferFrom(msg.sender, address(this), tokenId);\n    }\n\n    function resetExchangeTimes() public onlyNewYear{\n        exchangeTimes[msg.sender] = 0;\n    }\n\n    function resetCurrentTimeStamp() public onlyOwner{\n        currentTimeStamp = block.timestamp;\n    }\n\n    function setHashPunk(IHashPunk _hashPunk) public onlyOwner {\n        hashPunk = _hashPunk;\n    }\n    \n    function setBaseUri(string memory baseUri) public onlyOwner {\n        baseMetadataURI = baseUri;\n    }\n\n    function setController(address _controller) public onlyOwner {\n        controller = _controller;\n    }\n    \n    function uri(uint256 tokenId) public view override returns (string memory) {\n        return string(abi.encodePacked(baseMetadataURI, _uint2str(tokenId)));\n    }\n\n    function _uint2str(uint256 _i) internal pure returns (string memory) {\n        if (_i == 0) {\n            return \"0\";\n        }\n        uint256 j = _i;\n        uint256 len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bStr = new bytes(len);\n        uint256 k = len;\n        while (_i != 0) {\n            k = k - 1;\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\n            bytes1 b1 = bytes1(temp);\n            bStr[k] = b1;\n            _i /= 10;\n        }\n        return string(bStr);\n    }\n}\n"},"contracts/HValueStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface IHashPunk {\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n}\n\ncontract HValueStorage {\n    string    public          name;\n    string    public          symbol;\n    address   public          owner;\n    address   public          controller;\n    IHashPunk public          hashPunk;\n    uint256   public          currentTimeStamp;\n    string    public          baseMetadataURI;\n    uint256   public          passId           = 1;\n    uint256   public          Hpoint           = 2;\n    uint256   public          voucher          = 3;\n    uint256   public          luckyStart       = 1;\n    uint256   public          luckyEnd         = 500;\n    uint256   public          exchangeLimit    = 3;\n\n    mapping(address => uint256) public exchangeTimes;\n    mapping(address => uint256) public negtiveValue;\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[2052],"Initializable":[168]},"id":169,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":169,"sourceUnit":2053,"src":"138:44:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"184:2198:0","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":168,"linearizedBaseContracts":[168],"name":"Initializable","nameLocation":"2401:13:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"2421:109:0","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":6,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:0","nodeType":"VariableDeclaration","scope":168,"src":"2535:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"2568:91:0","text":" @dev Indicates that the contract is in the process of being initialized."},"id":9,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:0","nodeType":"VariableDeclaration","scope":168,"src":"2664:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"2697:90:0","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":14,"name":"Initialized","nameLocation":"2798:11:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:0","nodeType":"VariableDeclaration","scope":14,"src":"2810:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:0"},"src":"2792:33:0"},{"body":{"id":69,"nodeType":"Block","src":"3258:483:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:0","nodeType":"VariableDeclaration","scope":69,"src":"3268:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":21,"initialValue":{"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:0","subExpression":{"id":19,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3291:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":23,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3336:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":24,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3354:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":28,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:45:0","subExpression":{"arguments":[{"arguments":[{"id":33,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3415:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$168","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$168","typeString":"contract Initializable"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3407:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"3407:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3407:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":29,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"3377:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2052_$","typeString":"type(library AddressUpgradeable)"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3396:10:0","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1786,"src":"3377:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3377:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":37,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3425:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":38,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3441:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3425:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":41,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:108:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3457:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":22,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:201:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45,"nodeType":"ExpressionStatement","src":"3314:201:0"},{"expression":{"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":46,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3525:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3525:16:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":49,"nodeType":"ExpressionStatement","src":"3525:16:0"},{"condition":{"id":50,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3555:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":56,"nodeType":"IfStatement","src":"3551:65:0","trueBody":{"id":55,"nodeType":"Block","src":"3571:45:0","statements":[{"expression":{"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":51,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3585:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3601:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3585:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":54,"nodeType":"ExpressionStatement","src":"3585:20:0"}]}},{"id":57,"nodeType":"PlaceholderStatement","src":"3625:1:0"},{"condition":{"id":58,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3640:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":68,"nodeType":"IfStatement","src":"3636:99:0","trueBody":{"id":67,"nodeType":"Block","src":"3656:79:0","statements":[{"expression":{"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3670:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":60,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3686:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3670:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62,"nodeType":"ExpressionStatement","src":"3670:21:0"},{"eventCall":{"arguments":[{"hexValue":"31","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":63,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"3710:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3710:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"EmitStatement","src":"3705:19:0"}]}}]},"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"2831:399:0","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":70,"name":"initializer","nameLocation":"3244:11:0","nodeType":"ModifierDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"3255:2:0"},"src":"3235:506:0","virtual":false,"visibility":"internal"},{"body":{"id":102,"nodeType":"Block","src":"4852:255:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:14:0","subExpression":{"id":76,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"4871:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4888:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":79,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4888:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4870:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":75,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4862:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4862:99:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":84,"nodeType":"ExpressionStatement","src":"4862:99:0"},{"expression":{"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":85,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4971:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":86,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"4986:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4971:22:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":88,"nodeType":"ExpressionStatement","src":"4971:22:0"},{"expression":{"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":89,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5003:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":90,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5019:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5003:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":92,"nodeType":"ExpressionStatement","src":"5003:20:0"},{"id":93,"nodeType":"PlaceholderStatement","src":"5033:1:0"},{"expression":{"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":94,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5044:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5060:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5044:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":97,"nodeType":"ExpressionStatement","src":"5044:21:0"},{"eventCall":{"arguments":[{"id":99,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"5092:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":98,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5080:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"EmitStatement","src":"5075:25:0"}]},"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"3747:1062:0","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":103,"name":"reinitializer","nameLocation":"4823:13:0","nodeType":"ModifierDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"version","nameLocation":"4843:7:0","nodeType":"VariableDeclaration","scope":103,"src":"4837:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":72,"name":"uint8","nodeType":"ElementaryTypeName","src":"4837:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4836:15:0"},"src":"4814:293:0","virtual":false,"visibility":"internal"},{"body":{"id":112,"nodeType":"Block","src":"5345:97:0","statements":[{"expression":{"arguments":[{"id":107,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5363:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5378:45:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5355:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5355:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"ExpressionStatement","src":"5355:69:0"},{"id":111,"nodeType":"PlaceholderStatement","src":"5434:1:0"}]},"documentation":{"id":104,"nodeType":"StructuredDocumentation","src":"5113:199:0","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":113,"name":"onlyInitializing","nameLocation":"5326:16:0","nodeType":"ModifierDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"5342:2:0"},"src":"5317:125:0","virtual":false,"visibility":"internal"},{"body":{"id":148,"nodeType":"Block","src":"5977:230:0","statements":[{"expression":{"arguments":[{"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5995:14:0","subExpression":{"id":118,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5996:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6011:41:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5987:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5987:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":122,"nodeType":"ExpressionStatement","src":"5987:66:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6067:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":125,"name":"uint8","nodeType":"ElementaryTypeName","src":"6087:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6082:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6082:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6094:3:0","memberName":"max","nodeType":"MemberAccess","src":"6082:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6067:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":147,"nodeType":"IfStatement","src":"6063:138:0","trueBody":{"id":146,"nodeType":"Block","src":"6099:102:0","statements":[{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":130,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6113:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":132,"name":"uint8","nodeType":"ElementaryTypeName","src":"6133:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6128:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6140:3:0","memberName":"max","nodeType":"MemberAccess","src":"6128:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6113:30:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":137,"nodeType":"ExpressionStatement","src":"6113:30:0"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6179:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":140,"name":"uint8","nodeType":"ElementaryTypeName","src":"6179:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6174:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6186:3:0","memberName":"max","nodeType":"MemberAccess","src":"6174:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":138,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"6162:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6162:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":145,"nodeType":"EmitStatement","src":"6157:33:0"}]}}]},"documentation":{"id":114,"nodeType":"StructuredDocumentation","src":"5448:475:0","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":149,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5937:20:0","nodeType":"FunctionDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[],"src":"5957:2:0"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"5977:0:0"},"scope":168,"src":"5928:279:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":157,"nodeType":"Block","src":"6381:36:0","statements":[{"expression":{"id":155,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6398:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":154,"id":156,"nodeType":"Return","src":"6391:19:0"}]},"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"6213:99:0","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":158,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6326:22:0","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"6348:2:0"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"6374:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":152,"name":"uint8","nodeType":"ElementaryTypeName","src":"6374:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6373:7:0"},"scope":168,"src":"6317:100:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":166,"nodeType":"Block","src":"6589:37:0","statements":[{"expression":{"id":164,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"6606:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":163,"id":165,"nodeType":"Return","src":"6599:20:0"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"6423:105:0","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":167,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6542:15:0","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"6557:2:0"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"6583:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":161,"name":"bool","nodeType":"ElementaryTypeName","src":"6583:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6582:6:0"},"scope":168,"src":"6533:93:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":169,"src":"2383:4245:0","usedErrors":[]}],"src":"113:6516:0"},"id":0},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2052],"ContextUpgradeable":[2094],"ERC1155Upgradeable":[1413],"ERC165Upgradeable":[2138],"IERC1155MetadataURIUpgradeable":[1768],"IERC1155ReceiverUpgradeable":[1454],"IERC1155Upgradeable":[1576],"IERC165Upgradeable":[2150],"Initializable":[168]},"id":1414,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":170,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol","file":"./IERC1155Upgradeable.sol","id":171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":1577,"src":"134:35:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol","file":"./IERC1155ReceiverUpgradeable.sol","id":172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":1455,"src":"170:43:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol","file":"./extensions/IERC1155MetadataURIUpgradeable.sol","id":173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":1769,"src":"214:57:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":2053,"src":"272:44:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":2095,"src":"317:44:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":2139,"src":"362:57:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":169,"src":"420:45:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":179,"name":"Initializable","nameLocations":["713:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"713:13:1"},"id":180,"nodeType":"InheritanceSpecifier","src":"713:13:1"},{"baseName":{"id":181,"name":"ContextUpgradeable","nameLocations":["728:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":2094,"src":"728:18:1"},"id":182,"nodeType":"InheritanceSpecifier","src":"728:18:1"},{"baseName":{"id":183,"name":"ERC165Upgradeable","nameLocations":["748:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":2138,"src":"748:17:1"},"id":184,"nodeType":"InheritanceSpecifier","src":"748:17:1"},{"baseName":{"id":185,"name":"IERC1155Upgradeable","nameLocations":["767:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":1576,"src":"767:19:1"},"id":186,"nodeType":"InheritanceSpecifier","src":"767:19:1"},{"baseName":{"id":187,"name":"IERC1155MetadataURIUpgradeable","nameLocations":["788:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"788:30:1"},"id":188,"nodeType":"InheritanceSpecifier","src":"788:30:1"}],"canonicalName":"ERC1155Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"467:214:1","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"},"fullyImplemented":true,"id":1413,"linearizedBaseContracts":[1413,1768,1576,2138,2150,2094,168],"name":"ERC1155Upgradeable","nameLocation":"691:18:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":191,"libraryName":{"id":189,"name":"AddressUpgradeable","nameLocations":["831:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":2052,"src":"831:18:1"},"nodeType":"UsingForDirective","src":"825:37:1","typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":197,"mutability":"mutable","name":"_balances","nameLocation":"973:9:1","nodeType":"VariableDeclaration","scope":1413,"src":"917:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":196,"keyType":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"917:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueType":{"id":195,"keyType":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"944:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"936:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"955:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":203,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1092:18:1","nodeType":"VariableDeclaration","scope":1413,"src":"1039:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":202,"keyType":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1039:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":201,"keyType":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1058:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":200,"name":"bool","nodeType":"ElementaryTypeName","src":"1077:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":205,"mutability":"mutable","name":"_uri","nameLocation":"1246:4:1","nodeType":"VariableDeclaration","scope":1413,"src":"1231:19:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":204,"name":"string","nodeType":"ElementaryTypeName","src":"1231:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":217,"nodeType":"Block","src":"1370:47:1","statements":[{"expression":{"arguments":[{"id":214,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1405:4:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":213,"name":"__ERC1155_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"1380:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"1380:30:1"}]},"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"1257:38:1","text":" @dev See {_setURI}."},"id":218,"implemented":true,"kind":"function","modifiers":[{"id":211,"kind":"modifierInvocation","modifierName":{"id":210,"name":"onlyInitializing","nameLocations":["1353:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"1353:16:1"},"nodeType":"ModifierInvocation","src":"1353:16:1"}],"name":"__ERC1155_init","nameLocation":"1309:14:1","nodeType":"FunctionDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"uri_","nameLocation":"1338:4:1","nodeType":"VariableDeclaration","scope":218,"src":"1324:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":207,"name":"string","nodeType":"ElementaryTypeName","src":"1324:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1323:20:1"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"1370:0:1"},"scope":1413,"src":"1300:117:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":229,"nodeType":"Block","src":"1503:30:1","statements":[{"expression":{"arguments":[{"id":226,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"1521:4:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":225,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"1513:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1513:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":228,"nodeType":"ExpressionStatement","src":"1513:13:1"}]},"id":230,"implemented":true,"kind":"function","modifiers":[{"id":223,"kind":"modifierInvocation","modifierName":{"id":222,"name":"onlyInitializing","nameLocations":["1486:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"1486:16:1"},"nodeType":"ModifierInvocation","src":"1486:16:1"}],"name":"__ERC1155_init_unchained","nameLocation":"1432:24:1","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"uri_","nameLocation":"1471:4:1","nodeType":"VariableDeclaration","scope":230,"src":"1457:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":219,"name":"string","nodeType":"ElementaryTypeName","src":"1457:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1456:20:1"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"1503:0:1"},"scope":1413,"src":"1423:110:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2132,2149],"body":{"id":260,"nodeType":"Block","src":"1730:219:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1759:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":243,"name":"IERC1155Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1779:19:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Upgradeable_$1576_$","typeString":"type(contract IERC1155Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155Upgradeable_$1576_$","typeString":"type(contract IERC1155Upgradeable)"}],"id":242,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1774:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155Upgradeable_$1576","typeString":"type(contract IERC1155Upgradeable)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1800:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1774:37:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1759:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":247,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1827:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":249,"name":"IERC1155MetadataURIUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"1847:30:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURIUpgradeable_$1768_$","typeString":"type(contract IERC1155MetadataURIUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURIUpgradeable_$1768_$","typeString":"type(contract IERC1155MetadataURIUpgradeable)"}],"id":248,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1842:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURIUpgradeable_$1768","typeString":"type(contract IERC1155MetadataURIUpgradeable)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1879:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1842:48:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1827:63:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1759:131:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":256,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1930:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":254,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1906:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Upgradeable_$1413_$","typeString":"type(contract super ERC1155Upgradeable)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1912:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2132,"src":"1906:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1906:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1759:183:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":240,"id":259,"nodeType":"Return","src":"1740:202:1"}]},"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"1539:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1609:17:1","nodeType":"FunctionDefinition","overrides":{"id":237,"nodeType":"OverrideSpecifier","overrides":[{"id":235,"name":"ERC165Upgradeable","nameLocations":["1676:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":2138,"src":"1676:17:1"},{"id":236,"name":"IERC165Upgradeable","nameLocations":["1695:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":2150,"src":"1695:18:1"}],"src":"1667:47:1"},"parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"interfaceId","nameLocation":"1634:11:1","nodeType":"VariableDeclaration","scope":261,"src":"1627:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":232,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1627:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1626:20:1"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"1724:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":238,"name":"bool","nodeType":"ElementaryTypeName","src":"1724:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1723:6:1"},"scope":1413,"src":"1600:349:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1767],"body":{"id":272,"nodeType":"Block","src":"2423:28:1","statements":[{"expression":{"id":270,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2440:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":269,"id":271,"nodeType":"Return","src":"2433:11:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"1955:388:1","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":273,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2357:3:1","nodeType":"FunctionDefinition","overrides":{"id":266,"nodeType":"OverrideSpecifier","overrides":[],"src":"2390:8:1"},"parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":273,"src":"2361:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"2361:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2360:9:1"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":273,"src":"2408:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":267,"name":"string","nodeType":"ElementaryTypeName","src":"2408:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2407:15:1"},"scope":1413,"src":"2348:103:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1514],"body":{"id":300,"nodeType":"Block","src":"2688:132:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":285,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2706:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2725:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:1","typeDescriptions":{}}},"id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2706:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2729:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""},"value":"ERC1155: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2698:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":293,"nodeType":"ExpressionStatement","src":"2698:76:1"},{"expression":{"baseExpression":{"baseExpression":{"id":294,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"2791:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":296,"indexExpression":{"id":295,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2801:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2791:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":298,"indexExpression":{"id":297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2805:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2791:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":283,"id":299,"nodeType":"Return","src":"2784:29:1"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"2457:131:1","text":" @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":301,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2602:9:1","nodeType":"FunctionDefinition","overrides":{"id":280,"nodeType":"OverrideSpecifier","overrides":[],"src":"2661:8:1"},"parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"account","nameLocation":"2620:7:1","nodeType":"VariableDeclaration","scope":301,"src":"2612:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"2612:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":278,"mutability":"mutable","name":"id","nameLocation":"2637:2:1","nodeType":"VariableDeclaration","scope":301,"src":"2629:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"2629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2611:29:1"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":301,"src":"2679:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:9:1"},"scope":1413,"src":"2593:227:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1527],"body":{"id":364,"nodeType":"Block","src":"3150:335:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":316,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3168:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3177:6:1","memberName":"length","nodeType":"MemberAccess","src":"3168:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":318,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3187:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3191:6:1","memberName":"length","nodeType":"MemberAccess","src":"3187:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3168:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3199:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""},"value":"ERC1155: accounts and ids length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""}],"id":315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3160:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3160:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":323,"nodeType":"ExpressionStatement","src":"3160:83:1"},{"assignments":[328],"declarations":[{"constant":false,"id":328,"mutability":"mutable","name":"batchBalances","nameLocation":"3271:13:1","nodeType":"VariableDeclaration","scope":364,"src":"3254:30:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"3254:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":327,"nodeType":"ArrayTypeName","src":"3254:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":335,"initialValue":{"arguments":[{"expression":{"id":332,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3301:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3310:6:1","memberName":"length","nodeType":"MemberAccess","src":"3301:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3287:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":330,"nodeType":"ArrayTypeName","src":"3291:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3287:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3254:63:1"},{"body":{"id":360,"nodeType":"Block","src":"3374:74:1","statements":[{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":347,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3388:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":349,"indexExpression":{"id":348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3402:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3388:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":351,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3417:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":353,"indexExpression":{"id":352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3426:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3417:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":354,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3430:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":356,"indexExpression":{"id":355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3434:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3430:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":350,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"3407:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3407:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3388:49:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":359,"nodeType":"ExpressionStatement","src":"3388:49:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3348:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":341,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3352:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3361:6:1","memberName":"length","nodeType":"MemberAccess","src":"3352:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3348:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":361,"initializationExpression":{"assignments":[337],"declarations":[{"constant":false,"id":337,"mutability":"mutable","name":"i","nameLocation":"3341:1:1","nodeType":"VariableDeclaration","scope":361,"src":"3333:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"3333:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":339,"initialValue":{"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3345:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3333:13:1"},"loopExpression":{"expression":{"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3369:3:1","subExpression":{"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3371:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":346,"nodeType":"ExpressionStatement","src":"3369:3:1"},"nodeType":"ForStatement","src":"3328:120:1"},{"expression":{"id":362,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3465:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":314,"id":363,"nodeType":"Return","src":"3458:20:1"}]},"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"2826:146:1","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":365,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2986:14:1","nodeType":"FunctionDefinition","overrides":{"id":310,"nodeType":"OverrideSpecifier","overrides":[],"src":"3102:8:1"},"parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"accounts","nameLocation":"3018:8:1","nodeType":"VariableDeclaration","scope":365,"src":"3001:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"3001:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":304,"nodeType":"ArrayTypeName","src":"3001:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"ids","nameLocation":"3045:3:1","nodeType":"VariableDeclaration","scope":365,"src":"3028:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"3028:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":307,"nodeType":"ArrayTypeName","src":"3028:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3000:49:1"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":365,"src":"3128:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3128:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":312,"nodeType":"ArrayTypeName","src":"3128:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3127:18:1"},"scope":1413,"src":"2977:508:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1535],"body":{"id":381,"nodeType":"Block","src":"3637:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":375,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"3666:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3666:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"3680:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":378,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3690:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":374,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"3647:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3647:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":380,"nodeType":"ExpressionStatement","src":"3647:52:1"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"3491:57:1","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":382,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3562:17:1","nodeType":"FunctionDefinition","overrides":{"id":372,"nodeType":"OverrideSpecifier","overrides":[],"src":"3628:8:1"},"parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"operator","nameLocation":"3588:8:1","nodeType":"VariableDeclaration","scope":382,"src":"3580:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"3580:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"approved","nameLocation":"3603:8:1","nodeType":"VariableDeclaration","scope":382,"src":"3598:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":369,"name":"bool","nodeType":"ElementaryTypeName","src":"3598:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3579:33:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"3637:0:1"},"scope":1413,"src":"3553:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1545],"body":{"id":399,"nodeType":"Block","src":"3878:61:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":393,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"3895:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":395,"indexExpression":{"id":394,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"3914:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3895:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":397,"indexExpression":{"id":396,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3923:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3895:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":392,"id":398,"nodeType":"Return","src":"3888:44:1"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"3712:56:1","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":400,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3782:16:1","nodeType":"FunctionDefinition","overrides":{"id":389,"nodeType":"OverrideSpecifier","overrides":[],"src":"3854:8:1"},"parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"account","nameLocation":"3807:7:1","nodeType":"VariableDeclaration","scope":400,"src":"3799:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"3799:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"operator","nameLocation":"3824:8:1","nodeType":"VariableDeclaration","scope":400,"src":"3816:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"3816:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3798:35:1"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":400,"src":"3872:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":390,"name":"bool","nodeType":"ElementaryTypeName","src":"3872:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3871:6:1"},"scope":1413,"src":"3773:166:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1559],"body":{"id":437,"nodeType":"Block","src":"4175:225:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":416,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4206:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":417,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"4214:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4206:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":421,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4247:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"4253:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":420,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"4230:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4206:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4280:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4185:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4185:153:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"4185:153:1"},{"expression":{"arguments":[{"id":430,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4366:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4372:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":432,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"4376:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":433,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"4380:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":434,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"4388:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":429,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"4348:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4348:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"4348:45:1"}]},"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"3945:56:1","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":438,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4015:16:1","nodeType":"FunctionDefinition","overrides":{"id":413,"nodeType":"OverrideSpecifier","overrides":[],"src":"4166:8:1"},"parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"from","nameLocation":"4049:4:1","nodeType":"VariableDeclaration","scope":438,"src":"4041:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"4041:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"to","nameLocation":"4071:2:1","nodeType":"VariableDeclaration","scope":438,"src":"4063:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"4063:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"id","nameLocation":"4091:2:1","nodeType":"VariableDeclaration","scope":438,"src":"4083:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"4083:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"amount","nameLocation":"4111:6:1","nodeType":"VariableDeclaration","scope":438,"src":"4103:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"4103:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"data","nameLocation":"4140:4:1","nodeType":"VariableDeclaration","scope":438,"src":"4127:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":410,"name":"bytes","nodeType":"ElementaryTypeName","src":"4127:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4031:119:1"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"4175:0:1"},"scope":1413,"src":"4006:394:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1575],"body":{"id":477,"nodeType":"Block","src":"4666:232:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":456,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"4697:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"4705:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4705:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4697:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":461,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"4738:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":462,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"4744:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4744:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":460,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"4721:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4721:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4697:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4771:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":455,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4676:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4676:153:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"ExpressionStatement","src":"4676:153:1"},{"expression":{"arguments":[{"id":470,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"4862:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"4868:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":472,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4872:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":473,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"4877:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":474,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4886:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":469,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"4839:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4839:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"4839:52:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"4406:61:1","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":478,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4481:21:1","nodeType":"FunctionDefinition","overrides":{"id":453,"nodeType":"OverrideSpecifier","overrides":[],"src":"4657:8:1"},"parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"from","nameLocation":"4520:4:1","nodeType":"VariableDeclaration","scope":478,"src":"4512:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"4512:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"to","nameLocation":"4542:2:1","nodeType":"VariableDeclaration","scope":478,"src":"4534:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"4534:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"ids","nameLocation":"4571:3:1","nodeType":"VariableDeclaration","scope":478,"src":"4554:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"4554:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":445,"nodeType":"ArrayTypeName","src":"4554:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"amounts","nameLocation":"4601:7:1","nodeType":"VariableDeclaration","scope":478,"src":"4584:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"4584:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":448,"nodeType":"ArrayTypeName","src":"4584:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"data","nameLocation":"4631:4:1","nodeType":"VariableDeclaration","scope":478,"src":"4618:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":450,"name":"bytes","nodeType":"ElementaryTypeName","src":"4618:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4502:139:1"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"4666:0:1"},"scope":1413,"src":"4472:426:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":594,"nodeType":"Block","src":"5511:784:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":493,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5529:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:1","typeDescriptions":{}}},"id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5529:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5547:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5521:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5521:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"ExpressionStatement","src":"5521:66:1"},{"assignments":[503],"declarations":[{"constant":false,"id":503,"mutability":"mutable","name":"operator","nameLocation":"5606:8:1","nodeType":"VariableDeclaration","scope":594,"src":"5598:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"5598:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":506,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":504,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"5617:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5598:31:1"},{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"ids","nameLocation":"5656:3:1","nodeType":"VariableDeclaration","scope":594,"src":"5639:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"5639:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":510,"nodeType":"ArrayTypeName","src":"5639:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":515,"initialValue":{"arguments":[{"id":513,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5680:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":512,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5662:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5639:44:1"},{"assignments":[520],"declarations":[{"constant":false,"id":520,"mutability":"mutable","name":"amounts","nameLocation":"5710:7:1","nodeType":"VariableDeclaration","scope":594,"src":"5693:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"5693:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":519,"nodeType":"ArrayTypeName","src":"5693:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":524,"initialValue":{"arguments":[{"id":522,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5738:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":521,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5720:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5693:52:1"},{"expression":{"arguments":[{"id":526,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"5777:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"5787:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5793:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":529,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"5797:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":530,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5802:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":531,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5811:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":525,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"5756:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5756:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"5756:60:1"},{"assignments":[535],"declarations":[{"constant":false,"id":535,"mutability":"mutable","name":"fromBalance","nameLocation":"5835:11:1","nodeType":"VariableDeclaration","scope":594,"src":"5827:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":541,"initialValue":{"baseExpression":{"baseExpression":{"id":536,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5849:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":538,"indexExpression":{"id":537,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5859:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5849:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":540,"indexExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"5863:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5849:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5827:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":543,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5886:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":544,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5901:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5886:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5909:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5878:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5878:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":548,"nodeType":"ExpressionStatement","src":"5878:76:1"},{"id":559,"nodeType":"UncheckedBlock","src":"5964:77:1","statements":[{"expression":{"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":549,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5988:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":552,"indexExpression":{"id":550,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5998:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5988:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":553,"indexExpression":{"id":551,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"6002:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5988:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6010:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"6024:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6010:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5988:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"nodeType":"ExpressionStatement","src":"5988:42:1"}]},{"expression":{"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":560,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"6050:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":563,"indexExpression":{"id":561,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6060:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6050:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":564,"indexExpression":{"id":562,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"6064:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6050:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"6071:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6050:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":567,"nodeType":"ExpressionStatement","src":"6050:27:1"},{"eventCall":{"arguments":[{"id":569,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6108:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":570,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"6118:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":571,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"6124:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":572,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6128:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"6132:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":568,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"6093:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6093:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":575,"nodeType":"EmitStatement","src":"6088:51:1"},{"expression":{"arguments":[{"id":577,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6170:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"6180:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":579,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"6186:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":580,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6190:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":581,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6195:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":582,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"6204:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":576,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6150:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6150:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"ExpressionStatement","src":"6150:59:1"},{"expression":{"arguments":[{"id":586,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6251:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"6261:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"6267:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":589,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6271:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":590,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":591,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"6283:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":585,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"6220:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6220:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"6220:68:1"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"4904:439:1","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"5357:17:1","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"from","nameLocation":"5392:4:1","nodeType":"VariableDeclaration","scope":595,"src":"5384:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"5384:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"to","nameLocation":"5414:2:1","nodeType":"VariableDeclaration","scope":595,"src":"5406:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"5406:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"id","nameLocation":"5434:2:1","nodeType":"VariableDeclaration","scope":595,"src":"5426:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"5426:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"amount","nameLocation":"5454:6:1","nodeType":"VariableDeclaration","scope":595,"src":"5446:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"5446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"data","nameLocation":"5483:4:1","nodeType":"VariableDeclaration","scope":595,"src":"5470:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":488,"name":"bytes","nodeType":"ElementaryTypeName","src":"5470:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5374:119:1"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5511:0:1"},"scope":1413,"src":"5348:947:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":729,"nodeType":"Block","src":"6829:927:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":612,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"6847:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6851:6:1","memberName":"length","nodeType":"MemberAccess","src":"6847:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":614,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"6861:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:1","memberName":"length","nodeType":"MemberAccess","src":"6861:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6847:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6877:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6839:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6839:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"6839:81:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6938:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6944:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"6944:7:1","typeDescriptions":{}}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6944:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6938:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6956:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6930:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"ExpressionStatement","src":"6930:66:1"},{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"operator","nameLocation":"7015:8:1","nodeType":"VariableDeclaration","scope":729,"src":"7007:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7007:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":634,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":632,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"7026:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7026:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7007:31:1"},{"expression":{"arguments":[{"id":636,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7070:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7080:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7086:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7090:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":640,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7095:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":641,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7104:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":635,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"7049:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7049:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"7049:60:1"},{"body":{"id":701,"nodeType":"Block","src":"7161:370:1","statements":[{"assignments":[656],"declarations":[{"constant":false,"id":656,"mutability":"mutable","name":"id","nameLocation":"7183:2:1","nodeType":"VariableDeclaration","scope":701,"src":"7175:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":655,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":660,"initialValue":{"baseExpression":{"id":657,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7188:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":659,"indexExpression":{"id":658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7192:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7188:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7175:19:1"},{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"amount","nameLocation":"7216:6:1","nodeType":"VariableDeclaration","scope":701,"src":"7208:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"7208:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":666,"initialValue":{"baseExpression":{"id":663,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7225:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":665,"indexExpression":{"id":664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7233:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7225:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7208:27:1"},{"assignments":[668],"declarations":[{"constant":false,"id":668,"mutability":"mutable","name":"fromBalance","nameLocation":"7258:11:1","nodeType":"VariableDeclaration","scope":701,"src":"7250:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"7250:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":674,"initialValue":{"baseExpression":{"baseExpression":{"id":669,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"7272:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":671,"indexExpression":{"id":670,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7282:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7272:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":673,"indexExpression":{"id":672,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7286:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7272:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7250:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"7313:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":677,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"7328:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7313:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7336:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7305:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7305:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":681,"nodeType":"ExpressionStatement","src":"7305:76:1"},{"id":692,"nodeType":"UncheckedBlock","src":"7395:85:1","statements":[{"expression":{"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":682,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"7423:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":685,"indexExpression":{"id":683,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7433:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7423:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":686,"indexExpression":{"id":684,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7437:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7423:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"7445:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"7459:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7445:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7423:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":691,"nodeType":"ExpressionStatement","src":"7423:42:1"}]},{"expression":{"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":693,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"7493:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":696,"indexExpression":{"id":694,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7503:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7493:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":697,"indexExpression":{"id":695,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7507:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7493:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":698,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"7514:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7493:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":700,"nodeType":"ExpressionStatement","src":"7493:27:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7140:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":649,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7144:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7148:6:1","memberName":"length","nodeType":"MemberAccess","src":"7144:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7140:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":702,"initializationExpression":{"assignments":[645],"declarations":[{"constant":false,"id":645,"mutability":"mutable","name":"i","nameLocation":"7133:1:1","nodeType":"VariableDeclaration","scope":702,"src":"7125:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"7125:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"hexValue":"30","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7137:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7125:13:1"},"loopExpression":{"expression":{"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7156:3:1","subExpression":{"id":652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7158:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":654,"nodeType":"ExpressionStatement","src":"7156:3:1"},"nodeType":"ForStatement","src":"7120:411:1"},{"eventCall":{"arguments":[{"id":704,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7560:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":705,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7570:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7576:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":707,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7580:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":708,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7585:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":703,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"7546:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7546:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":710,"nodeType":"EmitStatement","src":"7541:52:1"},{"expression":{"arguments":[{"id":712,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7624:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":713,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7634:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":714,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7640:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":715,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7644:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":716,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7649:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":717,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7658:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":711,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7604:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7604:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"7604:59:1"},{"expression":{"arguments":[{"id":721,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7710:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":722,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7720:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7726:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7730:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":725,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7735:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":726,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7744:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":720,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"7674:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"7674:75:1"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"6301:335:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":730,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"6650:22:1","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"from","nameLocation":"6690:4:1","nodeType":"VariableDeclaration","scope":730,"src":"6682:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"6682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"to","nameLocation":"6712:2:1","nodeType":"VariableDeclaration","scope":730,"src":"6704:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"ids","nameLocation":"6741:3:1","nodeType":"VariableDeclaration","scope":730,"src":"6724:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"6724:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":602,"nodeType":"ArrayTypeName","src":"6724:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"amounts","nameLocation":"6771:7:1","nodeType":"VariableDeclaration","scope":730,"src":"6754:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"6754:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":605,"nodeType":"ArrayTypeName","src":"6754:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"data","nameLocation":"6801:4:1","nodeType":"VariableDeclaration","scope":730,"src":"6788:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":607,"name":"bytes","nodeType":"ElementaryTypeName","src":"6788:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6672:139:1"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"6829:0:1"},"scope":1413,"src":"6641:1115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"8635:30:1","statements":[{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":736,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8645:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"8652:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8645:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":739,"nodeType":"ExpressionStatement","src":"8645:13:1"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"7762:812:1","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":741,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"8588:7:1","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"newuri","nameLocation":"8610:6:1","nodeType":"VariableDeclaration","scope":741,"src":"8596:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":732,"name":"string","nodeType":"ElementaryTypeName","src":"8596:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8595:22:1"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[],"src":"8635:0:1"},"scope":1413,"src":"8579:86:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"9167:580:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":754,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9185:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9199:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9191:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"9191:7:1","typeDescriptions":{}}},"id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9191:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9185:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9203:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":753,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9177:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9177:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"ExpressionStatement","src":"9177:62:1"},{"assignments":[764],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"operator","nameLocation":"9258:8:1","nodeType":"VariableDeclaration","scope":841,"src":"9250:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"9250:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":767,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":765,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"9269:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9269:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9250:31:1"},{"assignments":[772],"declarations":[{"constant":false,"id":772,"mutability":"mutable","name":"ids","nameLocation":"9308:3:1","nodeType":"VariableDeclaration","scope":841,"src":"9291:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"9291:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":771,"nodeType":"ArrayTypeName","src":"9291:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":776,"initialValue":{"arguments":[{"id":774,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9332:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":773,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"9314:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9314:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9291:44:1"},{"assignments":[781],"declarations":[{"constant":false,"id":781,"mutability":"mutable","name":"amounts","nameLocation":"9362:7:1","nodeType":"VariableDeclaration","scope":841,"src":"9345:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"9345:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":780,"nodeType":"ArrayTypeName","src":"9345:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":785,"initialValue":{"arguments":[{"id":783,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9390:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":782,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"9372:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9372:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9345:52:1"},{"expression":{"arguments":[{"id":787,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9429:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9447:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9439:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"9439:7:1","typeDescriptions":{}}},"id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9439:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":792,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9451:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9455:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":794,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"9460:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":795,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9469:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":786,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"9408:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9408:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"9408:66:1"},{"expression":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":798,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"9485:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":801,"indexExpression":{"id":799,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9495:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9485:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":802,"indexExpression":{"id":800,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9499:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9485:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":803,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9506:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9485:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":805,"nodeType":"ExpressionStatement","src":"9485:27:1"},{"eventCall":{"arguments":[{"id":807,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9542:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9560:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9552:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"9552:7:1","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9564:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9568:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":814,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9572:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":806,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"9527:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9527:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":816,"nodeType":"EmitStatement","src":"9522:57:1"},{"expression":{"arguments":[{"id":818,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9610:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9628:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9620:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"9620:7:1","typeDescriptions":{}}},"id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9620:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":823,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9632:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":824,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9636:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":825,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"9641:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":826,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9650:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":817,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"9590:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9590:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":828,"nodeType":"ExpressionStatement","src":"9590:65:1"},{"expression":{"arguments":[{"id":830,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9697:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9715:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"9707:7:1","typeDescriptions":{}}},"id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":835,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9719:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9723:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":837,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9727:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":838,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9735:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":829,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"9666:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9666:74:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"ExpressionStatement","src":"9666:74:1"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"8671:362:1","text":" @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":842,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9047:5:1","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"to","nameLocation":"9070:2:1","nodeType":"VariableDeclaration","scope":842,"src":"9062:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"9062:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"id","nameLocation":"9090:2:1","nodeType":"VariableDeclaration","scope":842,"src":"9082:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"9082:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"amount","nameLocation":"9110:6:1","nodeType":"VariableDeclaration","scope":842,"src":"9102:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"9102:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"data","nameLocation":"9139:4:1","nodeType":"VariableDeclaration","scope":842,"src":"9126:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":749,"name":"bytes","nodeType":"ElementaryTypeName","src":"9126:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9052:97:1"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"9167:0:1"},"scope":1413,"src":"9038:709:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"10291:637:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10309:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10323:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10315:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"10315:7:1","typeDescriptions":{}}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10315:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10309:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10327:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10301:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"ExpressionStatement","src":"10301:62:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":867,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10381:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10385:6:1","memberName":"length","nodeType":"MemberAccess","src":"10381:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":869,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10395:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10403:6:1","memberName":"length","nodeType":"MemberAccess","src":"10395:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10381:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10411:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":866,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10373:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10373:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"ExpressionStatement","src":"10373:81:1"},{"assignments":[876],"declarations":[{"constant":false,"id":876,"mutability":"mutable","name":"operator","nameLocation":"10473:8:1","nodeType":"VariableDeclaration","scope":952,"src":"10465:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"10465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":879,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":877,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"10484:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10484:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10465:31:1"},{"expression":{"arguments":[{"id":881,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10528:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10538:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"10538:7:1","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10538:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":886,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10550:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":887,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10554:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":888,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10559:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":889,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10568:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":880,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"10507:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10507:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"ExpressionStatement","src":"10507:66:1"},{"body":{"id":915,"nodeType":"Block","src":"10625:60:1","statements":[{"expression":{"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":903,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"10639:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":908,"indexExpression":{"baseExpression":{"id":904,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10649:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":906,"indexExpression":{"id":905,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10653:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10649:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10639:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":909,"indexExpression":{"id":907,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10657:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10639:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":910,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10664:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":912,"indexExpression":{"id":911,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10672:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10664:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10639:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":914,"nodeType":"ExpressionStatement","src":"10639:35:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10604:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":897,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10608:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10612:6:1","memberName":"length","nodeType":"MemberAccess","src":"10608:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10604:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":916,"initializationExpression":{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"i","nameLocation":"10597:1:1","nodeType":"VariableDeclaration","scope":916,"src":"10589:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"10589:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":895,"initialValue":{"hexValue":"30","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10601:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10589:13:1"},"loopExpression":{"expression":{"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10620:3:1","subExpression":{"id":900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10620:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":902,"nodeType":"ExpressionStatement","src":"10620:3:1"},"nodeType":"ForStatement","src":"10584:101:1"},{"eventCall":{"arguments":[{"id":918,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10714:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:1","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10724:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":923,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10736:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10740:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":925,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10745:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":917,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"10700:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"EmitStatement","src":"10695:58:1"},{"expression":{"arguments":[{"id":929,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10784:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10802:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10794:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"10794:7:1","typeDescriptions":{}}},"id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10794:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":934,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10806:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10810:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":936,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10815:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":937,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10824:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":928,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"10764:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10764:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"10764:65:1"},{"expression":{"arguments":[{"id":941,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10876:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10894:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10886:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"10886:7:1","typeDescriptions":{}}},"id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10886:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10898:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":947,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10902:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":948,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10907:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":949,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10916:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":940,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10840:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":951,"nodeType":"ExpressionStatement","src":"10840:81:1"}]},"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"9753:379:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"10146:10:1","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"to","nameLocation":"10174:2:1","nodeType":"VariableDeclaration","scope":953,"src":"10166:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"10166:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"ids","nameLocation":"10203:3:1","nodeType":"VariableDeclaration","scope":953,"src":"10186:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":847,"nodeType":"ArrayTypeName","src":"10186:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"amounts","nameLocation":"10233:7:1","nodeType":"VariableDeclaration","scope":953,"src":"10216:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"10216:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":850,"nodeType":"ArrayTypeName","src":"10216:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"data","nameLocation":"10263:4:1","nodeType":"VariableDeclaration","scope":953,"src":"10250:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":852,"name":"bytes","nodeType":"ElementaryTypeName","src":"10250:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10156:117:1"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"10291:0:1"},"scope":1413,"src":"10137:791:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1057,"nodeType":"Block","src":"11318:682:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":964,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11336:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11352:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11344:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"11344:7:1","typeDescriptions":{}}},"id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11344:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11336:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11356:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":963,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11328:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11328:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"11328:66:1"},{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"operator","nameLocation":"11413:8:1","nodeType":"VariableDeclaration","scope":1057,"src":"11405:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"11405:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":977,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":975,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"11424:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11424:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11405:31:1"},{"assignments":[982],"declarations":[{"constant":false,"id":982,"mutability":"mutable","name":"ids","nameLocation":"11463:3:1","nodeType":"VariableDeclaration","scope":1057,"src":"11446:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ArrayTypeName","src":"11446:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":986,"initialValue":{"arguments":[{"id":984,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11487:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":983,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"11469:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11469:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11446:44:1"},{"assignments":[991],"declarations":[{"constant":false,"id":991,"mutability":"mutable","name":"amounts","nameLocation":"11517:7:1","nodeType":"VariableDeclaration","scope":1057,"src":"11500:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"11500:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":990,"nodeType":"ArrayTypeName","src":"11500:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":995,"initialValue":{"arguments":[{"id":993,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"11545:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":992,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"11527:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11527:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11500:52:1"},{"expression":{"arguments":[{"id":997,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"11584:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":998,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11594:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11608:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11600:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"11600:7:1","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11600:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11612:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1004,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"11617:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11626:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":996,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"11563:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11563:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"ExpressionStatement","src":"11563:66:1"},{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"fromBalance","nameLocation":"11648:11:1","nodeType":"VariableDeclaration","scope":1057,"src":"11640:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"11640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1015,"initialValue":{"baseExpression":{"baseExpression":{"id":1010,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"11662:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1012,"indexExpression":{"id":1011,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11672:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11662:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1014,"indexExpression":{"id":1013,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11676:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11662:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11640:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11699:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1018,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"11714:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11699:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11722:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":1016,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11691:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1022,"nodeType":"ExpressionStatement","src":"11691:70:1"},{"id":1033,"nodeType":"UncheckedBlock","src":"11771:77:1","statements":[{"expression":{"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1023,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"11795:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1026,"indexExpression":{"id":1024,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11805:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11795:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1027,"indexExpression":{"id":1025,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11809:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11795:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11817:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1029,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"11831:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11817:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11795:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1032,"nodeType":"ExpressionStatement","src":"11795:42:1"}]},{"eventCall":{"arguments":[{"id":1035,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"11878:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1036,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11888:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11902:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11894:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"11894:7:1","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11894:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11906:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1042,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"11910:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1034,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"11863:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11863:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"11858:59:1"},{"expression":{"arguments":[{"id":1046,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"11948:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1047,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11958:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11972:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11964:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"11964:7:1","typeDescriptions":{}}},"id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11964:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1052,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11976:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1053,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"11981:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11990:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1045,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"11928:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11928:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"ExpressionStatement","src":"11928:65:1"}]},"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"10934:275:1","text":" @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."},"id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11223:5:1","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"from","nameLocation":"11246:4:1","nodeType":"VariableDeclaration","scope":1058,"src":"11238:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"11238:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"id","nameLocation":"11268:2:1","nodeType":"VariableDeclaration","scope":1058,"src":"11260:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"amount","nameLocation":"11288:6:1","nodeType":"VariableDeclaration","scope":1058,"src":"11280:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"11280:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11228:72:1"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"11318:0:1"},"scope":1413,"src":"11214:786:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1180,"nodeType":"Block","src":"12368:814:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12386:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12402:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12394:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"12394:7:1","typeDescriptions":{}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12394:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12386:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12406:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":1070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12378:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12378:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"ExpressionStatement","src":"12378:66:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1081,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12462:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12466:6:1","memberName":"length","nodeType":"MemberAccess","src":"12462:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1083,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"12476:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12484:6:1","memberName":"length","nodeType":"MemberAccess","src":"12476:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12462:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12492:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":1080,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12454:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"12454:81:1"},{"assignments":[1090],"declarations":[{"constant":false,"id":1090,"mutability":"mutable","name":"operator","nameLocation":"12554:8:1","nodeType":"VariableDeclaration","scope":1180,"src":"12546:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"12546:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1093,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1091,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"12565:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12565:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12546:31:1"},{"expression":{"arguments":[{"id":1095,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"12609:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12619:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12633:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12625:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"12625:7:1","typeDescriptions":{}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12625:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12637:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1102,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"12642:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12651:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1094,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"12588:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12588:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1105,"nodeType":"ExpressionStatement","src":"12588:66:1"},{"body":{"id":1155,"nodeType":"Block","src":"12706:323:1","statements":[{"assignments":[1118],"declarations":[{"constant":false,"id":1118,"mutability":"mutable","name":"id","nameLocation":"12728:2:1","nodeType":"VariableDeclaration","scope":1155,"src":"12720:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1122,"initialValue":{"baseExpression":{"id":1119,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12733:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1121,"indexExpression":{"id":1120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"12737:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12733:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12720:19:1"},{"assignments":[1124],"declarations":[{"constant":false,"id":1124,"mutability":"mutable","name":"amount","nameLocation":"12761:6:1","nodeType":"VariableDeclaration","scope":1155,"src":"12753:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"12753:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1128,"initialValue":{"baseExpression":{"id":1125,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"12770:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1127,"indexExpression":{"id":1126,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"12778:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12770:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12753:27:1"},{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"fromBalance","nameLocation":"12803:11:1","nodeType":"VariableDeclaration","scope":1155,"src":"12795:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"12795:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1136,"initialValue":{"baseExpression":{"baseExpression":{"id":1131,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"12817:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1133,"indexExpression":{"id":1132,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"12827:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12817:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1135,"indexExpression":{"id":1134,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12831:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12817:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12795:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"12858:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1139,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"12873:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12858:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12881:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":1137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12850:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12850:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1143,"nodeType":"ExpressionStatement","src":"12850:70:1"},{"id":1154,"nodeType":"UncheckedBlock","src":"12934:85:1","statements":[{"expression":{"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1144,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"12962:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1147,"indexExpression":{"id":1145,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"12972:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12962:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1148,"indexExpression":{"id":1146,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12976:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12962:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1149,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"12984:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1150,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"12998:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12984:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12962:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1153,"nodeType":"ExpressionStatement","src":"12962:42:1"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"12685:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1111,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12689:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12693:6:1","memberName":"length","nodeType":"MemberAccess","src":"12689:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12685:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1156,"initializationExpression":{"assignments":[1107],"declarations":[{"constant":false,"id":1107,"mutability":"mutable","name":"i","nameLocation":"12678:1:1","nodeType":"VariableDeclaration","scope":1156,"src":"12670:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"12670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1109,"initialValue":{"hexValue":"30","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12682:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12670:13:1"},"loopExpression":{"expression":{"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12701:3:1","subExpression":{"id":1114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"12701:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1116,"nodeType":"ExpressionStatement","src":"12701:3:1"},"nodeType":"ForStatement","src":"12665:364:1"},{"eventCall":{"arguments":[{"id":1158,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"13058:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"13068:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13082:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13074:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"13074:7:1","typeDescriptions":{}}},"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13074:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"13086:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1165,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13091:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1157,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"13044:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13044:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"EmitStatement","src":"13039:60:1"},{"expression":{"arguments":[{"id":1169,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"13130:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1170,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"13140:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13146:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"13146:7:1","typeDescriptions":{}}},"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13146:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"13158:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1176,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13163:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13172:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1168,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"13110:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13110:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1179,"nodeType":"ExpressionStatement","src":"13110:65:1"}]},"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"12006:228:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."},"id":1181,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12248:10:1","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"from","nameLocation":"12276:4:1","nodeType":"VariableDeclaration","scope":1181,"src":"12268:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"12268:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"ids","nameLocation":"12307:3:1","nodeType":"VariableDeclaration","scope":1181,"src":"12290:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"12290:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1063,"nodeType":"ArrayTypeName","src":"12290:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"amounts","nameLocation":"12337:7:1","nodeType":"VariableDeclaration","scope":1181,"src":"12320:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1066,"nodeType":"ArrayTypeName","src":"12320:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12258:92:1"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"12368:0:1"},"scope":1413,"src":"12239:943:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"13441:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"13459:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1193,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"13468:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13459:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13478:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""},"value":"ERC1155: setting approval status for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""}],"id":1191,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13451:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1197,"nodeType":"ExpressionStatement","src":"13451:71:1"},{"expression":{"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1198,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"13532:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1201,"indexExpression":{"id":1199,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"13551:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13532:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1202,"indexExpression":{"id":1200,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"13558:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13532:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1203,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"13570:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13532:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1205,"nodeType":"ExpressionStatement","src":"13532:46:1"},{"eventCall":{"arguments":[{"id":1207,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"13608:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1208,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"13615:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"13625:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1206,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"13593:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13593:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"EmitStatement","src":"13588:46:1"}]},"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"13188:125:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13327:18:1","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"owner","nameLocation":"13363:5:1","nodeType":"VariableDeclaration","scope":1213,"src":"13355:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"13355:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"operator","nameLocation":"13386:8:1","nodeType":"VariableDeclaration","scope":1213,"src":"13378:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"13378:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"approved","nameLocation":"13409:8:1","nodeType":"VariableDeclaration","scope":1213,"src":"13404:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1187,"name":"bool","nodeType":"ElementaryTypeName","src":"13404:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13345:78:1"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"13441:0:1"},"scope":1413,"src":"13318:323:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1231,"nodeType":"Block","src":"14789:2:1","statements":[]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"13647:925:1","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"14586:20:1","nodeType":"FunctionDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"operator","nameLocation":"14624:8:1","nodeType":"VariableDeclaration","scope":1232,"src":"14616:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"14616:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"from","nameLocation":"14650:4:1","nodeType":"VariableDeclaration","scope":1232,"src":"14642:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"14642:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"to","nameLocation":"14672:2:1","nodeType":"VariableDeclaration","scope":1232,"src":"14664:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"14664:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"ids","nameLocation":"14701:3:1","nodeType":"VariableDeclaration","scope":1232,"src":"14684:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"14684:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1222,"nodeType":"ArrayTypeName","src":"14684:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1226,"mutability":"mutable","name":"amounts","nameLocation":"14731:7:1","nodeType":"VariableDeclaration","scope":1232,"src":"14714:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"14714:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1225,"nodeType":"ArrayTypeName","src":"14714:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"data","nameLocation":"14761:4:1","nodeType":"VariableDeclaration","scope":1232,"src":"14748:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1227,"name":"bytes","nodeType":"ElementaryTypeName","src":"14748:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14606:165:1"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[],"src":"14789:0:1"},"scope":1413,"src":"14577:214:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1250,"nodeType":"Block","src":"15935:2:1","statements":[]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"14797:922:1","text":" @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1251,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"15733:19:1","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"operator","nameLocation":"15770:8:1","nodeType":"VariableDeclaration","scope":1251,"src":"15762:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"15762:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"from","nameLocation":"15796:4:1","nodeType":"VariableDeclaration","scope":1251,"src":"15788:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"15788:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"to","nameLocation":"15818:2:1","nodeType":"VariableDeclaration","scope":1251,"src":"15810:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"15810:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"ids","nameLocation":"15847:3:1","nodeType":"VariableDeclaration","scope":1251,"src":"15830:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"15830:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1241,"nodeType":"ArrayTypeName","src":"15830:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"amounts","nameLocation":"15877:7:1","nodeType":"VariableDeclaration","scope":1251,"src":"15860:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"15860:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1244,"nodeType":"ArrayTypeName","src":"15860:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"data","nameLocation":"15907:4:1","nodeType":"VariableDeclaration","scope":1251,"src":"15894:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"15894:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15752:165:1"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"15935:0:1"},"scope":1413,"src":"15724:213:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"16136:554:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1266,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"16150:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16153:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1786,"src":"16150:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16150:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1312,"nodeType":"IfStatement","src":"16146:538:1","trueBody":{"id":1311,"nodeType":"Block","src":"16167:517:1","statements":[{"clauses":[{"block":{"id":1293,"nodeType":"Block","src":"16295:195:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1282,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"16317:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1283,"name":"IERC1155ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"16329:27:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$","typeString":"type(contract IERC1155ReceiverUpgradeable)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16357:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1435,"src":"16329:45:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155ReceiverUpgradeable.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16375:8:1","memberName":"selector","nodeType":"MemberAccess","src":"16329:54:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"16317:66:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1292,"nodeType":"IfStatement","src":"16313:163:1","trueBody":{"id":1291,"nodeType":"Block","src":"16385:91:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16414:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1287,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16407:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16407:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"ExpressionStatement","src":"16407:50:1"}]}}]},"errorName":"","id":1294,"nodeType":"TryCatchClause","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"response","nameLocation":"16285:8:1","nodeType":"VariableDeclaration","scope":1294,"src":"16278:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1279,"name":"bytes4","nodeType":"ElementaryTypeName","src":"16278:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"16277:17:1"},"src":"16269:221:1"},{"block":{"id":1302,"nodeType":"Block","src":"16525:47:1","statements":[{"expression":{"arguments":[{"id":1299,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"16550:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1298,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16543:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16543:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1301,"nodeType":"ExpressionStatement","src":"16543:14:1"}]},"errorName":"Error","id":1303,"nodeType":"TryCatchClause","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"reason","nameLocation":"16517:6:1","nodeType":"VariableDeclaration","scope":1303,"src":"16503:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1295,"name":"string","nodeType":"ElementaryTypeName","src":"16503:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16502:22:1"},"src":"16491:81:1"},{"block":{"id":1308,"nodeType":"Block","src":"16579:95:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16604:54:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1304,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16597:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16597:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1307,"nodeType":"ExpressionStatement","src":"16597:62:1"}]},"errorName":"","id":1309,"nodeType":"TryCatchClause","src":"16573:101:1"}],"externalCall":{"arguments":[{"id":1273,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"16235:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1274,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"16245:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1275,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"16251:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1276,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"16255:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1277,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"16263:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1270,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"16213:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1269,"name":"IERC1155ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"16185:27:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$","typeString":"type(contract IERC1155ReceiverUpgradeable)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16185:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155ReceiverUpgradeable_$1454","typeString":"contract IERC1155ReceiverUpgradeable"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16217:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1435,"src":"16185:49:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16185:83:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1310,"nodeType":"TryStatement","src":"16181:493:1"}]}}]},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"15952:30:1","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"operator","nameLocation":"16000:8:1","nodeType":"VariableDeclaration","scope":1314,"src":"15992:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"15992:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"from","nameLocation":"16026:4:1","nodeType":"VariableDeclaration","scope":1314,"src":"16018:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"16018:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"to","nameLocation":"16048:2:1","nodeType":"VariableDeclaration","scope":1314,"src":"16040:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"16040:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"id","nameLocation":"16068:2:1","nodeType":"VariableDeclaration","scope":1314,"src":"16060:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"16060:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"amount","nameLocation":"16088:6:1","nodeType":"VariableDeclaration","scope":1314,"src":"16080:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"16080:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"data","nameLocation":"16117:4:1","nodeType":"VariableDeclaration","scope":1314,"src":"16104:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1262,"name":"bytes","nodeType":"ElementaryTypeName","src":"16104:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15982:145:1"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"16136:0:1"},"scope":1413,"src":"15943:747:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1378,"nodeType":"Block","src":"16914:596:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1331,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"16928:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16931:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1786,"src":"16928:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16928:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1377,"nodeType":"IfStatement","src":"16924:580:1","trueBody":{"id":1376,"nodeType":"Block","src":"16945:559:1","statements":[{"clauses":[{"block":{"id":1358,"nodeType":"Block","src":"17110:200:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1347,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"17132:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1348,"name":"IERC1155ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"17144:27:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$","typeString":"type(contract IERC1155ReceiverUpgradeable)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17172:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"17144:50:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155ReceiverUpgradeable.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17195:8:1","memberName":"selector","nodeType":"MemberAccess","src":"17144:59:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"17132:71:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1357,"nodeType":"IfStatement","src":"17128:168:1","trueBody":{"id":1356,"nodeType":"Block","src":"17205:91:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17234:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1352,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"17227:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17227:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1355,"nodeType":"ExpressionStatement","src":"17227:50:1"}]}}]},"errorName":"","id":1359,"nodeType":"TryCatchClause","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"response","nameLocation":"17087:8:1","nodeType":"VariableDeclaration","scope":1359,"src":"17080:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1344,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17080:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"17062:47:1"},"src":"17054:256:1"},{"block":{"id":1367,"nodeType":"Block","src":"17345:47:1","statements":[{"expression":{"arguments":[{"id":1364,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"17370:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1363,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"17363:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17363:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"ExpressionStatement","src":"17363:14:1"}]},"errorName":"Error","id":1368,"nodeType":"TryCatchClause","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"reason","nameLocation":"17337:6:1","nodeType":"VariableDeclaration","scope":1368,"src":"17323:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1360,"name":"string","nodeType":"ElementaryTypeName","src":"17323:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17322:22:1"},"src":"17311:81:1"},{"block":{"id":1373,"nodeType":"Block","src":"17399:95:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17424:54:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1369,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"17417:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17417:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"ExpressionStatement","src":"17417:62:1"}]},"errorName":"","id":1374,"nodeType":"TryCatchClause","src":"17393:101:1"}],"externalCall":{"arguments":[{"id":1338,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"17018:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1339,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"17028:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1340,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"17034:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1341,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"17039:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1342,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"17048:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"16991:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1334,"name":"IERC1155ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"16963:27:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$","typeString":"type(contract IERC1155ReceiverUpgradeable)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16963:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155ReceiverUpgradeable_$1454","typeString":"contract IERC1155ReceiverUpgradeable"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16995:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"16963:54:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16963:90:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1375,"nodeType":"TryStatement","src":"16959:535:1"}]}}]},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"16705:35:1","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"operator","nameLocation":"16758:8:1","nodeType":"VariableDeclaration","scope":1379,"src":"16750:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"16750:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"from","nameLocation":"16784:4:1","nodeType":"VariableDeclaration","scope":1379,"src":"16776:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"16776:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"to","nameLocation":"16806:2:1","nodeType":"VariableDeclaration","scope":1379,"src":"16798:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"16798:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"ids","nameLocation":"16835:3:1","nodeType":"VariableDeclaration","scope":1379,"src":"16818:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"16818:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1322,"nodeType":"ArrayTypeName","src":"16818:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"amounts","nameLocation":"16865:7:1","nodeType":"VariableDeclaration","scope":1379,"src":"16848:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"16848:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1325,"nodeType":"ArrayTypeName","src":"16848:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"data","nameLocation":"16895:4:1","nodeType":"VariableDeclaration","scope":1379,"src":"16882:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1327,"name":"bytes","nodeType":"ElementaryTypeName","src":"16882:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16740:165:1"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[],"src":"16914:0:1"},"scope":1413,"src":"16696:814:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1406,"nodeType":"Block","src":"17600:109:1","statements":[{"assignments":[1391],"declarations":[{"constant":false,"id":1391,"mutability":"mutable","name":"array","nameLocation":"17627:5:1","nodeType":"VariableDeclaration","scope":1406,"src":"17610:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"17610:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1390,"nodeType":"ArrayTypeName","src":"17610:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1397,"initialValue":{"arguments":[{"hexValue":"31","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17649:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17635:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"17639:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1393,"nodeType":"ArrayTypeName","src":"17639:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17635:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17610:41:1"},{"expression":{"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1398,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"17661:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1400,"indexExpression":{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17667:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17661:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1401,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"17672:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17661:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1403,"nodeType":"ExpressionStatement","src":"17661:18:1"},{"expression":{"id":1404,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"17697:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1386,"id":1405,"nodeType":"Return","src":"17690:12:1"}]},"id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArray","nameLocation":"17525:17:1","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"element","nameLocation":"17551:7:1","nodeType":"VariableDeclaration","scope":1407,"src":"17543:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"17543:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17542:17:1"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1407,"src":"17582:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"17582:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1384,"nodeType":"ArrayTypeName","src":"17582:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17581:18:1"},"scope":1413,"src":"17516:193:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"17715:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1412,"mutability":"mutable","name":"__gap","nameLocation":"17994:5:1","nodeType":"VariableDeclaration","scope":1413,"src":"17974:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage","typeString":"uint256[47]"},"typeName":{"baseType":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"17974:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1411,"length":{"hexValue":"3437","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17982:2:1","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"nodeType":"ArrayTypeName","src":"17974:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage_ptr","typeString":"uint256[47]"}},"visibility":"private"}],"scope":1414,"src":"682:17320:1","usedErrors":[]}],"src":"109:17894:1"},"id":1},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol","exportedSymbols":{"IERC1155ReceiverUpgradeable":[1454],"IERC165Upgradeable":[2150]},"id":1455,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1415,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"../../utils/introspection/IERC165Upgradeable.sol","id":1416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1455,"sourceUnit":2151,"src":"143:58:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1418,"name":"IERC165Upgradeable","nameLocations":["284:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":2150,"src":"284:18:2"},"id":1419,"nodeType":"InheritanceSpecifier","src":"284:18:2"}],"canonicalName":"IERC1155ReceiverUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"203:39:2","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":1454,"linearizedBaseContracts":[1454,2150],"name":"IERC1155ReceiverUpgradeable","nameLocation":"253:27:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1420,"nodeType":"StructuredDocumentation","src":"309:826:2","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1435,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1149:17:2","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"operator","nameLocation":"1184:8:2","nodeType":"VariableDeclaration","scope":1435,"src":"1176:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"1176:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"from","nameLocation":"1210:4:2","nodeType":"VariableDeclaration","scope":1435,"src":"1202:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"id","nameLocation":"1232:2:2","nodeType":"VariableDeclaration","scope":1435,"src":"1224:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"value","nameLocation":"1252:5:2","nodeType":"VariableDeclaration","scope":1435,"src":"1244:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1244:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"data","nameLocation":"1282:4:2","nodeType":"VariableDeclaration","scope":1435,"src":"1267:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1429,"name":"bytes","nodeType":"ElementaryTypeName","src":"1267:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1166:126:2"},"returnParameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1435,"src":"1311:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1432,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1311:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1310:8:2"},"scope":1454,"src":"1140:179:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"1325:994:2","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1453,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2333:22:2","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"operator","nameLocation":"2373:8:2","nodeType":"VariableDeclaration","scope":1453,"src":"2365:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"2365:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"from","nameLocation":"2399:4:2","nodeType":"VariableDeclaration","scope":1453,"src":"2391:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"ids","nameLocation":"2432:3:2","nodeType":"VariableDeclaration","scope":1453,"src":"2413:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2413:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1442,"nodeType":"ArrayTypeName","src":"2413:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"values","nameLocation":"2464:6:2","nodeType":"VariableDeclaration","scope":1453,"src":"2445:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1445,"nodeType":"ArrayTypeName","src":"2445:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"data","nameLocation":"2495:4:2","nodeType":"VariableDeclaration","scope":1453,"src":"2480:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1447,"name":"bytes","nodeType":"ElementaryTypeName","src":"2480:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2355:150:2"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"2524:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1450,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2524:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2523:8:2"},"scope":1454,"src":"2324:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1455,"src":"243:2291:2","usedErrors":[]}],"src":"118:2417:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol","exportedSymbols":{"IERC1155Upgradeable":[1576],"IERC165Upgradeable":[2150]},"id":1577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1456,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"../../utils/introspection/IERC165Upgradeable.sol","id":1457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1577,"sourceUnit":2151,"src":"135:58:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1459,"name":"IERC165Upgradeable","nameLocations":["394:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":2150,"src":"394:18:3"},"id":1460,"nodeType":"InheritanceSpecifier","src":"394:18:3"}],"canonicalName":"IERC1155Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"195:165:3","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1576,"linearizedBaseContracts":[1576,2150],"name":"IERC1155Upgradeable","nameLocation":"371:19:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"419:121:3","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1473,"name":"TransferSingle","nameLocation":"551:14:3","nodeType":"EventDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"582:8:3","nodeType":"VariableDeclaration","scope":1473,"src":"566:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1465,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"608:4:3","nodeType":"VariableDeclaration","scope":1473,"src":"592:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"592:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1467,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"630:2:3","nodeType":"VariableDeclaration","scope":1473,"src":"614:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1466,"name":"address","nodeType":"ElementaryTypeName","src":"614:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1469,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"642:2:3","nodeType":"VariableDeclaration","scope":1473,"src":"634:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1471,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"654:5:3","nodeType":"VariableDeclaration","scope":1473,"src":"646:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"565:95:3"},"src":"545:116:3"},{"anonymous":false,"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"667:144:3","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1488,"name":"TransferBatch","nameLocation":"822:13:3","nodeType":"EventDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"861:8:3","nodeType":"VariableDeclaration","scope":1488,"src":"845:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1478,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"895:4:3","nodeType":"VariableDeclaration","scope":1488,"src":"879:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"879:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1480,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"925:2:3","nodeType":"VariableDeclaration","scope":1488,"src":"909:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1479,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1483,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"947:3:3","nodeType":"VariableDeclaration","scope":1488,"src":"937:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1482,"nodeType":"ArrayTypeName","src":"937:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1486,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"970:6:3","nodeType":"VariableDeclaration","scope":1488,"src":"960:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"960:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1485,"nodeType":"ArrayTypeName","src":"960:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"835:147:3"},"src":"816:167:3"},{"anonymous":false,"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"989:147:3","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1497,"name":"ApprovalForAll","nameLocation":"1147:14:3","nodeType":"EventDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1178:7:3","nodeType":"VariableDeclaration","scope":1497,"src":"1162:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"1162:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1493,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1203:8:3","nodeType":"VariableDeclaration","scope":1497,"src":"1187:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1218:8:3","nodeType":"VariableDeclaration","scope":1497,"src":"1213:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1494,"name":"bool","nodeType":"ElementaryTypeName","src":"1213:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1161:66:3"},"src":"1141:87:3"},{"anonymous":false,"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"1234:343:3","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1504,"name":"URI","nameLocation":"1588:3:3","nodeType":"EventDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1599:5:3","nodeType":"VariableDeclaration","scope":1504,"src":"1592:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1499,"name":"string","nodeType":"ElementaryTypeName","src":"1592:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1502,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1622:2:3","nodeType":"VariableDeclaration","scope":1504,"src":"1606:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1606:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1591:34:3"},"src":"1582:44:3"},{"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"1632:173:3","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1514,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1819:9:3","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"account","nameLocation":"1837:7:3","nodeType":"VariableDeclaration","scope":1514,"src":"1829:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"1829:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"id","nameLocation":"1854:2:3","nodeType":"VariableDeclaration","scope":1514,"src":"1846:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1846:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1828:29:3"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1514,"src":"1881:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1880:9:3"},"scope":1576,"src":"1810:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"1896:188:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1527,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2098:14:3","nodeType":"FunctionDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"accounts","nameLocation":"2132:8:3","nodeType":"VariableDeclaration","scope":1527,"src":"2113:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"2113:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1517,"nodeType":"ArrayTypeName","src":"2113:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"ids","nameLocation":"2161:3:3","nodeType":"VariableDeclaration","scope":1527,"src":"2142:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"2142:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1520,"nodeType":"ArrayTypeName","src":"2142:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2112:53:3"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"2213:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2213:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1524,"nodeType":"ArrayTypeName","src":"2213:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2212:18:3"},"scope":1576,"src":"2089:142:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"2237:248:3","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1535,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2499:17:3","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"operator","nameLocation":"2525:8:3","nodeType":"VariableDeclaration","scope":1535,"src":"2517:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"2517:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"approved","nameLocation":"2540:8:3","nodeType":"VariableDeclaration","scope":1535,"src":"2535:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1531,"name":"bool","nodeType":"ElementaryTypeName","src":"2535:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2516:33:3"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[],"src":"2558:0:3"},"scope":1576,"src":"2490:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"2565:135:3","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1545,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2714:16:3","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"account","nameLocation":"2739:7:3","nodeType":"VariableDeclaration","scope":1545,"src":"2731:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"2731:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"operator","nameLocation":"2756:8:3","nodeType":"VariableDeclaration","scope":1545,"src":"2748:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"2748:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2730:35:3"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"2789:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1542,"name":"bool","nodeType":"ElementaryTypeName","src":"2789:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2788:6:3"},"scope":1576,"src":"2705:90:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"2801:556:3","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1559,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3371:16:3","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"from","nameLocation":"3405:4:3","nodeType":"VariableDeclaration","scope":1559,"src":"3397:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"3397:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"to","nameLocation":"3427:2:3","nodeType":"VariableDeclaration","scope":1559,"src":"3419:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"3419:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"id","nameLocation":"3447:2:3","nodeType":"VariableDeclaration","scope":1559,"src":"3439:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"3439:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"amount","nameLocation":"3467:6:3","nodeType":"VariableDeclaration","scope":1559,"src":"3459:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"3459:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"data","nameLocation":"3498:4:3","nodeType":"VariableDeclaration","scope":1559,"src":"3483:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1555,"name":"bytes","nodeType":"ElementaryTypeName","src":"3483:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3387:121:3"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"3517:0:3"},"scope":1576,"src":"3362:156:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"3524:390:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1575,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3928:21:3","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"from","nameLocation":"3967:4:3","nodeType":"VariableDeclaration","scope":1575,"src":"3959:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"3959:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"to","nameLocation":"3989:2:3","nodeType":"VariableDeclaration","scope":1575,"src":"3981:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"ids","nameLocation":"4020:3:3","nodeType":"VariableDeclaration","scope":1575,"src":"4001:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"4001:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1566,"nodeType":"ArrayTypeName","src":"4001:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"amounts","nameLocation":"4052:7:3","nodeType":"VariableDeclaration","scope":1575,"src":"4033:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"4033:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1569,"nodeType":"ArrayTypeName","src":"4033:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"data","nameLocation":"4084:4:3","nodeType":"VariableDeclaration","scope":1575,"src":"4069:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1571,"name":"bytes","nodeType":"ElementaryTypeName","src":"4069:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3949:145:3"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[],"src":"4103:0:3"},"scope":1576,"src":"3919:185:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1577,"src":"361:3745:3","usedErrors":[]}],"src":"110:3997:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2052],"ContextUpgradeable":[2094],"ERC1155SupplyUpgradeable":[1753],"ERC1155Upgradeable":[1413],"ERC165Upgradeable":[2138],"IERC1155MetadataURIUpgradeable":[1768],"IERC1155ReceiverUpgradeable":[1454],"IERC1155Upgradeable":[1576],"IERC165Upgradeable":[2150],"Initializable":[168]},"id":1754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1578,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"126:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"../ERC1155Upgradeable.sol","id":1579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1754,"sourceUnit":1414,"src":"151:35:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1754,"sourceUnit":169,"src":"187:48:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1582,"name":"Initializable","nameLocations":["628:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"628:13:4"},"id":1583,"nodeType":"InheritanceSpecifier","src":"628:13:4"},{"baseName":{"id":1584,"name":"ERC1155Upgradeable","nameLocations":["643:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":1413,"src":"643:18:4"},"id":1585,"nodeType":"InheritanceSpecifier","src":"643:18:4"}],"canonicalName":"ERC1155SupplyUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"237:344:4","text":" @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted."},"fullyImplemented":true,"id":1753,"linearizedBaseContracts":[1753,1413,1768,1576,2138,2150,2094,168],"name":"ERC1155SupplyUpgradeable","nameLocation":"600:24:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1590,"nodeType":"Block","src":"726:7:4","statements":[]},"id":1591,"implemented":true,"kind":"function","modifiers":[{"id":1588,"kind":"modifierInvocation","modifierName":{"id":1587,"name":"onlyInitializing","nameLocations":["709:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"709:16:4"},"nodeType":"ModifierInvocation","src":"709:16:4"}],"name":"__ERC1155Supply_init","nameLocation":"677:20:4","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"697:2:4"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[],"src":"726:0:4"},"scope":1753,"src":"668:65:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"807:7:4","statements":[]},"id":1597,"implemented":true,"kind":"function","modifiers":[{"id":1594,"kind":"modifierInvocation","modifierName":{"id":1593,"name":"onlyInitializing","nameLocations":["790:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"790:16:4"},"nodeType":"ModifierInvocation","src":"790:16:4"}],"name":"__ERC1155Supply_init_unchained","nameLocation":"748:30:4","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[],"src":"778:2:4"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"807:0:4"},"scope":1753,"src":"739:75:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"_totalSupply","nameLocation":"855:12:4","nodeType":"VariableDeclaration","scope":1753,"src":"819:48:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1600,"keyType":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"827:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"819:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1613,"nodeType":"Block","src":"1016:40:4","statements":[{"expression":{"baseExpression":{"id":1609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1033:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1611,"indexExpression":{"id":1610,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1046:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1033:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1608,"id":1612,"nodeType":"Return","src":"1026:23:4"}]},"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"874:66:4","text":" @dev Total amount of tokens in with a given id."},"functionSelector":"bd85b039","id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"954:11:4","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"id","nameLocation":"974:2:4","nodeType":"VariableDeclaration","scope":1614,"src":"966:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"966:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"965:12:4"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"1007:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:9:4"},"scope":1753,"src":"945:111:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1629,"nodeType":"Block","src":"1212:68:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1624,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"1266:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1622,"name":"ERC1155SupplyUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"1229:24:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155SupplyUpgradeable_$1753_$","typeString":"type(contract ERC1155SupplyUpgradeable)"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1254:11:4","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"1229:36:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1229:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1272:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1229:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1621,"id":1628,"nodeType":"Return","src":"1222:51:4"}]},"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"1062:82:4","text":" @dev Indicates whether any token exist with a given id, or not."},"functionSelector":"4f558e79","id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"exists","nameLocation":"1158:6:4","nodeType":"FunctionDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"id","nameLocation":"1173:2:4","nodeType":"VariableDeclaration","scope":1630,"src":"1165:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1165:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1164:12:4"},"returnParameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1630,"src":"1206:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1619,"name":"bool","nodeType":"ElementaryTypeName","src":"1206:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1205:6:4"},"scope":1753,"src":"1149:131:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1232],"body":{"id":1746,"nodeType":"Block","src":"1571:683:4","statements":[{"expression":{"arguments":[{"id":1652,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"1608:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1653,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1618:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1654,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"1624:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1655,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1628:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1656,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1633:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1657,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"1642:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1649,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1581:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155SupplyUpgradeable_$1753_$","typeString":"type(contract super ERC1155SupplyUpgradeable)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1587:20:4","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1232,"src":"1581:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"ExpressionStatement","src":"1581:66:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1660,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1662:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1678:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1670:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1661,"name":"address","nodeType":"ElementaryTypeName","src":"1670:7:4","typeDescriptions":{}}},"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1670:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1690,"nodeType":"IfStatement","src":"1658:156:4","trueBody":{"id":1689,"nodeType":"Block","src":"1682:132:4","statements":[{"body":{"id":1687,"nodeType":"Block","src":"1737:67:4","statements":[{"expression":{"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1677,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1755:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1681,"indexExpression":{"baseExpression":{"id":1678,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1768:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1680,"indexExpression":{"id":1679,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"1772:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1768:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1755:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":1682,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1779:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1684,"indexExpression":{"id":1683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"1787:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1779:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1755:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1686,"nodeType":"ExpressionStatement","src":"1755:34:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"1716:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1671,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1720:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1724:6:4","memberName":"length","nodeType":"MemberAccess","src":"1720:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1716:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1688,"initializationExpression":{"assignments":[1667],"declarations":[{"constant":false,"id":1667,"mutability":"mutable","name":"i","nameLocation":"1709:1:4","nodeType":"VariableDeclaration","scope":1688,"src":"1701:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1701:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1669,"initialValue":{"hexValue":"30","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1701:13:4"},"loopExpression":{"expression":{"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1732:3:4","subExpression":{"id":1674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"1734:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1676,"nodeType":"ExpressionStatement","src":"1732:3:4"},"nodeType":"ForStatement","src":"1696:108:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"1828:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1842:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1834:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"1834:7:4","typeDescriptions":{}}},"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1834:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1828:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1745,"nodeType":"IfStatement","src":"1824:424:4","trueBody":{"id":1744,"nodeType":"Block","src":"1846:402:4","statements":[{"body":{"id":1742,"nodeType":"Block","src":"1901:337:4","statements":[{"assignments":[1709],"declarations":[{"constant":false,"id":1709,"mutability":"mutable","name":"id","nameLocation":"1927:2:4","nodeType":"VariableDeclaration","scope":1742,"src":"1919:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1713,"initialValue":{"baseExpression":{"id":1710,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1932:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1712,"indexExpression":{"id":1711,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1936:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1932:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1919:19:4"},{"assignments":[1715],"declarations":[{"constant":false,"id":1715,"mutability":"mutable","name":"amount","nameLocation":"1964:6:4","nodeType":"VariableDeclaration","scope":1742,"src":"1956:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1719,"initialValue":{"baseExpression":{"id":1716,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1973:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1718,"indexExpression":{"id":1717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1981:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1973:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1956:27:4"},{"assignments":[1721],"declarations":[{"constant":false,"id":1721,"mutability":"mutable","name":"supply","nameLocation":"2009:6:4","nodeType":"VariableDeclaration","scope":1742,"src":"2001:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1725,"initialValue":{"baseExpression":{"id":1722,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"2018:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1724,"indexExpression":{"id":1723,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2031:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2018:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2001:33:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1727,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"2060:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1728,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"2070:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2060:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e74206578636565647320746f74616c537570706c79","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2078:42:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4","typeString":"literal_string \"ERC1155: burn amount exceeds totalSupply\""},"value":"ERC1155: burn amount exceeds totalSupply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4","typeString":"literal_string \"ERC1155: burn amount exceeds totalSupply\""}],"id":1726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2052:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2052:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1732,"nodeType":"ExpressionStatement","src":"2052:69:4"},{"id":1741,"nodeType":"UncheckedBlock","src":"2139:85:4","statements":[{"expression":{"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1733,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"2171:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1735,"indexExpression":{"id":1734,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2184:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2171:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1736,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"2190:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1737,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"2199:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2190:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2171:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1740,"nodeType":"ExpressionStatement","src":"2171:34:4"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1701,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1880:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1702,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1884:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1888:6:4","memberName":"length","nodeType":"MemberAccess","src":"1884:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1880:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1743,"initializationExpression":{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"i","nameLocation":"1873:1:4","nodeType":"VariableDeclaration","scope":1743,"src":"1865:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1865:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1700,"initialValue":{"hexValue":"30","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1877:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1865:13:4"},"loopExpression":{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1896:3:4","subExpression":{"id":1705,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1898:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1707,"nodeType":"ExpressionStatement","src":"1896:3:4"},"nodeType":"ForStatement","src":"1860:378:4"}]}}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"1286:59:4","text":" @dev See {ERC1155-_beforeTokenTransfer}."},"id":1747,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1359:20:4","nodeType":"FunctionDefinition","overrides":{"id":1647,"nodeType":"OverrideSpecifier","overrides":[],"src":"1562:8:4"},"parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"operator","nameLocation":"1397:8:4","nodeType":"VariableDeclaration","scope":1747,"src":"1389:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"1389:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"from","nameLocation":"1423:4:4","nodeType":"VariableDeclaration","scope":1747,"src":"1415:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"1415:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"to","nameLocation":"1445:2:4","nodeType":"VariableDeclaration","scope":1747,"src":"1437:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"1437:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"ids","nameLocation":"1474:3:4","nodeType":"VariableDeclaration","scope":1747,"src":"1457:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1457:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1639,"nodeType":"ArrayTypeName","src":"1457:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"amounts","nameLocation":"1504:7:4","nodeType":"VariableDeclaration","scope":1747,"src":"1487:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1487:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1642,"nodeType":"ArrayTypeName","src":"1487:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"data","nameLocation":"1534:4:4","nodeType":"VariableDeclaration","scope":1747,"src":"1521:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1644,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1379:165:4"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[],"src":"1571:0:4"},"scope":1753,"src":"1350:904:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"2260:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1752,"mutability":"mutable","name":"__gap","nameLocation":"2539:5:4","nodeType":"VariableDeclaration","scope":1753,"src":"2519:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2519:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"length":{"hexValue":"3439","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2527:2:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2519:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1754,"src":"582:1965:4","usedErrors":[]}],"src":"126:2422:4"},"id":4},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol","exportedSymbols":{"IERC1155MetadataURIUpgradeable":[1768],"IERC1155Upgradeable":[1576],"IERC165Upgradeable":[2150]},"id":1769,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1755,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"117:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol","file":"../IERC1155Upgradeable.sol","id":1756,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1769,"sourceUnit":1577,"src":"142:36:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1758,"name":"IERC1155Upgradeable","nameLocations":["419:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1576,"src":"419:19:5"},"id":1759,"nodeType":"InheritanceSpecifier","src":"419:19:5"}],"canonicalName":"IERC1155MetadataURIUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"180:194:5","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1768,"linearizedBaseContracts":[1768,1576,2150],"name":"IERC1155MetadataURIUpgradeable","nameLocation":"385:30:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"445:192:5","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1767,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"651:3:5","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"id","nameLocation":"663:2:5","nodeType":"VariableDeclaration","scope":1767,"src":"655:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:12:5"},"returnParameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"690:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1764,"name":"string","nodeType":"ElementaryTypeName","src":"690:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"689:15:5"},"scope":1768,"src":"642:63:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1769,"src":"375:332:5","usedErrors":[]}],"src":"117:591:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2052]},"id":2053,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1770,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1771,"nodeType":"StructuredDocumentation","src":"126:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2052,"linearizedBaseContracts":[2052],"name":"AddressUpgradeable","nameLocation":"202:18:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1785,"nodeType":"Block","src":"1252:254:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1779,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1476:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1484:4:6","memberName":"code","nodeType":"MemberAccess","src":"1476:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1489:6:6","memberName":"length","nodeType":"MemberAccess","src":"1476:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1778,"id":1784,"nodeType":"Return","src":"1469:30:6"}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"227:954:6","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1786,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:6","nodeType":"FunctionDefinition","parameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"account","nameLocation":"1214:7:6","nodeType":"VariableDeclaration","scope":1786,"src":"1206:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:6"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1786,"src":"1246:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1776,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:6"},"scope":2052,"src":"1186:320:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1819,"nodeType":"Block","src":"2494:241:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1797,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2052","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2052","typeString":"library AddressUpgradeable"}],"id":1796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:6","typeDescriptions":{}}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2526:7:6","memberName":"balance","nodeType":"MemberAccess","src":"2512:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1800,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"2537:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1804,"nodeType":"ExpressionStatement","src":"2504:73:6"},{"assignments":[1806,null],"declarations":[{"constant":false,"id":1806,"mutability":"mutable","name":"success","nameLocation":"2594:7:6","nodeType":"VariableDeclaration","scope":1819,"src":"2589:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1805,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1813,"initialValue":{"arguments":[{"hexValue":"","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1807,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"2607:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2617:4:6","memberName":"call","nodeType":"MemberAccess","src":"2607:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1809,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"2629:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:6"},{"expression":{"arguments":[{"id":1815,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2658:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1818,"nodeType":"ExpressionStatement","src":"2650:78:6"}]},"documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"1512:906:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:6","nodeType":"FunctionDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:6","nodeType":"VariableDeclaration","scope":1820,"src":"2442:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1788,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1791,"mutability":"mutable","name":"amount","nameLocation":"2477:6:6","nodeType":"VariableDeclaration","scope":1820,"src":"2469:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:6"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[],"src":"2494:0:6"},"scope":2052,"src":"2423:312:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1837,"nodeType":"Block","src":"3566:96:6","statements":[{"expression":{"arguments":[{"id":1831,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"3605:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1832,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"3613:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3619:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3622:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1830,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1878,1922],"referencedDeclaration":1922,"src":"3583:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1829,"id":1836,"nodeType":"Return","src":"3576:79:6"}]},"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"2741:731:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1838,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:6","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"target","nameLocation":"3507:6:6","nodeType":"VariableDeclaration","scope":1838,"src":"3499:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"data","nameLocation":"3528:4:6","nodeType":"VariableDeclaration","scope":1838,"src":"3515:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1824,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:6"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1838,"src":"3552:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1827,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:6"},"scope":2052,"src":"3477:185:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1857,"nodeType":"Block","src":"4031:76:6","statements":[{"expression":{"arguments":[{"id":1851,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"4070:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1852,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"4078:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4084:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1854,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"4087:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1850,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1878,1922],"referencedDeclaration":1922,"src":"4048:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4048:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1849,"id":1856,"nodeType":"Return","src":"4041:59:6"}]},"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"3668:211:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3893:12:6","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"target","nameLocation":"3923:6:6","nodeType":"VariableDeclaration","scope":1858,"src":"3915:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"3915:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"data","nameLocation":"3952:4:6","nodeType":"VariableDeclaration","scope":1858,"src":"3939:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1842,"name":"bytes","nodeType":"ElementaryTypeName","src":"3939:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"errorMessage","nameLocation":"3980:12:6","nodeType":"VariableDeclaration","scope":1858,"src":"3966:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1844,"name":"string","nodeType":"ElementaryTypeName","src":"3966:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3905:93:6"},"returnParameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"4017:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1847,"name":"bytes","nodeType":"ElementaryTypeName","src":"4017:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4016:14:6"},"scope":2052,"src":"3884:223:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1877,"nodeType":"Block","src":"4612:111:6","statements":[{"expression":{"arguments":[{"id":1871,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"4651:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1872,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"4659:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4665:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1870,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1878,1922],"referencedDeclaration":1922,"src":"4629:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4629:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1869,"id":1876,"nodeType":"Return","src":"4622:94:6"}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"4113:351:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1878,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4478:21:6","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"target","nameLocation":"4517:6:6","nodeType":"VariableDeclaration","scope":1878,"src":"4509:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1860,"name":"address","nodeType":"ElementaryTypeName","src":"4509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1863,"mutability":"mutable","name":"data","nameLocation":"4546:4:6","nodeType":"VariableDeclaration","scope":1878,"src":"4533:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1862,"name":"bytes","nodeType":"ElementaryTypeName","src":"4533:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"value","nameLocation":"4568:5:6","nodeType":"VariableDeclaration","scope":1878,"src":"4560:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"4560:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:80:6"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1878,"src":"4598:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1867,"name":"bytes","nodeType":"ElementaryTypeName","src":"4598:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4597:14:6"},"scope":2052,"src":"4469:254:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1921,"nodeType":"Block","src":"5150:267:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1895,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5176:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2052","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2052","typeString":"library AddressUpgradeable"}],"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5168:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:6","typeDescriptions":{}}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5168:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5182:7:6","memberName":"balance","nodeType":"MemberAccess","src":"5168:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"5193:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5200:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1892,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5160:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1902,"nodeType":"ExpressionStatement","src":"5160:81:6"},{"assignments":[1904,1906],"declarations":[{"constant":false,"id":1904,"mutability":"mutable","name":"success","nameLocation":"5257:7:6","nodeType":"VariableDeclaration","scope":1921,"src":"5252:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1903,"name":"bool","nodeType":"ElementaryTypeName","src":"5252:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"returndata","nameLocation":"5279:10:6","nodeType":"VariableDeclaration","scope":1921,"src":"5266:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"5266:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1913,"initialValue":{"arguments":[{"id":1911,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"5319:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1907,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"5293:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5300:4:6","memberName":"call","nodeType":"MemberAccess","src":"5293:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"5312:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5293:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5293:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5251:73:6"},{"expression":{"arguments":[{"id":1915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"5368:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1916,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"5376:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1917,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"5385:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1918,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"5397:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1914,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5341:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1891,"id":1920,"nodeType":"Return","src":"5334:76:6"}]},"documentation":{"id":1879,"nodeType":"StructuredDocumentation","src":"4729:237:6","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1922,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4980:21:6","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"target","nameLocation":"5019:6:6","nodeType":"VariableDeclaration","scope":1922,"src":"5011:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"data","nameLocation":"5048:4:6","nodeType":"VariableDeclaration","scope":1922,"src":"5035:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"5035:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1885,"mutability":"mutable","name":"value","nameLocation":"5070:5:6","nodeType":"VariableDeclaration","scope":1922,"src":"5062:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1884,"name":"uint256","nodeType":"ElementaryTypeName","src":"5062:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"errorMessage","nameLocation":"5099:12:6","nodeType":"VariableDeclaration","scope":1922,"src":"5085:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1886,"name":"string","nodeType":"ElementaryTypeName","src":"5085:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5001:116:6"},"returnParameters":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1922,"src":"5136:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1889,"name":"bytes","nodeType":"ElementaryTypeName","src":"5136:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5135:14:6"},"scope":2052,"src":"4971:446:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1938,"nodeType":"Block","src":"5694:97:6","statements":[{"expression":{"arguments":[{"id":1933,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5730:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1934,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"5738:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5744:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1932,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1939,1968],"referencedDeclaration":1968,"src":"5711:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5711:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1931,"id":1937,"nodeType":"Return","src":"5704:80:6"}]},"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"5423:166:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5603:18:6","nodeType":"FunctionDefinition","parameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"target","nameLocation":"5630:6:6","nodeType":"VariableDeclaration","scope":1939,"src":"5622:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"5622:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"data","nameLocation":"5651:4:6","nodeType":"VariableDeclaration","scope":1939,"src":"5638:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1926,"name":"bytes","nodeType":"ElementaryTypeName","src":"5638:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5621:35:6"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"5680:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1929,"name":"bytes","nodeType":"ElementaryTypeName","src":"5680:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5679:14:6"},"scope":2052,"src":"5594:197:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1967,"nodeType":"Block","src":"6133:168:6","statements":[{"assignments":[1952,1954],"declarations":[{"constant":false,"id":1952,"mutability":"mutable","name":"success","nameLocation":"6149:7:6","nodeType":"VariableDeclaration","scope":1967,"src":"6144:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1951,"name":"bool","nodeType":"ElementaryTypeName","src":"6144:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"returndata","nameLocation":"6171:10:6","nodeType":"VariableDeclaration","scope":1967,"src":"6158:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1953,"name":"bytes","nodeType":"ElementaryTypeName","src":"6158:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1959,"initialValue":{"arguments":[{"id":1957,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"6203:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1955,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"6185:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6192:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"6185:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6185:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6143:65:6"},{"expression":{"arguments":[{"id":1961,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"6252:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1962,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"6260:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1963,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"6269:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1964,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"6281:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1960,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"6225:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1950,"id":1966,"nodeType":"Return","src":"6218:76:6"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"5797:173:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1968,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5984:18:6","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"target","nameLocation":"6020:6:6","nodeType":"VariableDeclaration","scope":1968,"src":"6012:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"6012:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"data","nameLocation":"6049:4:6","nodeType":"VariableDeclaration","scope":1968,"src":"6036:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1943,"name":"bytes","nodeType":"ElementaryTypeName","src":"6036:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"errorMessage","nameLocation":"6077:12:6","nodeType":"VariableDeclaration","scope":1968,"src":"6063:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1945,"name":"string","nodeType":"ElementaryTypeName","src":"6063:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6002:93:6"},"returnParameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1968,"src":"6119:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1948,"name":"bytes","nodeType":"ElementaryTypeName","src":"6119:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6118:14:6"},"scope":2052,"src":"5975:326:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"6783:434:6","statements":[{"condition":{"id":1982,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"6797:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"7153:58:6","statements":[{"expression":{"arguments":[{"id":2000,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"7175:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2001,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"7187:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1999,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7167:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7167:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"ExpressionStatement","src":"7167:33:6"}]},"id":2005,"nodeType":"IfStatement","src":"6793:418:6","trueBody":{"id":1998,"nodeType":"Block","src":"6806:341:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1983,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"6824:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6835:6:6","memberName":"length","nodeType":"MemberAccess","src":"6824:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6845:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6824:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1995,"nodeType":"IfStatement","src":"6820:286:6","trueBody":{"id":1994,"nodeType":"Block","src":"6848:258:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1989,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"7050:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1988,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"7039:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7059:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1987,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7031:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7031:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1993,"nodeType":"ExpressionStatement","src":"7031:60:6"}]}},{"expression":{"id":1996,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"7126:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1981,"id":1997,"nodeType":"Return","src":"7119:17:6"}]}}]},"documentation":{"id":1969,"nodeType":"StructuredDocumentation","src":"6307:277:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"6598:26:6","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"target","nameLocation":"6642:6:6","nodeType":"VariableDeclaration","scope":2007,"src":"6634:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"success","nameLocation":"6663:7:6","nodeType":"VariableDeclaration","scope":2007,"src":"6658:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1972,"name":"bool","nodeType":"ElementaryTypeName","src":"6658:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"returndata","nameLocation":"6693:10:6","nodeType":"VariableDeclaration","scope":2007,"src":"6680:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"6680:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"errorMessage","nameLocation":"6727:12:6","nodeType":"VariableDeclaration","scope":2007,"src":"6713:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1976,"name":"string","nodeType":"ElementaryTypeName","src":"6713:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6624:121:6"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2007,"src":"6769:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1979,"name":"bytes","nodeType":"ElementaryTypeName","src":"6769:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6768:14:6"},"scope":2052,"src":"6589:628:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2030,"nodeType":"Block","src":"7598:135:6","statements":[{"condition":{"id":2019,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"7612:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2028,"nodeType":"Block","src":"7669:58:6","statements":[{"expression":{"arguments":[{"id":2024,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"7691:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2025,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"7703:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2023,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7683:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2027,"nodeType":"ExpressionStatement","src":"7683:33:6"}]},"id":2029,"nodeType":"IfStatement","src":"7608:119:6","trueBody":{"id":2022,"nodeType":"Block","src":"7621:42:6","statements":[{"expression":{"id":2020,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"7642:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2018,"id":2021,"nodeType":"Return","src":"7635:17:6"}]}}]},"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"7223:210:6","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7447:16:6","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"success","nameLocation":"7478:7:6","nodeType":"VariableDeclaration","scope":2031,"src":"7473:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2009,"name":"bool","nodeType":"ElementaryTypeName","src":"7473:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"returndata","nameLocation":"7508:10:6","nodeType":"VariableDeclaration","scope":2031,"src":"7495:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2011,"name":"bytes","nodeType":"ElementaryTypeName","src":"7495:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"errorMessage","nameLocation":"7542:12:6","nodeType":"VariableDeclaration","scope":2031,"src":"7528:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2013,"name":"string","nodeType":"ElementaryTypeName","src":"7528:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:97:6"},"returnParameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2031,"src":"7584:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2016,"name":"bytes","nodeType":"ElementaryTypeName","src":"7584:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:14:6"},"scope":2052,"src":"7438:295:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"7822:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2038,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"7898:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7909:6:6","memberName":"length","nodeType":"MemberAccess","src":"7898:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7918:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7898:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2048,"nodeType":"Block","src":"8228:45:6","statements":[{"expression":{"arguments":[{"id":2045,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"8249:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2044,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8242:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8242:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2047,"nodeType":"ExpressionStatement","src":"8242:20:6"}]},"id":2049,"nodeType":"IfStatement","src":"7894:379:6","trueBody":{"id":2043,"nodeType":"Block","src":"7921:301:6","statements":[{"AST":{"nodeType":"YulBlock","src":"8079:133:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8097:40:6","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8126:10:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8120:5:6"},"nodeType":"YulFunctionCall","src":"8120:17:6"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8101:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8165:2:6","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8169:10:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8161:3:6"},"nodeType":"YulFunctionCall","src":"8161:19:6"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8182:15:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8154:6:6"},"nodeType":"YulFunctionCall","src":"8154:44:6"},"nodeType":"YulExpressionStatement","src":"8154:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2033,"isOffset":false,"isSlot":false,"src":"8126:10:6","valueSize":1},{"declaration":2033,"isOffset":false,"isSlot":false,"src":"8169:10:6","valueSize":1}],"id":2042,"nodeType":"InlineAssembly","src":"8070:142:6"}]}}]},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"7748:7:6","nodeType":"FunctionDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"returndata","nameLocation":"7769:10:6","nodeType":"VariableDeclaration","scope":2051,"src":"7756:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2032,"name":"bytes","nodeType":"ElementaryTypeName","src":"7756:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"errorMessage","nameLocation":"7795:12:6","nodeType":"VariableDeclaration","scope":2051,"src":"7781:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2034,"name":"string","nodeType":"ElementaryTypeName","src":"7781:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7755:53:6"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[],"src":"7822:0:6"},"scope":2052,"src":"7739:540:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2053,"src":"194:8087:6","usedErrors":[]}],"src":"101:8181:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2052],"ContextUpgradeable":[2094],"Initializable":[168]},"id":2095,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2054,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2055,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2095,"sourceUnit":169,"src":"110:42:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2057,"name":"Initializable","nameLocations":["691:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"691:13:7"},"id":2058,"nodeType":"InheritanceSpecifier","src":"691:13:7"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"154:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2094,"linearizedBaseContracts":[2094,168],"name":"ContextUpgradeable","nameLocation":"669:18:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":2063,"nodeType":"Block","src":"763:7:7","statements":[]},"id":2064,"implemented":true,"kind":"function","modifiers":[{"id":2061,"kind":"modifierInvocation","modifierName":{"id":2060,"name":"onlyInitializing","nameLocations":["746:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"746:16:7"},"nodeType":"ModifierInvocation","src":"746:16:7"}],"name":"__Context_init","nameLocation":"720:14:7","nodeType":"FunctionDefinition","parameters":{"id":2059,"nodeType":"ParameterList","parameters":[],"src":"734:2:7"},"returnParameters":{"id":2062,"nodeType":"ParameterList","parameters":[],"src":"763:0:7"},"scope":2094,"src":"711:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2069,"nodeType":"Block","src":"838:7:7","statements":[]},"id":2070,"implemented":true,"kind":"function","modifiers":[{"id":2067,"kind":"modifierInvocation","modifierName":{"id":2066,"name":"onlyInitializing","nameLocations":["821:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"821:16:7"},"nodeType":"ModifierInvocation","src":"821:16:7"}],"name":"__Context_init_unchained","nameLocation":"785:24:7","nodeType":"FunctionDefinition","parameters":{"id":2065,"nodeType":"ParameterList","parameters":[],"src":"809:2:7"},"returnParameters":{"id":2068,"nodeType":"ParameterList","parameters":[],"src":"838:0:7"},"scope":2094,"src":"776:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2078,"nodeType":"Block","src":"912:34:7","statements":[{"expression":{"expression":{"id":2075,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:7","memberName":"sender","nodeType":"MemberAccess","src":"929:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2074,"id":2077,"nodeType":"Return","src":"922:17:7"}]},"id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:7","nodeType":"FunctionDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[],"src":"869:2:7"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2079,"src":"903:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:7"},"scope":2094,"src":"850:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2087,"nodeType":"Block","src":"1019:32:7","statements":[{"expression":{"expression":{"id":2084,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:7","memberName":"data","nodeType":"MemberAccess","src":"1036:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2083,"id":2086,"nodeType":"Return","src":"1029:15:7"}]},"id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:7","nodeType":"FunctionDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[],"src":"969:2:7"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2088,"src":"1003:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2081,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:7"},"scope":2094,"src":"952:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"1057:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2093,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:7","nodeType":"VariableDeclaration","scope":2094,"src":"1316:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2092,"length":{"hexValue":"3530","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2095,"src":"651:693:7","usedErrors":[]}],"src":"86:1259:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2052],"ERC165Upgradeable":[2138],"IERC165Upgradeable":[2150],"Initializable":[168]},"id":2139,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2096,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","id":2097,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2139,"sourceUnit":2151,"src":"124:34:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2098,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2139,"sourceUnit":169,"src":"159:45:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2100,"name":"Initializable","nameLocations":["822:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"822:13:8"},"id":2101,"nodeType":"InheritanceSpecifier","src":"822:13:8"},{"baseName":{"id":2102,"name":"IERC165Upgradeable","nameLocations":["837:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":2150,"src":"837:18:8"},"id":2103,"nodeType":"InheritanceSpecifier","src":"837:18:8"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2099,"nodeType":"StructuredDocumentation","src":"206:576:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2138,"linearizedBaseContracts":[2138,2150,168],"name":"ERC165Upgradeable","nameLocation":"801:17:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":2108,"nodeType":"Block","src":"913:7:8","statements":[]},"id":2109,"implemented":true,"kind":"function","modifiers":[{"id":2106,"kind":"modifierInvocation","modifierName":{"id":2105,"name":"onlyInitializing","nameLocations":["896:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"896:16:8"},"nodeType":"ModifierInvocation","src":"896:16:8"}],"name":"__ERC165_init","nameLocation":"871:13:8","nodeType":"FunctionDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[],"src":"884:2:8"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[],"src":"913:0:8"},"scope":2138,"src":"862:58:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2114,"nodeType":"Block","src":"987:7:8","statements":[]},"id":2115,"implemented":true,"kind":"function","modifiers":[{"id":2112,"kind":"modifierInvocation","modifierName":{"id":2111,"name":"onlyInitializing","nameLocations":["970:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"970:16:8"},"nodeType":"ModifierInvocation","src":"970:16:8"}],"name":"__ERC165_init_unchained","nameLocation":"935:23:8","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[],"src":"958:2:8"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"987:0:8"},"scope":2138,"src":"926:68:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2149],"body":{"id":2131,"nodeType":"Block","src":"1151:75:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"1168:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2126,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"1188:18:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$2150_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$2150_$","typeString":"type(contract IERC165Upgradeable)"}],"id":2125,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1183:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$2150","typeString":"type(contract IERC165Upgradeable)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1208:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1183:36:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1168:51:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2123,"id":2130,"nodeType":"Return","src":"1161:58:8"}]},"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"999:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2132,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1069:17:8","nodeType":"FunctionDefinition","overrides":{"id":2120,"nodeType":"OverrideSpecifier","overrides":[],"src":"1127:8:8"},"parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"interfaceId","nameLocation":"1094:11:8","nodeType":"VariableDeclaration","scope":2132,"src":"1087:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2117,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1087:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1086:20:8"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2132,"src":"1145:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2121,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:8"},"scope":2138,"src":"1060:166:8","stateMutability":"view","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"1232:254:8","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2137,"mutability":"mutable","name":"__gap","nameLocation":"1511:5:8","nodeType":"VariableDeclaration","scope":2138,"src":"1491:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2136,"length":{"hexValue":"3530","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1499:2:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1491:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2139,"src":"783:736:8","usedErrors":[]}],"src":"99:1421:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[2150]},"id":2151,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2140,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2141,"nodeType":"StructuredDocumentation","src":"125:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2150,"linearizedBaseContracts":[2150],"name":"IERC165Upgradeable","nameLocation":"415:18:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"440:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2149,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:9","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:9","nodeType":"VariableDeclaration","scope":2149,"src":"812:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2143,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:9"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2149,"src":"855:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2146,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:9"},"scope":2150,"src":"785:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2151,"src":"405:458:9","usedErrors":[]}],"src":"100:764:9"},"id":9},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2285],"Ownable":[2263]},"id":2264,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2152,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2264,"sourceUnit":2286,"src":"127:30:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2155,"name":"Context","nameLocations":["683:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2285,"src":"683:7:10"},"id":2156,"nodeType":"InheritanceSpecifier","src":"683:7:10"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"159:494:10","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2263,"linearizedBaseContracts":[2263,2285],"name":"Ownable","nameLocation":"672:7:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2158,"mutability":"mutable","name":"_owner","nameLocation":"713:6:10","nodeType":"VariableDeclaration","scope":2263,"src":"697:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2164,"name":"OwnershipTransferred","nameLocation":"732:20:10","nodeType":"EventDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:10","nodeType":"VariableDeclaration","scope":2164,"src":"753:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2162,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:10","nodeType":"VariableDeclaration","scope":2164,"src":"784:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:10"},"src":"726:84:10"},{"body":{"id":2173,"nodeType":"Block","src":"926:49:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2169,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"955:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2168,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"936:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2172,"nodeType":"ExpressionStatement","src":"936:32:10"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"816:91:10","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":2174,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[],"src":"923:2:10"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[],"src":"926:0:10"},"scope":2263,"src":"912:63:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2181,"nodeType":"Block","src":"1084:41:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2177,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"1094:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2179,"nodeType":"ExpressionStatement","src":"1094:13:10"},{"id":2180,"nodeType":"PlaceholderStatement","src":"1117:1:10"}]},"documentation":{"id":2175,"nodeType":"StructuredDocumentation","src":"981:77:10","text":" @dev Throws if called by any account other than the owner."},"id":2182,"name":"onlyOwner","nameLocation":"1072:9:10","nodeType":"ModifierDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[],"src":"1081:2:10"},"src":"1063:62:10","virtual":false,"visibility":"internal"},{"body":{"id":2190,"nodeType":"Block","src":"1256:30:10","statements":[{"expression":{"id":2188,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"1273:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2187,"id":2189,"nodeType":"Return","src":"1266:13:10"}]},"documentation":{"id":2183,"nodeType":"StructuredDocumentation","src":"1131:65:10","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:10","nodeType":"FunctionDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[],"src":"1215:2:10"},"returnParameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2191,"src":"1247:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:10"},"scope":2263,"src":"1201:85:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2204,"nodeType":"Block","src":"1404:85:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2196,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"1422:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2198,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1433:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":2195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2203,"nodeType":"ExpressionStatement","src":"1414:68:10"}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"1292:62:10","text":" @dev Throws if the sender is not the owner."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:10","nodeType":"FunctionDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[],"src":"1379:2:10"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[],"src":"1404:0:10"},"scope":2263,"src":"1359:130:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2218,"nodeType":"Block","src":"1885:47:10","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2212,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:10","typeDescriptions":{}}},"id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2211,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"1895:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2217,"nodeType":"ExpressionStatement","src":"1895:30:10"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"1495:331:10","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2219,"implemented":true,"kind":"function","modifiers":[{"id":2209,"kind":"modifierInvocation","modifierName":{"id":2208,"name":"onlyOwner","nameLocations":["1875:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"1875:9:10"},"nodeType":"ModifierInvocation","src":"1875:9:10"}],"name":"renounceOwnership","nameLocation":"1840:17:10","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[],"src":"1857:2:10"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[],"src":"1885:0:10"},"scope":2263,"src":"1831:101:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2241,"nodeType":"Block","src":"2151:128:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2228,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"2169:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2229,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:10","typeDescriptions":{}}},"id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":2227,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2236,"nodeType":"ExpressionStatement","src":"2161:73:10"},{"expression":{"arguments":[{"id":2238,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"2263:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2237,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"2244:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2240,"nodeType":"ExpressionStatement","src":"2244:28:10"}]},"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"1938:138:10","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2242,"implemented":true,"kind":"function","modifiers":[{"id":2225,"kind":"modifierInvocation","modifierName":{"id":2224,"name":"onlyOwner","nameLocations":["2141:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"2141:9:10"},"nodeType":"ModifierInvocation","src":"2141:9:10"}],"name":"transferOwnership","nameLocation":"2090:17:10","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:10","nodeType":"VariableDeclaration","scope":2242,"src":"2108:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2221,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:10"},"returnParameters":{"id":2226,"nodeType":"ParameterList","parameters":[],"src":"2151:0:10"},"scope":2263,"src":"2081:198:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2261,"nodeType":"Block","src":"2496:124:10","statements":[{"assignments":[2249],"declarations":[{"constant":false,"id":2249,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:10","nodeType":"VariableDeclaration","scope":2261,"src":"2506:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2251,"initialValue":{"id":2250,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"2525:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:10"},{"expression":{"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2252,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"2541:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2253,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"2550:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2255,"nodeType":"ExpressionStatement","src":"2541:17:10"},{"eventCall":{"arguments":[{"id":2257,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"2594:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2258,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"2604:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2256,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"2573:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2260,"nodeType":"EmitStatement","src":"2568:45:10"}]},"documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"2285:143:10","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2262,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:10","nodeType":"FunctionDefinition","parameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:10","nodeType":"VariableDeclaration","scope":2262,"src":"2461:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:10"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[],"src":"2496:0:10"},"scope":2263,"src":"2433:187:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2264,"src":"654:1968:10","usedErrors":[]}],"src":"102:2521:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2285]},"id":2286,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2265,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"111:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2285,"linearizedBaseContracts":[2285],"name":"Context","nameLocation":"626:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2274,"nodeType":"Block","src":"702:34:11","statements":[{"expression":{"expression":{"id":2271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:11","memberName":"sender","nodeType":"MemberAccess","src":"719:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2270,"id":2273,"nodeType":"Return","src":"712:17:11"}]},"id":2275,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:11","nodeType":"FunctionDefinition","parameters":{"id":2267,"nodeType":"ParameterList","parameters":[],"src":"659:2:11"},"returnParameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2275,"src":"693:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:11"},"scope":2285,"src":"640:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2283,"nodeType":"Block","src":"809:32:11","statements":[{"expression":{"expression":{"id":2280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:11","memberName":"data","nodeType":"MemberAccess","src":"826:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2279,"id":2282,"nodeType":"Return","src":"819:15:11"}]},"id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:11","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[],"src":"759:2:11"},"returnParameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2284,"src":"793:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2277,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:11"},"scope":2285,"src":"742:99:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2286,"src":"608:235:11","usedErrors":[]}],"src":"86:758:11"},"id":11},"contracts/HValue.sol":{"ast":{"absolutePath":"contracts/HValue.sol","exportedSymbols":{"AddressUpgradeable":[2052],"Context":[2285],"ContextUpgradeable":[2094],"ERC1155SupplyUpgradeable":[1753],"ERC1155Upgradeable":[1413],"ERC165Upgradeable":[2138],"HValue":[2765],"HValueStorage":[2826],"IERC1155MetadataURIUpgradeable":[1768],"IERC1155ReceiverUpgradeable":[1454],"IERC1155Upgradeable":[1576],"IERC165Upgradeable":[2150],"IHashPunk":[2784],"Initializable":[168],"Ownable":[2263]},"id":2766,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2287,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","id":2288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2766,"sourceUnit":1754,"src":"58:99:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2766,"sourceUnit":2264,"src":"158:52:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/HValueStorage.sol","file":"./HValueStorage.sol","id":2290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2766,"sourceUnit":2827,"src":"211:29:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2291,"name":"ERC1155SupplyUpgradeable","nameLocations":["261:24:12"],"nodeType":"IdentifierPath","referencedDeclaration":1753,"src":"261:24:12"},"id":2292,"nodeType":"InheritanceSpecifier","src":"261:24:12"},{"baseName":{"id":2293,"name":"HValueStorage","nameLocations":["287:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2826,"src":"287:13:12"},"id":2294,"nodeType":"InheritanceSpecifier","src":"287:13:12"}],"canonicalName":"HValue","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2765,"linearizedBaseContracts":[2765,2826,1753,1413,1768,1576,2138,2150,2094,168],"name":"HValue","nameLocation":"251:6:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2326,"nodeType":"Block","src":"381:185:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2301,"name":"__ERC1155Supply_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"391:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"391:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2303,"nodeType":"ExpressionStatement","src":"391:22:12"},{"expression":{"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2304,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"423:4:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4856616c7565","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"430:8:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_11da4959cfc75c05f1db3e09586851d830186ff71f08c7fcf8eedac77fa3fa25","typeString":"literal_string \"HValue\""},"value":"HValue"},"src":"423:15:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2307,"nodeType":"ExpressionStatement","src":"423:15:12"},{"expression":{"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2308,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"448:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4856","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"457:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b6e556eb571ba76a31e2b9f659c940c4a44116c03529d89788024b6a6bcbdbb3","typeString":"literal_string \"HV\""},"value":"HV"},"src":"448:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2311,"nodeType":"ExpressionStatement","src":"448:13:12"},{"expression":{"arguments":[{"id":2313,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"482:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2312,"name":"setBaseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"471:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"471:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2315,"nodeType":"ExpressionStatement","src":"471:16:12"},{"expression":{"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2316,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"497:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2317,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"505:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"509:6:12","memberName":"sender","nodeType":"MemberAccess","src":"505:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"497:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2320,"nodeType":"ExpressionStatement","src":"497:18:12"},{"expression":{"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2321,"name":"currentTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"525:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2322,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"544:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"550:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"544:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"525:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2325,"nodeType":"ExpressionStatement","src":"525:34:12"}]},"functionSelector":"f62d1888","id":2327,"implemented":true,"kind":"function","modifiers":[{"id":2299,"kind":"modifierInvocation","modifierName":{"id":2298,"name":"initializer","nameLocations":["369:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":70,"src":"369:11:12"},"nodeType":"ModifierInvocation","src":"369:11:12"}],"name":"initialize","nameLocation":"317:10:12","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"_uri","nameLocation":"351:4:12","nodeType":"VariableDeclaration","scope":2327,"src":"337:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2295,"name":"string","nodeType":"ElementaryTypeName","src":"337:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"327:34:12"},"returnParameters":{"id":2300,"nodeType":"ParameterList","parameters":[],"src":"381:0:12"},"scope":2765,"src":"308:258:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2338,"nodeType":"Block","src":"593:125:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2330,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"624:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"628:6:12","memberName":"sender","nodeType":"MemberAccess","src":"624:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"638:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"624:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a2063616c6c6572206973206e6f7420746865206f776e6572","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"657:33:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dea929535f31a6a3d4da771c56c977f613aa2b2d875a3332f245e364beb66cd","typeString":"literal_string \"HValue: caller is not the owner\""},"value":"HValue: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dea929535f31a6a3d4da771c56c977f613aa2b2d875a3332f245e364beb66cd","typeString":"literal_string \"HValue: caller is not the owner\""}],"id":2329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"603:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"603:97:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2336,"nodeType":"ExpressionStatement","src":"603:97:12"},{"id":2337,"nodeType":"PlaceholderStatement","src":"710:1:12"}]},"id":2339,"name":"onlyOwner","nameLocation":"581:9:12","nodeType":"ModifierDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[],"src":"590:2:12"},"src":"572:146:12","virtual":false,"visibility":"internal"},{"body":{"id":2350,"nodeType":"Block","src":"754:135:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2342,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"785:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"789:6:12","memberName":"sender","nodeType":"MemberAccess","src":"785:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2344,"name":"controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"799:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"785:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a2063616c6c6572206973206e6f742074686520636f6e74726f6c6c6572","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"823:38:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c68bca7fa283e487dffc110655d1b436451e784bf6064e5151d72f6ebe27cd0c","typeString":"literal_string \"HValue: caller is not the controller\""},"value":"HValue: caller is not the controller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c68bca7fa283e487dffc110655d1b436451e784bf6064e5151d72f6ebe27cd0c","typeString":"literal_string \"HValue: caller is not the controller\""}],"id":2341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"764:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"764:107:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2348,"nodeType":"ExpressionStatement","src":"764:107:12"},{"id":2349,"nodeType":"PlaceholderStatement","src":"881:1:12"}]},"id":2351,"name":"onlyController","nameLocation":"737:14:12","nodeType":"ModifierDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[],"src":"751:2:12"},"src":"728:161:12","virtual":false,"visibility":"internal"},{"body":{"id":2364,"nodeType":"Block","src":"918:141:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2354,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"949:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"955:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"949:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"currentTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"968:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"333635","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"987:8:12","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"968:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"949:46:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a206e6f74206e65772079656172","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1009:22:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a102db2d7672fdad004a63c326088de6266268bad23ec664881a9c9d6d98a5b0","typeString":"literal_string \"HValue: not new year\""},"value":"HValue: not new year"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a102db2d7672fdad004a63c326088de6266268bad23ec664881a9c9d6d98a5b0","typeString":"literal_string \"HValue: not new year\""}],"id":2353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"928:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"928:113:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2362,"nodeType":"ExpressionStatement","src":"928:113:12"},{"id":2363,"nodeType":"PlaceholderStatement","src":"1051:1:12"}]},"id":2365,"name":"onlyNewYear","nameLocation":"904:11:12","nodeType":"ModifierDefinition","parameters":{"id":2352,"nodeType":"ParameterList","parameters":[],"src":"915:2:12"},"src":"895:164:12","virtual":false,"visibility":"internal"},{"body":{"id":2416,"nodeType":"Block","src":"1272:175:12","statements":[{"body":{"id":2414,"nodeType":"Block","src":"1322:119:12","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2396,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"1347:2:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2398,"indexExpression":{"id":2397,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1350:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1347:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2399,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"1354:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2400,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"1364:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2401,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"1373:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2395,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"1336:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1336:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2403,"nodeType":"ExpressionStatement","src":"1336:42:12"},{"expression":{"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2404,"name":"negtiveValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"1392:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2408,"indexExpression":{"baseExpression":{"id":2405,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"1405:2:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2407,"indexExpression":{"id":2406,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1408:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1405:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1392:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2409,"name":"negtiveValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"1414:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2411,"indexExpression":{"id":2410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1428:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1414:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1392:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2413,"nodeType":"ExpressionStatement","src":"1392:38:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1302:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2389,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"1306:2:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1309:6:12","memberName":"length","nodeType":"MemberAccess","src":"1306:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1302:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2415,"initializationExpression":{"assignments":[2385],"declarations":[{"constant":false,"id":2385,"mutability":"mutable","name":"i","nameLocation":"1295:1:12","nodeType":"VariableDeclaration","scope":2415,"src":"1287:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2387,"initialValue":{"hexValue":"30","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1299:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1287:13:12"},"loopExpression":{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1317:3:12","subExpression":{"id":2392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1317:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2394,"nodeType":"ExpressionStatement","src":"1317:3:12"},"nodeType":"ForStatement","src":"1282:159:12"}]},"functionSelector":"e1012a89","id":2417,"implemented":true,"kind":"function","modifiers":[{"id":2382,"kind":"modifierInvocation","modifierName":{"id":2381,"name":"onlyOwner","nameLocations":["1262:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2339,"src":"1262:9:12"},"nodeType":"ModifierInvocation","src":"1262:9:12"}],"name":"mintBatch","nameLocation":"1074:9:12","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"to","nameLocation":"1110:2:12","nodeType":"VariableDeclaration","scope":2417,"src":"1093:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2366,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2367,"nodeType":"ArrayTypeName","src":"1093:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"tokenIds","nameLocation":"1139:8:12","nodeType":"VariableDeclaration","scope":2417,"src":"1122:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2370,"nodeType":"ArrayTypeName","src":"1122:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"amounts","nameLocation":"1174:7:12","nodeType":"VariableDeclaration","scope":2417,"src":"1157:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2373,"nodeType":"ArrayTypeName","src":"1157:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"negtiveValues","nameLocation":"1208:13:12","nodeType":"VariableDeclaration","scope":2417,"src":"1191:30:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2376,"nodeType":"ArrayTypeName","src":"1191:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"data","nameLocation":"1244:4:12","nodeType":"VariableDeclaration","scope":2417,"src":"1231:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2378,"name":"bytes","nodeType":"ElementaryTypeName","src":"1231:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1083:171:12"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[],"src":"1272:0:12"},"scope":2765,"src":"1065:382:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2452,"nodeType":"Block","src":"1590:116:12","statements":[{"body":{"id":2450,"nodeType":"Block","src":"1642:58:12","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2443,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"1667:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2445,"indexExpression":{"id":2444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"1672:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1667:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2446,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"1676:3:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2447,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"1681:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2442,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"1656:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2449,"nodeType":"ExpressionStatement","src":"1656:33:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"1620:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2436,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"1624:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1629:6:12","memberName":"length","nodeType":"MemberAccess","src":"1624:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1620:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2451,"initializationExpression":{"assignments":[2432],"declarations":[{"constant":false,"id":2432,"mutability":"mutable","name":"i","nameLocation":"1613:1:12","nodeType":"VariableDeclaration","scope":2451,"src":"1605:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2434,"initialValue":{"hexValue":"30","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1617:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1605:13:12"},"loopExpression":{"expression":{"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1637:3:12","subExpression":{"id":2439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"1637:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2441,"nodeType":"ExpressionStatement","src":"1637:3:12"},"nodeType":"ForStatement","src":"1600:100:12"}]},"functionSelector":"2a36c108","id":2453,"implemented":true,"kind":"function","modifiers":[{"id":2429,"kind":"modifierInvocation","modifierName":{"id":2428,"name":"onlyOwner","nameLocations":["1580:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2339,"src":"1580:9:12"},"nodeType":"ModifierInvocation","src":"1580:9:12"}],"name":"burnBatch","nameLocation":"1462:9:12","nodeType":"FunctionDefinition","parameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"from","nameLocation":"1498:4:12","nodeType":"VariableDeclaration","scope":2453,"src":"1481:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2418,"name":"address","nodeType":"ElementaryTypeName","src":"1481:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2419,"nodeType":"ArrayTypeName","src":"1481:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"ids","nameLocation":"1529:3:12","nodeType":"VariableDeclaration","scope":2453,"src":"1512:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1512:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2422,"nodeType":"ArrayTypeName","src":"1512:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"amounts","nameLocation":"1559:7:12","nodeType":"VariableDeclaration","scope":2453,"src":"1542:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2425,"nodeType":"ArrayTypeName","src":"1542:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1471:101:12"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[],"src":"1590:0:12"},"scope":2765,"src":"1453:253:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2473,"nodeType":"Block","src":"1852:49:12","statements":[{"expression":{"arguments":[{"id":2467,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"1868:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2468,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"1872:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2469,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"1881:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2470,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"1889:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2466,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"1862:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2472,"nodeType":"ExpressionStatement","src":"1862:32:12"}]},"functionSelector":"731133e9","id":2474,"implemented":true,"kind":"function","modifiers":[{"id":2464,"kind":"modifierInvocation","modifierName":{"id":2463,"name":"onlyController","nameLocations":["1837:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":2351,"src":"1837:14:12"},"nodeType":"ModifierInvocation","src":"1837:14:12"}],"name":"mint","nameLocation":"1721:4:12","nodeType":"FunctionDefinition","parameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"to","nameLocation":"1743:2:12","nodeType":"VariableDeclaration","scope":2474,"src":"1735:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"1735:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2457,"mutability":"mutable","name":"tokenId","nameLocation":"1763:7:12","nodeType":"VariableDeclaration","scope":2474,"src":"1755:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"1755:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2459,"mutability":"mutable","name":"amount","nameLocation":"1788:6:12","nodeType":"VariableDeclaration","scope":2474,"src":"1780:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1780:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2461,"mutability":"mutable","name":"data","nameLocation":"1817:4:12","nodeType":"VariableDeclaration","scope":2474,"src":"1804:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2460,"name":"bytes","nodeType":"ElementaryTypeName","src":"1804:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1725:102:12"},"returnParameters":{"id":2465,"nodeType":"ParameterList","parameters":[],"src":"1852:0:12"},"scope":2765,"src":"1712:189:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2491,"nodeType":"Block","src":"2022:45:12","statements":[{"expression":{"arguments":[{"id":2486,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"2038:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2487,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"2044:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2488,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"2053:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2485,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"2032:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2032:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2490,"nodeType":"ExpressionStatement","src":"2032:28:12"}]},"functionSelector":"f5298aca","id":2492,"implemented":true,"kind":"function","modifiers":[{"id":2483,"kind":"modifierInvocation","modifierName":{"id":2482,"name":"onlyController","nameLocations":["2007:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":2351,"src":"2007:14:12"},"nodeType":"ModifierInvocation","src":"2007:14:12"}],"name":"burn","nameLocation":"1916:4:12","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"from","nameLocation":"1938:4:12","nodeType":"VariableDeclaration","scope":2492,"src":"1930:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2475,"name":"address","nodeType":"ElementaryTypeName","src":"1930:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"tokenId","nameLocation":"1960:7:12","nodeType":"VariableDeclaration","scope":2492,"src":"1952:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1952:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"amount","nameLocation":"1985:6:12","nodeType":"VariableDeclaration","scope":2492,"src":"1977:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1977:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1920:77:12"},"returnParameters":{"id":2484,"nodeType":"ParameterList","parameters":[],"src":"2022:0:12"},"scope":2765,"src":"1907:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2532,"nodeType":"Block","src":"2137:271:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2498,"name":"exchangeTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"2155:13:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2501,"indexExpression":{"expression":{"id":2499,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2169:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2173:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2169:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2155:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2502,"name":"exchangeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"2184:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2155:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6578636565642065786368616e6765206c696d6974","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2199:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_11556822b0dbb84e42a57d7995abf090c129f85f99798a55739c0b2df8acb3f1","typeString":"literal_string \"exceed exchange limit\""},"value":"exceed exchange limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11556822b0dbb84e42a57d7995abf090c129f85f99798a55739c0b2df8acb3f1","typeString":"literal_string \"exceed exchange limit\""}],"id":2497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2147:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2506,"nodeType":"ExpressionStatement","src":"2147:76:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2509,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2251:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2255:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2251:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2511,"name":"voucher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"2263:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2508,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2241:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2513,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"2275:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2241:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a206e6f7420656e6f75676820766f7563686572","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2283:28:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_6495068f22747f4702ada372c895e8589607dd29d4c382d701a9201403183e08","typeString":"literal_string \"HValue: not enough voucher\""},"value":"HValue: not enough voucher"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6495068f22747f4702ada372c895e8589607dd29d4c382d701a9201403183e08","typeString":"literal_string \"HValue: not enough voucher\""}],"id":2507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2233:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:79:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2517,"nodeType":"ExpressionStatement","src":"2233:79:12"},{"expression":{"arguments":[{"expression":{"id":2519,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2328:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2332:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2328:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2521,"name":"voucher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"2340:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2522,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"2349:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2518,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"2322:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2322:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2524,"nodeType":"ExpressionStatement","src":"2322:34:12"},{"expression":{"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2525,"name":"exchangeTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"2366:13:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2528,"indexExpression":{"expression":{"id":2526,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2380:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2384:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2380:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2366:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2529,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"2395:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2366:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2531,"nodeType":"ExpressionStatement","src":"2366:35:12"}]},"functionSelector":"9642903f","id":2533,"implemented":true,"kind":"function","modifiers":[],"name":"exchangeHoliday","nameLocation":"2082:15:12","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"amount","nameLocation":"2115:6:12","nodeType":"VariableDeclaration","scope":2533,"src":"2107:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2097:30:12"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[],"src":"2137:0:12"},"scope":2765,"src":"2073:335:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2587,"nodeType":"Block","src":"2462:397:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2541,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"2510:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2539,"name":"hashPunk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"2493:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$2784","typeString":"contract IHashPunk"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2502:7:12","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2774,"src":"2493:16:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2543,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2522:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2526:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2522:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2493:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a206e6f742070756e6b206f776e6572","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2546:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_716d8e8655960bf2154053439ce31facdc46548c3a16249c94ec73f924c8ba9c","typeString":"literal_string \"HValue: not punk owner\""},"value":"HValue: not punk owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_716d8e8655960bf2154053439ce31facdc46548c3a16249c94ec73f924c8ba9c","typeString":"literal_string \"HValue: not punk owner\""}],"id":2538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2472:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2472:108:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2548,"nodeType":"ExpressionStatement","src":"2472:108:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"2611:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2551,"name":"luckyStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"2622:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2611:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"2636:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2554,"name":"luckyEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"2647:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2636:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2611:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a206e6f74206c75636b792070756e6b","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2669:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_aec0b404f50382a0e834a5f06508507c26b41f9bce791ef403d53b5948e659cd","typeString":"literal_string \"HValue: not lucky punk\""},"value":"HValue: not lucky punk"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aec0b404f50382a0e834a5f06508507c26b41f9bce791ef403d53b5948e659cd","typeString":"literal_string \"HValue: not lucky punk\""}],"id":2549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2590:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:113:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2559,"nodeType":"ExpressionStatement","src":"2590:113:12"},{"expression":{"arguments":[{"expression":{"id":2561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2719:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2723:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2719:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2563,"name":"Hpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"2731:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3730","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2739:2:12","typeDescriptions":{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},"value":"70"},{"hexValue":"","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2743:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2560,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"2713:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2567,"nodeType":"ExpressionStatement","src":"2713:33:12"},{"expression":{"arguments":[{"expression":{"id":2569,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2762:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2766:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2762:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2571,"name":"voucher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"2774:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2783:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2568,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"2756:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2756:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2574,"nodeType":"ExpressionStatement","src":"2756:29:12"},{"expression":{"arguments":[{"expression":{"id":2578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2817:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2821:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2817:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2582,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2837:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_HValue_$2765","typeString":"contract HValue"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HValue_$2765","typeString":"contract HValue"}],"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2829:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2580,"name":"address","nodeType":"ElementaryTypeName","src":"2829:7:12","typeDescriptions":{}}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2829:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"2844:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2575,"name":"hashPunk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"2795:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$2784","typeString":"contract IHashPunk"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:12:12","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2783,"src":"2795:21:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2795:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2586,"nodeType":"ExpressionStatement","src":"2795:57:12"}]},"functionSelector":"a5afb7e0","id":2588,"implemented":true,"kind":"function","modifiers":[],"name":"exchangeHValue","nameLocation":"2423:14:12","nodeType":"FunctionDefinition","parameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"tokenId","nameLocation":"2446:7:12","nodeType":"VariableDeclaration","scope":2588,"src":"2438:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2438:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2437:17:12"},"returnParameters":{"id":2537,"nodeType":"ParameterList","parameters":[],"src":"2462:0:12"},"scope":2765,"src":"2414:445:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2600,"nodeType":"Block","src":"2913:46:12","statements":[{"expression":{"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2593,"name":"exchangeTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"2923:13:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2596,"indexExpression":{"expression":{"id":2594,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2937:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2941:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2937:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2923:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2951:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2923:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2599,"nodeType":"ExpressionStatement","src":"2923:29:12"}]},"functionSelector":"f96b7bf9","id":2601,"implemented":true,"kind":"function","modifiers":[{"id":2591,"kind":"modifierInvocation","modifierName":{"id":2590,"name":"onlyNewYear","nameLocations":["2902:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2365,"src":"2902:11:12"},"nodeType":"ModifierInvocation","src":"2902:11:12"}],"name":"resetExchangeTimes","nameLocation":"2874:18:12","nodeType":"FunctionDefinition","parameters":{"id":2589,"nodeType":"ParameterList","parameters":[],"src":"2892:2:12"},"returnParameters":{"id":2592,"nodeType":"ParameterList","parameters":[],"src":"2913:0:12"},"scope":2765,"src":"2865:94:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2611,"nodeType":"Block","src":"3014:51:12","statements":[{"expression":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2606,"name":"currentTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"3024:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2607,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3043:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3049:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"3043:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3024:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2610,"nodeType":"ExpressionStatement","src":"3024:34:12"}]},"functionSelector":"6be55bb4","id":2612,"implemented":true,"kind":"function","modifiers":[{"id":2604,"kind":"modifierInvocation","modifierName":{"id":2603,"name":"onlyOwner","nameLocations":["3005:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2339,"src":"3005:9:12"},"nodeType":"ModifierInvocation","src":"3005:9:12"}],"name":"resetCurrentTimeStamp","nameLocation":"2974:21:12","nodeType":"FunctionDefinition","parameters":{"id":2602,"nodeType":"ParameterList","parameters":[],"src":"2995:2:12"},"returnParameters":{"id":2605,"nodeType":"ParameterList","parameters":[],"src":"3014:0:12"},"scope":2765,"src":"2965:100:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2624,"nodeType":"Block","src":"3130:37:12","statements":[{"expression":{"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2620,"name":"hashPunk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"3140:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$2784","typeString":"contract IHashPunk"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2621,"name":"_hashPunk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3151:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$2784","typeString":"contract IHashPunk"}},"src":"3140:20:12","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$2784","typeString":"contract IHashPunk"}},"id":2623,"nodeType":"ExpressionStatement","src":"3140:20:12"}]},"functionSelector":"887be052","id":2625,"implemented":true,"kind":"function","modifiers":[{"id":2618,"kind":"modifierInvocation","modifierName":{"id":2617,"name":"onlyOwner","nameLocations":["3120:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2339,"src":"3120:9:12"},"nodeType":"ModifierInvocation","src":"3120:9:12"}],"name":"setHashPunk","nameLocation":"3080:11:12","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"_hashPunk","nameLocation":"3102:9:12","nodeType":"VariableDeclaration","scope":2625,"src":"3092:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$2784","typeString":"contract IHashPunk"},"typeName":{"id":2614,"nodeType":"UserDefinedTypeName","pathNode":{"id":2613,"name":"IHashPunk","nameLocations":["3092:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"3092:9:12"},"referencedDeclaration":2784,"src":"3092:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$2784","typeString":"contract IHashPunk"}},"visibility":"internal"}],"src":"3091:21:12"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[],"src":"3130:0:12"},"scope":2765,"src":"3071:96:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2636,"nodeType":"Block","src":"3237:42:12","statements":[{"expression":{"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2632,"name":"baseMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"3247:15:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2633,"name":"baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"3265:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3247:25:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2635,"nodeType":"ExpressionStatement","src":"3247:25:12"}]},"functionSelector":"a0bcfc7f","id":2637,"implemented":true,"kind":"function","modifiers":[{"id":2630,"kind":"modifierInvocation","modifierName":{"id":2629,"name":"onlyOwner","nameLocations":["3227:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2339,"src":"3227:9:12"},"nodeType":"ModifierInvocation","src":"3227:9:12"}],"name":"setBaseUri","nameLocation":"3186:10:12","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"baseUri","nameLocation":"3211:7:12","nodeType":"VariableDeclaration","scope":2637,"src":"3197:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2626,"name":"string","nodeType":"ElementaryTypeName","src":"3197:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3196:23:12"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[],"src":"3237:0:12"},"scope":2765,"src":"3177:102:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2648,"nodeType":"Block","src":"3346:41:12","statements":[{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2644,"name":"controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"3356:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2645,"name":"_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"3369:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3356:24:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2647,"nodeType":"ExpressionStatement","src":"3356:24:12"}]},"functionSelector":"92eefe9b","id":2649,"implemented":true,"kind":"function","modifiers":[{"id":2642,"kind":"modifierInvocation","modifierName":{"id":2641,"name":"onlyOwner","nameLocations":["3336:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2339,"src":"3336:9:12"},"nodeType":"ModifierInvocation","src":"3336:9:12"}],"name":"setController","nameLocation":"3294:13:12","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"_controller","nameLocation":"3316:11:12","nodeType":"VariableDeclaration","scope":2649,"src":"3308:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2638,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3307:21:12"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[],"src":"3346:0:12"},"scope":2765,"src":"3285:102:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[273],"body":{"id":2668,"nodeType":"Block","src":"3472:85:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2661,"name":"baseMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"3513:15:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[{"id":2663,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"3540:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2662,"name":"_uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"3530:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3530:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2659,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3496:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3500:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"3496:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2657,"name":"string","nodeType":"ElementaryTypeName","src":"3489:6:12","typeDescriptions":{}}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3489:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2656,"id":2667,"nodeType":"Return","src":"3482:68:12"}]},"functionSelector":"0e89341c","id":2669,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"3406:3:12","nodeType":"FunctionDefinition","overrides":{"id":2653,"nodeType":"OverrideSpecifier","overrides":[],"src":"3439:8:12"},"parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"tokenId","nameLocation":"3418:7:12","nodeType":"VariableDeclaration","scope":2669,"src":"3410:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"3410:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3409:17:12"},"returnParameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"3457:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2654,"name":"string","nodeType":"ElementaryTypeName","src":"3457:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3456:15:12"},"scope":2765,"src":"3397:160:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2763,"nodeType":"Block","src":"3632:487:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2676,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3646:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3652:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3646:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2682,"nodeType":"IfStatement","src":"3642:48:12","trueBody":{"id":2681,"nodeType":"Block","src":"3655:35:12","statements":[{"expression":{"hexValue":"30","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3676:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2675,"id":2680,"nodeType":"Return","src":"3669:10:12"}]}},{"assignments":[2684],"declarations":[{"constant":false,"id":2684,"mutability":"mutable","name":"j","nameLocation":"3707:1:12","nodeType":"VariableDeclaration","scope":2763,"src":"3699:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"3699:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2686,"initialValue":{"id":2685,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3711:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3699:14:12"},{"assignments":[2688],"declarations":[{"constant":false,"id":2688,"mutability":"mutable","name":"len","nameLocation":"3731:3:12","nodeType":"VariableDeclaration","scope":2763,"src":"3723:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2687,"name":"uint256","nodeType":"ElementaryTypeName","src":"3723:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2689,"nodeType":"VariableDeclarationStatement","src":"3723:11:12"},{"body":{"id":2700,"nodeType":"Block","src":"3759:51:12","statements":[{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3773:5:12","subExpression":{"id":2693,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"3773:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2695,"nodeType":"ExpressionStatement","src":"3773:5:12"},{"expression":{"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2696,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"3792:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3797:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3792:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2699,"nodeType":"ExpressionStatement","src":"3792:7:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"3751:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3756:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3751:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2701,"nodeType":"WhileStatement","src":"3744:66:12"},{"assignments":[2703],"declarations":[{"constant":false,"id":2703,"mutability":"mutable","name":"bStr","nameLocation":"3832:4:12","nodeType":"VariableDeclaration","scope":2763,"src":"3819:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2702,"name":"bytes","nodeType":"ElementaryTypeName","src":"3819:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2708,"initialValue":{"arguments":[{"id":2706,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"3849:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3839:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2704,"name":"bytes","nodeType":"ElementaryTypeName","src":"3843:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3819:34:12"},{"assignments":[2710],"declarations":[{"constant":false,"id":2710,"mutability":"mutable","name":"k","nameLocation":"3871:1:12","nodeType":"VariableDeclaration","scope":2763,"src":"3863:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2712,"initialValue":{"id":2711,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"3875:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3863:15:12"},{"body":{"id":2756,"nodeType":"Block","src":"3904:180:12","statements":[{"expression":{"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2716,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3918:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3922:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3926:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3922:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3918:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2721,"nodeType":"ExpressionStatement","src":"3918:9:12"},{"assignments":[2723],"declarations":[{"constant":false,"id":2723,"mutability":"mutable","name":"temp","nameLocation":"3947:4:12","nodeType":"VariableDeclaration","scope":2756,"src":"3941:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2722,"name":"uint8","nodeType":"ElementaryTypeName","src":"3941:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2738,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3955:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2727,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3966:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2728,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3972:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3977:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3972:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3971:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3983:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3971:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3966:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3960:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2725,"name":"uint8","nodeType":"ElementaryTypeName","src":"3960:5:12","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3960:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3955:31:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3954:33:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"3941:46:12"},{"assignments":[2740],"declarations":[{"constant":false,"id":2740,"mutability":"mutable","name":"b1","nameLocation":"4008:2:12","nodeType":"VariableDeclaration","scope":2756,"src":"4001:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2739,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4001:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2745,"initialValue":{"arguments":[{"id":2743,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"4020:4:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4013:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2741,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4013:6:12","typeDescriptions":{}}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4013:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"4001:24:12"},{"expression":{"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2746,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"4039:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2748,"indexExpression":{"id":2747,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"4044:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4039:7:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2749,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"4049:2:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4039:12:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2751,"nodeType":"ExpressionStatement","src":"4039:12:12"},{"expression":{"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2752,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"4065:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4071:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4065:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2755,"nodeType":"ExpressionStatement","src":"4065:8:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2713,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3895:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3901:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3895:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2757,"nodeType":"WhileStatement","src":"3888:196:12"},{"expression":{"arguments":[{"id":2760,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"4107:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4100:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2758,"name":"string","nodeType":"ElementaryTypeName","src":"4100:6:12","typeDescriptions":{}}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4100:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2675,"id":2762,"nodeType":"Return","src":"4093:19:12"}]},"id":2764,"implemented":true,"kind":"function","modifiers":[],"name":"_uint2str","nameLocation":"3572:9:12","nodeType":"FunctionDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"_i","nameLocation":"3590:2:12","nodeType":"VariableDeclaration","scope":2764,"src":"3582:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"3582:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3581:12:12"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2764,"src":"3617:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2673,"name":"string","nodeType":"ElementaryTypeName","src":"3617:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3616:15:12"},"scope":2765,"src":"3563:556:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2766,"src":"242:3879:12","usedErrors":[]}],"src":"32:4090:12"},"id":12},"contracts/HValueStorage.sol":{"ast":{"absolutePath":"contracts/HValueStorage.sol","exportedSymbols":{"HValueStorage":[2826],"IHashPunk":[2784]},"id":2827,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2767,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IHashPunk","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2784,"linearizedBaseContracts":[2784],"name":"IHashPunk","nameLocation":"68:9:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6352211e","id":2774,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"93:7:13","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"tokenId","nameLocation":"109:7:13","nodeType":"VariableDeclaration","scope":2774,"src":"101:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"101:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100:17:13"},"returnParameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"owner","nameLocation":"149:5:13","nodeType":"VariableDeclaration","scope":2774,"src":"141:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2771,"name":"address","nodeType":"ElementaryTypeName","src":"141:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"140:15:13"},"scope":2784,"src":"84:72:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":2783,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"171:12:13","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"from","nameLocation":"201:4:13","nodeType":"VariableDeclaration","scope":2783,"src":"193:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2775,"name":"address","nodeType":"ElementaryTypeName","src":"193:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"to","nameLocation":"223:2:13","nodeType":"VariableDeclaration","scope":2783,"src":"215:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"215:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"tokenId","nameLocation":"243:7:13","nodeType":"VariableDeclaration","scope":2783,"src":"235:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"235:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"183:73:13"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"265:0:13"},"scope":2784,"src":"162:104:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2827,"src":"58:210:13","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"HValueStorage","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2826,"linearizedBaseContracts":[2826],"name":"HValueStorage","nameLocation":"279:13:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":2786,"mutability":"mutable","name":"name","nameLocation":"325:4:13","nodeType":"VariableDeclaration","scope":2826,"src":"299:30:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2785,"name":"string","nodeType":"ElementaryTypeName","src":"299:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":2788,"mutability":"mutable","name":"symbol","nameLocation":"361:6:13","nodeType":"VariableDeclaration","scope":2826,"src":"335:32:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2787,"name":"string","nodeType":"ElementaryTypeName","src":"335:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":2790,"mutability":"mutable","name":"owner","nameLocation":"399:5:13","nodeType":"VariableDeclaration","scope":2826,"src":"373:31:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2789,"name":"address","nodeType":"ElementaryTypeName","src":"373:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f77c4791","id":2792,"mutability":"mutable","name":"controller","nameLocation":"436:10:13","nodeType":"VariableDeclaration","scope":2826,"src":"410:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2791,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9ba138c8","id":2795,"mutability":"mutable","name":"hashPunk","nameLocation":"478:8:13","nodeType":"VariableDeclaration","scope":2826,"src":"452:34:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$2784","typeString":"contract IHashPunk"},"typeName":{"id":2794,"nodeType":"UserDefinedTypeName","pathNode":{"id":2793,"name":"IHashPunk","nameLocations":["452:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"452:9:13"},"referencedDeclaration":2784,"src":"452:9:13","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$2784","typeString":"contract IHashPunk"}},"visibility":"public"},{"constant":false,"functionSelector":"340a9a1c","id":2797,"mutability":"mutable","name":"currentTimeStamp","nameLocation":"518:16:13","nodeType":"VariableDeclaration","scope":2826,"src":"492:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2796,"name":"uint256","nodeType":"ElementaryTypeName","src":"492:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5b2bd79e","id":2799,"mutability":"mutable","name":"baseMetadataURI","nameLocation":"566:15:13","nodeType":"VariableDeclaration","scope":2826,"src":"540:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2798,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"444b7aaf","id":2802,"mutability":"mutable","name":"passId","nameLocation":"613:6:13","nodeType":"VariableDeclaration","scope":2826,"src":"587:46:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"587:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"632:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"83d18f7a","id":2805,"mutability":"mutable","name":"Hpoint","nameLocation":"665:6:13","nodeType":"VariableDeclaration","scope":2826,"src":"639:46:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"639:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"684:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":false,"functionSelector":"cdda418c","id":2808,"mutability":"mutable","name":"voucher","nameLocation":"717:7:13","nodeType":"VariableDeclaration","scope":2826,"src":"691:46:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"736:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":false,"functionSelector":"0e471525","id":2811,"mutability":"mutable","name":"luckyStart","nameLocation":"769:10:13","nodeType":"VariableDeclaration","scope":2826,"src":"743:46:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"743:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"788:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"f7e056ee","id":2814,"mutability":"mutable","name":"luckyEnd","nameLocation":"821:8:13","nodeType":"VariableDeclaration","scope":2826,"src":"795:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"840:3:13","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"public"},{"constant":false,"functionSelector":"d717b05e","id":2817,"mutability":"mutable","name":"exchangeLimit","nameLocation":"875:13:13","nodeType":"VariableDeclaration","scope":2826,"src":"849:46:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"894:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":false,"functionSelector":"8b0bb069","id":2821,"mutability":"mutable","name":"exchangeTimes","nameLocation":"937:13:13","nodeType":"VariableDeclaration","scope":2826,"src":"902:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2820,"keyType":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"902:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"921:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"4c25e11f","id":2825,"mutability":"mutable","name":"negtiveValue","nameLocation":"991:12:13","nodeType":"VariableDeclaration","scope":2826,"src":"956:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2824,"keyType":{"id":2822,"name":"address","nodeType":"ElementaryTypeName","src":"964:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"956:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"}],"scope":2827,"src":"270:736:13","usedErrors":[]}],"src":"32:974:13"},"id":13}},"contracts":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ERC1155Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._","kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1386 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE18 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF31 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x258 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x221 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x221 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x67 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x1005 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x327 JUMPI POP PUSH2 0x327 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D8 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x401 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x479 JUMPI PUSH2 0x44C DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x425 JUMPI PUSH2 0x425 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x43F JUMPI PUSH2 0x43F PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45E JUMPI PUSH2 0x45E PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x472 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x407 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x48C CALLER DUP4 DUP4 PUSH2 0x6B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4AC JUMPI POP PUSH2 0x4AC DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x795 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57E JUMPI PUSH2 0x57E PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x62C SWAP1 DUP5 SWAP1 PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x640 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x561 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x697 SWAP3 SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6AD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8C3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x7C7 DUP6 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D4 DUP6 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x858 SWAP1 DUP5 SWAP1 PUSH2 0x1161 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8B8 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA72 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x907 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x942 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x93F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9EE JUMPI PUSH2 0x94E PUSH2 0x121D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x987 JUMPI POP PUSH2 0x962 PUSH2 0x1239 JUMP JUMPDEST DUP1 PUSH2 0x96D JUMPI POP PUSH2 0x989 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA61 JUMPI PUSH2 0xA61 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAB6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x130B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAF1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAEE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAFD JUMPI PUSH2 0x94E PUSH2 0x121D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB65 DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA9 DUP2 PUSH2 0xB73 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBEF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBD3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBC9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC5E JUMPI PUSH2 0xC5E PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xC22 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xCA7 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB4 DUP3 DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCEF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCD8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD25 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8F DUP7 PUSH2 0xB2D JUMP JUMPDEST SWAP5 POP PUSH2 0xD9D PUSH1 0x20 DUP8 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC6 DUP10 DUP4 DUP11 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE8 DUP10 DUP4 DUP11 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE0B DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE64 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE71 DUP3 DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xEA7 DUP7 PUSH2 0xB2D JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED9 DUP6 DUP3 DUP7 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF13 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEF7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4D DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF89 DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP2 POP PUSH2 0xF97 PUSH1 0x20 DUP5 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC1 DUP7 PUSH2 0xB2D JUMP JUMPDEST SWAP5 POP PUSH2 0xFCF PUSH1 0x20 DUP8 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0B DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1019 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1039 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10CB JUMPI PUSH2 0x10CB PUSH2 0x10A3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x221 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1187 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEE3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1199 DUP2 DUP6 PUSH2 0xEE3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11CE SWAP1 DUP4 ADD DUP7 PUSH2 0xEE3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11E0 DUP2 DUP7 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11F4 DUP2 DUP6 PUSH2 0xBC9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBA9 DUP2 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1247 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1277 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x128F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12A9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12B8 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC38 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1345 SWAP1 DUP4 ADD DUP5 PUSH2 0xBC9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT GT 0xDB 0x1F SHR 0xD7 0xEB COINBASE PUSH17 0x349F69B8B4FB95F6734D52F1583609DD10 0xD4 DUP15 SWAP1 0xD5 PUSH22 0x264736F6C6343000811003300000000000000000000 ","sourceMap":"682:17320:1:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1251":{"entryPoint":null,"id":1251,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1407":{"entryPoint":2599,"id":1407,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1232":{"entryPoint":null,"id":1232,"parameterSlots":6,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1379":{"entryPoint":2243,"id":1379,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1314":{"entryPoint":2674,"id":1314,"parameterSlots":6,"returnSlots":0},"@_msgSender_2079":{"entryPoint":null,"id":2079,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_730":{"entryPoint":1237,"id":730,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_595":{"entryPoint":1941,"id":595,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1213":{"entryPoint":1717,"id":1213,"parameterSlots":3,"returnSlots":0},"@balanceOfBatch_365":{"entryPoint":855,"id":365,"parameterSlots":2,"returnSlots":1},"@balanceOf_301":{"entryPoint":396,"id":301,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_400":{"entryPoint":null,"id":400,"parameterSlots":2,"returnSlots":1},"@isContract_1786":{"entryPoint":null,"id":1786,"parameterSlots":1,"returnSlots":1},"@safeBatchTransferFrom_478":{"entryPoint":779,"id":478,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_438":{"entryPoint":1168,"id":438,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_382":{"entryPoint":1153,"id":382,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2132":{"entryPoint":null,"id":2132,"parameterSlots":1,"returnSlots":1},"@supportsInterface_261":{"entryPoint":551,"id":261,"parameterSlots":1,"returnSlots":1},"@uri_273":{"entryPoint":631,"id":273,"parameterSlots":1,"returnSlots":1},"abi_decode_address":{"entryPoint":2861,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":3209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":3322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3949,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":3438,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":4000,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3889,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2889,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3608,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":2956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4608,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":3811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4514,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4875,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4468,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3087,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4803,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4159,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4306,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4375,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":3173,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4449,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4101,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3128,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":4281,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4259,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4237,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3106,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":4637,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":4665,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_bytes4":{"entryPoint":2931,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15860:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:14","statements":[{"nodeType":"YulAssignment","src":"73:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:14"},"nodeType":"YulFunctionCall","src":"82:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:14"}]},{"body":{"nodeType":"YulBlock","src":"165:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:14"},"nodeType":"YulFunctionCall","src":"167:12:14"},"nodeType":"YulExpressionStatement","src":"167:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:14"},"nodeType":"YulFunctionCall","src":"146:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:14"},"nodeType":"YulFunctionCall","src":"142:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:14"},"nodeType":"YulFunctionCall","src":"131:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:14"},"nodeType":"YulFunctionCall","src":"121:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:14"},"nodeType":"YulFunctionCall","src":"114:50:14"},"nodeType":"YulIf","src":"111:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:14","type":""}],"src":"14:173:14"},{"body":{"nodeType":"YulBlock","src":"279:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:14"},"nodeType":"YulFunctionCall","src":"327:12:14"},"nodeType":"YulExpressionStatement","src":"327:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:14"},"nodeType":"YulFunctionCall","src":"296:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:14"},"nodeType":"YulFunctionCall","src":"292:32:14"},"nodeType":"YulIf","src":"289:52:14"},{"nodeType":"YulAssignment","src":"350:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:14"},"nodeType":"YulFunctionCall","src":"360:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:14"}]},{"nodeType":"YulAssignment","src":"398:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:14"},"nodeType":"YulFunctionCall","src":"421:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:14"},"nodeType":"YulFunctionCall","src":"408:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:14","type":""}],"src":"192:254:14"},{"body":{"nodeType":"YulBlock","src":"552:76:14","statements":[{"nodeType":"YulAssignment","src":"562:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"585:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:14"},"nodeType":"YulFunctionCall","src":"570:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"562:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"615:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:14"},"nodeType":"YulFunctionCall","src":"597:25:14"},"nodeType":"YulExpressionStatement","src":"597:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"521:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"532:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"543:4:14","type":""}],"src":"451:177:14"},{"body":{"nodeType":"YulBlock","src":"677:87:14","statements":[{"body":{"nodeType":"YulBlock","src":"742:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"751:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"754:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"744:6:14"},"nodeType":"YulFunctionCall","src":"744:12:14"},"nodeType":"YulExpressionStatement","src":"744:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"700:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"711:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"722:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"727:10:14","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"718:3:14"},"nodeType":"YulFunctionCall","src":"718:20:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"707:3:14"},"nodeType":"YulFunctionCall","src":"707:32:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"697:2:14"},"nodeType":"YulFunctionCall","src":"697:43:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"690:6:14"},"nodeType":"YulFunctionCall","src":"690:51:14"},"nodeType":"YulIf","src":"687:71:14"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"666:5:14","type":""}],"src":"633:131:14"},{"body":{"nodeType":"YulBlock","src":"838:176:14","statements":[{"body":{"nodeType":"YulBlock","src":"884:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"893:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"896:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"886:6:14"},"nodeType":"YulFunctionCall","src":"886:12:14"},"nodeType":"YulExpressionStatement","src":"886:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"859:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"855:3:14"},"nodeType":"YulFunctionCall","src":"855:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"880:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"851:3:14"},"nodeType":"YulFunctionCall","src":"851:32:14"},"nodeType":"YulIf","src":"848:52:14"},{"nodeType":"YulVariableDeclaration","src":"909:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"935:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"922:12:14"},"nodeType":"YulFunctionCall","src":"922:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"913:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:14"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"954:23:14"},"nodeType":"YulFunctionCall","src":"954:30:14"},"nodeType":"YulExpressionStatement","src":"954:30:14"},{"nodeType":"YulAssignment","src":"993:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1003:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"993:6:14"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"804:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"815:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"827:6:14","type":""}],"src":"769:245:14"},{"body":{"nodeType":"YulBlock","src":"1114:92:14","statements":[{"nodeType":"YulAssignment","src":"1124:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1136:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1147:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1132:3:14"},"nodeType":"YulFunctionCall","src":"1132:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1124:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1184:6:14"},"nodeType":"YulFunctionCall","src":"1184:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1177:6:14"},"nodeType":"YulFunctionCall","src":"1177:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1159:6:14"},"nodeType":"YulFunctionCall","src":"1159:41:14"},"nodeType":"YulExpressionStatement","src":"1159:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1083:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1094:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1105:4:14","type":""}],"src":"1019:187:14"},{"body":{"nodeType":"YulBlock","src":"1281:110:14","statements":[{"body":{"nodeType":"YulBlock","src":"1327:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1336:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1339:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1329:6:14"},"nodeType":"YulFunctionCall","src":"1329:12:14"},"nodeType":"YulExpressionStatement","src":"1329:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1311:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1298:3:14"},"nodeType":"YulFunctionCall","src":"1298:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1323:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1294:3:14"},"nodeType":"YulFunctionCall","src":"1294:32:14"},"nodeType":"YulIf","src":"1291:52:14"},{"nodeType":"YulAssignment","src":"1352:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1375:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1362:12:14"},"nodeType":"YulFunctionCall","src":"1362:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1352:6:14"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1247:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1258:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1270:6:14","type":""}],"src":"1211:180:14"},{"body":{"nodeType":"YulBlock","src":"1446:373:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1456:26:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1476:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1470:5:14"},"nodeType":"YulFunctionCall","src":"1470:12:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1460:6:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1498:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1503:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1491:6:14"},"nodeType":"YulFunctionCall","src":"1491:19:14"},"nodeType":"YulExpressionStatement","src":"1491:19:14"},{"nodeType":"YulVariableDeclaration","src":"1519:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1528:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1523:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1590:110:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1604:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1614:4:14","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1608:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1646:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1651:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1642:3:14"},"nodeType":"YulFunctionCall","src":"1642:11:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1655:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1638:3:14"},"nodeType":"YulFunctionCall","src":"1638:20:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1674:5:14"},{"name":"i","nodeType":"YulIdentifier","src":"1681:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1670:3:14"},"nodeType":"YulFunctionCall","src":"1670:13:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1685:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1666:3:14"},"nodeType":"YulFunctionCall","src":"1666:22:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1660:5:14"},"nodeType":"YulFunctionCall","src":"1660:29:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1631:6:14"},"nodeType":"YulFunctionCall","src":"1631:59:14"},"nodeType":"YulExpressionStatement","src":"1631:59:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1549:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1552:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1546:2:14"},"nodeType":"YulFunctionCall","src":"1546:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1560:21:14","statements":[{"nodeType":"YulAssignment","src":"1562:17:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1571:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"1574:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1567:3:14"},"nodeType":"YulFunctionCall","src":"1567:12:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1562:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1542:3:14","statements":[]},"src":"1538:162:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1724:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1729:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1720:3:14"},"nodeType":"YulFunctionCall","src":"1720:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"1738:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1716:3:14"},"nodeType":"YulFunctionCall","src":"1716:27:14"},{"kind":"number","nodeType":"YulLiteral","src":"1745:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1709:6:14"},"nodeType":"YulFunctionCall","src":"1709:38:14"},"nodeType":"YulExpressionStatement","src":"1709:38:14"},{"nodeType":"YulAssignment","src":"1756:57:14","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1771:3:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1784:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1792:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1780:3:14"},"nodeType":"YulFunctionCall","src":"1780:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1801:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1797:3:14"},"nodeType":"YulFunctionCall","src":"1797:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1776:3:14"},"nodeType":"YulFunctionCall","src":"1776:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1767:3:14"},"nodeType":"YulFunctionCall","src":"1767:39:14"},{"kind":"number","nodeType":"YulLiteral","src":"1808:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1763:3:14"},"nodeType":"YulFunctionCall","src":"1763:50:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1756:3:14"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1423:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1430:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1438:3:14","type":""}],"src":"1396:423:14"},{"body":{"nodeType":"YulBlock","src":"1945:99:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1962:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1973:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1955:6:14"},"nodeType":"YulFunctionCall","src":"1955:21:14"},"nodeType":"YulExpressionStatement","src":"1955:21:14"},{"nodeType":"YulAssignment","src":"1985:53:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2011:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2023:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2034:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2019:3:14"},"nodeType":"YulFunctionCall","src":"2019:18:14"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1993:17:14"},"nodeType":"YulFunctionCall","src":"1993:45:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1985:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1914:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1925:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1936:4:14","type":""}],"src":"1824:220:14"},{"body":{"nodeType":"YulBlock","src":"2081:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2098:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2105:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2110:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2101:3:14"},"nodeType":"YulFunctionCall","src":"2101:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2091:6:14"},"nodeType":"YulFunctionCall","src":"2091:31:14"},"nodeType":"YulExpressionStatement","src":"2091:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2138:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2141:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2131:6:14"},"nodeType":"YulFunctionCall","src":"2131:15:14"},"nodeType":"YulExpressionStatement","src":"2131:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2162:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2165:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2155:6:14"},"nodeType":"YulFunctionCall","src":"2155:15:14"},"nodeType":"YulExpressionStatement","src":"2155:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2049:127:14"},{"body":{"nodeType":"YulBlock","src":"2228:202:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2238:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2260:6:14"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2276:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2282:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2272:3:14"},"nodeType":"YulFunctionCall","src":"2272:13:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2287:3:14"},"nodeType":"YulFunctionCall","src":"2287:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2268:3:14"},"nodeType":"YulFunctionCall","src":"2268:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2256:3:14"},"nodeType":"YulFunctionCall","src":"2256:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2242:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2371:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2373:16:14"},"nodeType":"YulFunctionCall","src":"2373:18:14"},"nodeType":"YulExpressionStatement","src":"2373:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2314:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"2326:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2311:2:14"},"nodeType":"YulFunctionCall","src":"2311:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2350:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2362:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2347:2:14"},"nodeType":"YulFunctionCall","src":"2347:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2308:2:14"},"nodeType":"YulFunctionCall","src":"2308:62:14"},"nodeType":"YulIf","src":"2305:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2409:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2413:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2402:6:14"},"nodeType":"YulFunctionCall","src":"2402:22:14"},"nodeType":"YulExpressionStatement","src":"2402:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2210:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"2218:4:14","type":""}],"src":"2181:249:14"},{"body":{"nodeType":"YulBlock","src":"2504:114:14","statements":[{"body":{"nodeType":"YulBlock","src":"2548:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2550:16:14"},"nodeType":"YulFunctionCall","src":"2550:18:14"},"nodeType":"YulExpressionStatement","src":"2550:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2520:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2528:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2517:2:14"},"nodeType":"YulFunctionCall","src":"2517:30:14"},"nodeType":"YulIf","src":"2514:56:14"},{"nodeType":"YulAssignment","src":"2579:33:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2595:1:14","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2598:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2591:3:14"},"nodeType":"YulFunctionCall","src":"2591:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"2607:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2587:3:14"},"nodeType":"YulFunctionCall","src":"2587:25:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2579:4:14"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2484:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2495:4:14","type":""}],"src":"2435:183:14"},{"body":{"nodeType":"YulBlock","src":"2687:660:14","statements":[{"body":{"nodeType":"YulBlock","src":"2736:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2745:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2748:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2738:6:14"},"nodeType":"YulFunctionCall","src":"2738:12:14"},"nodeType":"YulExpressionStatement","src":"2738:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2715:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2723:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2711:3:14"},"nodeType":"YulFunctionCall","src":"2711:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"2730:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2707:3:14"},"nodeType":"YulFunctionCall","src":"2707:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2700:6:14"},"nodeType":"YulFunctionCall","src":"2700:35:14"},"nodeType":"YulIf","src":"2697:55:14"},{"nodeType":"YulVariableDeclaration","src":"2761:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2784:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2771:12:14"},"nodeType":"YulFunctionCall","src":"2771:20:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2765:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2800:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2810:4:14","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2804:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2823:53:14","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2873:2:14"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"2833:39:14"},"nodeType":"YulFunctionCall","src":"2833:43:14"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2827:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2885:23:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2905:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2899:5:14"},"nodeType":"YulFunctionCall","src":"2899:9:14"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2889:6:14","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2937:6:14"},{"name":"_3","nodeType":"YulIdentifier","src":"2945:2:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2917:19:14"},"nodeType":"YulFunctionCall","src":"2917:31:14"},"nodeType":"YulExpressionStatement","src":"2917:31:14"},{"nodeType":"YulVariableDeclaration","src":"2957:17:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2968:6:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2961:3:14","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2990:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2998:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2983:6:14"},"nodeType":"YulFunctionCall","src":"2983:18:14"},"nodeType":"YulExpressionStatement","src":"2983:18:14"},{"nodeType":"YulAssignment","src":"3010:22:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3021:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"3029:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3017:3:14"},"nodeType":"YulFunctionCall","src":"3017:15:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3010:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"3041:46:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3063:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3075:1:14","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3078:2:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3071:3:14"},"nodeType":"YulFunctionCall","src":"3071:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3059:3:14"},"nodeType":"YulFunctionCall","src":"3059:23:14"},{"name":"_2","nodeType":"YulIdentifier","src":"3084:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3055:3:14"},"nodeType":"YulFunctionCall","src":"3055:32:14"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3045:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3115:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3124:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3127:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3117:6:14"},"nodeType":"YulFunctionCall","src":"3117:12:14"},"nodeType":"YulExpressionStatement","src":"3117:12:14"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3102:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"3110:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3099:2:14"},"nodeType":"YulFunctionCall","src":"3099:15:14"},"nodeType":"YulIf","src":"3096:35:14"},{"nodeType":"YulVariableDeclaration","src":"3140:26:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"3163:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3151:3:14"},"nodeType":"YulFunctionCall","src":"3151:15:14"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3144:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3231:86:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3252:3:14"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3270:3:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3257:12:14"},"nodeType":"YulFunctionCall","src":"3257:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3245:6:14"},"nodeType":"YulFunctionCall","src":"3245:30:14"},"nodeType":"YulExpressionStatement","src":"3245:30:14"},{"nodeType":"YulAssignment","src":"3288:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3299:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"3304:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3295:3:14"},"nodeType":"YulFunctionCall","src":"3295:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3288:3:14"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3186:3:14"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3191:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3183:2:14"},"nodeType":"YulFunctionCall","src":"3183:15:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3199:23:14","statements":[{"nodeType":"YulAssignment","src":"3201:19:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3212:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"3217:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3208:3:14"},"nodeType":"YulFunctionCall","src":"3208:12:14"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3201:3:14"}]}]},"pre":{"nodeType":"YulBlock","src":"3179:3:14","statements":[]},"src":"3175:142:14"},{"nodeType":"YulAssignment","src":"3326:15:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3335:6:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3326:5:14"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2661:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2669:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2677:5:14","type":""}],"src":"2623:724:14"},{"body":{"nodeType":"YulBlock","src":"3404:503:14","statements":[{"body":{"nodeType":"YulBlock","src":"3453:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3462:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3465:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3455:6:14"},"nodeType":"YulFunctionCall","src":"3455:12:14"},"nodeType":"YulExpressionStatement","src":"3455:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3432:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3440:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3428:3:14"},"nodeType":"YulFunctionCall","src":"3428:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"3447:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3424:3:14"},"nodeType":"YulFunctionCall","src":"3424:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3417:6:14"},"nodeType":"YulFunctionCall","src":"3417:35:14"},"nodeType":"YulIf","src":"3414:55:14"},{"nodeType":"YulVariableDeclaration","src":"3478:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3501:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3488:12:14"},"nodeType":"YulFunctionCall","src":"3488:20:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3482:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3547:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3549:16:14"},"nodeType":"YulFunctionCall","src":"3549:18:14"},"nodeType":"YulExpressionStatement","src":"3549:18:14"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3523:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"3527:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3520:2:14"},"nodeType":"YulFunctionCall","src":"3520:26:14"},"nodeType":"YulIf","src":"3517:52:14"},{"nodeType":"YulVariableDeclaration","src":"3578:23:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3598:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3592:5:14"},"nodeType":"YulFunctionCall","src":"3592:9:14"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3582:6:14","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3630:6:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3650:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"3654:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3646:3:14"},"nodeType":"YulFunctionCall","src":"3646:13:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3665:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3661:3:14"},"nodeType":"YulFunctionCall","src":"3661:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3642:3:14"},"nodeType":"YulFunctionCall","src":"3642:27:14"},{"kind":"number","nodeType":"YulLiteral","src":"3671:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3638:3:14"},"nodeType":"YulFunctionCall","src":"3638:38:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3610:19:14"},"nodeType":"YulFunctionCall","src":"3610:67:14"},"nodeType":"YulExpressionStatement","src":"3610:67:14"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3693:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3701:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3686:6:14"},"nodeType":"YulFunctionCall","src":"3686:18:14"},"nodeType":"YulExpressionStatement","src":"3686:18:14"},{"body":{"nodeType":"YulBlock","src":"3752:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3761:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3764:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3754:6:14"},"nodeType":"YulFunctionCall","src":"3754:12:14"},"nodeType":"YulExpressionStatement","src":"3754:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3727:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3735:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3723:3:14"},"nodeType":"YulFunctionCall","src":"3723:15:14"},{"kind":"number","nodeType":"YulLiteral","src":"3740:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3719:3:14"},"nodeType":"YulFunctionCall","src":"3719:26:14"},{"name":"end","nodeType":"YulIdentifier","src":"3747:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3716:2:14"},"nodeType":"YulFunctionCall","src":"3716:35:14"},"nodeType":"YulIf","src":"3713:55:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3794:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3802:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:14"},"nodeType":"YulFunctionCall","src":"3790:17:14"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3813:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3821:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3809:3:14"},"nodeType":"YulFunctionCall","src":"3809:17:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3828:2:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3777:12:14"},"nodeType":"YulFunctionCall","src":"3777:54:14"},"nodeType":"YulExpressionStatement","src":"3777:54:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3855:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3863:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3851:3:14"},"nodeType":"YulFunctionCall","src":"3851:15:14"},{"kind":"number","nodeType":"YulLiteral","src":"3868:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3847:3:14"},"nodeType":"YulFunctionCall","src":"3847:26:14"},{"kind":"number","nodeType":"YulLiteral","src":"3875:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3840:6:14"},"nodeType":"YulFunctionCall","src":"3840:37:14"},"nodeType":"YulExpressionStatement","src":"3840:37:14"},{"nodeType":"YulAssignment","src":"3886:15:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3895:6:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3886:5:14"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3378:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"3386:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3394:5:14","type":""}],"src":"3352:555:14"},{"body":{"nodeType":"YulBlock","src":"4109:746:14","statements":[{"body":{"nodeType":"YulBlock","src":"4156:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4165:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4168:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4158:6:14"},"nodeType":"YulFunctionCall","src":"4158:12:14"},"nodeType":"YulExpressionStatement","src":"4158:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4130:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4139:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4126:3:14"},"nodeType":"YulFunctionCall","src":"4126:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4151:3:14","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4122:3:14"},"nodeType":"YulFunctionCall","src":"4122:33:14"},"nodeType":"YulIf","src":"4119:53:14"},{"nodeType":"YulAssignment","src":"4181:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4210:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4191:18:14"},"nodeType":"YulFunctionCall","src":"4191:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4181:6:14"}]},{"nodeType":"YulAssignment","src":"4229:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4262:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4273:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4258:3:14"},"nodeType":"YulFunctionCall","src":"4258:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4239:18:14"},"nodeType":"YulFunctionCall","src":"4239:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4229:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"4286:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4317:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4328:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4313:3:14"},"nodeType":"YulFunctionCall","src":"4313:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4300:12:14"},"nodeType":"YulFunctionCall","src":"4300:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4290:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4341:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4351:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4345:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4396:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4405:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4408:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4398:6:14"},"nodeType":"YulFunctionCall","src":"4398:12:14"},"nodeType":"YulExpressionStatement","src":"4398:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4384:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4392:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4381:2:14"},"nodeType":"YulFunctionCall","src":"4381:14:14"},"nodeType":"YulIf","src":"4378:34:14"},{"nodeType":"YulAssignment","src":"4421:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4464:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4475:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4460:3:14"},"nodeType":"YulFunctionCall","src":"4460:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4484:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4431:28:14"},"nodeType":"YulFunctionCall","src":"4431:61:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4421:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"4501:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4534:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4545:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4530:3:14"},"nodeType":"YulFunctionCall","src":"4530:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4517:12:14"},"nodeType":"YulFunctionCall","src":"4517:32:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4505:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4578:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4587:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4590:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4580:6:14"},"nodeType":"YulFunctionCall","src":"4580:12:14"},"nodeType":"YulExpressionStatement","src":"4580:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4564:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4574:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4561:2:14"},"nodeType":"YulFunctionCall","src":"4561:16:14"},"nodeType":"YulIf","src":"4558:36:14"},{"nodeType":"YulAssignment","src":"4603:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4646:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4657:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:14"},"nodeType":"YulFunctionCall","src":"4642:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4668:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4613:28:14"},"nodeType":"YulFunctionCall","src":"4613:63:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4603:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"4685:49:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4718:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4729:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4714:3:14"},"nodeType":"YulFunctionCall","src":"4714:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4701:12:14"},"nodeType":"YulFunctionCall","src":"4701:33:14"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4689:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4763:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4772:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4775:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4765:6:14"},"nodeType":"YulFunctionCall","src":"4765:12:14"},"nodeType":"YulExpressionStatement","src":"4765:12:14"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4749:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4759:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4746:2:14"},"nodeType":"YulFunctionCall","src":"4746:16:14"},"nodeType":"YulIf","src":"4743:36:14"},{"nodeType":"YulAssignment","src":"4788:61:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4819:9:14"},{"name":"offset_2","nodeType":"YulIdentifier","src":"4830:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4815:3:14"},"nodeType":"YulFunctionCall","src":"4815:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4841:7:14"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4798:16:14"},"nodeType":"YulFunctionCall","src":"4798:51:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4788:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4043:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4054:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4066:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4074:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4082:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4090:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4098:6:14","type":""}],"src":"3912:943:14"},{"body":{"nodeType":"YulBlock","src":"4997:1071:14","statements":[{"body":{"nodeType":"YulBlock","src":"5043:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5052:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5055:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5045:6:14"},"nodeType":"YulFunctionCall","src":"5045:12:14"},"nodeType":"YulExpressionStatement","src":"5045:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5018:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5027:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5014:3:14"},"nodeType":"YulFunctionCall","src":"5014:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5039:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5010:3:14"},"nodeType":"YulFunctionCall","src":"5010:32:14"},"nodeType":"YulIf","src":"5007:52:14"},{"nodeType":"YulVariableDeclaration","src":"5068:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5095:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5082:12:14"},"nodeType":"YulFunctionCall","src":"5082:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5072:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5114:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5124:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5118:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5169:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5178:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5181:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5171:6:14"},"nodeType":"YulFunctionCall","src":"5171:12:14"},"nodeType":"YulExpressionStatement","src":"5171:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5157:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"5165:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5154:2:14"},"nodeType":"YulFunctionCall","src":"5154:14:14"},"nodeType":"YulIf","src":"5151:34:14"},{"nodeType":"YulVariableDeclaration","src":"5194:32:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:14"},"nodeType":"YulFunctionCall","src":"5204:22:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5198:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5274:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5283:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5286:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5276:6:14"},"nodeType":"YulFunctionCall","src":"5276:12:14"},"nodeType":"YulExpressionStatement","src":"5276:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5253:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"5257:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5249:3:14"},"nodeType":"YulFunctionCall","src":"5249:13:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5264:7:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5245:3:14"},"nodeType":"YulFunctionCall","src":"5245:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5238:6:14"},"nodeType":"YulFunctionCall","src":"5238:35:14"},"nodeType":"YulIf","src":"5235:55:14"},{"nodeType":"YulVariableDeclaration","src":"5299:26:14","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5322:2:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5309:12:14"},"nodeType":"YulFunctionCall","src":"5309:16:14"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5303:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5334:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5344:4:14","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5338:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5357:53:14","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5407:2:14"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"5367:39:14"},"nodeType":"YulFunctionCall","src":"5367:43:14"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"5361:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5419:23:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5439:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5433:5:14"},"nodeType":"YulFunctionCall","src":"5433:9:14"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5423:6:14","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5471:6:14"},{"name":"_5","nodeType":"YulIdentifier","src":"5479:2:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5451:19:14"},"nodeType":"YulFunctionCall","src":"5451:31:14"},"nodeType":"YulExpressionStatement","src":"5451:31:14"},{"nodeType":"YulVariableDeclaration","src":"5491:17:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5502:6:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5495:3:14","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5524:6:14"},{"name":"_3","nodeType":"YulIdentifier","src":"5532:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5517:6:14"},"nodeType":"YulFunctionCall","src":"5517:18:14"},"nodeType":"YulExpressionStatement","src":"5517:18:14"},{"nodeType":"YulAssignment","src":"5544:22:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5555:6:14"},{"name":"_4","nodeType":"YulIdentifier","src":"5563:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5551:3:14"},"nodeType":"YulFunctionCall","src":"5551:15:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5544:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"5575:42:14","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5597:2:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5605:1:14","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"5608:2:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5601:3:14"},"nodeType":"YulFunctionCall","src":"5601:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5593:3:14"},"nodeType":"YulFunctionCall","src":"5593:19:14"},{"name":"_4","nodeType":"YulIdentifier","src":"5614:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5589:3:14"},"nodeType":"YulFunctionCall","src":"5589:28:14"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5579:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5649:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5658:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5661:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5651:6:14"},"nodeType":"YulFunctionCall","src":"5651:12:14"},"nodeType":"YulExpressionStatement","src":"5651:12:14"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5632:6:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5640:7:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5629:2:14"},"nodeType":"YulFunctionCall","src":"5629:19:14"},"nodeType":"YulIf","src":"5626:39:14"},{"nodeType":"YulVariableDeclaration","src":"5674:22:14","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5689:2:14"},{"name":"_4","nodeType":"YulIdentifier","src":"5693:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5685:3:14"},"nodeType":"YulFunctionCall","src":"5685:11:14"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5678:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5761:92:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5782:3:14"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5806:3:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5787:18:14"},"nodeType":"YulFunctionCall","src":"5787:23:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5775:6:14"},"nodeType":"YulFunctionCall","src":"5775:36:14"},"nodeType":"YulExpressionStatement","src":"5775:36:14"},{"nodeType":"YulAssignment","src":"5824:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5835:3:14"},{"name":"_4","nodeType":"YulIdentifier","src":"5840:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5831:3:14"},"nodeType":"YulFunctionCall","src":"5831:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5824:3:14"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5716:3:14"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5721:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5713:2:14"},"nodeType":"YulFunctionCall","src":"5713:15:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5729:23:14","statements":[{"nodeType":"YulAssignment","src":"5731:19:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5742:3:14"},{"name":"_4","nodeType":"YulIdentifier","src":"5747:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5738:3:14"},"nodeType":"YulFunctionCall","src":"5738:12:14"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5731:3:14"}]}]},"pre":{"nodeType":"YulBlock","src":"5709:3:14","statements":[]},"src":"5705:148:14"},{"nodeType":"YulAssignment","src":"5862:16:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5872:6:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5862:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"5887:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5920:9:14"},{"name":"_4","nodeType":"YulIdentifier","src":"5931:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5916:3:14"},"nodeType":"YulFunctionCall","src":"5916:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5903:12:14"},"nodeType":"YulFunctionCall","src":"5903:32:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5891:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5964:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5973:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5976:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5966:6:14"},"nodeType":"YulFunctionCall","src":"5966:12:14"},"nodeType":"YulExpressionStatement","src":"5966:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5950:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"5960:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5947:2:14"},"nodeType":"YulFunctionCall","src":"5947:16:14"},"nodeType":"YulIf","src":"5944:36:14"},{"nodeType":"YulAssignment","src":"5989:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6032:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6043:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6028:3:14"},"nodeType":"YulFunctionCall","src":"6028:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6054:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5999:28:14"},"nodeType":"YulFunctionCall","src":"5999:63:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5989:6:14"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4955:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4966:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4978:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4986:6:14","type":""}],"src":"4860:1208:14"},{"body":{"nodeType":"YulBlock","src":"6134:374:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6144:26:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6164:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6158:5:14"},"nodeType":"YulFunctionCall","src":"6158:12:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6148:6:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6186:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6191:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6179:6:14"},"nodeType":"YulFunctionCall","src":"6179:19:14"},"nodeType":"YulExpressionStatement","src":"6179:19:14"},{"nodeType":"YulVariableDeclaration","src":"6207:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6217:4:14","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6211:2:14","type":""}]},{"nodeType":"YulAssignment","src":"6230:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6241:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6246:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6237:3:14"},"nodeType":"YulFunctionCall","src":"6237:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6230:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"6258:28:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6276:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6283:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6272:3:14"},"nodeType":"YulFunctionCall","src":"6272:14:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6262:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6295:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6304:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6299:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6363:120:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6384:3:14"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6395:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6389:5:14"},"nodeType":"YulFunctionCall","src":"6389:13:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6377:6:14"},"nodeType":"YulFunctionCall","src":"6377:26:14"},"nodeType":"YulExpressionStatement","src":"6377:26:14"},{"nodeType":"YulAssignment","src":"6416:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6427:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6432:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6423:3:14"},"nodeType":"YulFunctionCall","src":"6423:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6416:3:14"}]},{"nodeType":"YulAssignment","src":"6448:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6462:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6470:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6458:3:14"},"nodeType":"YulFunctionCall","src":"6458:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6448:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6325:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"6328:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6322:2:14"},"nodeType":"YulFunctionCall","src":"6322:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6336:18:14","statements":[{"nodeType":"YulAssignment","src":"6338:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6347:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"6350:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6343:3:14"},"nodeType":"YulFunctionCall","src":"6343:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6338:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"6318:3:14","statements":[]},"src":"6314:169:14"},{"nodeType":"YulAssignment","src":"6492:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"6499:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6492:3:14"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6111:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6118:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6126:3:14","type":""}],"src":"6073:435:14"},{"body":{"nodeType":"YulBlock","src":"6664:110:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6681:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6692:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6674:6:14"},"nodeType":"YulFunctionCall","src":"6674:21:14"},"nodeType":"YulExpressionStatement","src":"6674:21:14"},{"nodeType":"YulAssignment","src":"6704:64:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6741:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6753:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6764:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6749:3:14"},"nodeType":"YulFunctionCall","src":"6749:18:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6712:28:14"},"nodeType":"YulFunctionCall","src":"6712:56:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6704:4:14"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6633:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6644:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6655:4:14","type":""}],"src":"6513:261:14"},{"body":{"nodeType":"YulBlock","src":"6863:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"6909:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6918:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6921:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6911:6:14"},"nodeType":"YulFunctionCall","src":"6911:12:14"},"nodeType":"YulExpressionStatement","src":"6911:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6884:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6893:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6880:3:14"},"nodeType":"YulFunctionCall","src":"6880:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6905:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6876:3:14"},"nodeType":"YulFunctionCall","src":"6876:32:14"},"nodeType":"YulIf","src":"6873:52:14"},{"nodeType":"YulAssignment","src":"6934:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6963:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6944:18:14"},"nodeType":"YulFunctionCall","src":"6944:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6934:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"6982:45:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7012:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7023:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7008:3:14"},"nodeType":"YulFunctionCall","src":"7008:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6995:12:14"},"nodeType":"YulFunctionCall","src":"6995:32:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6986:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7080:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7089:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7092:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7082:6:14"},"nodeType":"YulFunctionCall","src":"7082:12:14"},"nodeType":"YulExpressionStatement","src":"7082:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7049:5:14"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7070:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7063:6:14"},"nodeType":"YulFunctionCall","src":"7063:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7056:6:14"},"nodeType":"YulFunctionCall","src":"7056:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7046:2:14"},"nodeType":"YulFunctionCall","src":"7046:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7039:6:14"},"nodeType":"YulFunctionCall","src":"7039:40:14"},"nodeType":"YulIf","src":"7036:60:14"},{"nodeType":"YulAssignment","src":"7105:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"7115:5:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7105:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6821:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6832:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6844:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6852:6:14","type":""}],"src":"6779:347:14"},{"body":{"nodeType":"YulBlock","src":"7218:173:14","statements":[{"body":{"nodeType":"YulBlock","src":"7264:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7273:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7276:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7266:6:14"},"nodeType":"YulFunctionCall","src":"7266:12:14"},"nodeType":"YulExpressionStatement","src":"7266:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7239:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7248:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7235:3:14"},"nodeType":"YulFunctionCall","src":"7235:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"7260:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7231:3:14"},"nodeType":"YulFunctionCall","src":"7231:32:14"},"nodeType":"YulIf","src":"7228:52:14"},{"nodeType":"YulAssignment","src":"7289:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7318:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7299:18:14"},"nodeType":"YulFunctionCall","src":"7299:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7289:6:14"}]},{"nodeType":"YulAssignment","src":"7337:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7370:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7381:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7366:3:14"},"nodeType":"YulFunctionCall","src":"7366:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7347:18:14"},"nodeType":"YulFunctionCall","src":"7347:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7337:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7176:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7187:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7199:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7207:6:14","type":""}],"src":"7131:260:14"},{"body":{"nodeType":"YulBlock","src":"7543:459:14","statements":[{"body":{"nodeType":"YulBlock","src":"7590:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7599:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7602:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7592:6:14"},"nodeType":"YulFunctionCall","src":"7592:12:14"},"nodeType":"YulExpressionStatement","src":"7592:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7564:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7573:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7560:3:14"},"nodeType":"YulFunctionCall","src":"7560:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"7585:3:14","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7556:3:14"},"nodeType":"YulFunctionCall","src":"7556:33:14"},"nodeType":"YulIf","src":"7553:53:14"},{"nodeType":"YulAssignment","src":"7615:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7644:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7625:18:14"},"nodeType":"YulFunctionCall","src":"7625:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7615:6:14"}]},{"nodeType":"YulAssignment","src":"7663:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7696:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7707:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7692:3:14"},"nodeType":"YulFunctionCall","src":"7692:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7673:18:14"},"nodeType":"YulFunctionCall","src":"7673:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7663:6:14"}]},{"nodeType":"YulAssignment","src":"7720:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7747:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7758:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:14"},"nodeType":"YulFunctionCall","src":"7743:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7730:12:14"},"nodeType":"YulFunctionCall","src":"7730:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7720:6:14"}]},{"nodeType":"YulAssignment","src":"7771:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7798:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7809:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7794:3:14"},"nodeType":"YulFunctionCall","src":"7794:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7781:12:14"},"nodeType":"YulFunctionCall","src":"7781:32:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7771:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"7822:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7853:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7864:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7849:3:14"},"nodeType":"YulFunctionCall","src":"7849:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7836:12:14"},"nodeType":"YulFunctionCall","src":"7836:33:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7826:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7921:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7924:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7914:6:14"},"nodeType":"YulFunctionCall","src":"7914:12:14"},"nodeType":"YulExpressionStatement","src":"7914:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7884:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7892:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7881:2:14"},"nodeType":"YulFunctionCall","src":"7881:30:14"},"nodeType":"YulIf","src":"7878:50:14"},{"nodeType":"YulAssignment","src":"7937:59:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7968:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7979:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7964:3:14"},"nodeType":"YulFunctionCall","src":"7964:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7988:7:14"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7947:16:14"},"nodeType":"YulFunctionCall","src":"7947:49:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7937:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7477:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7488:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7500:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7508:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7516:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7524:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7532:6:14","type":""}],"src":"7396:606:14"},{"body":{"nodeType":"YulBlock","src":"8181:232:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8198:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8209:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8191:6:14"},"nodeType":"YulFunctionCall","src":"8191:21:14"},"nodeType":"YulExpressionStatement","src":"8191:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8232:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8243:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8228:3:14"},"nodeType":"YulFunctionCall","src":"8228:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"8248:2:14","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8221:6:14"},"nodeType":"YulFunctionCall","src":"8221:30:14"},"nodeType":"YulExpressionStatement","src":"8221:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8271:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8282:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8267:3:14"},"nodeType":"YulFunctionCall","src":"8267:18:14"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"8287:34:14","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8260:6:14"},"nodeType":"YulFunctionCall","src":"8260:62:14"},"nodeType":"YulExpressionStatement","src":"8260:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8342:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8353:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8338:3:14"},"nodeType":"YulFunctionCall","src":"8338:18:14"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8358:12:14","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8331:6:14"},"nodeType":"YulFunctionCall","src":"8331:40:14"},"nodeType":"YulExpressionStatement","src":"8331:40:14"},{"nodeType":"YulAssignment","src":"8380:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8392:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8403:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8388:3:14"},"nodeType":"YulFunctionCall","src":"8388:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8380:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8158:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8172:4:14","type":""}],"src":"8007:406:14"},{"body":{"nodeType":"YulBlock","src":"8473:325:14","statements":[{"nodeType":"YulAssignment","src":"8483:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8497:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8500:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8493:3:14"},"nodeType":"YulFunctionCall","src":"8493:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8483:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"8514:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8544:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"8550:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8540:3:14"},"nodeType":"YulFunctionCall","src":"8540:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8518:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8591:31:14","statements":[{"nodeType":"YulAssignment","src":"8593:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8607:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8615:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8603:3:14"},"nodeType":"YulFunctionCall","src":"8603:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8593:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8571:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8564:6:14"},"nodeType":"YulFunctionCall","src":"8564:26:14"},"nodeType":"YulIf","src":"8561:61:14"},{"body":{"nodeType":"YulBlock","src":"8681:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8702:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8709:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8714:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8705:3:14"},"nodeType":"YulFunctionCall","src":"8705:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8695:6:14"},"nodeType":"YulFunctionCall","src":"8695:31:14"},"nodeType":"YulExpressionStatement","src":"8695:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8746:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8749:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8739:6:14"},"nodeType":"YulFunctionCall","src":"8739:15:14"},"nodeType":"YulExpressionStatement","src":"8739:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8774:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8777:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8767:6:14"},"nodeType":"YulFunctionCall","src":"8767:15:14"},"nodeType":"YulExpressionStatement","src":"8767:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8637:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8660:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8668:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8657:2:14"},"nodeType":"YulFunctionCall","src":"8657:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8634:2:14"},"nodeType":"YulFunctionCall","src":"8634:38:14"},"nodeType":"YulIf","src":"8631:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8453:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8462:6:14","type":""}],"src":"8418:380:14"},{"body":{"nodeType":"YulBlock","src":"8977:236:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8994:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9005:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8987:6:14"},"nodeType":"YulFunctionCall","src":"8987:21:14"},"nodeType":"YulExpressionStatement","src":"8987:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9028:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9039:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9024:3:14"},"nodeType":"YulFunctionCall","src":"9024:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"9044:2:14","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9017:6:14"},"nodeType":"YulFunctionCall","src":"9017:30:14"},"nodeType":"YulExpressionStatement","src":"9017:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9067:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9078:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9063:3:14"},"nodeType":"YulFunctionCall","src":"9063:18:14"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"9083:34:14","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9056:6:14"},"nodeType":"YulFunctionCall","src":"9056:62:14"},"nodeType":"YulExpressionStatement","src":"9056:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9138:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9149:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9134:3:14"},"nodeType":"YulFunctionCall","src":"9134:18:14"},{"hexValue":"6572206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"9154:16:14","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9127:6:14"},"nodeType":"YulFunctionCall","src":"9127:44:14"},"nodeType":"YulExpressionStatement","src":"9127:44:14"},{"nodeType":"YulAssignment","src":"9180:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9192:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9203:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9188:3:14"},"nodeType":"YulFunctionCall","src":"9188:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9180:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8954:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8968:4:14","type":""}],"src":"8803:410:14"},{"body":{"nodeType":"YulBlock","src":"9392:231:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9409:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9420:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9402:6:14"},"nodeType":"YulFunctionCall","src":"9402:21:14"},"nodeType":"YulExpressionStatement","src":"9402:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9454:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:14"},"nodeType":"YulFunctionCall","src":"9439:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"9459:2:14","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:14"},"nodeType":"YulFunctionCall","src":"9432:30:14"},"nodeType":"YulExpressionStatement","src":"9432:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9482:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9493:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9478:3:14"},"nodeType":"YulFunctionCall","src":"9478:18:14"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"9498:34:14","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9471:6:14"},"nodeType":"YulFunctionCall","src":"9471:62:14"},"nodeType":"YulExpressionStatement","src":"9471:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9553:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9564:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9549:3:14"},"nodeType":"YulFunctionCall","src":"9549:18:14"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"9569:11:14","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9542:6:14"},"nodeType":"YulFunctionCall","src":"9542:39:14"},"nodeType":"YulExpressionStatement","src":"9542:39:14"},{"nodeType":"YulAssignment","src":"9590:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9602:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9613:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9598:3:14"},"nodeType":"YulFunctionCall","src":"9598:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9590:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9369:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9383:4:14","type":""}],"src":"9218:405:14"},{"body":{"nodeType":"YulBlock","src":"9660:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9677:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9684:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9689:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9680:3:14"},"nodeType":"YulFunctionCall","src":"9680:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9670:6:14"},"nodeType":"YulFunctionCall","src":"9670:31:14"},"nodeType":"YulExpressionStatement","src":"9670:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9717:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9720:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9710:6:14"},"nodeType":"YulFunctionCall","src":"9710:15:14"},"nodeType":"YulExpressionStatement","src":"9710:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9741:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9744:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9734:6:14"},"nodeType":"YulFunctionCall","src":"9734:15:14"},"nodeType":"YulExpressionStatement","src":"9734:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9628:127:14"},{"body":{"nodeType":"YulBlock","src":"9792:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9809:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9816:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9821:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9812:3:14"},"nodeType":"YulFunctionCall","src":"9812:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9802:6:14"},"nodeType":"YulFunctionCall","src":"9802:31:14"},"nodeType":"YulExpressionStatement","src":"9802:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9849:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9852:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9842:6:14"},"nodeType":"YulFunctionCall","src":"9842:15:14"},"nodeType":"YulExpressionStatement","src":"9842:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9873:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9876:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9866:6:14"},"nodeType":"YulFunctionCall","src":"9866:15:14"},"nodeType":"YulExpressionStatement","src":"9866:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9760:127:14"},{"body":{"nodeType":"YulBlock","src":"9939:88:14","statements":[{"body":{"nodeType":"YulBlock","src":"9970:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9972:16:14"},"nodeType":"YulFunctionCall","src":"9972:18:14"},"nodeType":"YulExpressionStatement","src":"9972:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9955:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9966:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9962:3:14"},"nodeType":"YulFunctionCall","src":"9962:6:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9952:2:14"},"nodeType":"YulFunctionCall","src":"9952:17:14"},"nodeType":"YulIf","src":"9949:43:14"},{"nodeType":"YulAssignment","src":"10001:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10012:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"10019:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10008:3:14"},"nodeType":"YulFunctionCall","src":"10008:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10001:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9921:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9931:3:14","type":""}],"src":"9892:135:14"},{"body":{"nodeType":"YulBlock","src":"10206:230:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10223:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10234:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10216:6:14"},"nodeType":"YulFunctionCall","src":"10216:21:14"},"nodeType":"YulExpressionStatement","src":"10216:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10257:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10268:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10253:3:14"},"nodeType":"YulFunctionCall","src":"10253:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"10273:2:14","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10246:6:14"},"nodeType":"YulFunctionCall","src":"10246:30:14"},"nodeType":"YulExpressionStatement","src":"10246:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10296:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10307:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10292:3:14"},"nodeType":"YulFunctionCall","src":"10292:18:14"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"10312:34:14","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10285:6:14"},"nodeType":"YulFunctionCall","src":"10285:62:14"},"nodeType":"YulExpressionStatement","src":"10285:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10367:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10378:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10363:3:14"},"nodeType":"YulFunctionCall","src":"10363:18:14"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"10383:10:14","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10356:6:14"},"nodeType":"YulFunctionCall","src":"10356:38:14"},"nodeType":"YulExpressionStatement","src":"10356:38:14"},{"nodeType":"YulAssignment","src":"10403:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10415:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10426:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10411:3:14"},"nodeType":"YulFunctionCall","src":"10411:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10403:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10183:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10197:4:14","type":""}],"src":"10032:404:14"},{"body":{"nodeType":"YulBlock","src":"10615:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10632:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10643:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10625:6:14"},"nodeType":"YulFunctionCall","src":"10625:21:14"},"nodeType":"YulExpressionStatement","src":"10625:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10666:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10677:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10662:3:14"},"nodeType":"YulFunctionCall","src":"10662:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"10682:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10655:6:14"},"nodeType":"YulFunctionCall","src":"10655:30:14"},"nodeType":"YulExpressionStatement","src":"10655:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10705:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10716:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10701:3:14"},"nodeType":"YulFunctionCall","src":"10701:18:14"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10721:34:14","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10694:6:14"},"nodeType":"YulFunctionCall","src":"10694:62:14"},"nodeType":"YulExpressionStatement","src":"10694:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10776:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10787:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10772:3:14"},"nodeType":"YulFunctionCall","src":"10772:18:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10792:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10765:6:14"},"nodeType":"YulFunctionCall","src":"10765:35:14"},"nodeType":"YulExpressionStatement","src":"10765:35:14"},{"nodeType":"YulAssignment","src":"10809:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10821:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10832:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10817:3:14"},"nodeType":"YulFunctionCall","src":"10817:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10809:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10592:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10606:4:14","type":""}],"src":"10441:401:14"},{"body":{"nodeType":"YulBlock","src":"11021:232:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11038:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11049:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11031:6:14"},"nodeType":"YulFunctionCall","src":"11031:21:14"},"nodeType":"YulExpressionStatement","src":"11031:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11072:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11083:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11068:3:14"},"nodeType":"YulFunctionCall","src":"11068:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"11088:2:14","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11061:6:14"},"nodeType":"YulFunctionCall","src":"11061:30:14"},"nodeType":"YulExpressionStatement","src":"11061:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11111:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11122:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11107:3:14"},"nodeType":"YulFunctionCall","src":"11107:18:14"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"11127:34:14","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:14"},"nodeType":"YulFunctionCall","src":"11100:62:14"},"nodeType":"YulExpressionStatement","src":"11100:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11182:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11193:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11178:3:14"},"nodeType":"YulFunctionCall","src":"11178:18:14"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"11198:12:14","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11171:6:14"},"nodeType":"YulFunctionCall","src":"11171:40:14"},"nodeType":"YulExpressionStatement","src":"11171:40:14"},{"nodeType":"YulAssignment","src":"11220:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11232:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11243:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11228:3:14"},"nodeType":"YulFunctionCall","src":"11228:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11220:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10998:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11012:4:14","type":""}],"src":"10847:406:14"},{"body":{"nodeType":"YulBlock","src":"11306:77:14","statements":[{"nodeType":"YulAssignment","src":"11316:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11327:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"11330:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11323:3:14"},"nodeType":"YulFunctionCall","src":"11323:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11316:3:14"}]},{"body":{"nodeType":"YulBlock","src":"11355:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11357:16:14"},"nodeType":"YulFunctionCall","src":"11357:18:14"},"nodeType":"YulExpressionStatement","src":"11357:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11347:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"11350:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11344:2:14"},"nodeType":"YulFunctionCall","src":"11344:10:14"},"nodeType":"YulIf","src":"11341:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11289:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"11292:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11298:3:14","type":""}],"src":"11258:125:14"},{"body":{"nodeType":"YulBlock","src":"11617:236:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11634:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11645:2:14","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11627:6:14"},"nodeType":"YulFunctionCall","src":"11627:21:14"},"nodeType":"YulExpressionStatement","src":"11627:21:14"},{"nodeType":"YulVariableDeclaration","src":"11657:70:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11700:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11712:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11723:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11708:3:14"},"nodeType":"YulFunctionCall","src":"11708:18:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11671:28:14"},"nodeType":"YulFunctionCall","src":"11671:56:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"11661:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11747:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11758:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11743:3:14"},"nodeType":"YulFunctionCall","src":"11743:18:14"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"11767:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11775:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11763:3:14"},"nodeType":"YulFunctionCall","src":"11763:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11736:6:14"},"nodeType":"YulFunctionCall","src":"11736:50:14"},"nodeType":"YulExpressionStatement","src":"11736:50:14"},{"nodeType":"YulAssignment","src":"11795:52:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11832:6:14"},{"name":"tail_1","nodeType":"YulIdentifier","src":"11840:6:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11803:28:14"},"nodeType":"YulFunctionCall","src":"11803:44:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11795:4:14"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11578:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11589:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11597:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11608:4:14","type":""}],"src":"11388:465:14"},{"body":{"nodeType":"YulBlock","src":"12032:231:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12049:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12060:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12042:6:14"},"nodeType":"YulFunctionCall","src":"12042:21:14"},"nodeType":"YulExpressionStatement","src":"12042:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12094:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:14"},"nodeType":"YulFunctionCall","src":"12079:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"12099:2:14","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12072:6:14"},"nodeType":"YulFunctionCall","src":"12072:30:14"},"nodeType":"YulExpressionStatement","src":"12072:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12122:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12133:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12118:3:14"},"nodeType":"YulFunctionCall","src":"12118:18:14"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"12138:34:14","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12111:6:14"},"nodeType":"YulFunctionCall","src":"12111:62:14"},"nodeType":"YulExpressionStatement","src":"12111:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12193:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12204:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12189:3:14"},"nodeType":"YulFunctionCall","src":"12189:18:14"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"12209:11:14","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12182:6:14"},"nodeType":"YulFunctionCall","src":"12182:39:14"},"nodeType":"YulExpressionStatement","src":"12182:39:14"},{"nodeType":"YulAssignment","src":"12230:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12242:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12253:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12238:3:14"},"nodeType":"YulFunctionCall","src":"12238:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12230:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12009:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12023:4:14","type":""}],"src":"11858:405:14"},{"body":{"nodeType":"YulBlock","src":"12397:119:14","statements":[{"nodeType":"YulAssignment","src":"12407:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12419:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12430:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12415:3:14"},"nodeType":"YulFunctionCall","src":"12415:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12407:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12449:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"12460:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12442:6:14"},"nodeType":"YulFunctionCall","src":"12442:25:14"},"nodeType":"YulExpressionStatement","src":"12442:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12487:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12498:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12483:3:14"},"nodeType":"YulFunctionCall","src":"12483:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"12503:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12476:6:14"},"nodeType":"YulFunctionCall","src":"12476:34:14"},"nodeType":"YulExpressionStatement","src":"12476:34:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12358:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12369:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12377:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12388:4:14","type":""}],"src":"12268:248:14"},{"body":{"nodeType":"YulBlock","src":"12852:496:14","statements":[{"nodeType":"YulVariableDeclaration","src":"12862:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12880:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12885:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12876:3:14"},"nodeType":"YulFunctionCall","src":"12876:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"12889:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12872:3:14"},"nodeType":"YulFunctionCall","src":"12872:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12866:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12907:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12922:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"12930:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12918:3:14"},"nodeType":"YulFunctionCall","src":"12918:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12900:6:14"},"nodeType":"YulFunctionCall","src":"12900:34:14"},"nodeType":"YulExpressionStatement","src":"12900:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12954:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12965:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12950:3:14"},"nodeType":"YulFunctionCall","src":"12950:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12974:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"12982:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12970:3:14"},"nodeType":"YulFunctionCall","src":"12970:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12943:6:14"},"nodeType":"YulFunctionCall","src":"12943:43:14"},"nodeType":"YulExpressionStatement","src":"12943:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13006:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13017:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13002:3:14"},"nodeType":"YulFunctionCall","src":"13002:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"13022:3:14","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12995:6:14"},"nodeType":"YulFunctionCall","src":"12995:31:14"},"nodeType":"YulExpressionStatement","src":"12995:31:14"},{"nodeType":"YulVariableDeclaration","src":"13035:71:14","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13078:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13090:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13101:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13086:3:14"},"nodeType":"YulFunctionCall","src":"13086:19:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"13049:28:14"},"nodeType":"YulFunctionCall","src":"13049:57:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13039:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13126:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13137:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13122:3:14"},"nodeType":"YulFunctionCall","src":"13122:18:14"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13146:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13154:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13142:3:14"},"nodeType":"YulFunctionCall","src":"13142:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13115:6:14"},"nodeType":"YulFunctionCall","src":"13115:50:14"},"nodeType":"YulExpressionStatement","src":"13115:50:14"},{"nodeType":"YulVariableDeclaration","src":"13174:58:14","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13217:6:14"},{"name":"tail_1","nodeType":"YulIdentifier","src":"13225:6:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"13188:28:14"},"nodeType":"YulFunctionCall","src":"13188:44:14"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"13178:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13252:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13263:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13248:3:14"},"nodeType":"YulFunctionCall","src":"13248:19:14"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13273:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13281:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13269:3:14"},"nodeType":"YulFunctionCall","src":"13269:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13241:6:14"},"nodeType":"YulFunctionCall","src":"13241:51:14"},"nodeType":"YulExpressionStatement","src":"13241:51:14"},{"nodeType":"YulAssignment","src":"13301:41:14","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"13327:6:14"},{"name":"tail_2","nodeType":"YulIdentifier","src":"13335:6:14"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13309:17:14"},"nodeType":"YulFunctionCall","src":"13309:33:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13301:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12789:9:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12800:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12808:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12816:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12824:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12832:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12843:4:14","type":""}],"src":"12521:827:14"},{"body":{"nodeType":"YulBlock","src":"13433:169:14","statements":[{"body":{"nodeType":"YulBlock","src":"13479:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13488:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13491:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13481:6:14"},"nodeType":"YulFunctionCall","src":"13481:12:14"},"nodeType":"YulExpressionStatement","src":"13481:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13454:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13463:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13450:3:14"},"nodeType":"YulFunctionCall","src":"13450:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"13475:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13446:3:14"},"nodeType":"YulFunctionCall","src":"13446:32:14"},"nodeType":"YulIf","src":"13443:52:14"},{"nodeType":"YulVariableDeclaration","src":"13504:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13523:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13517:5:14"},"nodeType":"YulFunctionCall","src":"13517:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13508:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13566:5:14"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"13542:23:14"},"nodeType":"YulFunctionCall","src":"13542:30:14"},"nodeType":"YulExpressionStatement","src":"13542:30:14"},{"nodeType":"YulAssignment","src":"13581:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"13591:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13581:6:14"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13399:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13410:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13422:6:14","type":""}],"src":"13353:249:14"},{"body":{"nodeType":"YulBlock","src":"13650:136:14","statements":[{"body":{"nodeType":"YulBlock","src":"13695:85:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13724:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13727:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13730:1:14","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13709:14:14"},"nodeType":"YulFunctionCall","src":"13709:23:14"},"nodeType":"YulExpressionStatement","src":"13709:23:14"},{"nodeType":"YulAssignment","src":"13745:25:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13756:3:14","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13767:1:14","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13761:5:14"},"nodeType":"YulFunctionCall","src":"13761:8:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13752:3:14"},"nodeType":"YulFunctionCall","src":"13752:18:14"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"13745:3:14"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13666:14:14"},"nodeType":"YulFunctionCall","src":"13666:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"13684:1:14","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13663:2:14"},"nodeType":"YulFunctionCall","src":"13663:23:14"},"nodeType":"YulIf","src":"13660:120:14"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"13642:3:14","type":""}],"src":"13607:179:14"},{"body":{"nodeType":"YulBlock","src":"13838:624:14","statements":[{"body":{"nodeType":"YulBlock","src":"13878:9:14","statements":[{"nodeType":"YulLeave","src":"13880:5:14"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13854:14:14"},"nodeType":"YulFunctionCall","src":"13854:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"13872:4:14","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13851:2:14"},"nodeType":"YulFunctionCall","src":"13851:26:14"},"nodeType":"YulIf","src":"13848:39:14"},{"nodeType":"YulVariableDeclaration","src":"13896:21:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13914:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13908:5:14"},"nodeType":"YulFunctionCall","src":"13908:9:14"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"13900:4:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13926:16:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13940:1:14","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13936:3:14"},"nodeType":"YulFunctionCall","src":"13936:6:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13930:2:14","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13966:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"13972:1:14","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13979:14:14"},"nodeType":"YulFunctionCall","src":"13979:16:14"},{"name":"_1","nodeType":"YulIdentifier","src":"13997:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13975:3:14"},"nodeType":"YulFunctionCall","src":"13975:25:14"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13951:14:14"},"nodeType":"YulFunctionCall","src":"13951:50:14"},"nodeType":"YulExpressionStatement","src":"13951:50:14"},{"nodeType":"YulVariableDeclaration","src":"14010:25:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14030:4:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14024:5:14"},"nodeType":"YulFunctionCall","src":"14024:11:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14014:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14044:26:14","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14054:14:14"},"nodeType":"YulFunctionCall","src":"14054:16:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"14048:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14079:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14089:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"14083:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"14165:9:14","statements":[{"nodeType":"YulLeave","src":"14167:5:14"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14125:6:14"},{"name":"_3","nodeType":"YulIdentifier","src":"14133:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14122:2:14"},"nodeType":"YulFunctionCall","src":"14122:14:14"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14145:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"14153:4:14","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14141:3:14"},"nodeType":"YulFunctionCall","src":"14141:17:14"},{"name":"_2","nodeType":"YulIdentifier","src":"14160:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14138:2:14"},"nodeType":"YulFunctionCall","src":"14138:25:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14119:2:14"},"nodeType":"YulFunctionCall","src":"14119:45:14"},"nodeType":"YulIf","src":"14116:58:14"},{"nodeType":"YulVariableDeclaration","src":"14183:28:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14198:4:14"},{"name":"offset","nodeType":"YulIdentifier","src":"14204:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14194:3:14"},"nodeType":"YulFunctionCall","src":"14194:17:14"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"14187:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14220:24:14","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"14240:3:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14234:5:14"},"nodeType":"YulFunctionCall","src":"14234:10:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14224:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"14271:9:14","statements":[{"nodeType":"YulLeave","src":"14273:5:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14259:6:14"},{"name":"_3","nodeType":"YulIdentifier","src":"14267:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14256:2:14"},"nodeType":"YulFunctionCall","src":"14256:14:14"},"nodeType":"YulIf","src":"14253:27:14"},{"body":{"nodeType":"YulBlock","src":"14362:9:14","statements":[{"nodeType":"YulLeave","src":"14364:5:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"14303:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"14308:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14299:3:14"},"nodeType":"YulFunctionCall","src":"14299:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"14317:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14295:3:14"},"nodeType":"YulFunctionCall","src":"14295:27:14"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14332:4:14"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14338:14:14"},"nodeType":"YulFunctionCall","src":"14338:16:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14328:3:14"},"nodeType":"YulFunctionCall","src":"14328:27:14"},{"name":"_1","nodeType":"YulIdentifier","src":"14357:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14324:3:14"},"nodeType":"YulFunctionCall","src":"14324:36:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14292:2:14"},"nodeType":"YulFunctionCall","src":"14292:69:14"},"nodeType":"YulIf","src":"14289:82:14"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14400:4:14"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14414:6:14"},{"name":"length","nodeType":"YulIdentifier","src":"14422:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14410:3:14"},"nodeType":"YulFunctionCall","src":"14410:19:14"},{"kind":"number","nodeType":"YulLiteral","src":"14431:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14406:3:14"},"nodeType":"YulFunctionCall","src":"14406:30:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"14380:19:14"},"nodeType":"YulFunctionCall","src":"14380:57:14"},"nodeType":"YulExpressionStatement","src":"14380:57:14"},{"nodeType":"YulAssignment","src":"14446:10:14","value":{"name":"msg","nodeType":"YulIdentifier","src":"14453:3:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14446:3:14"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13830:3:14","type":""}],"src":"13791:671:14"},{"body":{"nodeType":"YulBlock","src":"14641:242:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14658:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14669:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14651:6:14"},"nodeType":"YulFunctionCall","src":"14651:21:14"},"nodeType":"YulExpressionStatement","src":"14651:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14692:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14703:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14688:3:14"},"nodeType":"YulFunctionCall","src":"14688:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"14708:2:14","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14681:6:14"},"nodeType":"YulFunctionCall","src":"14681:30:14"},"nodeType":"YulExpressionStatement","src":"14681:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14731:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14742:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14727:3:14"},"nodeType":"YulFunctionCall","src":"14727:18:14"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535","kind":"string","nodeType":"YulLiteral","src":"14747:34:14","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14720:6:14"},"nodeType":"YulFunctionCall","src":"14720:62:14"},"nodeType":"YulExpressionStatement","src":"14720:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14802:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14813:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14798:3:14"},"nodeType":"YulFunctionCall","src":"14798:18:14"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"14818:22:14","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14791:6:14"},"nodeType":"YulFunctionCall","src":"14791:50:14"},"nodeType":"YulExpressionStatement","src":"14791:50:14"},{"nodeType":"YulAssignment","src":"14850:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14862:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14873:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14858:3:14"},"nodeType":"YulFunctionCall","src":"14858:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14850:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14618:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14632:4:14","type":""}],"src":"14467:416:14"},{"body":{"nodeType":"YulBlock","src":"15062:230:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15079:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15090:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15072:6:14"},"nodeType":"YulFunctionCall","src":"15072:21:14"},"nodeType":"YulExpressionStatement","src":"15072:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15113:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15124:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15109:3:14"},"nodeType":"YulFunctionCall","src":"15109:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"15129:2:14","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15102:6:14"},"nodeType":"YulFunctionCall","src":"15102:30:14"},"nodeType":"YulExpressionStatement","src":"15102:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15152:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15163:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15148:3:14"},"nodeType":"YulFunctionCall","src":"15148:18:14"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"15168:34:14","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15141:6:14"},"nodeType":"YulFunctionCall","src":"15141:62:14"},"nodeType":"YulExpressionStatement","src":"15141:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15223:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15234:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15219:3:14"},"nodeType":"YulFunctionCall","src":"15219:18:14"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"15239:10:14","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15212:6:14"},"nodeType":"YulFunctionCall","src":"15212:38:14"},"nodeType":"YulExpressionStatement","src":"15212:38:14"},{"nodeType":"YulAssignment","src":"15259:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15271:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15282:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15267:3:14"},"nodeType":"YulFunctionCall","src":"15267:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15259:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15039:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15053:4:14","type":""}],"src":"14888:404:14"},{"body":{"nodeType":"YulBlock","src":"15528:330:14","statements":[{"nodeType":"YulVariableDeclaration","src":"15538:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15556:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15561:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15552:3:14"},"nodeType":"YulFunctionCall","src":"15552:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"15565:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15548:3:14"},"nodeType":"YulFunctionCall","src":"15548:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15542:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15583:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15598:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"15606:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15594:3:14"},"nodeType":"YulFunctionCall","src":"15594:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15576:6:14"},"nodeType":"YulFunctionCall","src":"15576:34:14"},"nodeType":"YulExpressionStatement","src":"15576:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15630:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15641:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15626:3:14"},"nodeType":"YulFunctionCall","src":"15626:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15650:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"15658:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15646:3:14"},"nodeType":"YulFunctionCall","src":"15646:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15619:6:14"},"nodeType":"YulFunctionCall","src":"15619:43:14"},"nodeType":"YulExpressionStatement","src":"15619:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15682:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15693:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15678:3:14"},"nodeType":"YulFunctionCall","src":"15678:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"15698:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15671:6:14"},"nodeType":"YulFunctionCall","src":"15671:34:14"},"nodeType":"YulExpressionStatement","src":"15671:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15725:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15736:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15721:3:14"},"nodeType":"YulFunctionCall","src":"15721:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"15741:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15714:6:14"},"nodeType":"YulFunctionCall","src":"15714:34:14"},"nodeType":"YulExpressionStatement","src":"15714:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15768:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15779:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15764:3:14"},"nodeType":"YulFunctionCall","src":"15764:19:14"},{"kind":"number","nodeType":"YulLiteral","src":"15785:3:14","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15757:6:14"},"nodeType":"YulFunctionCall","src":"15757:32:14"},"nodeType":"YulExpressionStatement","src":"15757:32:14"},{"nodeType":"YulAssignment","src":"15798:54:14","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15824:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15836:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15847:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15832:3:14"},"nodeType":"YulFunctionCall","src":"15832:19:14"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"15806:17:14"},"nodeType":"YulFunctionCall","src":"15806:46:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15798:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15465:9:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15476:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15484:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15492:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15500:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15508:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15519:4:14","type":""}],"src":"15297:561:14"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610b49565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610b8c565b610227565b60405190151581526020016100a9565b6100e86100e3366004610bb0565b610277565b6040516100a99190610c0f565b610108610103366004610d6e565b61030b565b005b61011d610118366004610e18565b610357565b6040516100a99190610f1e565b610108610138366004610f31565b610481565b6100c561014b366004610f6d565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b610108610187366004610fa0565b610490565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060008181526065602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025857506001600160e01b031982166303a24d0760e21b145b8061022157506301ffc9a760e01b6001600160e01b0319831614610221565b60606067805461028690611005565b80601f01602080910402602001604051908101604052809291908181526020018280546102b290611005565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103275750610327853361014b565b6103435760405162461bcd60e51b81526004016101f39061103f565b61035085858585856104d5565b5050505050565b606081518351146103bc5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103d8576103d8610c22565b604051908082528060200260200182016040528015610401578160200160208202803683370190505b50905060005b84518110156104795761044c8582815181106104255761042561108d565b602002602001015185838151811061043f5761043f61108d565b602002602001015161018c565b82828151811061045e5761045e61108d565b6020908102919091010152610472816110b9565b9050610407565b509392505050565b61048c3383836106b5565b5050565b6001600160a01b0385163314806104ac57506104ac853361014b565b6104c85760405162461bcd60e51b81526004016101f39061103f565b6103508585858585610795565b81518351146105375760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b03841661055d5760405162461bcd60e51b81526004016101f3906110d2565b3360005b845181101561064757600085828151811061057e5761057e61108d565b60200260200101519050600085838151811061059c5761059c61108d565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156105ed5760405162461bcd60e51b81526004016101f390611117565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061062c908490611161565b9250508190555050505080610640906110b9565b9050610561565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610697929190611174565b60405180910390a46106ad8187878787876108c3565b505050505050565b816001600160a01b0316836001600160a01b0316036107285760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107bb5760405162461bcd60e51b81526004016101f3906110d2565b3360006107c785610a27565b905060006107d485610a27565b905060008681526065602090815260408083206001600160a01b038c168452909152902054858110156108195760405162461bcd60e51b81526004016101f390611117565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610858908490611161565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46108b8848a8a8a8a8a610a72565b505050505050505050565b6001600160a01b0384163b156106ad5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061090790899089908890889088906004016111a2565b6020604051808303816000875af1925050508015610942575060408051601f3d908101601f1916820190925261093f91810190611200565b60015b6109ee5761094e61121d565b806308c379a0036109875750610962611239565b8061096d5750610989565b8060405162461bcd60e51b81526004016101f39190610c0f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610a1e5760405162461bcd60e51b81526004016101f3906112c3565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a6157610a6161108d565b602090810291909101015292915050565b6001600160a01b0384163b156106ad5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ab6908990899088908890889060040161130b565b6020604051808303816000875af1925050508015610af1575060408051601f3d908101601f19168201909252610aee91810190611200565b60015b610afd5761094e61121d565b6001600160e01b0319811663f23a6e6160e01b14610a1e5760405162461bcd60e51b81526004016101f3906112c3565b80356001600160a01b0381168114610b4457600080fd5b919050565b60008060408385031215610b5c57600080fd5b610b6583610b2d565b946020939093013593505050565b6001600160e01b031981168114610b8957600080fd5b50565b600060208284031215610b9e57600080fd5b8135610ba981610b73565b9392505050565b600060208284031215610bc257600080fd5b5035919050565b6000815180845260005b81811015610bef57602081850181015186830182015201610bd3565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ba96020830184610bc9565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610c5e57610c5e610c22565b6040525050565b600067ffffffffffffffff821115610c7f57610c7f610c22565b5060051b60200190565b600082601f830112610c9a57600080fd5b81356020610ca782610c65565b604051610cb48282610c38565b83815260059390931b8501820192828101915086841115610cd457600080fd5b8286015b84811015610cef5780358352918301918301610cd8565b509695505050505050565b600082601f830112610d0b57600080fd5b813567ffffffffffffffff811115610d2557610d25610c22565b604051610d3c601f8301601f191660200182610c38565b818152846020838601011115610d5157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d8657600080fd5b610d8f86610b2d565b9450610d9d60208701610b2d565b9350604086013567ffffffffffffffff80821115610dba57600080fd5b610dc689838a01610c89565b94506060880135915080821115610ddc57600080fd5b610de889838a01610c89565b93506080880135915080821115610dfe57600080fd5b50610e0b88828901610cfa565b9150509295509295909350565b60008060408385031215610e2b57600080fd5b823567ffffffffffffffff80821115610e4357600080fd5b818501915085601f830112610e5757600080fd5b81356020610e6482610c65565b604051610e718282610c38565b83815260059390931b8501820192828101915089841115610e9157600080fd5b948201945b83861015610eb657610ea786610b2d565b82529482019490820190610e96565b96505086013592505080821115610ecc57600080fd5b50610ed985828601610c89565b9150509250929050565b600081518084526020808501945080840160005b83811015610f1357815187529582019590820190600101610ef7565b509495945050505050565b602081526000610ba96020830184610ee3565b60008060408385031215610f4457600080fd5b610f4d83610b2d565b915060208301358015158114610f6257600080fd5b809150509250929050565b60008060408385031215610f8057600080fd5b610f8983610b2d565b9150610f9760208401610b2d565b90509250929050565b600080600080600060a08688031215610fb857600080fd5b610fc186610b2d565b9450610fcf60208701610b2d565b93506040860135925060608601359150608086013567ffffffffffffffff811115610ff957600080fd5b610e0b88828901610cfa565b600181811c9082168061101957607f821691505b60208210810361103957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110cb576110cb6110a3565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b80820180821115610221576102216110a3565b6040815260006111876040830185610ee3565b82810360208401526111998185610ee3565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111ce90830186610ee3565b82810360608401526111e08186610ee3565b905082810360808401526111f48185610bc9565b98975050505050505050565b60006020828403121561121257600080fd5b8151610ba981610b73565b600060033d11156112365760046000803e5060005160e01c5b90565b600060443d10156112475790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561127757505050505090565b828501915081518181111561128f5750505050505090565b843d87010160208285010111156112a95750505050505090565b6112b860208286010187610c38565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061134590830184610bc9565b97965050505050505056fea26469706673582212204511db1f1cd7eb4170349f69b8b4fb95f6734d52f1583609dd10d48e90d5750264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE18 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF31 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x258 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x221 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x221 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x67 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x1005 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x327 JUMPI POP PUSH2 0x327 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D8 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x401 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x479 JUMPI PUSH2 0x44C DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x425 JUMPI PUSH2 0x425 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x43F JUMPI PUSH2 0x43F PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45E JUMPI PUSH2 0x45E PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x472 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x407 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x48C CALLER DUP4 DUP4 PUSH2 0x6B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4AC JUMPI POP PUSH2 0x4AC DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x795 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57E JUMPI PUSH2 0x57E PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x62C SWAP1 DUP5 SWAP1 PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x640 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x561 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x697 SWAP3 SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6AD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8C3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x7C7 DUP6 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D4 DUP6 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x858 SWAP1 DUP5 SWAP1 PUSH2 0x1161 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8B8 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA72 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x907 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x942 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x93F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9EE JUMPI PUSH2 0x94E PUSH2 0x121D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x987 JUMPI POP PUSH2 0x962 PUSH2 0x1239 JUMP JUMPDEST DUP1 PUSH2 0x96D JUMPI POP PUSH2 0x989 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA61 JUMPI PUSH2 0xA61 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAB6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x130B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAF1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAEE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAFD JUMPI PUSH2 0x94E PUSH2 0x121D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB65 DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA9 DUP2 PUSH2 0xB73 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBEF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBD3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBC9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC5E JUMPI PUSH2 0xC5E PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xC22 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xCA7 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB4 DUP3 DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCEF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCD8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD25 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8F DUP7 PUSH2 0xB2D JUMP JUMPDEST SWAP5 POP PUSH2 0xD9D PUSH1 0x20 DUP8 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC6 DUP10 DUP4 DUP11 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE8 DUP10 DUP4 DUP11 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE0B DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE64 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE71 DUP3 DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xEA7 DUP7 PUSH2 0xB2D JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED9 DUP6 DUP3 DUP7 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF13 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEF7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4D DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF89 DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP2 POP PUSH2 0xF97 PUSH1 0x20 DUP5 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC1 DUP7 PUSH2 0xB2D JUMP JUMPDEST SWAP5 POP PUSH2 0xFCF PUSH1 0x20 DUP8 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0B DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1019 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1039 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10CB JUMPI PUSH2 0x10CB PUSH2 0x10A3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x221 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1187 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEE3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1199 DUP2 DUP6 PUSH2 0xEE3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11CE SWAP1 DUP4 ADD DUP7 PUSH2 0xEE3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11E0 DUP2 DUP7 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11F4 DUP2 DUP6 PUSH2 0xBC9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBA9 DUP2 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1247 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1277 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x128F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12A9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12B8 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC38 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1345 SWAP1 DUP4 ADD DUP5 PUSH2 0xBC9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT GT 0xDB 0x1F SHR 0xD7 0xEB COINBASE PUSH17 0x349F69B8B4FB95F6734D52F1583609DD10 0xD4 DUP15 SWAP1 0xD5 PUSH22 0x264736F6C6343000811003300000000000000000000 ","sourceMap":"682:17320:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2593:227;;;;;;:::i;:::-;;:::i;:::-;;;597:25:14;;;585:2;570:18;2593:227:1;;;;;;;;1600:349;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:14;;1177:22;1159:41;;1147:2;1132:18;1600:349:1;1019:187:14;2348:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4472:426::-;;;;;;:::i;:::-;;:::i;:::-;;2977:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3553:153::-;;;;;;:::i;:::-;;:::i;3773:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3895:27:1;;;3872:4;3895:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3773:166;4006:394;;;;;;:::i;:::-;;:::i;2593:227::-;2679:7;-1:-1:-1;;;;;2706:21:1;;2698:76;;;;-1:-1:-1;;;2698:76:1;;8209:2:14;2698:76:1;;;8191:21:14;8248:2;8228:18;;;8221:30;8287:34;8267:18;;;8260:62;-1:-1:-1;;;8338:18:14;;;8331:40;8388:19;;2698:76:1;;;;;;;;;-1:-1:-1;2791:13:1;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2791:22:1;;;;;;;;;;2593:227;;;;;:::o;1600:349::-;1724:4;-1:-1:-1;;;;;;1759:52:1;;-1:-1:-1;;;1759:52:1;;:131;;-1:-1:-1;;;;;;;1827:63:1;;-1:-1:-1;;;1827:63:1;1759:131;:183;;;-1:-1:-1;;;;;;;;;;1168:51:8;;;1906:36:1;1060:166:8;2348:103:1;2408:13;2440:4;2433:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2348:103;;;:::o;4472:426::-;-1:-1:-1;;;;;4697:20:1;;929:10:7;4697:20:1;;:60;;-1:-1:-1;4721:36:1;4738:4;929:10:7;3773:166:1;:::i;4721:36::-;4676:153;;;;-1:-1:-1;;;4676:153:1;;;;;;;:::i;:::-;4839:52;4862:4;4868:2;4872:3;4877:7;4886:4;4839:22;:52::i;:::-;4472:426;;;;;:::o;2977:508::-;3128:16;3187:3;:10;3168:8;:15;:29;3160:83;;;;-1:-1:-1;;;3160:83:1;;9420:2:14;3160:83:1;;;9402:21:14;9459:2;9439:18;;;9432:30;9498:34;9478:18;;;9471:62;-1:-1:-1;;;9549:18:14;;;9542:39;9598:19;;3160:83:1;9218:405:14;3160:83:1;3254:30;3301:8;:15;3287:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3287:30:1;;3254:63;;3333:9;3328:120;3352:8;:15;3348:1;:19;3328:120;;;3407:30;3417:8;3426:1;3417:11;;;;;;;;:::i;:::-;;;;;;;3430:3;3434:1;3430:6;;;;;;;;:::i;:::-;;;;;;;3407:9;:30::i;:::-;3388:13;3402:1;3388:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3369:3;;;:::i;:::-;;;3328:120;;;-1:-1:-1;3465:13:1;2977:508;-1:-1:-1;;;2977:508:1:o;3553:153::-;3647:52;929:10:7;3680:8:1;3690;3647:18;:52::i;:::-;3553:153;;:::o;4006:394::-;-1:-1:-1;;;;;4206:20:1;;929:10:7;4206:20:1;;:60;;-1:-1:-1;4230:36:1;4247:4;929:10:7;3773:166:1;:::i;4230:36::-;4185:153;;;;-1:-1:-1;;;4185:153:1;;;;;;;:::i;:::-;4348:45;4366:4;4372:2;4376;4380:6;4388:4;4348:17;:45::i;6641:1115::-;6861:7;:14;6847:3;:10;:28;6839:81;;;;-1:-1:-1;;;6839:81:1;;10234:2:14;6839:81:1;;;10216:21:14;10273:2;10253:18;;;10246:30;10312:34;10292:18;;;10285:62;-1:-1:-1;;;10363:18:14;;;10356:38;10411:19;;6839:81:1;10032:404:14;6839:81:1;-1:-1:-1;;;;;6938:16:1;;6930:66;;;;-1:-1:-1;;;6930:66:1;;;;;;;:::i;:::-;929:10:7;7007:16:1;7120:411;7144:3;:10;7140:1;:14;7120:411;;;7175:10;7188:3;7192:1;7188:6;;;;;;;;:::i;:::-;;;;;;;7175:19;;7208:14;7225:7;7233:1;7225:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7250:19;7272:13;;;:9;:13;;;;;;-1:-1:-1;;;;;7272:19:1;;;;;;;;;;;;7225:10;;-1:-1:-1;7313:21:1;;;;7305:76;;;;-1:-1:-1;;;7305:76:1;;;;;;;:::i;:::-;7423:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7423:19:1;;;;;;;;;;7445:20;;;7423:42;;7493:17;;;;;;;:27;;7445:20;;7423:13;7493:27;;7445:20;;7493:27;:::i;:::-;;;;;;;;7161:370;;;7156:3;;;;:::i;:::-;;;7120:411;;;;7576:2;-1:-1:-1;;;;;7546:47:1;7570:4;-1:-1:-1;;;;;7546:47:1;7560:8;-1:-1:-1;;;;;7546:47:1;;7580:3;7585:7;7546:47;;;;;;;:::i;:::-;;;;;;;;7674:75;7710:8;7720:4;7726:2;7730:3;7735:7;7744:4;7674:35;:75::i;:::-;6829:927;6641:1115;;;;;:::o;13318:323::-;13468:8;-1:-1:-1;;;;;13459:17:1;:5;-1:-1:-1;;;;;13459:17:1;;13451:71;;;;-1:-1:-1;;;13451:71:1;;12060:2:14;13451:71:1;;;12042:21:14;12099:2;12079:18;;;12072:30;12138:34;12118:18;;;12111:62;-1:-1:-1;;;12189:18:14;;;12182:39;12238:19;;13451:71:1;11858:405:14;13451:71:1;-1:-1:-1;;;;;13532:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13532:46:1;;;;;;;;;;13593:41;;1159::14;;;13593::1;;1132:18:14;13593:41:1;;;;;;;13318:323;;;:::o;5348:947::-;-1:-1:-1;;;;;5529:16:1;;5521:66;;;;-1:-1:-1;;;5521:66:1;;;;;;;:::i;:::-;929:10:7;5598:16:1;5662:21;5680:2;5662:17;:21::i;:::-;5639:44;;5693:24;5720:25;5738:6;5720:17;:25::i;:::-;5693:52;;5827:19;5849:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5849:19:1;;;;;;;;;;5886:21;;;;5878:76;;;;-1:-1:-1;;;5878:76:1;;;;;;;:::i;:::-;5988:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5988:19:1;;;;;;;;;;6010:20;;;5988:42;;6050:17;;;;;;;:27;;6010:20;;5988:13;6050:27;;6010:20;;6050:27;:::i;:::-;;;;-1:-1:-1;;6093:46:1;;;12442:25:14;;;12498:2;12483:18;;12476:34;;;-1:-1:-1;;;;;6093:46:1;;;;;;;;;;;;;;12415:18:14;6093:46:1;;;;;;;6220:68;6251:8;6261:4;6267:2;6271;6275:6;6283:4;6220:30;:68::i;:::-;5511:784;;;;5348:947;;;;;:::o;16696:814::-;-1:-1:-1;;;;;16928:13:1;;1476:19:6;:23;16924:580:1;;16963:90;;-1:-1:-1;;;16963:90:1;;-1:-1:-1;;;;;16963:54:1;;;;;:90;;17018:8;;17028:4;;17034:3;;17039:7;;17048:4;;16963:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16963:90:1;;;;;;;;-1:-1:-1;;16963:90:1;;;;;;;;;;;;:::i;:::-;;;16959:535;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;17370:6;17363:14;;-1:-1:-1;;;17363:14:1;;;;;;;;:::i;16959:535::-;;;17417:62;;-1:-1:-1;;;17417:62:1;;14669:2:14;17417:62:1;;;14651:21:14;14708:2;14688:18;;;14681:30;14747:34;14727:18;;;14720:62;-1:-1:-1;;;14798:18:14;;;14791:50;14858:19;;17417:62:1;14467:416:14;16959:535:1;-1:-1:-1;;;;;;17132:71:1;;-1:-1:-1;;;17132:71:1;17128:168;;17227:50;;-1:-1:-1;;;17227:50:1;;;;;;;:::i;17128:168::-;17054:256;16696:814;;;;;;:::o;17516:193::-;17635:16;;;17649:1;17635:16;;;;;;;;;17582;;17610:22;;17635:16;;;;;;;;;;;;-1:-1:-1;17635:16:1;17610:41;;17672:7;17661:5;17667:1;17661:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17697:5;17516:193;-1:-1:-1;;17516:193:1:o;15943:747::-;-1:-1:-1;;;;;16150:13:1;;1476:19:6;:23;16146:538:1;;16185:83;;-1:-1:-1;;;16185:83:1;;-1:-1:-1;;;;;16185:49:1;;;;;:83;;16235:8;;16245:4;;16251:2;;16255:6;;16263:4;;16185:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16185:83:1;;;;;;;;-1:-1:-1;;16185:83:1;;;;;;;;;;;;:::i;:::-;;;16181:493;;;;:::i;:::-;-1:-1:-1;;;;;;16317:66:1;;-1:-1:-1;;;16317:66:1;16313:163;;16407:50;;-1:-1:-1;;;16407:50:1;;;;;;;:::i;14:173:14:-;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:14:o;633:131::-;-1:-1:-1;;;;;;707:32:14;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:14:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:14;;1211:180;-1:-1:-1;1211:180:14:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:249;2291:2;2272:13;;-1:-1:-1;;2268:27:14;2256:40;;2326:18;2311:34;;2347:22;;;2308:62;2305:88;;;2373:18;;:::i;:::-;2409:2;2402:22;-1:-1:-1;;2181:249:14:o;2435:183::-;2495:4;2528:18;2520:6;2517:30;2514:56;;;2550:18;;:::i;:::-;-1:-1:-1;2595:1:14;2591:14;2607:4;2587:25;;2435:183::o;2623:724::-;2677:5;2730:3;2723:4;2715:6;2711:17;2707:27;2697:55;;2748:1;2745;2738:12;2697:55;2784:6;2771:20;2810:4;2833:43;2873:2;2833:43;:::i;:::-;2905:2;2899:9;2917:31;2945:2;2937:6;2917:31;:::i;:::-;2983:18;;;3075:1;3071:10;;;;3059:23;;3055:32;;;3017:15;;;;-1:-1:-1;3099:15:14;;;3096:35;;;3127:1;3124;3117:12;3096:35;3163:2;3155:6;3151:15;3175:142;3191:6;3186:3;3183:15;3175:142;;;3257:17;;3245:30;;3295:12;;;;3208;;3175:142;;;-1:-1:-1;3335:6:14;2623:724;-1:-1:-1;;;;;;2623:724:14:o;3352:555::-;3394:5;3447:3;3440:4;3432:6;3428:17;3424:27;3414:55;;3465:1;3462;3455:12;3414:55;3501:6;3488:20;3527:18;3523:2;3520:26;3517:52;;;3549:18;;:::i;:::-;3598:2;3592:9;3610:67;3665:2;3646:13;;-1:-1:-1;;3642:27:14;3671:4;3638:38;3592:9;3610:67;:::i;:::-;3701:2;3693:6;3686:18;3747:3;3740:4;3735:2;3727:6;3723:15;3719:26;3716:35;3713:55;;;3764:1;3761;3754:12;3713:55;3828:2;3821:4;3813:6;3809:17;3802:4;3794:6;3790:17;3777:54;3875:1;3851:15;;;3868:4;3847:26;3840:37;;;;3855:6;3352:555;-1:-1:-1;;;3352:555:14:o;3912:943::-;4066:6;4074;4082;4090;4098;4151:3;4139:9;4130:7;4126:23;4122:33;4119:53;;;4168:1;4165;4158:12;4119:53;4191:29;4210:9;4191:29;:::i;:::-;4181:39;;4239:38;4273:2;4262:9;4258:18;4239:38;:::i;:::-;4229:48;;4328:2;4317:9;4313:18;4300:32;4351:18;4392:2;4384:6;4381:14;4378:34;;;4408:1;4405;4398:12;4378:34;4431:61;4484:7;4475:6;4464:9;4460:22;4431:61;:::i;:::-;4421:71;;4545:2;4534:9;4530:18;4517:32;4501:48;;4574:2;4564:8;4561:16;4558:36;;;4590:1;4587;4580:12;4558:36;4613:63;4668:7;4657:8;4646:9;4642:24;4613:63;:::i;:::-;4603:73;;4729:3;4718:9;4714:19;4701:33;4685:49;;4759:2;4749:8;4746:16;4743:36;;;4775:1;4772;4765:12;4743:36;;4798:51;4841:7;4830:8;4819:9;4815:24;4798:51;:::i;:::-;4788:61;;;3912:943;;;;;;;;:::o;4860:1208::-;4978:6;4986;5039:2;5027:9;5018:7;5014:23;5010:32;5007:52;;;5055:1;5052;5045:12;5007:52;5095:9;5082:23;5124:18;5165:2;5157:6;5154:14;5151:34;;;5181:1;5178;5171:12;5151:34;5219:6;5208:9;5204:22;5194:32;;5264:7;5257:4;5253:2;5249:13;5245:27;5235:55;;5286:1;5283;5276:12;5235:55;5322:2;5309:16;5344:4;5367:43;5407:2;5367:43;:::i;:::-;5439:2;5433:9;5451:31;5479:2;5471:6;5451:31;:::i;:::-;5517:18;;;5605:1;5601:10;;;;5593:19;;5589:28;;;5551:15;;;;-1:-1:-1;5629:19:14;;;5626:39;;;5661:1;5658;5651:12;5626:39;5685:11;;;;5705:148;5721:6;5716:3;5713:15;5705:148;;;5787:23;5806:3;5787:23;:::i;:::-;5775:36;;5738:12;;;;5831;;;;5705:148;;;5872:6;-1:-1:-1;;5916:18:14;;5903:32;;-1:-1:-1;;5947:16:14;;;5944:36;;;5976:1;5973;5966:12;5944:36;;5999:63;6054:7;6043:8;6032:9;6028:24;5999:63;:::i;:::-;5989:73;;;4860:1208;;;;;:::o;6073:435::-;6126:3;6164:5;6158:12;6191:6;6186:3;6179:19;6217:4;6246:2;6241:3;6237:12;6230:19;;6283:2;6276:5;6272:14;6304:1;6314:169;6328:6;6325:1;6322:13;6314:169;;;6389:13;;6377:26;;6423:12;;;;6458:15;;;;6350:1;6343:9;6314:169;;;-1:-1:-1;6499:3:14;;6073:435;-1:-1:-1;;;;;6073:435:14:o;6513:261::-;6692:2;6681:9;6674:21;6655:4;6712:56;6764:2;6753:9;6749:18;6741:6;6712:56;:::i;6779:347::-;6844:6;6852;6905:2;6893:9;6884:7;6880:23;6876:32;6873:52;;;6921:1;6918;6911:12;6873:52;6944:29;6963:9;6944:29;:::i;:::-;6934:39;;7023:2;7012:9;7008:18;6995:32;7070:5;7063:13;7056:21;7049:5;7046:32;7036:60;;7092:1;7089;7082:12;7036:60;7115:5;7105:15;;;6779:347;;;;;:::o;7131:260::-;7199:6;7207;7260:2;7248:9;7239:7;7235:23;7231:32;7228:52;;;7276:1;7273;7266:12;7228:52;7299:29;7318:9;7299:29;:::i;:::-;7289:39;;7347:38;7381:2;7370:9;7366:18;7347:38;:::i;:::-;7337:48;;7131:260;;;;;:::o;7396:606::-;7500:6;7508;7516;7524;7532;7585:3;7573:9;7564:7;7560:23;7556:33;7553:53;;;7602:1;7599;7592:12;7553:53;7625:29;7644:9;7625:29;:::i;:::-;7615:39;;7673:38;7707:2;7696:9;7692:18;7673:38;:::i;:::-;7663:48;;7758:2;7747:9;7743:18;7730:32;7720:42;;7809:2;7798:9;7794:18;7781:32;7771:42;;7864:3;7853:9;7849:19;7836:33;7892:18;7884:6;7881:30;7878:50;;;7924:1;7921;7914:12;7878:50;7947:49;7988:7;7979:6;7968:9;7964:22;7947:49;:::i;8418:380::-;8497:1;8493:12;;;;8540;;;8561:61;;8615:4;8607:6;8603:17;8593:27;;8561:61;8668:2;8660:6;8657:14;8637:18;8634:38;8631:161;;8714:10;8709:3;8705:20;8702:1;8695:31;8749:4;8746:1;8739:15;8777:4;8774:1;8767:15;8631:161;;8418:380;;;:::o;8803:410::-;9005:2;8987:21;;;9044:2;9024:18;;;9017:30;9083:34;9078:2;9063:18;;9056:62;-1:-1:-1;;;9149:2:14;9134:18;;9127:44;9203:3;9188:19;;8803:410::o;9628:127::-;9689:10;9684:3;9680:20;9677:1;9670:31;9720:4;9717:1;9710:15;9744:4;9741:1;9734:15;9760:127;9821:10;9816:3;9812:20;9809:1;9802:31;9852:4;9849:1;9842:15;9876:4;9873:1;9866:15;9892:135;9931:3;9952:17;;;9949:43;;9972:18;;:::i;:::-;-1:-1:-1;10019:1:14;10008:13;;9892:135::o;10441:401::-;10643:2;10625:21;;;10682:2;10662:18;;;10655:30;10721:34;10716:2;10701:18;;10694:62;-1:-1:-1;;;10787:2:14;10772:18;;10765:35;10832:3;10817:19;;10441:401::o;10847:406::-;11049:2;11031:21;;;11088:2;11068:18;;;11061:30;11127:34;11122:2;11107:18;;11100:62;-1:-1:-1;;;11193:2:14;11178:18;;11171:40;11243:3;11228:19;;10847:406::o;11258:125::-;11323:9;;;11344:10;;;11341:36;;;11357:18;;:::i;11388:465::-;11645:2;11634:9;11627:21;11608:4;11671:56;11723:2;11712:9;11708:18;11700:6;11671:56;:::i;:::-;11775:9;11767:6;11763:22;11758:2;11747:9;11743:18;11736:50;11803:44;11840:6;11832;11803:44;:::i;:::-;11795:52;11388:465;-1:-1:-1;;;;;11388:465:14:o;12521:827::-;-1:-1:-1;;;;;12918:15:14;;;12900:34;;12970:15;;12965:2;12950:18;;12943:43;12880:3;13017:2;13002:18;;12995:31;;;12843:4;;13049:57;;13086:19;;13078:6;13049:57;:::i;:::-;13154:9;13146:6;13142:22;13137:2;13126:9;13122:18;13115:50;13188:44;13225:6;13217;13188:44;:::i;:::-;13174:58;;13281:9;13273:6;13269:22;13263:3;13252:9;13248:19;13241:51;13309:33;13335:6;13327;13309:33;:::i;:::-;13301:41;12521:827;-1:-1:-1;;;;;;;;12521:827:14:o;13353:249::-;13422:6;13475:2;13463:9;13454:7;13450:23;13446:32;13443:52;;;13491:1;13488;13481:12;13443:52;13523:9;13517:16;13542:30;13566:5;13542:30;:::i;13607:179::-;13642:3;13684:1;13666:16;13663:23;13660:120;;;13730:1;13727;13724;13709:23;-1:-1:-1;13767:1:14;13761:8;13756:3;13752:18;13660:120;13607:179;:::o;13791:671::-;13830:3;13872:4;13854:16;13851:26;13848:39;;;13791:671;:::o;13848:39::-;13914:2;13908:9;-1:-1:-1;;13979:16:14;13975:25;;13972:1;13908:9;13951:50;14030:4;14024:11;14054:16;14089:18;14160:2;14153:4;14145:6;14141:17;14138:25;14133:2;14125:6;14122:14;14119:45;14116:58;;;14167:5;;;;;13791:671;:::o;14116:58::-;14204:6;14198:4;14194:17;14183:28;;14240:3;14234:10;14267:2;14259:6;14256:14;14253:27;;;14273:5;;;;;;13791:671;:::o;14253:27::-;14357:2;14338:16;14332:4;14328:27;14324:36;14317:4;14308:6;14303:3;14299:16;14295:27;14292:69;14289:82;;;14364:5;;;;;;13791:671;:::o;14289:82::-;14380:57;14431:4;14422:6;14414;14410:19;14406:30;14400:4;14380:57;:::i;:::-;-1:-1:-1;14453:3:14;;13791:671;-1:-1:-1;;;;;13791:671:14:o;14888:404::-;15090:2;15072:21;;;15129:2;15109:18;;;15102:30;15168:34;15163:2;15148:18;;15141:62;-1:-1:-1;;;15234:2:14;15219:18;;15212:38;15282:3;15267:19;;14888:404::o;15297:561::-;-1:-1:-1;;;;;15594:15:14;;;15576:34;;15646:15;;15641:2;15626:18;;15619:43;15693:2;15678:18;;15671:34;;;15736:2;15721:18;;15714:34;;;15556:3;15779;15764:19;;15757:32;;;15519:4;;15806:46;;15832:19;;15824:6;15806:46;:::i;:::-;15798:54;15297:561;-1:-1:-1;;;;;;;15297:561:14:o"},"gasEstimates":{"creation":{"codeDepositCost":"999600","executionCost":"1041","totalCost":"1000641"},"external":{"balanceOf(address,uint256)":"2680","balanceOfBatch(address[],uint256[])":"infinite","isApprovedForAll(address,address)":"infinite","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26705","supportsInterface(bytes4)":"555","uri(uint256)":"infinite"},"internal":{"__ERC1155_init(string memory)":"infinite","__ERC1155_init_unchained(string memory)":"infinite","_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_asSingletonArray(uint256)":"infinite","_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_burn(address,uint256,uint256)":"infinite","_burnBatch(address,uint256[] memory,uint256[] memory)":"infinite","_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)":"infinite","_mint(address,uint256,uint256,bytes memory)":"infinite","_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_safeTransferFrom(address,address,uint256,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_setURI(string memory)":"infinite"}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":\"ERC1155Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155Upgradeable.sol\\\";\\nimport \\\"./IERC1155ReceiverUpgradeable.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURIUpgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {\\n    using AddressUpgradeable for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\\n        __ERC1155_init_unchained(uri_);\\n    }\\n\\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155Upgradeable).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(\\n        address from,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[47] private __gap;\\n}\\n\",\"keccak256\":\"0x6de308cde403f95519bf4b25123cbfe9126f2e0212564bb2ad3c23ac99f1a9cb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2093,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":2137,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":197,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"_balances","offset":0,"slot":"101","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":203,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"_operatorApprovals","offset":0,"slot":"102","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":205,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"_uri","offset":0,"slot":"103","type":"t_string_storage"},{"astId":1412,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"__gap","offset":0,"slot":"104","type":"t_array(t_uint256)47_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol":{"IERC1155ReceiverUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"_Available since v3.1._","kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":\"IERC1155ReceiverUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol":{"IERC1155Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":\"IERC1155Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"ERC1155SupplyUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.","kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"exists(uint256)":{"details":"Indicates whether any token exist with a given id, or not."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"totalSupply(uint256)":{"details":"Total amount of tokens in with a given id."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","exists(uint256)":"4f558e79","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","totalSupply(uint256)":"bd85b039","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":\"ERC1155SupplyUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155Upgradeable.sol\\\";\\nimport \\\"./IERC1155ReceiverUpgradeable.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURIUpgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {\\n    using AddressUpgradeable for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\\n        __ERC1155_init_unchained(uri_);\\n    }\\n\\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155Upgradeable).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(\\n        address from,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[47] private __gap;\\n}\\n\",\"keccak256\":\"0x6de308cde403f95519bf4b25123cbfe9126f2e0212564bb2ad3c23ac99f1a9cb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1155Upgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\\n *\\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\\n * clearly identified. Note: While a totalSupply of 1 might mean the\\n * corresponding is an NFT, there is no guarantees that no other token with the\\n * same id are not going to be minted.\\n */\\nabstract contract ERC1155SupplyUpgradeable is Initializable, ERC1155Upgradeable {\\n    function __ERC1155Supply_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1155Supply_init_unchained() internal onlyInitializing {\\n    }\\n    mapping(uint256 => uint256) private _totalSupply;\\n\\n    /**\\n     * @dev Total amount of tokens in with a given id.\\n     */\\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\\n        return _totalSupply[id];\\n    }\\n\\n    /**\\n     * @dev Indicates whether any token exist with a given id, or not.\\n     */\\n    function exists(uint256 id) public view virtual returns (bool) {\\n        return ERC1155SupplyUpgradeable.totalSupply(id) > 0;\\n    }\\n\\n    /**\\n     * @dev See {ERC1155-_beforeTokenTransfer}.\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        if (from == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                _totalSupply[ids[i]] += amounts[i];\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                uint256 id = ids[i];\\n                uint256 amount = amounts[i];\\n                uint256 supply = _totalSupply[id];\\n                require(supply >= amount, \\\"ERC1155: burn amount exceeds totalSupply\\\");\\n                unchecked {\\n                    _totalSupply[id] = supply - amount;\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xf7bdbcbb9fcf42997f280db8c02070e9c561406e6971ff680c6c43f92065ac9e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2093,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":2137,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":197,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_balances","offset":0,"slot":"101","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":203,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_operatorApprovals","offset":0,"slot":"102","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":205,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_uri","offset":0,"slot":"103","type":"t_string_storage"},{"astId":1412,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"__gap","offset":0,"slot":"104","type":"t_array(t_uint256)47_storage"},{"astId":1601,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_totalSupply","offset":0,"slot":"151","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1752,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol":{"IERC1155MetadataURIUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._","kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"uri(uint256)":{"details":"Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":\"IERC1155MetadataURIUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eae6293f20f60487b38e04fe85a3ddce718a1e806544baafb89b2fc191a6381164736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xE6 0x29 EXTCODEHASH KECCAK256 0xF6 DIV DUP8 0xB3 DUP15 DIV INVALID DUP6 LOG3 0xDD 0xCE PUSH18 0x8A1E806544BAAFB89B2FC191A6381164736F PUSH13 0x63430008110033000000000000 ","sourceMap":"194:8087:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8087:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eae6293f20f60487b38e04fe85a3ddce718a1e806544baafb89b2fc191a6381164736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xE6 0x29 EXTCODEHASH KECCAK256 0xF6 DIV DUP8 0xB3 DUP15 DIV INVALID DUP6 LOG3 0xDD 0xCE PUSH18 0x8A1E806544BAAFB89B2FC191A6381164736F PUSH13 0x63430008110033000000000000 ","sourceMap":"194:8087:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2093,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2137,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2158,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/HValue.sol":{"HValue":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"Hpoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMetadataURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"controller","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"exchangeHValue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"exchangeHoliday","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exchangeLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"exchangeTimes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hashPunk","outputs":[{"internalType":"contract IHashPunk","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyEnd","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"negtiveValues","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"negtiveValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"passId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"resetCurrentTimeStamp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"resetExchangeTimes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseUri","type":"string"}],"name":"setBaseUri","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_controller","type":"address"}],"name":"setController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IHashPunk","name":"_hashPunk","type":"address"}],"name":"setHashPunk","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"voucher","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"exists(uint256)":{"details":"Indicates whether any token exist with a given id, or not."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"totalSupply(uint256)":{"details":"Total amount of tokens in with a given id."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052600160d055600260d155600360d255600160d3556101f460d455600360d55534801561002f57600080fd5b50612c188061003f6000396000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c80638da5cb5b11610130578063cdda418c116100b8578063f5298aca1161007c578063f5298aca146104d9578063f62d1888146104ec578063f77c4791146104ff578063f7e056ee14610512578063f96b7bf91461051b57600080fd5b8063cdda418c14610465578063d717b05e1461046e578063e1012a8914610477578063e985e9c51461048a578063f242432a146104c657600080fd5b80639ba138c8116100ff5780639ba138c8146103f9578063a0bcfc7f1461040c578063a22cb4651461041f578063a5afb7e014610432578063bd85b0391461044557600080fd5b80638da5cb5b146103a057806392eefe9b146103cb57806395d89b41146103de5780639642903f146103e657600080fd5b80634c25e11f116101b35780636be55bb4116101825780636be55bb414610349578063731133e91461035157806383d18f7a14610364578063887be0521461036d5780638b0bb0691461038057600080fd5b80634c25e11f146102df5780634e1273f4146102ff5780634f558e791461031f5780635b2bd79e1461034157600080fd5b80630e89341c116101fa5780630e89341c146102925780632a36c108146102a55780632eb2c2d6146102ba578063340a9a1c146102cd578063444b7aaf146102d657600080fd5b8062fdd58e1461022b57806301ffc9a71461025157806306fdde03146102745780630e47152514610289575b600080fd5b61023e610239366004611e2b565b610523565b6040519081526020015b60405180910390f35b61026461025f366004611e6d565b6105be565b6040519015158152602001610248565b61027c61060e565b6040516102489190611ee1565b61023e60d35481565b61027c6102a0366004611ef4565b61069c565b6102b86102b3366004612052565b6106d0565b005b6102b86102c8366004612156565b610742565b61023e60ce5481565b61023e60d05481565b61023e6102ed366004612203565b60d76020526000908152604090205481565b61031261030d366004612220565b61078e565b60405161024891906122be565b61026461032d366004611ef4565b600090815260976020526040902054151590565b61027c6108b7565b6102b86108c4565b6102b861035f3660046122d1565b6108f4565b61023e60d15481565b6102b861037b366004612203565b61092a565b61023e61038e366004612203565b60d66020526000908152604090205481565b60cb546103b3906001600160a01b031681565b6040516001600160a01b039091168152602001610248565b6102b86103d9366004612203565b610976565b61027c6109c2565b6102b86103f4366004611ef4565b6109cf565b60cd546103b3906001600160a01b031681565b6102b861041a366004612333565b610ab7565b6102b861042d366004612383565b610af1565b6102b8610440366004611ef4565b610afc565b61023e610453366004611ef4565b60009081526097602052604090205490565b61023e60d25481565b61023e60d55481565b6102b86104853660046123c1565b610ca3565b610264610498366004612434565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6102b86104d4366004612462565b610d75565b6102b86104e73660046124ca565b610dba565b6102b86104fa366004612333565b610df4565b60cc546103b3906001600160a01b031681565b61023e60d45481565b6102b8610f76565b60006001600160a01b0383166105935760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060008181526065602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806105ef57506001600160e01b031982166303a24d0760e21b145b806105b857506301ffc9a760e01b6001600160e01b03198316146105b8565b60c9805461061b906124ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610647906124ff565b80156106945780601f1061066957610100808354040283529160200191610694565b820191906000526020600020905b81548152906001019060200180831161067757829003601f168201915b505050505081565b606060cf6106a983610fdf565b6040516020016106ba929190612539565b6040516020818303038152906040529050919050565b60cb546001600160a01b031633146106fa5760405162461bcd60e51b815260040161058a906125c0565b60005b835181101561073c5761072a84828151811061071b5761071b6125f7565b6020026020010151848461110a565b8061073481612623565b9150506106fd565b50505050565b6001600160a01b03851633148061075e575061075e8533610498565b61077a5760405162461bcd60e51b815260040161058a9061263c565b61078785858585856112a9565b5050505050565b606081518351146107f35760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161058a565b600083516001600160401b0381111561080e5761080e611f0d565b604051908082528060200260200182016040528015610837578160200160208202803683370190505b50905060005b84518110156108af5761088285828151811061085b5761085b6125f7565b6020026020010151858381518110610875576108756125f7565b6020026020010151610523565b828281518110610894576108946125f7565b60209081029190910101526108a881612623565b905061083d565b509392505050565b60cf805461061b906124ff565b60cb546001600160a01b031633146108ee5760405162461bcd60e51b815260040161058a906125c0565b4260ce55565b60cc546001600160a01b0316331461091e5760405162461bcd60e51b815260040161058a9061268a565b61073c8484848461144e565b60cb546001600160a01b031633146109545760405162461bcd60e51b815260040161058a906125c0565b60cd80546001600160a01b0319166001600160a01b0392909216919091179055565b60cb546001600160a01b031633146109a05760405162461bcd60e51b815260040161058a906125c0565b60cc80546001600160a01b0319166001600160a01b0392909216919091179055565b60ca805461061b906124ff565b60d55433600090815260d660205260409020541115610a285760405162461bcd60e51b8152602060048201526015602482015274195e18d9595908195e18da185b99d9481b1a5b5a5d605a1b604482015260640161058a565b80610a353360d254610523565b1015610a835760405162461bcd60e51b815260206004820152601a60248201527f4856616c75653a206e6f7420656e6f75676820766f7563686572000000000000604482015260640161058a565b610a903360d25483611539565b33600090815260d6602052604081208054839290610aaf9084906126ce565b909155505050565b60cb546001600160a01b03163314610ae15760405162461bcd60e51b815260040161058a906125c0565b60cf610aed8282612727565b5050565b610aed338383611655565b60cd546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e90602401602060405180830381865afa158015610b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6991906127e6565b6001600160a01b031614610bb85760405162461bcd60e51b8152602060048201526016602482015275242b30b63ab29d103737ba10383ab7359037bbb732b960511b604482015260640161058a565b60d3548110158015610bcc575060d4548111155b610c115760405162461bcd60e51b81526020600482015260166024820152754856616c75653a206e6f74206c75636b792070756e6b60501b604482015260640161058a565b610c2f3360d15460466040518060200160405280600081525061144e565b610c3d3360d2546001611539565b60cd546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015610c8f57600080fd5b505af1158015610787573d6000803e3d6000fd5b60cb546001600160a01b03163314610ccd5760405162461bcd60e51b815260040161058a906125c0565b60005b8551811015610d6d57610cfe868281518110610cee57610cee6125f7565b6020026020010151868685611735565b828181518110610d1057610d106125f7565b602002602001015160d76000888481518110610d2e57610d2e6125f7565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055508080610d6590612623565b915050610cd0565b505050505050565b6001600160a01b038516331480610d915750610d918533610498565b610dad5760405162461bcd60e51b815260040161058a9061263c565b6107878585858585611890565b60cc546001600160a01b03163314610de45760405162461bcd60e51b815260040161058a9061268a565b610def838383611539565b505050565b600054610100900460ff1615808015610e145750600054600160ff909116105b80610e2e5750303b158015610e2e575060005460ff166001145b610e915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161058a565b6000805460ff191660011790558015610eb4576000805461ff0019166101001790555b610ebc6119cc565b6040805180820190915260068152654856616c756560d01b602082015260c990610ee69082612727565b50604080518082019091526002815261242b60f11b602082015260ca90610f0d9082612727565b50610f1782610ab7565b60cb80546001600160a01b031916331790554260ce558015610aed576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60ce54610f87906301e133806126ce565b421015610fcd5760405162461bcd60e51b8152602060048201526014602482015273242b30b63ab29d103737ba103732bb903cb2b0b960611b604482015260640161058a565b33600090815260d66020526040812055565b6060816000036110065750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611030578061101a81612623565b91506110299050600a83612803565b915061100a565b6000816001600160401b0381111561104a5761104a611f0d565b6040519080825280601f01601f191660200182016040528015611074576020820181803683370190505b509050815b85156111015761108a600182612825565b90506000611099600a88612803565b6110a490600a612838565b6110ae9088612825565b6110b990603061284f565b905060008160f81b9050808484815181106110d6576110d66125f7565b60200101906001600160f81b031916908160001a9053506110f8600a89612803565b97505050611079565b50949350505050565b6001600160a01b0383166111305760405162461bcd60e51b815260040161058a90612868565b80518251146111515760405162461bcd60e51b815260040161058a906128ab565b600033905061117481856000868660405180602001604052806000815250611a39565b60005b835181101561123c576000848281518110611194576111946125f7565b6020026020010151905060008483815181106111b2576111b26125f7565b60209081029190910181015160008481526065835260408082206001600160a01b038c1683529093529190912054909150818110156112035760405162461bcd60e51b815260040161058a906128f3565b60009283526065602090815260408085206001600160a01b038b168652909152909220910390558061123481612623565b915050611177565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161128d929190612937565b60405180910390a460408051602081019091526000905261073c565b81518351146112ca5760405162461bcd60e51b815260040161058a906128ab565b6001600160a01b0384166112f05760405162461bcd60e51b815260040161058a90612965565b336112ff818787878787611a39565b60005b84518110156113e857600085828151811061131f5761131f6125f7565b60200260200101519050600085838151811061133d5761133d6125f7565b60209081029190910181015160008481526065835260408082206001600160a01b038e16835290935291909120549091508181101561138e5760405162461bcd60e51b815260040161058a906129aa565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906113cd9084906126ce565b92505081905550505050806113e190612623565b9050611302565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611438929190612937565b60405180910390a4610d6d818787878787611bb2565b6001600160a01b0384166114745760405162461bcd60e51b815260040161058a906129f4565b33600061148085611d0d565b9050600061148d85611d0d565b905061149e83600089858589611a39565b60008681526065602090815260408083206001600160a01b038b168452909152812080548792906114d09084906126ce565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461153083600089898989611d58565b50505050505050565b6001600160a01b03831661155f5760405162461bcd60e51b815260040161058a90612868565b33600061156b84611d0d565b9050600061157884611d0d565b905061159883876000858560405180602001604052806000815250611a39565b60008581526065602090815260408083206001600160a01b038a168452909152902054848110156115db5760405162461bcd60e51b815260040161058a906128f3565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052611530565b816001600160a01b0316836001600160a01b0316036116c85760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161058a565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661175b5760405162461bcd60e51b815260040161058a906129f4565b815183511461177c5760405162461bcd60e51b815260040161058a906128ab565b3361178c81600087878787611a39565b60005b8451811015611828578381815181106117aa576117aa6125f7565b6020026020010151606560008784815181106117c8576117c86125f7565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461181091906126ce565b9091555081905061182081612623565b91505061178f565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611879929190612937565b60405180910390a461078781600087878787611bb2565b6001600160a01b0384166118b65760405162461bcd60e51b815260040161058a90612965565b3360006118c285611d0d565b905060006118cf85611d0d565b90506118df838989858589611a39565b60008681526065602090815260408083206001600160a01b038c168452909152902054858110156119225760405162461bcd60e51b815260040161058a906129aa565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906119619084906126ce565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46119c1848a8a8a8a8a611d58565b505050505050505050565b600054610100900460ff16611a375760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161058a565b565b6001600160a01b038516611ac05760005b8351811015611abe57828181518110611a6557611a656125f7565b602002602001015160976000868481518110611a8357611a836125f7565b602002602001015181526020019081526020016000206000828254611aa891906126ce565b90915550611ab7905081612623565b9050611a4a565b505b6001600160a01b038416610d6d5760005b8351811015611530576000848281518110611aee57611aee6125f7565b602002602001015190506000848381518110611b0c57611b0c6125f7565b6020026020010151905060006097600084815260200190815260200160002054905081811015611b8f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b606482015260840161058a565b60009283526097602052604090922091039055611bab81612623565b9050611ad1565b6001600160a01b0384163b15610d6d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611bf69089908990889088908890600401612a35565b6020604051808303816000875af1925050508015611c31575060408051601f3d908101601f19168201909252611c2e91810190612a93565b60015b611cdd57611c3d612ab0565b806308c379a003611c765750611c51612acc565b80611c5c5750611c78565b8060405162461bcd60e51b815260040161058a9190611ee1565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161058a565b6001600160e01b0319811663bc197c8160e01b146115305760405162461bcd60e51b815260040161058a90612b55565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611d4757611d476125f7565b602090810291909101015292915050565b6001600160a01b0384163b15610d6d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611d9c9089908990889088908890600401612b9d565b6020604051808303816000875af1925050508015611dd7575060408051601f3d908101601f19168201909252611dd491810190612a93565b60015b611de357611c3d612ab0565b6001600160e01b0319811663f23a6e6160e01b146115305760405162461bcd60e51b815260040161058a90612b55565b6001600160a01b0381168114611e2857600080fd5b50565b60008060408385031215611e3e57600080fd5b8235611e4981611e13565b946020939093013593505050565b6001600160e01b031981168114611e2857600080fd5b600060208284031215611e7f57600080fd5b8135611e8a81611e57565b9392505050565b60005b83811015611eac578181015183820152602001611e94565b50506000910152565b60008151808452611ecd816020860160208601611e91565b601f01601f19169290920160200192915050565b602081526000611e8a6020830184611eb5565b600060208284031215611f0657600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715611f4857611f48611f0d565b6040525050565b60006001600160401b03821115611f6857611f68611f0d565b5060051b60200190565b600082601f830112611f8357600080fd5b81356020611f9082611f4f565b604051611f9d8282611f23565b83815260059390931b8501820192828101915086841115611fbd57600080fd5b8286015b84811015611fe1578035611fd481611e13565b8352918301918301611fc1565b509695505050505050565b600082601f830112611ffd57600080fd5b8135602061200a82611f4f565b6040516120178282611f23565b83815260059390931b850182019282810191508684111561203757600080fd5b8286015b84811015611fe1578035835291830191830161203b565b60008060006060848603121561206757600080fd5b83356001600160401b038082111561207e57600080fd5b61208a87838801611f72565b945060208601359150808211156120a057600080fd5b6120ac87838801611fec565b935060408601359150808211156120c257600080fd5b506120cf86828701611fec565b9150509250925092565b60006001600160401b038311156120f2576120f2611f0d565b604051612109601f8501601f191660200182611f23565b80915083815284848401111561211e57600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261214757600080fd5b611e8a838335602085016120d9565b600080600080600060a0868803121561216e57600080fd5b853561217981611e13565b9450602086013561218981611e13565b935060408601356001600160401b03808211156121a557600080fd5b6121b189838a01611fec565b945060608801359150808211156121c757600080fd5b6121d389838a01611fec565b935060808801359150808211156121e957600080fd5b506121f688828901612136565b9150509295509295909350565b60006020828403121561221557600080fd5b8135611e8a81611e13565b6000806040838503121561223357600080fd5b82356001600160401b038082111561224a57600080fd5b61225686838701611f72565b9350602085013591508082111561226c57600080fd5b5061227985828601611fec565b9150509250929050565b600081518084526020808501945080840160005b838110156122b357815187529582019590820190600101612297565b509495945050505050565b602081526000611e8a6020830184612283565b600080600080608085870312156122e757600080fd5b84356122f281611e13565b9350602085013592506040850135915060608501356001600160401b0381111561231b57600080fd5b61232787828801612136565b91505092959194509250565b60006020828403121561234557600080fd5b81356001600160401b0381111561235b57600080fd5b8201601f8101841361236c57600080fd5b61237b848235602084016120d9565b949350505050565b6000806040838503121561239657600080fd5b82356123a181611e13565b9150602083013580151581146123b657600080fd5b809150509250929050565b600080600080600060a086880312156123d957600080fd5b85356001600160401b03808211156123f057600080fd5b6123fc89838a01611f72565b9650602088013591508082111561241257600080fd5b61241e89838a01611fec565b955060408801359150808211156121a557600080fd5b6000806040838503121561244757600080fd5b823561245281611e13565b915060208301356123b681611e13565b600080600080600060a0868803121561247a57600080fd5b853561248581611e13565b9450602086013561249581611e13565b9350604086013592506060860135915060808601356001600160401b038111156124be57600080fd5b6121f688828901612136565b6000806000606084860312156124df57600080fd5b83356124ea81611e13565b95602085013595506040909401359392505050565b600181811c9082168061251357607f821691505b60208210810361253357634e487b7160e01b600052602260045260246000fd5b50919050565b6000808454612547816124ff565b6001828116801561255f5760018114612574576125a3565b60ff19841687528215158302870194506125a3565b8860005260208060002060005b8581101561259a5781548a820152908401908201612581565b50505082870194505b5050505083516125b7818360208801611e91565b01949350505050565b6020808252601f908201527f4856616c75653a2063616c6c6572206973206e6f7420746865206f776e657200604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016126355761263561260d565b5060010190565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b60208082526024908201527f4856616c75653a2063616c6c6572206973206e6f742074686520636f6e74726f604082015263363632b960e11b606082015260800190565b808201808211156105b8576105b861260d565b601f821115610def57600081815260208120601f850160051c810160208610156127085750805b601f850160051c820191505b81811015610d6d57828155600101612714565b81516001600160401b0381111561274057612740611f0d565b6127548161274e84546124ff565b846126e1565b602080601f83116001811461278957600084156127715750858301515b600019600386901b1c1916600185901b178555610d6d565b600085815260208120601f198616915b828110156127b857888601518255948401946001909101908401612799565b50858210156127d65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156127f857600080fd5b8151611e8a81611e13565b60008261282057634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156105b8576105b861260d565b80820281158282048414176105b8576105b861260d565b60ff81811683821601908111156105b8576105b861260d565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b60408152600061294a6040830185612283565b828103602084015261295c8185612283565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090612a6190830186612283565b8281036060840152612a738186612283565b90508281036080840152612a878185611eb5565b98975050505050505050565b600060208284031215612aa557600080fd5b8151611e8a81611e57565b600060033d1115612ac95760046000803e5060005160e01c5b90565b600060443d1015612ada5790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715612b0957505050505090565b8285019150815181811115612b215750505050505090565b843d8701016020828501011115612b3b5750505050505090565b612b4a60208286010187611f23565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612bd790830184611eb5565b97965050505050505056fea26469706673582212208894d3b1515c40488515bbc8c064fe58fbe4f0f26968e2d36f879383a8f4a12264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xD0 SSTORE PUSH1 0x2 PUSH1 0xD1 SSTORE PUSH1 0x3 PUSH1 0xD2 SSTORE PUSH1 0x1 PUSH1 0xD3 SSTORE PUSH2 0x1F4 PUSH1 0xD4 SSTORE PUSH1 0x3 PUSH1 0xD5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C18 DUP1 PUSH2 0x3F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x226 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xCDDA418C GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xF5298ACA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0xF96B7BF9 EQ PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xD717B05E EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xE1012A89 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9BA138C8 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x9BA138C8 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xA0BCFC7F EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xA5AFB7E0 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x9642903F EQ PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4C25E11F GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x6BE55BB4 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x6BE55BB4 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x887BE052 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x8B0BB069 EQ PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4C25E11F EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x2A36C108 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x340A9A1C EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x444B7AAF EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE471525 EQ PUSH2 0x289 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23E PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x248 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2052 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2156 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xCE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2203 JUMP JUMPDEST PUSH1 0xD7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x312 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x2220 JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x264 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x35F CALLDATASIZE PUSH1 0x4 PUSH2 0x22D1 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH2 0x23E PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x2203 JUMP JUMPDEST PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH2 0x3B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x248 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x9C2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH2 0x3B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x2333 JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x42D CALLDATASIZE PUSH1 0x4 PUSH2 0x2383 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x23E PUSH2 0x453 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C1 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x2434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x24CA JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x4FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2333 JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH2 0x3B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x593 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x5EF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x5B8 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH2 0x61B SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x647 SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x694 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x669 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x694 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x677 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCF PUSH2 0x6A9 DUP4 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6BA SWAP3 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x73C JUMPI PUSH2 0x72A DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 PUSH2 0x110A JUMP JUMPDEST DUP1 PUSH2 0x734 DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6FD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x75E JUMPI POP PUSH2 0x75E DUP6 CALLER PUSH2 0x498 JUMP JUMPDEST PUSH2 0x77A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x787 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x12A9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x80E JUMPI PUSH2 0x80E PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x837 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH2 0x882 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x85B JUMPI PUSH2 0x85B PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x875 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x523 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x8A8 DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP1 POP PUSH2 0x83D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xCF DUP1 SLOAD PUSH2 0x61B SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST TIMESTAMP PUSH1 0xCE SSTORE JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x268A JUMP JUMPDEST PUSH2 0x73C DUP5 DUP5 DUP5 DUP5 PUSH2 0x144E JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST PUSH1 0xCD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH2 0x61B SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0xD5 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x195E18D9595908195E18DA185B99D9481B1A5B5A5D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58A JUMP JUMPDEST DUP1 PUSH2 0xA35 CALLER PUSH1 0xD2 SLOAD PUSH2 0x523 JUMP JUMPDEST LT ISZERO PUSH2 0xA83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4856616C75653A206E6F7420656E6F75676820766F7563686572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58A JUMP JUMPDEST PUSH2 0xA90 CALLER PUSH1 0xD2 SLOAD DUP4 PUSH2 0x1539 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAAF SWAP1 DUP5 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST PUSH1 0xCF PUSH2 0xAED DUP3 DUP3 PUSH2 0x2727 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAED CALLER DUP4 DUP4 PUSH2 0x1655 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB69 SWAP2 SWAP1 PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x242B30B63AB29D103737BA10383AB7359037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0xD3 SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xBCC JUMPI POP PUSH1 0xD4 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4856616C75653A206E6F74206C75636B792070756E6B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58A JUMP JUMPDEST PUSH2 0xC2F CALLER PUSH1 0xD1 SLOAD PUSH1 0x46 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x144E JUMP JUMPDEST PUSH2 0xC3D CALLER PUSH1 0xD2 SLOAD PUSH1 0x1 PUSH2 0x1539 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x787 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xD6D JUMPI PUSH2 0xCFE DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCEE JUMPI PUSH2 0xCEE PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP7 DUP6 PUSH2 0x1735 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD10 JUMPI PUSH2 0xD10 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xD7 PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD2E JUMPI PUSH2 0xD2E PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xD65 SWAP1 PUSH2 0x2623 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCD0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xD91 JUMPI POP PUSH2 0xD91 DUP6 CALLER PUSH2 0x498 JUMP JUMPDEST PUSH2 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x787 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x268A JUMP JUMPDEST PUSH2 0xDEF DUP4 DUP4 DUP4 PUSH2 0x1539 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xE14 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xE2E JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE2E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEB4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEBC PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x4856616C7565 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC9 SWAP1 PUSH2 0xEE6 SWAP1 DUP3 PUSH2 0x2727 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x242B PUSH1 0xF1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xCA SWAP1 PUSH2 0xF0D SWAP1 DUP3 PUSH2 0x2727 JUMP JUMPDEST POP PUSH2 0xF17 DUP3 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0xCE SSTORE DUP1 ISZERO PUSH2 0xAED JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xCE SLOAD PUSH2 0xF87 SWAP1 PUSH4 0x1E13380 PUSH2 0x26CE JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x242B30B63AB29D103737BA103732BB903CB2B0B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1006 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1030 JUMPI DUP1 PUSH2 0x101A DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP2 POP PUSH2 0x1029 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2803 JUMP JUMPDEST SWAP2 POP PUSH2 0x100A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x104A JUMPI PUSH2 0x104A PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1074 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0x1101 JUMPI PUSH2 0x108A PUSH1 0x1 DUP3 PUSH2 0x2825 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1099 PUSH1 0xA DUP9 PUSH2 0x2803 JUMP JUMPDEST PUSH2 0x10A4 SWAP1 PUSH1 0xA PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x10AE SWAP1 DUP9 PUSH2 0x2825 JUMP JUMPDEST PUSH2 0x10B9 SWAP1 PUSH1 0x30 PUSH2 0x284F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x10D6 JUMPI PUSH2 0x10D6 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x10F8 PUSH1 0xA DUP10 PUSH2 0x2803 JUMP JUMPDEST SWAP8 POP POP POP PUSH2 0x1079 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2868 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x1174 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1194 JUMPI PUSH2 0x1194 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11B2 JUMPI PUSH2 0x11B2 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0x1234 DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1177 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x128D SWAP3 SWAP2 SWAP1 PUSH2 0x2937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x73C JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x12CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x12F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2965 JUMP JUMPDEST CALLER PUSH2 0x12FF DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x13E8 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x131F JUMPI PUSH2 0x131F PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x133D JUMPI PUSH2 0x133D PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x138E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x13CD SWAP1 DUP5 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x13E1 SWAP1 PUSH2 0x2623 JUMP JUMPDEST SWAP1 POP PUSH2 0x1302 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1438 SWAP3 SWAP2 SWAP1 PUSH2 0x2937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xD6D DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x29F4 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1480 DUP6 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x148D DUP6 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH2 0x149E DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x14D0 SWAP1 DUP5 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1530 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1D58 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2868 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x156B DUP5 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1578 DUP5 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH2 0x1598 DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x15DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x1530 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x16C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x175B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x29F4 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x177C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x28AB JUMP JUMPDEST CALLER PUSH2 0x178C DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1828 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x17AA JUMPI PUSH2 0x17AA PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x65 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x17C8 JUMPI PUSH2 0x17C8 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1810 SWAP2 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x1820 DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x178F JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1879 SWAP3 SWAP2 SWAP1 PUSH2 0x2937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x787 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x18B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2965 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x18C2 DUP6 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18CF DUP6 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH2 0x18DF DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1961 SWAP1 DUP5 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19C1 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1D58 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1AC0 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1ABE JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1A65 JUMPI PUSH2 0x1A65 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x97 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A83 JUMPI PUSH2 0x1A83 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AA8 SWAP2 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1AB7 SWAP1 POP DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A4A JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD6D JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1530 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1AEE JUMPI PUSH2 0x1AEE PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B0C JUMPI PUSH2 0x1B0C PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1B8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E74206578636565647320746F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x616C537570706C79 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0x1BAB DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1BF6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C31 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1C2E SWAP2 DUP2 ADD SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1CDD JUMPI PUSH2 0x1C3D PUSH2 0x2AB0 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1C76 JUMPI POP PUSH2 0x1C51 PUSH2 0x2ACC JUMP JUMPDEST DUP1 PUSH2 0x1C5C JUMPI POP PUSH2 0x1C78 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2B55 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D47 JUMPI PUSH2 0x1D47 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1D9C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2B9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1DD7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1DD4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1DE3 JUMPI PUSH2 0x1C3D PUSH2 0x2AB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2B55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E49 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E8A DUP2 PUSH2 0x1E57 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EAC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E94 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1ECD DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E8A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F48 JUMPI PUSH2 0x1F48 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1F68 JUMPI PUSH2 0x1F68 PUSH2 0x1F0D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1F90 DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9D DUP3 DUP3 PUSH2 0x1F23 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1FBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1FE1 JUMPI DUP1 CALLDATALOAD PUSH2 0x1FD4 DUP2 PUSH2 0x1E13 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1FC1 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x200A DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2017 DUP3 DUP3 PUSH2 0x1F23 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x2037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1FE1 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x203B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208A DUP8 DUP4 DUP9 ADD PUSH2 0x1F72 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20AC DUP8 DUP4 DUP9 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20CF DUP7 DUP3 DUP8 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x20F2 JUMPI PUSH2 0x20F2 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2109 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1F23 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x211E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E8A DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x20D9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x216E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2179 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2189 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x21A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21B1 DUP10 DUP4 DUP11 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21D3 DUP10 DUP4 DUP11 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F6 DUP9 DUP3 DUP10 ADD PUSH2 0x2136 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E8A DUP2 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x224A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2256 DUP7 DUP4 DUP8 ADD PUSH2 0x1F72 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x226C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2279 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22B3 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2297 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E8A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x22F2 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x231B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2327 DUP8 DUP3 DUP9 ADD PUSH2 0x2136 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x235B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x236C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x237B DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x20D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x23A1 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x23B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x23F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23FC DUP10 DUP4 DUP11 ADD PUSH2 0x1F72 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x241E DUP10 DUP4 DUP11 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2452 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x23B6 DUP2 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x247A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2485 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2495 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21F6 DUP9 DUP3 DUP10 ADD PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x24EA DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2513 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2533 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x2547 DUP2 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x255F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2574 JUMPI PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x25A3 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x259A JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x2581 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x25B7 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1E91 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x4856616C75653A2063616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2635 JUMPI PUSH2 0x2635 PUSH2 0x260D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4856616C75653A2063616C6C6572206973206E6F742074686520636F6E74726F PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x363632B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0x260D JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xDEF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2708 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD6D JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2714 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2740 JUMPI PUSH2 0x2740 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x2754 DUP2 PUSH2 0x274E DUP5 SLOAD PUSH2 0x24FF JUMP JUMPDEST DUP5 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2789 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2771 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x27B8 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2799 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x27D6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E8A DUP2 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2820 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0x260D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0x260D JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0x260D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x294A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2283 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x295C DUP2 DUP6 PUSH2 0x2283 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2A61 SWAP1 DUP4 ADD DUP7 PUSH2 0x2283 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2A73 DUP2 DUP7 PUSH2 0x2283 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2A87 DUP2 DUP6 PUSH2 0x1EB5 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E8A DUP2 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2AC9 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2ADA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2B09 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2B21 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2B3B JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2B4A PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1F23 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2BD7 SWAP1 DUP4 ADD DUP5 PUSH2 0x1EB5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SWAP5 0xD3 0xB1 MLOAD 0x5C BLOCKHASH BASEFEE DUP6 ISZERO 0xBB 0xC8 0xC0 PUSH5 0xFE58FBE4F0 CALLCODE PUSH10 0x68E2D36F879383A8F4A1 0x22 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"242:3879:12:-:0;;;632:1:13;587:46;;684:1;639:46;;736:1;691:46;;788:1;743:46;;840:3;795:48;;894:1;849:46;;242:3879:12;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Hpoint_2805":{"entryPoint":null,"id":2805,"parameterSlots":0,"returnSlots":0},"@__ERC1155Supply_init_1591":{"entryPoint":6604,"id":1591,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_1251":{"entryPoint":null,"id":1251,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1407":{"entryPoint":7437,"id":1407,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1232":{"entryPoint":null,"id":1232,"parameterSlots":6,"returnSlots":0},"@_beforeTokenTransfer_1747":{"entryPoint":6713,"id":1747,"parameterSlots":6,"returnSlots":0},"@_burnBatch_1181":{"entryPoint":4362,"id":1181,"parameterSlots":3,"returnSlots":0},"@_burn_1058":{"entryPoint":5433,"id":1058,"parameterSlots":3,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1379":{"entryPoint":7090,"id":1379,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1314":{"entryPoint":7512,"id":1314,"parameterSlots":6,"returnSlots":0},"@_mintBatch_953":{"entryPoint":5941,"id":953,"parameterSlots":4,"returnSlots":0},"@_mint_842":{"entryPoint":5198,"id":842,"parameterSlots":4,"returnSlots":0},"@_msgSender_2079":{"entryPoint":null,"id":2079,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_730":{"entryPoint":4777,"id":730,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_595":{"entryPoint":6288,"id":595,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1213":{"entryPoint":5717,"id":1213,"parameterSlots":3,"returnSlots":0},"@_uint2str_2764":{"entryPoint":4063,"id":2764,"parameterSlots":1,"returnSlots":1},"@balanceOfBatch_365":{"entryPoint":1934,"id":365,"parameterSlots":2,"returnSlots":1},"@balanceOf_301":{"entryPoint":1315,"id":301,"parameterSlots":2,"returnSlots":1},"@baseMetadataURI_2799":{"entryPoint":2231,"id":2799,"parameterSlots":0,"returnSlots":0},"@burnBatch_2453":{"entryPoint":1744,"id":2453,"parameterSlots":3,"returnSlots":0},"@burn_2492":{"entryPoint":3514,"id":2492,"parameterSlots":3,"returnSlots":0},"@controller_2792":{"entryPoint":null,"id":2792,"parameterSlots":0,"returnSlots":0},"@currentTimeStamp_2797":{"entryPoint":null,"id":2797,"parameterSlots":0,"returnSlots":0},"@exchangeHValue_2588":{"entryPoint":2812,"id":2588,"parameterSlots":1,"returnSlots":0},"@exchangeHoliday_2533":{"entryPoint":2511,"id":2533,"parameterSlots":1,"returnSlots":0},"@exchangeLimit_2817":{"entryPoint":null,"id":2817,"parameterSlots":0,"returnSlots":0},"@exchangeTimes_2821":{"entryPoint":null,"id":2821,"parameterSlots":0,"returnSlots":0},"@exists_1630":{"entryPoint":null,"id":1630,"parameterSlots":1,"returnSlots":1},"@hashPunk_2795":{"entryPoint":null,"id":2795,"parameterSlots":0,"returnSlots":0},"@initialize_2327":{"entryPoint":3572,"id":2327,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_400":{"entryPoint":null,"id":400,"parameterSlots":2,"returnSlots":1},"@isContract_1786":{"entryPoint":null,"id":1786,"parameterSlots":1,"returnSlots":1},"@luckyEnd_2814":{"entryPoint":null,"id":2814,"parameterSlots":0,"returnSlots":0},"@luckyStart_2811":{"entryPoint":null,"id":2811,"parameterSlots":0,"returnSlots":0},"@mintBatch_2417":{"entryPoint":3235,"id":2417,"parameterSlots":5,"returnSlots":0},"@mint_2474":{"entryPoint":2292,"id":2474,"parameterSlots":4,"returnSlots":0},"@name_2786":{"entryPoint":1550,"id":2786,"parameterSlots":0,"returnSlots":0},"@negtiveValue_2825":{"entryPoint":null,"id":2825,"parameterSlots":0,"returnSlots":0},"@owner_2790":{"entryPoint":null,"id":2790,"parameterSlots":0,"returnSlots":0},"@passId_2802":{"entryPoint":null,"id":2802,"parameterSlots":0,"returnSlots":0},"@resetCurrentTimeStamp_2612":{"entryPoint":2244,"id":2612,"parameterSlots":0,"returnSlots":0},"@resetExchangeTimes_2601":{"entryPoint":3958,"id":2601,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_478":{"entryPoint":1858,"id":478,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_438":{"entryPoint":3445,"id":438,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_382":{"entryPoint":2801,"id":382,"parameterSlots":2,"returnSlots":0},"@setBaseUri_2637":{"entryPoint":2743,"id":2637,"parameterSlots":1,"returnSlots":0},"@setController_2649":{"entryPoint":2422,"id":2649,"parameterSlots":1,"returnSlots":0},"@setHashPunk_2625":{"entryPoint":2346,"id":2625,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2132":{"entryPoint":null,"id":2132,"parameterSlots":1,"returnSlots":1},"@supportsInterface_261":{"entryPoint":1470,"id":261,"parameterSlots":1,"returnSlots":1},"@symbol_2788":{"entryPoint":2498,"id":2788,"parameterSlots":0,"returnSlots":0},"@totalSupply_1614":{"entryPoint":null,"id":1614,"parameterSlots":1,"returnSlots":1},"@uri_2669":{"entryPoint":1692,"id":2669,"parameterSlots":1,"returnSlots":1},"@voucher_2808":{"entryPoint":null,"id":2808,"parameterSlots":0,"returnSlots":0},"abi_decode_array_address_dyn":{"entryPoint":8050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":8172,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":8409,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":8502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":10214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9268,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":8534,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":9314,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":9091,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7723,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":9418,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":8913,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8736,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8274,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":9153,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes4":{"entryPoint":7789,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":10899,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IHashPunk_$2784":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":9011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":8835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":7861,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9529,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10805,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11165,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8894,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10551,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IHashPunk_$2784__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11093,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_11556822b0dbb84e42a57d7995abf090c129f85f99798a55739c0b2df8acb3f1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10483,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9788,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6495068f22747f4702ada372c895e8589607dd29d4c382d701a9201403183e08__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10597,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_716d8e8655960bf2154053439ce31facdc46548c3a16249c94ec73f924c8ba9c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dea929535f31a6a3d4da771c56c977f613aa2b2d875a3332f245e364beb66cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9664,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10344,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10666,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a102db2d7672fdad004a63c326088de6266268bad23ec664881a9c9d6d98a5b0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aec0b404f50382a0e834a5f06508507c26b41f9bce791ef403d53b5948e659cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c68bca7fa283e487dffc110655d1b436451e784bf6064e5151d72f6ebe27cd0c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10411,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10740,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":8015,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9934,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":10319,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":10243,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10296,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10277,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":9953,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":10023,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7825,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9471,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":7971,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":9763,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9741,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9719,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7949,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":10928,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":10956,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_address":{"entryPoint":7699,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":7767,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:30951:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:86:14","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:14"},"nodeType":"YulFunctionCall","src":"125:12:14"},"nodeType":"YulExpressionStatement","src":"125:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"113:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"104:3:14"},"nodeType":"YulFunctionCall","src":"104:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"117:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:14"},"nodeType":"YulFunctionCall","src":"100:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:14"},"nodeType":"YulFunctionCall","src":"89:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:14"},"nodeType":"YulFunctionCall","src":"79:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:14"},"nodeType":"YulFunctionCall","src":"72:50:14"},"nodeType":"YulIf","src":"69:70:14"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:14","type":""}],"src":"14:131:14"},{"body":{"nodeType":"YulBlock","src":"237:228:14","statements":[{"body":{"nodeType":"YulBlock","src":"283:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"292:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"295:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"285:6:14"},"nodeType":"YulFunctionCall","src":"285:12:14"},"nodeType":"YulExpressionStatement","src":"285:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"258:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"267:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"254:3:14"},"nodeType":"YulFunctionCall","src":"254:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"279:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"250:3:14"},"nodeType":"YulFunctionCall","src":"250:32:14"},"nodeType":"YulIf","src":"247:52:14"},{"nodeType":"YulVariableDeclaration","src":"308:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"321:12:14"},"nodeType":"YulFunctionCall","src":"321:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"312:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"378:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"353:24:14"},"nodeType":"YulFunctionCall","src":"353:31:14"},"nodeType":"YulExpressionStatement","src":"353:31:14"},{"nodeType":"YulAssignment","src":"393:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"403:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"393:6:14"}]},{"nodeType":"YulAssignment","src":"417:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"444:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"455:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"440:3:14"},"nodeType":"YulFunctionCall","src":"440:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"427:12:14"},"nodeType":"YulFunctionCall","src":"427:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"417:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"195:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"206:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"218:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"226:6:14","type":""}],"src":"150:315:14"},{"body":{"nodeType":"YulBlock","src":"571:76:14","statements":[{"nodeType":"YulAssignment","src":"581:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"593:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"604:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"589:3:14"},"nodeType":"YulFunctionCall","src":"589:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"581:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"623:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"634:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"616:6:14"},"nodeType":"YulFunctionCall","src":"616:25:14"},"nodeType":"YulExpressionStatement","src":"616:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"540:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"551:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"562:4:14","type":""}],"src":"470:177:14"},{"body":{"nodeType":"YulBlock","src":"696:87:14","statements":[{"body":{"nodeType":"YulBlock","src":"761:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"770:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"773:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"763:6:14"},"nodeType":"YulFunctionCall","src":"763:12:14"},"nodeType":"YulExpressionStatement","src":"763:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"719:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"730:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"741:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"746:10:14","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"737:3:14"},"nodeType":"YulFunctionCall","src":"737:20:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"726:3:14"},"nodeType":"YulFunctionCall","src":"726:32:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"716:2:14"},"nodeType":"YulFunctionCall","src":"716:43:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"709:6:14"},"nodeType":"YulFunctionCall","src":"709:51:14"},"nodeType":"YulIf","src":"706:71:14"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"685:5:14","type":""}],"src":"652:131:14"},{"body":{"nodeType":"YulBlock","src":"857:176:14","statements":[{"body":{"nodeType":"YulBlock","src":"903:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"912:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"915:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"905:6:14"},"nodeType":"YulFunctionCall","src":"905:12:14"},"nodeType":"YulExpressionStatement","src":"905:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"878:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"887:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"874:3:14"},"nodeType":"YulFunctionCall","src":"874:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"899:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"870:3:14"},"nodeType":"YulFunctionCall","src":"870:32:14"},"nodeType":"YulIf","src":"867:52:14"},{"nodeType":"YulVariableDeclaration","src":"928:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"954:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"941:12:14"},"nodeType":"YulFunctionCall","src":"941:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"932:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"997:5:14"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"973:23:14"},"nodeType":"YulFunctionCall","src":"973:30:14"},"nodeType":"YulExpressionStatement","src":"973:30:14"},{"nodeType":"YulAssignment","src":"1012:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1022:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1012:6:14"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"823:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"834:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"846:6:14","type":""}],"src":"788:245:14"},{"body":{"nodeType":"YulBlock","src":"1133:92:14","statements":[{"nodeType":"YulAssignment","src":"1143:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1155:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1166:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1151:3:14"},"nodeType":"YulFunctionCall","src":"1151:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1143:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1185:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1210:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1203:6:14"},"nodeType":"YulFunctionCall","src":"1203:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1196:6:14"},"nodeType":"YulFunctionCall","src":"1196:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1178:6:14"},"nodeType":"YulFunctionCall","src":"1178:41:14"},"nodeType":"YulExpressionStatement","src":"1178:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1102:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1113:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1124:4:14","type":""}],"src":"1038:187:14"},{"body":{"nodeType":"YulBlock","src":"1296:184:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1306:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1315:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1310:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1375:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1400:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1405:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1396:3:14"},"nodeType":"YulFunctionCall","src":"1396:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1419:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1424:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1415:3:14"},"nodeType":"YulFunctionCall","src":"1415:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:14"},"nodeType":"YulFunctionCall","src":"1409:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1389:6:14"},"nodeType":"YulFunctionCall","src":"1389:39:14"},"nodeType":"YulExpressionStatement","src":"1389:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1336:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1339:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1333:2:14"},"nodeType":"YulFunctionCall","src":"1333:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1347:19:14","statements":[{"nodeType":"YulAssignment","src":"1349:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1358:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"1361:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1354:3:14"},"nodeType":"YulFunctionCall","src":"1354:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1349:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1329:3:14","statements":[]},"src":"1325:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1458:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1463:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1454:3:14"},"nodeType":"YulFunctionCall","src":"1454:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"1472:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1447:6:14"},"nodeType":"YulFunctionCall","src":"1447:27:14"},"nodeType":"YulExpressionStatement","src":"1447:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1274:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1279:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1284:6:14","type":""}],"src":"1230:250:14"},{"body":{"nodeType":"YulBlock","src":"1535:221:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1545:26:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1565:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1559:5:14"},"nodeType":"YulFunctionCall","src":"1559:12:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1549:6:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1587:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1592:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1580:6:14"},"nodeType":"YulFunctionCall","src":"1580:19:14"},"nodeType":"YulExpressionStatement","src":"1580:19:14"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1647:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1654:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1643:3:14"},"nodeType":"YulFunctionCall","src":"1643:16:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1665:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"1670:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1661:3:14"},"nodeType":"YulFunctionCall","src":"1661:14:14"},{"name":"length","nodeType":"YulIdentifier","src":"1677:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1608:34:14"},"nodeType":"YulFunctionCall","src":"1608:76:14"},"nodeType":"YulExpressionStatement","src":"1608:76:14"},{"nodeType":"YulAssignment","src":"1693:57:14","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1708:3:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1721:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1729:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:14"},"nodeType":"YulFunctionCall","src":"1717:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1738:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1734:3:14"},"nodeType":"YulFunctionCall","src":"1734:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1713:3:14"},"nodeType":"YulFunctionCall","src":"1713:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1704:3:14"},"nodeType":"YulFunctionCall","src":"1704:39:14"},{"kind":"number","nodeType":"YulLiteral","src":"1745:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1700:3:14"},"nodeType":"YulFunctionCall","src":"1700:50:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1693:3:14"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1512:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1519:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1527:3:14","type":""}],"src":"1485:271:14"},{"body":{"nodeType":"YulBlock","src":"1882:99:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1899:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1910:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1892:6:14"},"nodeType":"YulFunctionCall","src":"1892:21:14"},"nodeType":"YulExpressionStatement","src":"1892:21:14"},{"nodeType":"YulAssignment","src":"1922:53:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1948:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1960:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1971:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1956:3:14"},"nodeType":"YulFunctionCall","src":"1956:18:14"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1930:17:14"},"nodeType":"YulFunctionCall","src":"1930:45:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1922:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1851:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1862:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1873:4:14","type":""}],"src":"1761:220:14"},{"body":{"nodeType":"YulBlock","src":"2056:110:14","statements":[{"body":{"nodeType":"YulBlock","src":"2102:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2111:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2114:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2104:6:14"},"nodeType":"YulFunctionCall","src":"2104:12:14"},"nodeType":"YulExpressionStatement","src":"2104:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2077:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2086:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2073:3:14"},"nodeType":"YulFunctionCall","src":"2073:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2098:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2069:3:14"},"nodeType":"YulFunctionCall","src":"2069:32:14"},"nodeType":"YulIf","src":"2066:52:14"},{"nodeType":"YulAssignment","src":"2127:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2150:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2137:12:14"},"nodeType":"YulFunctionCall","src":"2137:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2127:6:14"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2022:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2033:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2045:6:14","type":""}],"src":"1986:180:14"},{"body":{"nodeType":"YulBlock","src":"2203:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2220:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2227:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2232:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2223:3:14"},"nodeType":"YulFunctionCall","src":"2223:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2213:6:14"},"nodeType":"YulFunctionCall","src":"2213:31:14"},"nodeType":"YulExpressionStatement","src":"2213:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2260:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2263:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2253:6:14"},"nodeType":"YulFunctionCall","src":"2253:15:14"},"nodeType":"YulExpressionStatement","src":"2253:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2284:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2287:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2277:6:14"},"nodeType":"YulFunctionCall","src":"2277:15:14"},"nodeType":"YulExpressionStatement","src":"2277:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2171:127:14"},{"body":{"nodeType":"YulBlock","src":"2350:202:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2360:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2382:6:14"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2398:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2404:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2394:3:14"},"nodeType":"YulFunctionCall","src":"2394:13:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2413:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2409:3:14"},"nodeType":"YulFunctionCall","src":"2409:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2390:3:14"},"nodeType":"YulFunctionCall","src":"2390:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2378:3:14"},"nodeType":"YulFunctionCall","src":"2378:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2364:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2493:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2495:16:14"},"nodeType":"YulFunctionCall","src":"2495:18:14"},"nodeType":"YulExpressionStatement","src":"2495:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2436:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"2448:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2433:2:14"},"nodeType":"YulFunctionCall","src":"2433:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2472:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2484:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2469:2:14"},"nodeType":"YulFunctionCall","src":"2469:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2430:2:14"},"nodeType":"YulFunctionCall","src":"2430:62:14"},"nodeType":"YulIf","src":"2427:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2531:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2535:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2524:6:14"},"nodeType":"YulFunctionCall","src":"2524:22:14"},"nodeType":"YulExpressionStatement","src":"2524:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2332:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"2340:4:14","type":""}],"src":"2303:249:14"},{"body":{"nodeType":"YulBlock","src":"2626:114:14","statements":[{"body":{"nodeType":"YulBlock","src":"2670:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2672:16:14"},"nodeType":"YulFunctionCall","src":"2672:18:14"},"nodeType":"YulExpressionStatement","src":"2672:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2642:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2650:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2639:2:14"},"nodeType":"YulFunctionCall","src":"2639:30:14"},"nodeType":"YulIf","src":"2636:56:14"},{"nodeType":"YulAssignment","src":"2701:33:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2717:1:14","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2720:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2713:3:14"},"nodeType":"YulFunctionCall","src":"2713:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"2729:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2709:3:14"},"nodeType":"YulFunctionCall","src":"2709:25:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2701:4:14"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2606:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2617:4:14","type":""}],"src":"2557:183:14"},{"body":{"nodeType":"YulBlock","src":"2809:735:14","statements":[{"body":{"nodeType":"YulBlock","src":"2858:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2870:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2860:6:14"},"nodeType":"YulFunctionCall","src":"2860:12:14"},"nodeType":"YulExpressionStatement","src":"2860:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2837:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2845:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2833:3:14"},"nodeType":"YulFunctionCall","src":"2833:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"2852:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2829:3:14"},"nodeType":"YulFunctionCall","src":"2829:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2822:6:14"},"nodeType":"YulFunctionCall","src":"2822:35:14"},"nodeType":"YulIf","src":"2819:55:14"},{"nodeType":"YulVariableDeclaration","src":"2883:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2906:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2893:12:14"},"nodeType":"YulFunctionCall","src":"2893:20:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2887:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2922:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2932:4:14","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2926:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2945:53:14","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2995:2:14"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"2955:39:14"},"nodeType":"YulFunctionCall","src":"2955:43:14"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2949:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3007:23:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3027:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3021:5:14"},"nodeType":"YulFunctionCall","src":"3021:9:14"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3011:6:14","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3059:6:14"},{"name":"_3","nodeType":"YulIdentifier","src":"3067:2:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3039:19:14"},"nodeType":"YulFunctionCall","src":"3039:31:14"},"nodeType":"YulExpressionStatement","src":"3039:31:14"},{"nodeType":"YulVariableDeclaration","src":"3079:17:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3090:6:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3083:3:14","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3112:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3120:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3105:6:14"},"nodeType":"YulFunctionCall","src":"3105:18:14"},"nodeType":"YulExpressionStatement","src":"3105:18:14"},{"nodeType":"YulAssignment","src":"3132:22:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3143:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"3151:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3139:3:14"},"nodeType":"YulFunctionCall","src":"3139:15:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3132:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"3163:46:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3185:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3197:1:14","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3200:2:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3193:3:14"},"nodeType":"YulFunctionCall","src":"3193:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3181:3:14"},"nodeType":"YulFunctionCall","src":"3181:23:14"},{"name":"_2","nodeType":"YulIdentifier","src":"3206:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3177:3:14"},"nodeType":"YulFunctionCall","src":"3177:32:14"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3167:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3237:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3246:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3249:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3239:6:14"},"nodeType":"YulFunctionCall","src":"3239:12:14"},"nodeType":"YulExpressionStatement","src":"3239:12:14"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3224:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"3232:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3221:2:14"},"nodeType":"YulFunctionCall","src":"3221:15:14"},"nodeType":"YulIf","src":"3218:35:14"},{"nodeType":"YulVariableDeclaration","src":"3262:26:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3277:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"3285:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3273:3:14"},"nodeType":"YulFunctionCall","src":"3273:15:14"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3266:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3353:161:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3367:30:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3393:3:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3380:12:14"},"nodeType":"YulFunctionCall","src":"3380:17:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3371:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3435:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3410:24:14"},"nodeType":"YulFunctionCall","src":"3410:31:14"},"nodeType":"YulExpressionStatement","src":"3410:31:14"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3461:3:14"},{"name":"value","nodeType":"YulIdentifier","src":"3466:5:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3454:6:14"},"nodeType":"YulFunctionCall","src":"3454:18:14"},"nodeType":"YulExpressionStatement","src":"3454:18:14"},{"nodeType":"YulAssignment","src":"3485:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3496:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"3501:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3492:3:14"},"nodeType":"YulFunctionCall","src":"3492:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3485:3:14"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3308:3:14"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3313:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3305:2:14"},"nodeType":"YulFunctionCall","src":"3305:15:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3321:23:14","statements":[{"nodeType":"YulAssignment","src":"3323:19:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3334:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"3339:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3330:3:14"},"nodeType":"YulFunctionCall","src":"3330:12:14"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3323:3:14"}]}]},"pre":{"nodeType":"YulBlock","src":"3301:3:14","statements":[]},"src":"3297:217:14"},{"nodeType":"YulAssignment","src":"3523:15:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3532:6:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3523:5:14"}]}]},"name":"abi_decode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2783:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2791:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2799:5:14","type":""}],"src":"2745:799:14"},{"body":{"nodeType":"YulBlock","src":"3613:660:14","statements":[{"body":{"nodeType":"YulBlock","src":"3662:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3671:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3674:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3664:6:14"},"nodeType":"YulFunctionCall","src":"3664:12:14"},"nodeType":"YulExpressionStatement","src":"3664:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3641:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3649:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:14"},"nodeType":"YulFunctionCall","src":"3637:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"3656:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3633:3:14"},"nodeType":"YulFunctionCall","src":"3633:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3626:6:14"},"nodeType":"YulFunctionCall","src":"3626:35:14"},"nodeType":"YulIf","src":"3623:55:14"},{"nodeType":"YulVariableDeclaration","src":"3687:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3710:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3697:12:14"},"nodeType":"YulFunctionCall","src":"3697:20:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3691:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3726:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3736:4:14","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3730:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3749:53:14","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3799:2:14"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"3759:39:14"},"nodeType":"YulFunctionCall","src":"3759:43:14"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3753:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3811:23:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3831:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3825:5:14"},"nodeType":"YulFunctionCall","src":"3825:9:14"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3815:6:14","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3863:6:14"},{"name":"_3","nodeType":"YulIdentifier","src":"3871:2:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3843:19:14"},"nodeType":"YulFunctionCall","src":"3843:31:14"},"nodeType":"YulExpressionStatement","src":"3843:31:14"},{"nodeType":"YulVariableDeclaration","src":"3883:17:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3894:6:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3887:3:14","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3916:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"3924:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3909:6:14"},"nodeType":"YulFunctionCall","src":"3909:18:14"},"nodeType":"YulExpressionStatement","src":"3909:18:14"},{"nodeType":"YulAssignment","src":"3936:22:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3947:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"3955:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3943:3:14"},"nodeType":"YulFunctionCall","src":"3943:15:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3936:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"3967:46:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3989:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4001:1:14","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"4004:2:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3997:3:14"},"nodeType":"YulFunctionCall","src":"3997:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3985:3:14"},"nodeType":"YulFunctionCall","src":"3985:23:14"},{"name":"_2","nodeType":"YulIdentifier","src":"4010:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3981:3:14"},"nodeType":"YulFunctionCall","src":"3981:32:14"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3971:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4041:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4050:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4053:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4043:6:14"},"nodeType":"YulFunctionCall","src":"4043:12:14"},"nodeType":"YulExpressionStatement","src":"4043:12:14"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4028:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"4036:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4025:2:14"},"nodeType":"YulFunctionCall","src":"4025:15:14"},"nodeType":"YulIf","src":"4022:35:14"},{"nodeType":"YulVariableDeclaration","src":"4066:26:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4081:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"4089:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4077:3:14"},"nodeType":"YulFunctionCall","src":"4077:15:14"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4070:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4157:86:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4178:3:14"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4196:3:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4183:12:14"},"nodeType":"YulFunctionCall","src":"4183:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4171:6:14"},"nodeType":"YulFunctionCall","src":"4171:30:14"},"nodeType":"YulExpressionStatement","src":"4171:30:14"},{"nodeType":"YulAssignment","src":"4214:19:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4225:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"4230:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4221:3:14"},"nodeType":"YulFunctionCall","src":"4221:12:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4214:3:14"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4112:3:14"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4117:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4109:2:14"},"nodeType":"YulFunctionCall","src":"4109:15:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4125:23:14","statements":[{"nodeType":"YulAssignment","src":"4127:19:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4138:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"4143:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4134:3:14"},"nodeType":"YulFunctionCall","src":"4134:12:14"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4127:3:14"}]}]},"pre":{"nodeType":"YulBlock","src":"4105:3:14","statements":[]},"src":"4101:142:14"},{"nodeType":"YulAssignment","src":"4252:15:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4261:6:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4252:5:14"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3587:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"3595:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3603:5:14","type":""}],"src":"3549:724:14"},{"body":{"nodeType":"YulBlock","src":"4457:642:14","statements":[{"body":{"nodeType":"YulBlock","src":"4503:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4512:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4515:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4505:6:14"},"nodeType":"YulFunctionCall","src":"4505:12:14"},"nodeType":"YulExpressionStatement","src":"4505:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4478:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4487:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4474:3:14"},"nodeType":"YulFunctionCall","src":"4474:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4499:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4470:3:14"},"nodeType":"YulFunctionCall","src":"4470:32:14"},"nodeType":"YulIf","src":"4467:52:14"},{"nodeType":"YulVariableDeclaration","src":"4528:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4555:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4542:12:14"},"nodeType":"YulFunctionCall","src":"4542:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4532:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4574:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4584:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4578:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4629:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4638:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4641:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4631:6:14"},"nodeType":"YulFunctionCall","src":"4631:12:14"},"nodeType":"YulExpressionStatement","src":"4631:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4617:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4625:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4614:2:14"},"nodeType":"YulFunctionCall","src":"4614:14:14"},"nodeType":"YulIf","src":"4611:34:14"},{"nodeType":"YulAssignment","src":"4654:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4697:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4708:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4693:3:14"},"nodeType":"YulFunctionCall","src":"4693:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4717:7:14"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"4664:28:14"},"nodeType":"YulFunctionCall","src":"4664:61:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4654:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"4734:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4767:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4778:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4763:3:14"},"nodeType":"YulFunctionCall","src":"4763:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4750:12:14"},"nodeType":"YulFunctionCall","src":"4750:32:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4738:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4811:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4820:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4823:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4813:6:14"},"nodeType":"YulFunctionCall","src":"4813:12:14"},"nodeType":"YulExpressionStatement","src":"4813:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4797:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4807:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4794:2:14"},"nodeType":"YulFunctionCall","src":"4794:16:14"},"nodeType":"YulIf","src":"4791:36:14"},{"nodeType":"YulAssignment","src":"4836:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4879:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4890:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4875:3:14"},"nodeType":"YulFunctionCall","src":"4875:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4901:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4846:28:14"},"nodeType":"YulFunctionCall","src":"4846:63:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4836:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"4918:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4951:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4962:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4947:3:14"},"nodeType":"YulFunctionCall","src":"4947:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4934:12:14"},"nodeType":"YulFunctionCall","src":"4934:32:14"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4922:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4995:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5004:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5007:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4997:6:14"},"nodeType":"YulFunctionCall","src":"4997:12:14"},"nodeType":"YulExpressionStatement","src":"4997:12:14"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4981:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4991:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4978:2:14"},"nodeType":"YulFunctionCall","src":"4978:16:14"},"nodeType":"YulIf","src":"4975:36:14"},{"nodeType":"YulAssignment","src":"5020:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5063:9:14"},{"name":"offset_2","nodeType":"YulIdentifier","src":"5074:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5059:3:14"},"nodeType":"YulFunctionCall","src":"5059:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5085:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5030:28:14"},"nodeType":"YulFunctionCall","src":"5030:63:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5020:6:14"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4446:6:14","type":""}],"src":"4278:821:14"},{"body":{"nodeType":"YulBlock","src":"5178:394:14","statements":[{"body":{"nodeType":"YulBlock","src":"5222:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5224:16:14"},"nodeType":"YulFunctionCall","src":"5224:18:14"},"nodeType":"YulExpressionStatement","src":"5224:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5194:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5202:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5191:2:14"},"nodeType":"YulFunctionCall","src":"5191:30:14"},"nodeType":"YulIf","src":"5188:56:14"},{"nodeType":"YulVariableDeclaration","src":"5253:23:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5273:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5267:5:14"},"nodeType":"YulFunctionCall","src":"5267:9:14"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5257:6:14","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5305:6:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5325:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5333:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5321:3:14"},"nodeType":"YulFunctionCall","src":"5321:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5342:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5338:3:14"},"nodeType":"YulFunctionCall","src":"5338:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5317:3:14"},"nodeType":"YulFunctionCall","src":"5317:29:14"},{"kind":"number","nodeType":"YulLiteral","src":"5348:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5313:3:14"},"nodeType":"YulFunctionCall","src":"5313:40:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5285:19:14"},"nodeType":"YulFunctionCall","src":"5285:69:14"},"nodeType":"YulExpressionStatement","src":"5285:69:14"},{"nodeType":"YulAssignment","src":"5363:15:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5372:6:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5363:5:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5394:6:14"},{"name":"length","nodeType":"YulIdentifier","src":"5402:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5387:6:14"},"nodeType":"YulFunctionCall","src":"5387:22:14"},"nodeType":"YulExpressionStatement","src":"5387:22:14"},{"body":{"nodeType":"YulBlock","src":"5447:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5456:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5459:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5449:6:14"},"nodeType":"YulFunctionCall","src":"5449:12:14"},"nodeType":"YulExpressionStatement","src":"5449:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5428:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"5433:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5424:3:14"},"nodeType":"YulFunctionCall","src":"5424:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"5442:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5421:2:14"},"nodeType":"YulFunctionCall","src":"5421:25:14"},"nodeType":"YulIf","src":"5418:45:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5489:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5497:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:14"},"nodeType":"YulFunctionCall","src":"5485:17:14"},{"name":"src","nodeType":"YulIdentifier","src":"5504:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"5509:6:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"5472:12:14"},"nodeType":"YulFunctionCall","src":"5472:44:14"},"nodeType":"YulExpressionStatement","src":"5472:44:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5540:6:14"},{"name":"length","nodeType":"YulIdentifier","src":"5548:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5536:3:14"},"nodeType":"YulFunctionCall","src":"5536:19:14"},{"kind":"number","nodeType":"YulLiteral","src":"5557:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5532:3:14"},"nodeType":"YulFunctionCall","src":"5532:30:14"},{"kind":"number","nodeType":"YulLiteral","src":"5564:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5525:6:14"},"nodeType":"YulFunctionCall","src":"5525:41:14"},"nodeType":"YulExpressionStatement","src":"5525:41:14"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5147:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"5152:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"5160:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5168:5:14","type":""}],"src":"5104:468:14"},{"body":{"nodeType":"YulBlock","src":"5629:168:14","statements":[{"body":{"nodeType":"YulBlock","src":"5678:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5687:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5690:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5680:6:14"},"nodeType":"YulFunctionCall","src":"5680:12:14"},"nodeType":"YulExpressionStatement","src":"5680:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5657:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5665:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5653:3:14"},"nodeType":"YulFunctionCall","src":"5653:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"5672:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5649:3:14"},"nodeType":"YulFunctionCall","src":"5649:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5642:6:14"},"nodeType":"YulFunctionCall","src":"5642:35:14"},"nodeType":"YulIf","src":"5639:55:14"},{"nodeType":"YulAssignment","src":"5703:88:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5750:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5758:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5746:3:14"},"nodeType":"YulFunctionCall","src":"5746:17:14"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5778:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5765:12:14"},"nodeType":"YulFunctionCall","src":"5765:20:14"},{"name":"end","nodeType":"YulIdentifier","src":"5787:3:14"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"5712:33:14"},"nodeType":"YulFunctionCall","src":"5712:79:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5703:5:14"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5603:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"5611:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5619:5:14","type":""}],"src":"5577:220:14"},{"body":{"nodeType":"YulBlock","src":"5999:874:14","statements":[{"body":{"nodeType":"YulBlock","src":"6046:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6055:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6058:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6048:6:14"},"nodeType":"YulFunctionCall","src":"6048:12:14"},"nodeType":"YulExpressionStatement","src":"6048:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6020:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6029:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6016:3:14"},"nodeType":"YulFunctionCall","src":"6016:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6041:3:14","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6012:3:14"},"nodeType":"YulFunctionCall","src":"6012:33:14"},"nodeType":"YulIf","src":"6009:53:14"},{"nodeType":"YulVariableDeclaration","src":"6071:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6097:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6084:12:14"},"nodeType":"YulFunctionCall","src":"6084:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6075:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6141:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6116:24:14"},"nodeType":"YulFunctionCall","src":"6116:31:14"},"nodeType":"YulExpressionStatement","src":"6116:31:14"},{"nodeType":"YulAssignment","src":"6156:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"6166:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6156:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"6180:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6212:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6223:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6208:3:14"},"nodeType":"YulFunctionCall","src":"6208:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6195:12:14"},"nodeType":"YulFunctionCall","src":"6195:32:14"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6184:7:14","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6261:7:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6236:24:14"},"nodeType":"YulFunctionCall","src":"6236:33:14"},"nodeType":"YulExpressionStatement","src":"6236:33:14"},{"nodeType":"YulAssignment","src":"6278:17:14","value":{"name":"value_1","nodeType":"YulIdentifier","src":"6288:7:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6278:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"6304:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6335:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6346:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6331:3:14"},"nodeType":"YulFunctionCall","src":"6331:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6318:12:14"},"nodeType":"YulFunctionCall","src":"6318:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6308:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6359:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6369:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6363:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6414:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6423:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6426:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6416:6:14"},"nodeType":"YulFunctionCall","src":"6416:12:14"},"nodeType":"YulExpressionStatement","src":"6416:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6402:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6410:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6399:2:14"},"nodeType":"YulFunctionCall","src":"6399:14:14"},"nodeType":"YulIf","src":"6396:34:14"},{"nodeType":"YulAssignment","src":"6439:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6493:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:14"},"nodeType":"YulFunctionCall","src":"6478:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6502:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6449:28:14"},"nodeType":"YulFunctionCall","src":"6449:61:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6439:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"6519:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6552:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6563:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6548:3:14"},"nodeType":"YulFunctionCall","src":"6548:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6535:12:14"},"nodeType":"YulFunctionCall","src":"6535:32:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6523:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6596:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6605:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6608:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6598:6:14"},"nodeType":"YulFunctionCall","src":"6598:12:14"},"nodeType":"YulExpressionStatement","src":"6598:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6582:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6592:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6579:2:14"},"nodeType":"YulFunctionCall","src":"6579:16:14"},"nodeType":"YulIf","src":"6576:36:14"},{"nodeType":"YulAssignment","src":"6621:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6664:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6675:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6660:3:14"},"nodeType":"YulFunctionCall","src":"6660:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6686:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6631:28:14"},"nodeType":"YulFunctionCall","src":"6631:63:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6621:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"6703:49:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6736:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6747:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6732:3:14"},"nodeType":"YulFunctionCall","src":"6732:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6719:12:14"},"nodeType":"YulFunctionCall","src":"6719:33:14"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"6707:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6781:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6790:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6793:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6783:6:14"},"nodeType":"YulFunctionCall","src":"6783:12:14"},"nodeType":"YulExpressionStatement","src":"6783:12:14"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"6767:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6777:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6764:2:14"},"nodeType":"YulFunctionCall","src":"6764:16:14"},"nodeType":"YulIf","src":"6761:36:14"},{"nodeType":"YulAssignment","src":"6806:61:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6837:9:14"},{"name":"offset_2","nodeType":"YulIdentifier","src":"6848:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6833:3:14"},"nodeType":"YulFunctionCall","src":"6833:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6859:7:14"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6816:16:14"},"nodeType":"YulFunctionCall","src":"6816:51:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6806:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5933:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5944:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5956:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5964:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5972:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5980:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5988:6:14","type":""}],"src":"5802:1071:14"},{"body":{"nodeType":"YulBlock","src":"6948:177:14","statements":[{"body":{"nodeType":"YulBlock","src":"6994:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7003:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7006:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6996:6:14"},"nodeType":"YulFunctionCall","src":"6996:12:14"},"nodeType":"YulExpressionStatement","src":"6996:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6969:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6978:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6965:3:14"},"nodeType":"YulFunctionCall","src":"6965:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6990:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6961:3:14"},"nodeType":"YulFunctionCall","src":"6961:32:14"},"nodeType":"YulIf","src":"6958:52:14"},{"nodeType":"YulVariableDeclaration","src":"7019:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7045:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7032:12:14"},"nodeType":"YulFunctionCall","src":"7032:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7023:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7089:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7064:24:14"},"nodeType":"YulFunctionCall","src":"7064:31:14"},"nodeType":"YulExpressionStatement","src":"7064:31:14"},{"nodeType":"YulAssignment","src":"7104:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"7114:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7104:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6914:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6925:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6937:6:14","type":""}],"src":"6878:247:14"},{"body":{"nodeType":"YulBlock","src":"7267:458:14","statements":[{"body":{"nodeType":"YulBlock","src":"7313:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7322:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7325:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7315:6:14"},"nodeType":"YulFunctionCall","src":"7315:12:14"},"nodeType":"YulExpressionStatement","src":"7315:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7288:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7297:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7284:3:14"},"nodeType":"YulFunctionCall","src":"7284:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"7309:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7280:3:14"},"nodeType":"YulFunctionCall","src":"7280:32:14"},"nodeType":"YulIf","src":"7277:52:14"},{"nodeType":"YulVariableDeclaration","src":"7338:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7365:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7352:12:14"},"nodeType":"YulFunctionCall","src":"7352:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7342:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7384:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7394:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7388:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7439:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7448:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7451:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7441:6:14"},"nodeType":"YulFunctionCall","src":"7441:12:14"},"nodeType":"YulExpressionStatement","src":"7441:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7427:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"7435:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7424:2:14"},"nodeType":"YulFunctionCall","src":"7424:14:14"},"nodeType":"YulIf","src":"7421:34:14"},{"nodeType":"YulAssignment","src":"7464:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7507:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7518:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7503:3:14"},"nodeType":"YulFunctionCall","src":"7503:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7527:7:14"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"7474:28:14"},"nodeType":"YulFunctionCall","src":"7474:61:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7464:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"7544:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7577:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7588:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7573:3:14"},"nodeType":"YulFunctionCall","src":"7573:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7560:12:14"},"nodeType":"YulFunctionCall","src":"7560:32:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7548:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7621:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7630:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7633:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7623:6:14"},"nodeType":"YulFunctionCall","src":"7623:12:14"},"nodeType":"YulExpressionStatement","src":"7623:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7607:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"7617:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7604:2:14"},"nodeType":"YulFunctionCall","src":"7604:16:14"},"nodeType":"YulIf","src":"7601:36:14"},{"nodeType":"YulAssignment","src":"7646:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7689:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7700:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7685:3:14"},"nodeType":"YulFunctionCall","src":"7685:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7711:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"7656:28:14"},"nodeType":"YulFunctionCall","src":"7656:63:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7646:6:14"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7225:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7236:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7248:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7256:6:14","type":""}],"src":"7130:595:14"},{"body":{"nodeType":"YulBlock","src":"7791:374:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7801:26:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7821:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7815:5:14"},"nodeType":"YulFunctionCall","src":"7815:12:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7805:6:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7843:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7848:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7836:6:14"},"nodeType":"YulFunctionCall","src":"7836:19:14"},"nodeType":"YulExpressionStatement","src":"7836:19:14"},{"nodeType":"YulVariableDeclaration","src":"7864:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7874:4:14","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7868:2:14","type":""}]},{"nodeType":"YulAssignment","src":"7887:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7898:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"7903:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7894:3:14"},"nodeType":"YulFunctionCall","src":"7894:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7887:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"7915:28:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7933:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"7940:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7929:3:14"},"nodeType":"YulFunctionCall","src":"7929:14:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7919:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7952:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7961:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7956:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8020:120:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:14"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8052:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8046:5:14"},"nodeType":"YulFunctionCall","src":"8046:13:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8034:6:14"},"nodeType":"YulFunctionCall","src":"8034:26:14"},"nodeType":"YulExpressionStatement","src":"8034:26:14"},{"nodeType":"YulAssignment","src":"8073:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8084:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"8089:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8080:3:14"},"nodeType":"YulFunctionCall","src":"8080:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8073:3:14"}]},{"nodeType":"YulAssignment","src":"8105:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8119:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"8127:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8115:3:14"},"nodeType":"YulFunctionCall","src":"8115:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8105:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7982:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"7985:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7979:2:14"},"nodeType":"YulFunctionCall","src":"7979:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7993:18:14","statements":[{"nodeType":"YulAssignment","src":"7995:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8004:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"8007:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8000:3:14"},"nodeType":"YulFunctionCall","src":"8000:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7995:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"7975:3:14","statements":[]},"src":"7971:169:14"},{"nodeType":"YulAssignment","src":"8149:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"8156:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8149:3:14"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7768:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7775:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7783:3:14","type":""}],"src":"7730:435:14"},{"body":{"nodeType":"YulBlock","src":"8321:110:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8338:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8349:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8331:6:14"},"nodeType":"YulFunctionCall","src":"8331:21:14"},"nodeType":"YulExpressionStatement","src":"8331:21:14"},{"nodeType":"YulAssignment","src":"8361:64:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8398:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8410:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8421:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8406:3:14"},"nodeType":"YulFunctionCall","src":"8406:18:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"8369:28:14"},"nodeType":"YulFunctionCall","src":"8369:56:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8361:4:14"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8290:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8301:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8312:4:14","type":""}],"src":"8170:261:14"},{"body":{"nodeType":"YulBlock","src":"8566:462:14","statements":[{"body":{"nodeType":"YulBlock","src":"8613:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8622:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8625:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8615:6:14"},"nodeType":"YulFunctionCall","src":"8615:12:14"},"nodeType":"YulExpressionStatement","src":"8615:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8587:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"8596:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8583:3:14"},"nodeType":"YulFunctionCall","src":"8583:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"8608:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8579:3:14"},"nodeType":"YulFunctionCall","src":"8579:33:14"},"nodeType":"YulIf","src":"8576:53:14"},{"nodeType":"YulVariableDeclaration","src":"8638:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8664:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8651:12:14"},"nodeType":"YulFunctionCall","src":"8651:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8642:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8708:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8683:24:14"},"nodeType":"YulFunctionCall","src":"8683:31:14"},"nodeType":"YulExpressionStatement","src":"8683:31:14"},{"nodeType":"YulAssignment","src":"8723:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"8733:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8723:6:14"}]},{"nodeType":"YulAssignment","src":"8747:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8774:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8785:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8770:3:14"},"nodeType":"YulFunctionCall","src":"8770:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8757:12:14"},"nodeType":"YulFunctionCall","src":"8757:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8747:6:14"}]},{"nodeType":"YulAssignment","src":"8798:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8825:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8836:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8821:3:14"},"nodeType":"YulFunctionCall","src":"8821:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8808:12:14"},"nodeType":"YulFunctionCall","src":"8808:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8798:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"8849:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8880:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8891:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8876:3:14"},"nodeType":"YulFunctionCall","src":"8876:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8863:12:14"},"nodeType":"YulFunctionCall","src":"8863:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8853:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8938:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8947:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8950:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8940:6:14"},"nodeType":"YulFunctionCall","src":"8940:12:14"},"nodeType":"YulExpressionStatement","src":"8940:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8910:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8918:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8907:2:14"},"nodeType":"YulFunctionCall","src":"8907:30:14"},"nodeType":"YulIf","src":"8904:50:14"},{"nodeType":"YulAssignment","src":"8963:59:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8994:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"9005:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8990:3:14"},"nodeType":"YulFunctionCall","src":"8990:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9014:7:14"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"8973:16:14"},"nodeType":"YulFunctionCall","src":"8973:49:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8963:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8508:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8519:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8531:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8539:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8547:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8555:6:14","type":""}],"src":"8436:592:14"},{"body":{"nodeType":"YulBlock","src":"9121:177:14","statements":[{"body":{"nodeType":"YulBlock","src":"9167:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9176:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9179:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9169:6:14"},"nodeType":"YulFunctionCall","src":"9169:12:14"},"nodeType":"YulExpressionStatement","src":"9169:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9142:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9151:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9138:3:14"},"nodeType":"YulFunctionCall","src":"9138:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"9163:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9134:3:14"},"nodeType":"YulFunctionCall","src":"9134:32:14"},"nodeType":"YulIf","src":"9131:52:14"},{"nodeType":"YulVariableDeclaration","src":"9192:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9218:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9205:12:14"},"nodeType":"YulFunctionCall","src":"9205:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9196:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9262:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9237:24:14"},"nodeType":"YulFunctionCall","src":"9237:31:14"},"nodeType":"YulExpressionStatement","src":"9237:31:14"},{"nodeType":"YulAssignment","src":"9277:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"9287:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9277:6:14"}]}]},"name":"abi_decode_tuple_t_contract$_IHashPunk_$2784","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9087:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9098:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9110:6:14","type":""}],"src":"9033:265:14"},{"body":{"nodeType":"YulBlock","src":"9404:102:14","statements":[{"nodeType":"YulAssignment","src":"9414:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9426:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9437:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9422:3:14"},"nodeType":"YulFunctionCall","src":"9422:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9414:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9456:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9471:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9487:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9492:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9483:3:14"},"nodeType":"YulFunctionCall","src":"9483:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"9496:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9479:3:14"},"nodeType":"YulFunctionCall","src":"9479:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9467:3:14"},"nodeType":"YulFunctionCall","src":"9467:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9449:6:14"},"nodeType":"YulFunctionCall","src":"9449:51:14"},"nodeType":"YulExpressionStatement","src":"9449:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9373:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9384:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9395:4:14","type":""}],"src":"9303:203:14"},{"body":{"nodeType":"YulBlock","src":"9630:102:14","statements":[{"nodeType":"YulAssignment","src":"9640:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9652:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9663:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9648:3:14"},"nodeType":"YulFunctionCall","src":"9648:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9640:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9682:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9697:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9713:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9718:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9709:3:14"},"nodeType":"YulFunctionCall","src":"9709:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"9722:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9705:3:14"},"nodeType":"YulFunctionCall","src":"9705:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9693:3:14"},"nodeType":"YulFunctionCall","src":"9693:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9675:6:14"},"nodeType":"YulFunctionCall","src":"9675:51:14"},"nodeType":"YulExpressionStatement","src":"9675:51:14"}]},"name":"abi_encode_tuple_t_contract$_IHashPunk_$2784__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9599:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9610:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9621:4:14","type":""}],"src":"9511:221:14"},{"body":{"nodeType":"YulBlock","src":"9817:370:14","statements":[{"body":{"nodeType":"YulBlock","src":"9863:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9872:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9875:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9865:6:14"},"nodeType":"YulFunctionCall","src":"9865:12:14"},"nodeType":"YulExpressionStatement","src":"9865:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9838:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9847:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9834:3:14"},"nodeType":"YulFunctionCall","src":"9834:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"9859:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9830:3:14"},"nodeType":"YulFunctionCall","src":"9830:32:14"},"nodeType":"YulIf","src":"9827:52:14"},{"nodeType":"YulVariableDeclaration","src":"9888:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9915:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9902:12:14"},"nodeType":"YulFunctionCall","src":"9902:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9892:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"9968:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9977:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9980:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9970:6:14"},"nodeType":"YulFunctionCall","src":"9970:12:14"},"nodeType":"YulExpressionStatement","src":"9970:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9940:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9948:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9937:2:14"},"nodeType":"YulFunctionCall","src":"9937:30:14"},"nodeType":"YulIf","src":"9934:50:14"},{"nodeType":"YulVariableDeclaration","src":"9993:32:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10007:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"10018:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10003:3:14"},"nodeType":"YulFunctionCall","src":"10003:22:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9997:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"10073:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10082:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10085:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10075:6:14"},"nodeType":"YulFunctionCall","src":"10075:12:14"},"nodeType":"YulExpressionStatement","src":"10075:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10052:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"10056:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10048:3:14"},"nodeType":"YulFunctionCall","src":"10048:13:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10063:7:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10044:3:14"},"nodeType":"YulFunctionCall","src":"10044:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10037:6:14"},"nodeType":"YulFunctionCall","src":"10037:35:14"},"nodeType":"YulIf","src":"10034:55:14"},{"nodeType":"YulAssignment","src":"10098:83:14","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10146:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"10150:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10142:3:14"},"nodeType":"YulFunctionCall","src":"10142:11:14"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10168:2:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10155:12:14"},"nodeType":"YulFunctionCall","src":"10155:16:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10173:7:14"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"10108:33:14"},"nodeType":"YulFunctionCall","src":"10108:73:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10098:6:14"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9783:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9794:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9806:6:14","type":""}],"src":"9737:450:14"},{"body":{"nodeType":"YulBlock","src":"10276:332:14","statements":[{"body":{"nodeType":"YulBlock","src":"10322:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10331:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10334:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10324:6:14"},"nodeType":"YulFunctionCall","src":"10324:12:14"},"nodeType":"YulExpressionStatement","src":"10324:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10297:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10306:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10293:3:14"},"nodeType":"YulFunctionCall","src":"10293:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"10318:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10289:3:14"},"nodeType":"YulFunctionCall","src":"10289:32:14"},"nodeType":"YulIf","src":"10286:52:14"},{"nodeType":"YulVariableDeclaration","src":"10347:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10373:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10360:12:14"},"nodeType":"YulFunctionCall","src":"10360:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10351:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10417:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10392:24:14"},"nodeType":"YulFunctionCall","src":"10392:31:14"},"nodeType":"YulExpressionStatement","src":"10392:31:14"},{"nodeType":"YulAssignment","src":"10432:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"10442:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10432:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"10456:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10488:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10499:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10484:3:14"},"nodeType":"YulFunctionCall","src":"10484:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10471:12:14"},"nodeType":"YulFunctionCall","src":"10471:32:14"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"10460:7:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"10560:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10569:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10572:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10562:6:14"},"nodeType":"YulFunctionCall","src":"10562:12:14"},"nodeType":"YulExpressionStatement","src":"10562:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10525:7:14"},{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10548:7:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10541:6:14"},"nodeType":"YulFunctionCall","src":"10541:15:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10534:6:14"},"nodeType":"YulFunctionCall","src":"10534:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10522:2:14"},"nodeType":"YulFunctionCall","src":"10522:36:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10515:6:14"},"nodeType":"YulFunctionCall","src":"10515:44:14"},"nodeType":"YulIf","src":"10512:64:14"},{"nodeType":"YulAssignment","src":"10585:17:14","value":{"name":"value_1","nodeType":"YulIdentifier","src":"10595:7:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10585:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10234:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10245:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10257:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10265:6:14","type":""}],"src":"10192:416:14"},{"body":{"nodeType":"YulBlock","src":"10860:1000:14","statements":[{"body":{"nodeType":"YulBlock","src":"10907:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10916:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10919:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10909:6:14"},"nodeType":"YulFunctionCall","src":"10909:12:14"},"nodeType":"YulExpressionStatement","src":"10909:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10881:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10890:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10877:3:14"},"nodeType":"YulFunctionCall","src":"10877:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"10902:3:14","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10873:3:14"},"nodeType":"YulFunctionCall","src":"10873:33:14"},"nodeType":"YulIf","src":"10870:53:14"},{"nodeType":"YulVariableDeclaration","src":"10932:37:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10959:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10946:12:14"},"nodeType":"YulFunctionCall","src":"10946:23:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10936:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10978:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"10988:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10982:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"11033:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11042:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11045:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11035:6:14"},"nodeType":"YulFunctionCall","src":"11035:12:14"},"nodeType":"YulExpressionStatement","src":"11035:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11021:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"11029:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11018:2:14"},"nodeType":"YulFunctionCall","src":"11018:14:14"},"nodeType":"YulIf","src":"11015:34:14"},{"nodeType":"YulAssignment","src":"11058:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11101:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"11112:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11097:3:14"},"nodeType":"YulFunctionCall","src":"11097:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11121:7:14"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"11068:28:14"},"nodeType":"YulFunctionCall","src":"11068:61:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11058:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"11138:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11171:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11182:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11167:3:14"},"nodeType":"YulFunctionCall","src":"11167:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11154:12:14"},"nodeType":"YulFunctionCall","src":"11154:32:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"11142:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"11215:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11224:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11227:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11217:6:14"},"nodeType":"YulFunctionCall","src":"11217:12:14"},"nodeType":"YulExpressionStatement","src":"11217:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"11201:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"11211:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11198:2:14"},"nodeType":"YulFunctionCall","src":"11198:16:14"},"nodeType":"YulIf","src":"11195:36:14"},{"nodeType":"YulAssignment","src":"11240:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11283:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"11294:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11279:3:14"},"nodeType":"YulFunctionCall","src":"11279:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11305:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11250:28:14"},"nodeType":"YulFunctionCall","src":"11250:63:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11240:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"11322:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11355:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11366:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11351:3:14"},"nodeType":"YulFunctionCall","src":"11351:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11338:12:14"},"nodeType":"YulFunctionCall","src":"11338:32:14"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"11326:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"11399:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11408:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11411:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11401:6:14"},"nodeType":"YulFunctionCall","src":"11401:12:14"},"nodeType":"YulExpressionStatement","src":"11401:12:14"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"11385:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"11395:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11382:2:14"},"nodeType":"YulFunctionCall","src":"11382:16:14"},"nodeType":"YulIf","src":"11379:36:14"},{"nodeType":"YulAssignment","src":"11424:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11467:9:14"},{"name":"offset_2","nodeType":"YulIdentifier","src":"11478:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11463:3:14"},"nodeType":"YulFunctionCall","src":"11463:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11489:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11434:28:14"},"nodeType":"YulFunctionCall","src":"11434:63:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11424:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"11506:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11539:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11550:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11535:3:14"},"nodeType":"YulFunctionCall","src":"11535:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11522:12:14"},"nodeType":"YulFunctionCall","src":"11522:32:14"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"11510:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"11583:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11592:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11595:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11585:6:14"},"nodeType":"YulFunctionCall","src":"11585:12:14"},"nodeType":"YulExpressionStatement","src":"11585:12:14"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"11569:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"11579:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11566:2:14"},"nodeType":"YulFunctionCall","src":"11566:16:14"},"nodeType":"YulIf","src":"11563:36:14"},{"nodeType":"YulAssignment","src":"11608:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11651:9:14"},{"name":"offset_3","nodeType":"YulIdentifier","src":"11662:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11647:3:14"},"nodeType":"YulFunctionCall","src":"11647:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11673:7:14"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11618:28:14"},"nodeType":"YulFunctionCall","src":"11618:63:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11608:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"11690:49:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11723:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11734:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11719:3:14"},"nodeType":"YulFunctionCall","src":"11719:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11706:12:14"},"nodeType":"YulFunctionCall","src":"11706:33:14"},"variables":[{"name":"offset_4","nodeType":"YulTypedName","src":"11694:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"11768:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11777:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11780:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11770:6:14"},"nodeType":"YulFunctionCall","src":"11770:12:14"},"nodeType":"YulExpressionStatement","src":"11770:12:14"}]},"condition":{"arguments":[{"name":"offset_4","nodeType":"YulIdentifier","src":"11754:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"11764:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11751:2:14"},"nodeType":"YulFunctionCall","src":"11751:16:14"},"nodeType":"YulIf","src":"11748:36:14"},{"nodeType":"YulAssignment","src":"11793:61:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11824:9:14"},{"name":"offset_4","nodeType":"YulIdentifier","src":"11835:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11820:3:14"},"nodeType":"YulFunctionCall","src":"11820:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11846:7:14"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"11803:16:14"},"nodeType":"YulFunctionCall","src":"11803:51:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11793:6:14"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10794:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10805:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10817:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10825:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10833:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10841:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10849:6:14","type":""}],"src":"10613:1247:14"},{"body":{"nodeType":"YulBlock","src":"11952:301:14","statements":[{"body":{"nodeType":"YulBlock","src":"11998:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12007:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12010:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12000:6:14"},"nodeType":"YulFunctionCall","src":"12000:12:14"},"nodeType":"YulExpressionStatement","src":"12000:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11973:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11982:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11969:3:14"},"nodeType":"YulFunctionCall","src":"11969:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"11994:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11965:3:14"},"nodeType":"YulFunctionCall","src":"11965:32:14"},"nodeType":"YulIf","src":"11962:52:14"},{"nodeType":"YulVariableDeclaration","src":"12023:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12049:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12036:12:14"},"nodeType":"YulFunctionCall","src":"12036:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12027:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12093:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12068:24:14"},"nodeType":"YulFunctionCall","src":"12068:31:14"},"nodeType":"YulExpressionStatement","src":"12068:31:14"},{"nodeType":"YulAssignment","src":"12108:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"12118:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12108:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"12132:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12164:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12175:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12160:3:14"},"nodeType":"YulFunctionCall","src":"12160:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12147:12:14"},"nodeType":"YulFunctionCall","src":"12147:32:14"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"12136:7:14","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"12213:7:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12188:24:14"},"nodeType":"YulFunctionCall","src":"12188:33:14"},"nodeType":"YulExpressionStatement","src":"12188:33:14"},{"nodeType":"YulAssignment","src":"12230:17:14","value":{"name":"value_1","nodeType":"YulIdentifier","src":"12240:7:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12230:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11910:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11921:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11933:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11941:6:14","type":""}],"src":"11865:388:14"},{"body":{"nodeType":"YulBlock","src":"12405:587:14","statements":[{"body":{"nodeType":"YulBlock","src":"12452:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12461:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12464:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12454:6:14"},"nodeType":"YulFunctionCall","src":"12454:12:14"},"nodeType":"YulExpressionStatement","src":"12454:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12426:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12435:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12422:3:14"},"nodeType":"YulFunctionCall","src":"12422:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"12447:3:14","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12418:3:14"},"nodeType":"YulFunctionCall","src":"12418:33:14"},"nodeType":"YulIf","src":"12415:53:14"},{"nodeType":"YulVariableDeclaration","src":"12477:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12503:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12490:12:14"},"nodeType":"YulFunctionCall","src":"12490:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12481:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12547:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12522:24:14"},"nodeType":"YulFunctionCall","src":"12522:31:14"},"nodeType":"YulExpressionStatement","src":"12522:31:14"},{"nodeType":"YulAssignment","src":"12562:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"12572:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12562:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"12586:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12618:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12629:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12614:3:14"},"nodeType":"YulFunctionCall","src":"12614:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12601:12:14"},"nodeType":"YulFunctionCall","src":"12601:32:14"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"12590:7:14","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"12667:7:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12642:24:14"},"nodeType":"YulFunctionCall","src":"12642:33:14"},"nodeType":"YulExpressionStatement","src":"12642:33:14"},{"nodeType":"YulAssignment","src":"12684:17:14","value":{"name":"value_1","nodeType":"YulIdentifier","src":"12694:7:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12684:6:14"}]},{"nodeType":"YulAssignment","src":"12710:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12737:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12748:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12733:3:14"},"nodeType":"YulFunctionCall","src":"12733:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12720:12:14"},"nodeType":"YulFunctionCall","src":"12720:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12710:6:14"}]},{"nodeType":"YulAssignment","src":"12761:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12788:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12799:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12784:3:14"},"nodeType":"YulFunctionCall","src":"12784:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12771:12:14"},"nodeType":"YulFunctionCall","src":"12771:32:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12761:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"12812:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12843:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12854:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12839:3:14"},"nodeType":"YulFunctionCall","src":"12839:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12826:12:14"},"nodeType":"YulFunctionCall","src":"12826:33:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12816:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"12902:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12911:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12914:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12904:6:14"},"nodeType":"YulFunctionCall","src":"12904:12:14"},"nodeType":"YulExpressionStatement","src":"12904:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12874:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12882:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12871:2:14"},"nodeType":"YulFunctionCall","src":"12871:30:14"},"nodeType":"YulIf","src":"12868:50:14"},{"nodeType":"YulAssignment","src":"12927:59:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12958:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"12969:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12954:3:14"},"nodeType":"YulFunctionCall","src":"12954:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12978:7:14"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"12937:16:14"},"nodeType":"YulFunctionCall","src":"12937:49:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12927:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12339:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12350:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12362:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12370:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12378:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12386:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12394:6:14","type":""}],"src":"12258:734:14"},{"body":{"nodeType":"YulBlock","src":"13101:279:14","statements":[{"body":{"nodeType":"YulBlock","src":"13147:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13156:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13159:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13149:6:14"},"nodeType":"YulFunctionCall","src":"13149:12:14"},"nodeType":"YulExpressionStatement","src":"13149:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13122:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13131:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13118:3:14"},"nodeType":"YulFunctionCall","src":"13118:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"13143:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13114:3:14"},"nodeType":"YulFunctionCall","src":"13114:32:14"},"nodeType":"YulIf","src":"13111:52:14"},{"nodeType":"YulVariableDeclaration","src":"13172:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13198:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13185:12:14"},"nodeType":"YulFunctionCall","src":"13185:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13176:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13242:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13217:24:14"},"nodeType":"YulFunctionCall","src":"13217:31:14"},"nodeType":"YulExpressionStatement","src":"13217:31:14"},{"nodeType":"YulAssignment","src":"13257:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"13267:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13257:6:14"}]},{"nodeType":"YulAssignment","src":"13281:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13308:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13319:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13304:3:14"},"nodeType":"YulFunctionCall","src":"13304:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13291:12:14"},"nodeType":"YulFunctionCall","src":"13291:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13281:6:14"}]},{"nodeType":"YulAssignment","src":"13332:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13359:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13370:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13355:3:14"},"nodeType":"YulFunctionCall","src":"13355:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13342:12:14"},"nodeType":"YulFunctionCall","src":"13342:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13332:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13051:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13062:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13074:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13082:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13090:6:14","type":""}],"src":"12997:383:14"},{"body":{"nodeType":"YulBlock","src":"13559:232:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13576:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13587:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13569:6:14"},"nodeType":"YulFunctionCall","src":"13569:21:14"},"nodeType":"YulExpressionStatement","src":"13569:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13610:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13621:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13606:3:14"},"nodeType":"YulFunctionCall","src":"13606:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"13626:2:14","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13599:6:14"},"nodeType":"YulFunctionCall","src":"13599:30:14"},"nodeType":"YulExpressionStatement","src":"13599:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13649:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13660:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13645:3:14"},"nodeType":"YulFunctionCall","src":"13645:18:14"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"13665:34:14","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13638:6:14"},"nodeType":"YulFunctionCall","src":"13638:62:14"},"nodeType":"YulExpressionStatement","src":"13638:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13720:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13731:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13716:3:14"},"nodeType":"YulFunctionCall","src":"13716:18:14"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"13736:12:14","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13709:6:14"},"nodeType":"YulFunctionCall","src":"13709:40:14"},"nodeType":"YulExpressionStatement","src":"13709:40:14"},{"nodeType":"YulAssignment","src":"13758:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13770:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13781:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13766:3:14"},"nodeType":"YulFunctionCall","src":"13766:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13758:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13536:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13550:4:14","type":""}],"src":"13385:406:14"},{"body":{"nodeType":"YulBlock","src":"13851:325:14","statements":[{"nodeType":"YulAssignment","src":"13861:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13875:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"13878:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13871:3:14"},"nodeType":"YulFunctionCall","src":"13871:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13861:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"13892:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13922:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"13928:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13918:3:14"},"nodeType":"YulFunctionCall","src":"13918:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13896:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"13969:31:14","statements":[{"nodeType":"YulAssignment","src":"13971:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13985:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"13993:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13981:3:14"},"nodeType":"YulFunctionCall","src":"13981:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13971:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13949:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13942:6:14"},"nodeType":"YulFunctionCall","src":"13942:26:14"},"nodeType":"YulIf","src":"13939:61:14"},{"body":{"nodeType":"YulBlock","src":"14059:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14080:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14087:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14092:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14083:3:14"},"nodeType":"YulFunctionCall","src":"14083:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14073:6:14"},"nodeType":"YulFunctionCall","src":"14073:31:14"},"nodeType":"YulExpressionStatement","src":"14073:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14124:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14127:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14117:6:14"},"nodeType":"YulFunctionCall","src":"14117:15:14"},"nodeType":"YulExpressionStatement","src":"14117:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14152:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14155:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14145:6:14"},"nodeType":"YulFunctionCall","src":"14145:15:14"},"nodeType":"YulExpressionStatement","src":"14145:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14015:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14038:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"14046:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14035:2:14"},"nodeType":"YulFunctionCall","src":"14035:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14012:2:14"},"nodeType":"YulFunctionCall","src":"14012:38:14"},"nodeType":"YulIf","src":"14009:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13831:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13840:6:14","type":""}],"src":"13796:380:14"},{"body":{"nodeType":"YulBlock","src":"14237:65:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14254:1:14","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"14257:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14247:6:14"},"nodeType":"YulFunctionCall","src":"14247:14:14"},"nodeType":"YulExpressionStatement","src":"14247:14:14"},{"nodeType":"YulAssignment","src":"14270:26:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14288:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14291:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14278:9:14"},"nodeType":"YulFunctionCall","src":"14278:18:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14270:4:14"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14220:3:14","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14228:4:14","type":""}],"src":"14181:121:14"},{"body":{"nodeType":"YulBlock","src":"14491:836:14","statements":[{"nodeType":"YulVariableDeclaration","src":"14501:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14512:1:14","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"14505:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14522:30:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14545:6:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14539:5:14"},"nodeType":"YulFunctionCall","src":"14539:13:14"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"14526:9:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14561:50:14","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14601:9:14"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14575:25:14"},"nodeType":"YulFunctionCall","src":"14575:36:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14565:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14620:11:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14630:1:14","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14624:2:14","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14681:126:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14702:3:14"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14711:9:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14726:3:14","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14722:3:14"},"nodeType":"YulFunctionCall","src":"14722:8:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14707:3:14"},"nodeType":"YulFunctionCall","src":"14707:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14695:6:14"},"nodeType":"YulFunctionCall","src":"14695:37:14"},"nodeType":"YulExpressionStatement","src":"14695:37:14"},{"nodeType":"YulAssignment","src":"14745:52:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14756:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14765:6:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14787:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14780:6:14"},"nodeType":"YulFunctionCall","src":"14780:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14773:6:14"},"nodeType":"YulFunctionCall","src":"14773:22:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14761:3:14"},"nodeType":"YulFunctionCall","src":"14761:35:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14752:3:14"},"nodeType":"YulFunctionCall","src":"14752:45:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14745:3:14"}]}]},"nodeType":"YulCase","src":"14674:133:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14679:1:14","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"14823:349:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14844:1:14","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"14847:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14837:6:14"},"nodeType":"YulFunctionCall","src":"14837:17:14"},"nodeType":"YulExpressionStatement","src":"14837:17:14"},{"nodeType":"YulVariableDeclaration","src":"14867:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14877:4:14","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"14871:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14894:31:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14919:1:14","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"14922:2:14"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14909:9:14"},"nodeType":"YulFunctionCall","src":"14909:16:14"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"14898:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14938:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14947:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14942:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"15015:111:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15044:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"15049:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15040:3:14"},"nodeType":"YulFunctionCall","src":"15040:11:14"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"15059:7:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"15053:5:14"},"nodeType":"YulFunctionCall","src":"15053:14:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15033:6:14"},"nodeType":"YulFunctionCall","src":"15033:35:14"},"nodeType":"YulExpressionStatement","src":"15033:35:14"},{"nodeType":"YulAssignment","src":"15085:27:14","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"15100:7:14"},{"name":"_1","nodeType":"YulIdentifier","src":"15109:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15096:3:14"},"nodeType":"YulFunctionCall","src":"15096:16:14"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"15085:7:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14972:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"14975:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14969:2:14"},"nodeType":"YulFunctionCall","src":"14969:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14983:19:14","statements":[{"nodeType":"YulAssignment","src":"14985:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14994:1:14"},{"name":"_2","nodeType":"YulIdentifier","src":"14997:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14990:3:14"},"nodeType":"YulFunctionCall","src":"14990:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14985:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"14965:3:14","statements":[]},"src":"14961:165:14"},{"nodeType":"YulAssignment","src":"15139:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15150:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"15155:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15146:3:14"},"nodeType":"YulFunctionCall","src":"15146:16:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15139:3:14"}]}]},"nodeType":"YulCase","src":"14816:356:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14821:1:14","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14651:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"14662:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14647:3:14"},"nodeType":"YulFunctionCall","src":"14647:18:14"},"nodeType":"YulSwitch","src":"14640:532:14"},{"nodeType":"YulVariableDeclaration","src":"15181:29:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15203:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15197:5:14"},"nodeType":"YulFunctionCall","src":"15197:13:14"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"15185:8:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15258:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15266:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15254:3:14"},"nodeType":"YulFunctionCall","src":"15254:17:14"},{"name":"ret","nodeType":"YulIdentifier","src":"15273:3:14"},{"name":"length_1","nodeType":"YulIdentifier","src":"15278:8:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15219:34:14"},"nodeType":"YulFunctionCall","src":"15219:68:14"},"nodeType":"YulExpressionStatement","src":"15219:68:14"},{"nodeType":"YulAssignment","src":"15296:25:14","value":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"15307:3:14"},{"name":"length_1","nodeType":"YulIdentifier","src":"15312:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15303:3:14"},"nodeType":"YulFunctionCall","src":"15303:18:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15296:3:14"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14459:3:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14464:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14472:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14483:3:14","type":""}],"src":"14307:1020:14"},{"body":{"nodeType":"YulBlock","src":"15506:181:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15523:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15534:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15516:6:14"},"nodeType":"YulFunctionCall","src":"15516:21:14"},"nodeType":"YulExpressionStatement","src":"15516:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15557:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15568:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15553:3:14"},"nodeType":"YulFunctionCall","src":"15553:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"15573:2:14","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15546:6:14"},"nodeType":"YulFunctionCall","src":"15546:30:14"},"nodeType":"YulExpressionStatement","src":"15546:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15596:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15607:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15592:3:14"},"nodeType":"YulFunctionCall","src":"15592:18:14"},{"hexValue":"4856616c75653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15612:33:14","type":"","value":"HValue: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15585:6:14"},"nodeType":"YulFunctionCall","src":"15585:61:14"},"nodeType":"YulExpressionStatement","src":"15585:61:14"},{"nodeType":"YulAssignment","src":"15655:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15667:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15678:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15663:3:14"},"nodeType":"YulFunctionCall","src":"15663:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15655:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dea929535f31a6a3d4da771c56c977f613aa2b2d875a3332f245e364beb66cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15483:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15497:4:14","type":""}],"src":"15332:355:14"},{"body":{"nodeType":"YulBlock","src":"15724:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15741:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15748:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15753:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15744:3:14"},"nodeType":"YulFunctionCall","src":"15744:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15734:6:14"},"nodeType":"YulFunctionCall","src":"15734:31:14"},"nodeType":"YulExpressionStatement","src":"15734:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15781:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15784:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15774:6:14"},"nodeType":"YulFunctionCall","src":"15774:15:14"},"nodeType":"YulExpressionStatement","src":"15774:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15805:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15808:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15798:6:14"},"nodeType":"YulFunctionCall","src":"15798:15:14"},"nodeType":"YulExpressionStatement","src":"15798:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15692:127:14"},{"body":{"nodeType":"YulBlock","src":"15856:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15873:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15880:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15885:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15876:3:14"},"nodeType":"YulFunctionCall","src":"15876:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15866:6:14"},"nodeType":"YulFunctionCall","src":"15866:31:14"},"nodeType":"YulExpressionStatement","src":"15866:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15913:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15916:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15906:6:14"},"nodeType":"YulFunctionCall","src":"15906:15:14"},"nodeType":"YulExpressionStatement","src":"15906:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15937:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15940:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15930:6:14"},"nodeType":"YulFunctionCall","src":"15930:15:14"},"nodeType":"YulExpressionStatement","src":"15930:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15824:127:14"},{"body":{"nodeType":"YulBlock","src":"16003:88:14","statements":[{"body":{"nodeType":"YulBlock","src":"16034:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16036:16:14"},"nodeType":"YulFunctionCall","src":"16036:18:14"},"nodeType":"YulExpressionStatement","src":"16036:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16019:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16030:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16026:3:14"},"nodeType":"YulFunctionCall","src":"16026:6:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16016:2:14"},"nodeType":"YulFunctionCall","src":"16016:17:14"},"nodeType":"YulIf","src":"16013:43:14"},{"nodeType":"YulAssignment","src":"16065:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16076:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"16083:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16072:3:14"},"nodeType":"YulFunctionCall","src":"16072:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16065:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15985:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"15995:3:14","type":""}],"src":"15956:135:14"},{"body":{"nodeType":"YulBlock","src":"16270:236:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16287:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16298:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16280:6:14"},"nodeType":"YulFunctionCall","src":"16280:21:14"},"nodeType":"YulExpressionStatement","src":"16280:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16321:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16332:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16317:3:14"},"nodeType":"YulFunctionCall","src":"16317:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"16337:2:14","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16310:6:14"},"nodeType":"YulFunctionCall","src":"16310:30:14"},"nodeType":"YulExpressionStatement","src":"16310:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16360:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16371:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16356:3:14"},"nodeType":"YulFunctionCall","src":"16356:18:14"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"16376:34:14","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16349:6:14"},"nodeType":"YulFunctionCall","src":"16349:62:14"},"nodeType":"YulExpressionStatement","src":"16349:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16431:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16442:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16427:3:14"},"nodeType":"YulFunctionCall","src":"16427:18:14"},{"hexValue":"6572206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"16447:16:14","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16420:6:14"},"nodeType":"YulFunctionCall","src":"16420:44:14"},"nodeType":"YulExpressionStatement","src":"16420:44:14"},{"nodeType":"YulAssignment","src":"16473:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16485:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16496:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16481:3:14"},"nodeType":"YulFunctionCall","src":"16481:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16473:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16247:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16261:4:14","type":""}],"src":"16096:410:14"},{"body":{"nodeType":"YulBlock","src":"16685:231:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16702:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16713:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16695:6:14"},"nodeType":"YulFunctionCall","src":"16695:21:14"},"nodeType":"YulExpressionStatement","src":"16695:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16736:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16747:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16732:3:14"},"nodeType":"YulFunctionCall","src":"16732:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"16752:2:14","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16725:6:14"},"nodeType":"YulFunctionCall","src":"16725:30:14"},"nodeType":"YulExpressionStatement","src":"16725:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16775:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16786:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16771:3:14"},"nodeType":"YulFunctionCall","src":"16771:18:14"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"16791:34:14","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16764:6:14"},"nodeType":"YulFunctionCall","src":"16764:62:14"},"nodeType":"YulExpressionStatement","src":"16764:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16846:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16857:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16842:3:14"},"nodeType":"YulFunctionCall","src":"16842:18:14"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"16862:11:14","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16835:6:14"},"nodeType":"YulFunctionCall","src":"16835:39:14"},"nodeType":"YulExpressionStatement","src":"16835:39:14"},{"nodeType":"YulAssignment","src":"16883:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16895:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16906:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16891:3:14"},"nodeType":"YulFunctionCall","src":"16891:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16883:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16662:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16676:4:14","type":""}],"src":"16511:405:14"},{"body":{"nodeType":"YulBlock","src":"17095:226:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17112:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17123:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17105:6:14"},"nodeType":"YulFunctionCall","src":"17105:21:14"},"nodeType":"YulExpressionStatement","src":"17105:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17146:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17157:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17142:3:14"},"nodeType":"YulFunctionCall","src":"17142:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"17162:2:14","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17135:6:14"},"nodeType":"YulFunctionCall","src":"17135:30:14"},"nodeType":"YulExpressionStatement","src":"17135:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17185:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17196:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17181:3:14"},"nodeType":"YulFunctionCall","src":"17181:18:14"},{"hexValue":"4856616c75653a2063616c6c6572206973206e6f742074686520636f6e74726f","kind":"string","nodeType":"YulLiteral","src":"17201:34:14","type":"","value":"HValue: caller is not the contro"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17174:6:14"},"nodeType":"YulFunctionCall","src":"17174:62:14"},"nodeType":"YulExpressionStatement","src":"17174:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17256:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17267:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17252:3:14"},"nodeType":"YulFunctionCall","src":"17252:18:14"},{"hexValue":"6c6c6572","kind":"string","nodeType":"YulLiteral","src":"17272:6:14","type":"","value":"ller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17245:6:14"},"nodeType":"YulFunctionCall","src":"17245:34:14"},"nodeType":"YulExpressionStatement","src":"17245:34:14"},{"nodeType":"YulAssignment","src":"17288:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17300:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17311:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17296:3:14"},"nodeType":"YulFunctionCall","src":"17296:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17288:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c68bca7fa283e487dffc110655d1b436451e784bf6064e5151d72f6ebe27cd0c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17072:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17086:4:14","type":""}],"src":"16921:400:14"},{"body":{"nodeType":"YulBlock","src":"17500:171:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17517:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17528:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17510:6:14"},"nodeType":"YulFunctionCall","src":"17510:21:14"},"nodeType":"YulExpressionStatement","src":"17510:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17551:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17562:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17547:3:14"},"nodeType":"YulFunctionCall","src":"17547:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"17567:2:14","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17540:6:14"},"nodeType":"YulFunctionCall","src":"17540:30:14"},"nodeType":"YulExpressionStatement","src":"17540:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17590:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17601:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17586:3:14"},"nodeType":"YulFunctionCall","src":"17586:18:14"},{"hexValue":"6578636565642065786368616e6765206c696d6974","kind":"string","nodeType":"YulLiteral","src":"17606:23:14","type":"","value":"exceed exchange limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17579:6:14"},"nodeType":"YulFunctionCall","src":"17579:51:14"},"nodeType":"YulExpressionStatement","src":"17579:51:14"},{"nodeType":"YulAssignment","src":"17639:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17651:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17662:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17647:3:14"},"nodeType":"YulFunctionCall","src":"17647:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17639:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_11556822b0dbb84e42a57d7995abf090c129f85f99798a55739c0b2df8acb3f1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17477:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17491:4:14","type":""}],"src":"17326:345:14"},{"body":{"nodeType":"YulBlock","src":"17850:176:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17867:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17878:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17860:6:14"},"nodeType":"YulFunctionCall","src":"17860:21:14"},"nodeType":"YulExpressionStatement","src":"17860:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17901:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17912:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17897:3:14"},"nodeType":"YulFunctionCall","src":"17897:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"17917:2:14","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17890:6:14"},"nodeType":"YulFunctionCall","src":"17890:30:14"},"nodeType":"YulExpressionStatement","src":"17890:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17940:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17951:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17936:3:14"},"nodeType":"YulFunctionCall","src":"17936:18:14"},{"hexValue":"4856616c75653a206e6f7420656e6f75676820766f7563686572","kind":"string","nodeType":"YulLiteral","src":"17956:28:14","type":"","value":"HValue: not enough voucher"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17929:6:14"},"nodeType":"YulFunctionCall","src":"17929:56:14"},"nodeType":"YulExpressionStatement","src":"17929:56:14"},{"nodeType":"YulAssignment","src":"17994:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18006:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18017:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18002:3:14"},"nodeType":"YulFunctionCall","src":"18002:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17994:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6495068f22747f4702ada372c895e8589607dd29d4c382d701a9201403183e08__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17827:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17841:4:14","type":""}],"src":"17676:350:14"},{"body":{"nodeType":"YulBlock","src":"18079:77:14","statements":[{"nodeType":"YulAssignment","src":"18089:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18100:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"18103:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18096:3:14"},"nodeType":"YulFunctionCall","src":"18096:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18089:3:14"}]},{"body":{"nodeType":"YulBlock","src":"18128:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18130:16:14"},"nodeType":"YulFunctionCall","src":"18130:18:14"},"nodeType":"YulExpressionStatement","src":"18130:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18120:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"18123:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18117:2:14"},"nodeType":"YulFunctionCall","src":"18117:10:14"},"nodeType":"YulIf","src":"18114:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18062:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"18065:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18071:3:14","type":""}],"src":"18031:125:14"},{"body":{"nodeType":"YulBlock","src":"18242:464:14","statements":[{"body":{"nodeType":"YulBlock","src":"18275:425:14","statements":[{"nodeType":"YulVariableDeclaration","src":"18289:11:14","value":{"kind":"number","nodeType":"YulLiteral","src":"18299:1:14","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18293:2:14","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"18320:2:14"},{"name":"array","nodeType":"YulIdentifier","src":"18324:5:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18313:6:14"},"nodeType":"YulFunctionCall","src":"18313:17:14"},"nodeType":"YulExpressionStatement","src":"18313:17:14"},{"nodeType":"YulVariableDeclaration","src":"18343:31:14","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"18365:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"18369:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18355:9:14"},"nodeType":"YulFunctionCall","src":"18355:19:14"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"18347:4:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18387:57:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18410:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18420:1:14","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"18427:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"18439:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18423:3:14"},"nodeType":"YulFunctionCall","src":"18423:19:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18416:3:14"},"nodeType":"YulFunctionCall","src":"18416:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18406:3:14"},"nodeType":"YulFunctionCall","src":"18406:38:14"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"18391:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"18481:23:14","statements":[{"nodeType":"YulAssignment","src":"18483:19:14","value":{"name":"data","nodeType":"YulIdentifier","src":"18498:4:14"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"18483:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"18463:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"18475:4:14","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18460:2:14"},"nodeType":"YulFunctionCall","src":"18460:20:14"},"nodeType":"YulIf","src":"18457:47:14"},{"nodeType":"YulVariableDeclaration","src":"18517:41:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18531:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18541:1:14","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18548:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18553:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18544:3:14"},"nodeType":"YulFunctionCall","src":"18544:12:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18537:3:14"},"nodeType":"YulFunctionCall","src":"18537:20:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18527:3:14"},"nodeType":"YulFunctionCall","src":"18527:31:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"18521:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18571:24:14","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"18584:11:14"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"18575:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"18669:21:14","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18678:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"18685:2:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18671:6:14"},"nodeType":"YulFunctionCall","src":"18671:17:14"},"nodeType":"YulExpressionStatement","src":"18671:17:14"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18619:5:14"},{"name":"_2","nodeType":"YulIdentifier","src":"18626:2:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18616:2:14"},"nodeType":"YulFunctionCall","src":"18616:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18630:26:14","statements":[{"nodeType":"YulAssignment","src":"18632:22:14","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18645:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"18652:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18641:3:14"},"nodeType":"YulFunctionCall","src":"18641:13:14"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"18632:5:14"}]}]},"pre":{"nodeType":"YulBlock","src":"18612:3:14","statements":[]},"src":"18608:82:14"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18258:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18263:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18255:2:14"},"nodeType":"YulFunctionCall","src":"18255:11:14"},"nodeType":"YulIf","src":"18252:448:14"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"18214:5:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"18221:3:14","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"18226:10:14","type":""}],"src":"18161:545:14"},{"body":{"nodeType":"YulBlock","src":"18796:81:14","statements":[{"nodeType":"YulAssignment","src":"18806:65:14","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18821:4:14"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18839:1:14","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"18842:3:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18835:3:14"},"nodeType":"YulFunctionCall","src":"18835:11:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18852:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18848:3:14"},"nodeType":"YulFunctionCall","src":"18848:6:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18831:3:14"},"nodeType":"YulFunctionCall","src":"18831:24:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18827:3:14"},"nodeType":"YulFunctionCall","src":"18827:29:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18817:3:14"},"nodeType":"YulFunctionCall","src":"18817:40:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18863:1:14","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"18866:3:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18859:3:14"},"nodeType":"YulFunctionCall","src":"18859:11:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18814:2:14"},"nodeType":"YulFunctionCall","src":"18814:57:14"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"18806:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18773:4:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"18779:3:14","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"18787:4:14","type":""}],"src":"18711:166:14"},{"body":{"nodeType":"YulBlock","src":"18978:1256:14","statements":[{"nodeType":"YulVariableDeclaration","src":"18988:24:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19008:3:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19002:5:14"},"nodeType":"YulFunctionCall","src":"19002:10:14"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"18992:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"19055:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19057:16:14"},"nodeType":"YulFunctionCall","src":"19057:18:14"},"nodeType":"YulExpressionStatement","src":"19057:18:14"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19027:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"19035:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19024:2:14"},"nodeType":"YulFunctionCall","src":"19024:30:14"},"nodeType":"YulIf","src":"19021:56:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19130:4:14"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19168:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19162:5:14"},"nodeType":"YulFunctionCall","src":"19162:11:14"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"19136:25:14"},"nodeType":"YulFunctionCall","src":"19136:38:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"19176:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"19086:43:14"},"nodeType":"YulFunctionCall","src":"19086:97:14"},"nodeType":"YulExpressionStatement","src":"19086:97:14"},{"nodeType":"YulVariableDeclaration","src":"19192:18:14","value":{"kind":"number","nodeType":"YulLiteral","src":"19209:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"19196:9:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19219:23:14","value":{"kind":"number","nodeType":"YulLiteral","src":"19238:4:14","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"19223:11:14","type":""}]},{"nodeType":"YulAssignment","src":"19251:24:14","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"19264:11:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19251:9:14"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"19321:656:14","statements":[{"nodeType":"YulVariableDeclaration","src":"19335:35:14","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19354:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19366:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19362:3:14"},"nodeType":"YulFunctionCall","src":"19362:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19350:3:14"},"nodeType":"YulFunctionCall","src":"19350:20:14"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"19339:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19383:49:14","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19427:4:14"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"19397:29:14"},"nodeType":"YulFunctionCall","src":"19397:35:14"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"19387:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19445:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"19454:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19449:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"19532:172:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19557:6:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19575:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19580:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19571:3:14"},"nodeType":"YulFunctionCall","src":"19571:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19565:5:14"},"nodeType":"YulFunctionCall","src":"19565:26:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19550:6:14"},"nodeType":"YulFunctionCall","src":"19550:42:14"},"nodeType":"YulExpressionStatement","src":"19550:42:14"},{"nodeType":"YulAssignment","src":"19609:24:14","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19623:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"19631:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19619:3:14"},"nodeType":"YulFunctionCall","src":"19619:14:14"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19609:6:14"}]},{"nodeType":"YulAssignment","src":"19650:40:14","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19667:9:14"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"19678:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19663:3:14"},"nodeType":"YulFunctionCall","src":"19663:27:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19650:9:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19479:1:14"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"19482:7:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19476:2:14"},"nodeType":"YulFunctionCall","src":"19476:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19491:28:14","statements":[{"nodeType":"YulAssignment","src":"19493:24:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19502:1:14"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"19505:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19498:3:14"},"nodeType":"YulFunctionCall","src":"19498:19:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19493:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"19472:3:14","statements":[]},"src":"19468:236:14"},{"body":{"nodeType":"YulBlock","src":"19752:166:14","statements":[{"nodeType":"YulVariableDeclaration","src":"19770:43:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19797:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19802:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19793:3:14"},"nodeType":"YulFunctionCall","src":"19793:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19787:5:14"},"nodeType":"YulFunctionCall","src":"19787:26:14"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"19774:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19837:6:14"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"19849:9:14"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19876:1:14","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"19879:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19872:3:14"},"nodeType":"YulFunctionCall","src":"19872:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"19888:3:14","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19868:3:14"},"nodeType":"YulFunctionCall","src":"19868:24:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19898:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19894:3:14"},"nodeType":"YulFunctionCall","src":"19894:6:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19864:3:14"},"nodeType":"YulFunctionCall","src":"19864:37:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19860:3:14"},"nodeType":"YulFunctionCall","src":"19860:42:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19845:3:14"},"nodeType":"YulFunctionCall","src":"19845:58:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19830:6:14"},"nodeType":"YulFunctionCall","src":"19830:74:14"},"nodeType":"YulExpressionStatement","src":"19830:74:14"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"19723:7:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"19732:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19720:2:14"},"nodeType":"YulFunctionCall","src":"19720:19:14"},"nodeType":"YulIf","src":"19717:201:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19938:4:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19952:1:14","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"19955:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19948:3:14"},"nodeType":"YulFunctionCall","src":"19948:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"19964:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19944:3:14"},"nodeType":"YulFunctionCall","src":"19944:22:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19931:6:14"},"nodeType":"YulFunctionCall","src":"19931:36:14"},"nodeType":"YulExpressionStatement","src":"19931:36:14"}]},"nodeType":"YulCase","src":"19314:663:14","value":{"kind":"number","nodeType":"YulLiteral","src":"19319:1:14","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19994:234:14","statements":[{"nodeType":"YulVariableDeclaration","src":"20008:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"20021:1:14","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20012:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"20057:67:14","statements":[{"nodeType":"YulAssignment","src":"20075:35:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20094:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20099:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20090:3:14"},"nodeType":"YulFunctionCall","src":"20090:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20084:5:14"},"nodeType":"YulFunctionCall","src":"20084:26:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20075:5:14"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"20038:6:14"},"nodeType":"YulIf","src":"20035:89:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20144:4:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20203:5:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"20210:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"20150:52:14"},"nodeType":"YulFunctionCall","src":"20150:67:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20137:6:14"},"nodeType":"YulFunctionCall","src":"20137:81:14"},"nodeType":"YulExpressionStatement","src":"20137:81:14"}]},"nodeType":"YulCase","src":"19986:242:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19294:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"19302:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19291:2:14"},"nodeType":"YulFunctionCall","src":"19291:14:14"},"nodeType":"YulSwitch","src":"19284:944:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18963:4:14","type":""},{"name":"src","nodeType":"YulTypedName","src":"18969:3:14","type":""}],"src":"18882:1352:14"},{"body":{"nodeType":"YulBlock","src":"20320:170:14","statements":[{"body":{"nodeType":"YulBlock","src":"20366:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20375:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20378:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20368:6:14"},"nodeType":"YulFunctionCall","src":"20368:12:14"},"nodeType":"YulExpressionStatement","src":"20368:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20341:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"20350:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20337:3:14"},"nodeType":"YulFunctionCall","src":"20337:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"20362:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20333:3:14"},"nodeType":"YulFunctionCall","src":"20333:32:14"},"nodeType":"YulIf","src":"20330:52:14"},{"nodeType":"YulVariableDeclaration","src":"20391:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20410:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20404:5:14"},"nodeType":"YulFunctionCall","src":"20404:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20395:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20454:5:14"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"20429:24:14"},"nodeType":"YulFunctionCall","src":"20429:31:14"},"nodeType":"YulExpressionStatement","src":"20429:31:14"},{"nodeType":"YulAssignment","src":"20469:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"20479:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20469:6:14"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20286:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20297:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20309:6:14","type":""}],"src":"20239:251:14"},{"body":{"nodeType":"YulBlock","src":"20669:172:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20686:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20697:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20679:6:14"},"nodeType":"YulFunctionCall","src":"20679:21:14"},"nodeType":"YulExpressionStatement","src":"20679:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20720:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20731:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20716:3:14"},"nodeType":"YulFunctionCall","src":"20716:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"20736:2:14","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20709:6:14"},"nodeType":"YulFunctionCall","src":"20709:30:14"},"nodeType":"YulExpressionStatement","src":"20709:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20759:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20770:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20755:3:14"},"nodeType":"YulFunctionCall","src":"20755:18:14"},{"hexValue":"4856616c75653a206e6f742070756e6b206f776e6572","kind":"string","nodeType":"YulLiteral","src":"20775:24:14","type":"","value":"HValue: not punk owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20748:6:14"},"nodeType":"YulFunctionCall","src":"20748:52:14"},"nodeType":"YulExpressionStatement","src":"20748:52:14"},{"nodeType":"YulAssignment","src":"20809:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20821:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20832:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20817:3:14"},"nodeType":"YulFunctionCall","src":"20817:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20809:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_716d8e8655960bf2154053439ce31facdc46548c3a16249c94ec73f924c8ba9c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20646:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20660:4:14","type":""}],"src":"20495:346:14"},{"body":{"nodeType":"YulBlock","src":"21020:172:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21037:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21048:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21030:6:14"},"nodeType":"YulFunctionCall","src":"21030:21:14"},"nodeType":"YulExpressionStatement","src":"21030:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21071:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21082:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21067:3:14"},"nodeType":"YulFunctionCall","src":"21067:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"21087:2:14","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21060:6:14"},"nodeType":"YulFunctionCall","src":"21060:30:14"},"nodeType":"YulExpressionStatement","src":"21060:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21110:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21121:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21106:3:14"},"nodeType":"YulFunctionCall","src":"21106:18:14"},{"hexValue":"4856616c75653a206e6f74206c75636b792070756e6b","kind":"string","nodeType":"YulLiteral","src":"21126:24:14","type":"","value":"HValue: not lucky punk"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21099:6:14"},"nodeType":"YulFunctionCall","src":"21099:52:14"},"nodeType":"YulExpressionStatement","src":"21099:52:14"},{"nodeType":"YulAssignment","src":"21160:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21172:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21183:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21168:3:14"},"nodeType":"YulFunctionCall","src":"21168:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21160:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_aec0b404f50382a0e834a5f06508507c26b41f9bce791ef403d53b5948e659cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20997:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21011:4:14","type":""}],"src":"20846:346:14"},{"body":{"nodeType":"YulBlock","src":"21354:218:14","statements":[{"nodeType":"YulAssignment","src":"21364:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21376:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21387:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21372:3:14"},"nodeType":"YulFunctionCall","src":"21372:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21364:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"21399:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21417:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"21422:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21413:3:14"},"nodeType":"YulFunctionCall","src":"21413:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"21426:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21409:3:14"},"nodeType":"YulFunctionCall","src":"21409:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21403:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21444:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21459:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"21467:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21455:3:14"},"nodeType":"YulFunctionCall","src":"21455:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21437:6:14"},"nodeType":"YulFunctionCall","src":"21437:34:14"},"nodeType":"YulExpressionStatement","src":"21437:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21491:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21502:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21487:3:14"},"nodeType":"YulFunctionCall","src":"21487:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21511:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"21519:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21507:3:14"},"nodeType":"YulFunctionCall","src":"21507:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21480:6:14"},"nodeType":"YulFunctionCall","src":"21480:43:14"},"nodeType":"YulExpressionStatement","src":"21480:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21543:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21554:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21539:3:14"},"nodeType":"YulFunctionCall","src":"21539:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"21559:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21532:6:14"},"nodeType":"YulFunctionCall","src":"21532:34:14"},"nodeType":"YulExpressionStatement","src":"21532:34:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21307:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21318:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21326:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21334:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21345:4:14","type":""}],"src":"21197:375:14"},{"body":{"nodeType":"YulBlock","src":"21751:236:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21768:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21779:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21761:6:14"},"nodeType":"YulFunctionCall","src":"21761:21:14"},"nodeType":"YulExpressionStatement","src":"21761:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21802:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21813:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21798:3:14"},"nodeType":"YulFunctionCall","src":"21798:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"21818:2:14","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21791:6:14"},"nodeType":"YulFunctionCall","src":"21791:30:14"},"nodeType":"YulExpressionStatement","src":"21791:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21841:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21852:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21837:3:14"},"nodeType":"YulFunctionCall","src":"21837:18:14"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"21857:34:14","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21830:6:14"},"nodeType":"YulFunctionCall","src":"21830:62:14"},"nodeType":"YulExpressionStatement","src":"21830:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21912:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21923:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21908:3:14"},"nodeType":"YulFunctionCall","src":"21908:18:14"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"21928:16:14","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21901:6:14"},"nodeType":"YulFunctionCall","src":"21901:44:14"},"nodeType":"YulExpressionStatement","src":"21901:44:14"},{"nodeType":"YulAssignment","src":"21954:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21966:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21977:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21962:3:14"},"nodeType":"YulFunctionCall","src":"21962:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21954:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21728:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21742:4:14","type":""}],"src":"21577:410:14"},{"body":{"nodeType":"YulBlock","src":"22099:87:14","statements":[{"nodeType":"YulAssignment","src":"22109:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22121:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22132:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22117:3:14"},"nodeType":"YulFunctionCall","src":"22117:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22109:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22151:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22166:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22174:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22162:3:14"},"nodeType":"YulFunctionCall","src":"22162:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22144:6:14"},"nodeType":"YulFunctionCall","src":"22144:36:14"},"nodeType":"YulExpressionStatement","src":"22144:36:14"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22068:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22079:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22090:4:14","type":""}],"src":"21992:194:14"},{"body":{"nodeType":"YulBlock","src":"22365:170:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22382:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22393:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22375:6:14"},"nodeType":"YulFunctionCall","src":"22375:21:14"},"nodeType":"YulExpressionStatement","src":"22375:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22416:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22427:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22412:3:14"},"nodeType":"YulFunctionCall","src":"22412:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"22432:2:14","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22405:6:14"},"nodeType":"YulFunctionCall","src":"22405:30:14"},"nodeType":"YulExpressionStatement","src":"22405:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22455:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22466:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22451:3:14"},"nodeType":"YulFunctionCall","src":"22451:18:14"},{"hexValue":"4856616c75653a206e6f74206e65772079656172","kind":"string","nodeType":"YulLiteral","src":"22471:22:14","type":"","value":"HValue: not new year"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22444:6:14"},"nodeType":"YulFunctionCall","src":"22444:50:14"},"nodeType":"YulExpressionStatement","src":"22444:50:14"},{"nodeType":"YulAssignment","src":"22503:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22515:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22526:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22511:3:14"},"nodeType":"YulFunctionCall","src":"22511:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22503:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_a102db2d7672fdad004a63c326088de6266268bad23ec664881a9c9d6d98a5b0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22342:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22356:4:14","type":""}],"src":"22191:344:14"},{"body":{"nodeType":"YulBlock","src":"22586:171:14","statements":[{"body":{"nodeType":"YulBlock","src":"22617:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22638:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22645:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"22650:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22641:3:14"},"nodeType":"YulFunctionCall","src":"22641:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22631:6:14"},"nodeType":"YulFunctionCall","src":"22631:31:14"},"nodeType":"YulExpressionStatement","src":"22631:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22682:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22685:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22675:6:14"},"nodeType":"YulFunctionCall","src":"22675:15:14"},"nodeType":"YulExpressionStatement","src":"22675:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22710:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22713:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22703:6:14"},"nodeType":"YulFunctionCall","src":"22703:15:14"},"nodeType":"YulExpressionStatement","src":"22703:15:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22606:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22599:6:14"},"nodeType":"YulFunctionCall","src":"22599:9:14"},"nodeType":"YulIf","src":"22596:132:14"},{"nodeType":"YulAssignment","src":"22737:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22746:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"22749:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22742:3:14"},"nodeType":"YulFunctionCall","src":"22742:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22737:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22571:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"22574:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22580:1:14","type":""}],"src":"22540:217:14"},{"body":{"nodeType":"YulBlock","src":"22811:79:14","statements":[{"nodeType":"YulAssignment","src":"22821:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22833:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"22836:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22829:3:14"},"nodeType":"YulFunctionCall","src":"22829:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"22821:4:14"}]},{"body":{"nodeType":"YulBlock","src":"22862:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22864:16:14"},"nodeType":"YulFunctionCall","src":"22864:18:14"},"nodeType":"YulExpressionStatement","src":"22864:18:14"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"22853:4:14"},{"name":"x","nodeType":"YulIdentifier","src":"22859:1:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22850:2:14"},"nodeType":"YulFunctionCall","src":"22850:11:14"},"nodeType":"YulIf","src":"22847:37:14"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22793:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"22796:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"22802:4:14","type":""}],"src":"22762:128:14"},{"body":{"nodeType":"YulBlock","src":"22947:116:14","statements":[{"nodeType":"YulAssignment","src":"22957:20:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22972:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"22975:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22968:3:14"},"nodeType":"YulFunctionCall","src":"22968:9:14"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"22957:7:14"}]},{"body":{"nodeType":"YulBlock","src":"23035:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23037:16:14"},"nodeType":"YulFunctionCall","src":"23037:18:14"},"nodeType":"YulExpressionStatement","src":"23037:18:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23006:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22999:6:14"},"nodeType":"YulFunctionCall","src":"22999:9:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23013:1:14"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"23020:7:14"},{"name":"x","nodeType":"YulIdentifier","src":"23029:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23016:3:14"},"nodeType":"YulFunctionCall","src":"23016:15:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23010:2:14"},"nodeType":"YulFunctionCall","src":"23010:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22996:2:14"},"nodeType":"YulFunctionCall","src":"22996:37:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22989:6:14"},"nodeType":"YulFunctionCall","src":"22989:45:14"},"nodeType":"YulIf","src":"22986:71:14"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22926:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"22929:1:14","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"22935:7:14","type":""}],"src":"22895:168:14"},{"body":{"nodeType":"YulBlock","src":"23114:102:14","statements":[{"nodeType":"YulAssignment","src":"23124:38:14","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23139:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"23142:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23135:3:14"},"nodeType":"YulFunctionCall","src":"23135:12:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23153:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"23156:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23149:3:14"},"nodeType":"YulFunctionCall","src":"23149:12:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23131:3:14"},"nodeType":"YulFunctionCall","src":"23131:31:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23124:3:14"}]},{"body":{"nodeType":"YulBlock","src":"23188:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23190:16:14"},"nodeType":"YulFunctionCall","src":"23190:18:14"},"nodeType":"YulExpressionStatement","src":"23190:18:14"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"23177:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23182:4:14","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23174:2:14"},"nodeType":"YulFunctionCall","src":"23174:13:14"},"nodeType":"YulIf","src":"23171:39:14"}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23097:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"23100:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23106:3:14","type":""}],"src":"23068:148:14"},{"body":{"nodeType":"YulBlock","src":"23395:225:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23412:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23423:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23405:6:14"},"nodeType":"YulFunctionCall","src":"23405:21:14"},"nodeType":"YulExpressionStatement","src":"23405:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23446:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23457:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23442:3:14"},"nodeType":"YulFunctionCall","src":"23442:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"23462:2:14","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23435:6:14"},"nodeType":"YulFunctionCall","src":"23435:30:14"},"nodeType":"YulExpressionStatement","src":"23435:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23485:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23496:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23481:3:14"},"nodeType":"YulFunctionCall","src":"23481:18:14"},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"23501:34:14","type":"","value":"ERC1155: burn from the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23474:6:14"},"nodeType":"YulFunctionCall","src":"23474:62:14"},"nodeType":"YulExpressionStatement","src":"23474:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23556:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23567:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23552:3:14"},"nodeType":"YulFunctionCall","src":"23552:18:14"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"23572:5:14","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23545:6:14"},"nodeType":"YulFunctionCall","src":"23545:33:14"},"nodeType":"YulExpressionStatement","src":"23545:33:14"},{"nodeType":"YulAssignment","src":"23587:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23599:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23610:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23595:3:14"},"nodeType":"YulFunctionCall","src":"23595:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23587:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23372:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23386:4:14","type":""}],"src":"23221:399:14"},{"body":{"nodeType":"YulBlock","src":"23799:230:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23816:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23827:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23809:6:14"},"nodeType":"YulFunctionCall","src":"23809:21:14"},"nodeType":"YulExpressionStatement","src":"23809:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23850:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23861:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23846:3:14"},"nodeType":"YulFunctionCall","src":"23846:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"23866:2:14","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23839:6:14"},"nodeType":"YulFunctionCall","src":"23839:30:14"},"nodeType":"YulExpressionStatement","src":"23839:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23889:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23900:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23885:3:14"},"nodeType":"YulFunctionCall","src":"23885:18:14"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"23905:34:14","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23878:6:14"},"nodeType":"YulFunctionCall","src":"23878:62:14"},"nodeType":"YulExpressionStatement","src":"23878:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23960:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23971:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23956:3:14"},"nodeType":"YulFunctionCall","src":"23956:18:14"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"23976:10:14","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23949:6:14"},"nodeType":"YulFunctionCall","src":"23949:38:14"},"nodeType":"YulExpressionStatement","src":"23949:38:14"},{"nodeType":"YulAssignment","src":"23996:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24008:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24019:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24004:3:14"},"nodeType":"YulFunctionCall","src":"24004:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23996:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23776:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23790:4:14","type":""}],"src":"23625:404:14"},{"body":{"nodeType":"YulBlock","src":"24208:226:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24225:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24236:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24218:6:14"},"nodeType":"YulFunctionCall","src":"24218:21:14"},"nodeType":"YulExpressionStatement","src":"24218:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24259:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24270:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24255:3:14"},"nodeType":"YulFunctionCall","src":"24255:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"24275:2:14","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24248:6:14"},"nodeType":"YulFunctionCall","src":"24248:30:14"},"nodeType":"YulExpressionStatement","src":"24248:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24298:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24309:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24294:3:14"},"nodeType":"YulFunctionCall","src":"24294:18:14"},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c","kind":"string","nodeType":"YulLiteral","src":"24314:34:14","type":"","value":"ERC1155: burn amount exceeds bal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24287:6:14"},"nodeType":"YulFunctionCall","src":"24287:62:14"},"nodeType":"YulExpressionStatement","src":"24287:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24369:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24380:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24365:3:14"},"nodeType":"YulFunctionCall","src":"24365:18:14"},{"hexValue":"616e6365","kind":"string","nodeType":"YulLiteral","src":"24385:6:14","type":"","value":"ance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24358:6:14"},"nodeType":"YulFunctionCall","src":"24358:34:14"},"nodeType":"YulExpressionStatement","src":"24358:34:14"},{"nodeType":"YulAssignment","src":"24401:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24413:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24424:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24409:3:14"},"nodeType":"YulFunctionCall","src":"24409:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24401:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24185:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24199:4:14","type":""}],"src":"24034:400:14"},{"body":{"nodeType":"YulBlock","src":"24668:236:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24685:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24696:2:14","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24678:6:14"},"nodeType":"YulFunctionCall","src":"24678:21:14"},"nodeType":"YulExpressionStatement","src":"24678:21:14"},{"nodeType":"YulVariableDeclaration","src":"24708:70:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24751:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24763:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24774:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24759:3:14"},"nodeType":"YulFunctionCall","src":"24759:18:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"24722:28:14"},"nodeType":"YulFunctionCall","src":"24722:56:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"24712:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24798:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24809:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24794:3:14"},"nodeType":"YulFunctionCall","src":"24794:18:14"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"24818:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"24826:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24814:3:14"},"nodeType":"YulFunctionCall","src":"24814:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24787:6:14"},"nodeType":"YulFunctionCall","src":"24787:50:14"},"nodeType":"YulExpressionStatement","src":"24787:50:14"},{"nodeType":"YulAssignment","src":"24846:52:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24883:6:14"},{"name":"tail_1","nodeType":"YulIdentifier","src":"24891:6:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"24854:28:14"},"nodeType":"YulFunctionCall","src":"24854:44:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24846:4:14"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24629:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24640:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24648:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24659:4:14","type":""}],"src":"24439:465:14"},{"body":{"nodeType":"YulBlock","src":"25083:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25100:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25111:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25093:6:14"},"nodeType":"YulFunctionCall","src":"25093:21:14"},"nodeType":"YulExpressionStatement","src":"25093:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25134:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25145:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25130:3:14"},"nodeType":"YulFunctionCall","src":"25130:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"25150:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25123:6:14"},"nodeType":"YulFunctionCall","src":"25123:30:14"},"nodeType":"YulExpressionStatement","src":"25123:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25173:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25184:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25169:3:14"},"nodeType":"YulFunctionCall","src":"25169:18:14"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"25189:34:14","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25162:6:14"},"nodeType":"YulFunctionCall","src":"25162:62:14"},"nodeType":"YulExpressionStatement","src":"25162:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25244:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25255:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25240:3:14"},"nodeType":"YulFunctionCall","src":"25240:18:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"25260:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25233:6:14"},"nodeType":"YulFunctionCall","src":"25233:35:14"},"nodeType":"YulExpressionStatement","src":"25233:35:14"},{"nodeType":"YulAssignment","src":"25277:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25289:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25300:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25285:3:14"},"nodeType":"YulFunctionCall","src":"25285:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25277:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25060:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25074:4:14","type":""}],"src":"24909:401:14"},{"body":{"nodeType":"YulBlock","src":"25489:232:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25506:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25517:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25499:6:14"},"nodeType":"YulFunctionCall","src":"25499:21:14"},"nodeType":"YulExpressionStatement","src":"25499:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25540:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25551:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25536:3:14"},"nodeType":"YulFunctionCall","src":"25536:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"25556:2:14","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25529:6:14"},"nodeType":"YulFunctionCall","src":"25529:30:14"},"nodeType":"YulExpressionStatement","src":"25529:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25579:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25590:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25575:3:14"},"nodeType":"YulFunctionCall","src":"25575:18:14"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"25595:34:14","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25568:6:14"},"nodeType":"YulFunctionCall","src":"25568:62:14"},"nodeType":"YulExpressionStatement","src":"25568:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25650:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25661:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25646:3:14"},"nodeType":"YulFunctionCall","src":"25646:18:14"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"25666:12:14","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25639:6:14"},"nodeType":"YulFunctionCall","src":"25639:40:14"},"nodeType":"YulExpressionStatement","src":"25639:40:14"},{"nodeType":"YulAssignment","src":"25688:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25700:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25711:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25696:3:14"},"nodeType":"YulFunctionCall","src":"25696:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25688:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25466:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25480:4:14","type":""}],"src":"25315:406:14"},{"body":{"nodeType":"YulBlock","src":"25900:223:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25917:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25928:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25910:6:14"},"nodeType":"YulFunctionCall","src":"25910:21:14"},"nodeType":"YulExpressionStatement","src":"25910:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25951:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25962:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25947:3:14"},"nodeType":"YulFunctionCall","src":"25947:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"25967:2:14","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25940:6:14"},"nodeType":"YulFunctionCall","src":"25940:30:14"},"nodeType":"YulExpressionStatement","src":"25940:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25990:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26001:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25986:3:14"},"nodeType":"YulFunctionCall","src":"25986:18:14"},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"26006:34:14","type":"","value":"ERC1155: mint to the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25979:6:14"},"nodeType":"YulFunctionCall","src":"25979:62:14"},"nodeType":"YulExpressionStatement","src":"25979:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26061:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26072:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26057:3:14"},"nodeType":"YulFunctionCall","src":"26057:18:14"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"26077:3:14","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26050:6:14"},"nodeType":"YulFunctionCall","src":"26050:31:14"},"nodeType":"YulExpressionStatement","src":"26050:31:14"},{"nodeType":"YulAssignment","src":"26090:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26102:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26113:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26098:3:14"},"nodeType":"YulFunctionCall","src":"26098:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26090:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25877:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25891:4:14","type":""}],"src":"25726:397:14"},{"body":{"nodeType":"YulBlock","src":"26257:119:14","statements":[{"nodeType":"YulAssignment","src":"26267:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26279:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26290:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26275:3:14"},"nodeType":"YulFunctionCall","src":"26275:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26267:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26309:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"26320:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26302:6:14"},"nodeType":"YulFunctionCall","src":"26302:25:14"},"nodeType":"YulExpressionStatement","src":"26302:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26347:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26358:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26343:3:14"},"nodeType":"YulFunctionCall","src":"26343:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"26363:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26336:6:14"},"nodeType":"YulFunctionCall","src":"26336:34:14"},"nodeType":"YulExpressionStatement","src":"26336:34:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26218:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26229:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26237:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26248:4:14","type":""}],"src":"26128:248:14"},{"body":{"nodeType":"YulBlock","src":"26555:231:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26572:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26583:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26565:6:14"},"nodeType":"YulFunctionCall","src":"26565:21:14"},"nodeType":"YulExpressionStatement","src":"26565:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26606:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26617:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26602:3:14"},"nodeType":"YulFunctionCall","src":"26602:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"26622:2:14","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26595:6:14"},"nodeType":"YulFunctionCall","src":"26595:30:14"},"nodeType":"YulExpressionStatement","src":"26595:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26645:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26656:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26641:3:14"},"nodeType":"YulFunctionCall","src":"26641:18:14"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"26661:34:14","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26634:6:14"},"nodeType":"YulFunctionCall","src":"26634:62:14"},"nodeType":"YulExpressionStatement","src":"26634:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26716:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26727:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26712:3:14"},"nodeType":"YulFunctionCall","src":"26712:18:14"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"26732:11:14","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26705:6:14"},"nodeType":"YulFunctionCall","src":"26705:39:14"},"nodeType":"YulExpressionStatement","src":"26705:39:14"},{"nodeType":"YulAssignment","src":"26753:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26765:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26776:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26761:3:14"},"nodeType":"YulFunctionCall","src":"26761:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26753:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26532:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26546:4:14","type":""}],"src":"26381:405:14"},{"body":{"nodeType":"YulBlock","src":"26965:233:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26982:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26993:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26975:6:14"},"nodeType":"YulFunctionCall","src":"26975:21:14"},"nodeType":"YulExpressionStatement","src":"26975:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27016:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27027:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27012:3:14"},"nodeType":"YulFunctionCall","src":"27012:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"27032:2:14","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27005:6:14"},"nodeType":"YulFunctionCall","src":"27005:30:14"},"nodeType":"YulExpressionStatement","src":"27005:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27055:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27066:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27051:3:14"},"nodeType":"YulFunctionCall","src":"27051:18:14"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"27071:34:14","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27044:6:14"},"nodeType":"YulFunctionCall","src":"27044:62:14"},"nodeType":"YulExpressionStatement","src":"27044:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27126:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27137:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27122:3:14"},"nodeType":"YulFunctionCall","src":"27122:18:14"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"27142:13:14","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27115:6:14"},"nodeType":"YulFunctionCall","src":"27115:41:14"},"nodeType":"YulExpressionStatement","src":"27115:41:14"},{"nodeType":"YulAssignment","src":"27165:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27177:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27188:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27173:3:14"},"nodeType":"YulFunctionCall","src":"27173:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27165:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26942:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26956:4:14","type":""}],"src":"26791:407:14"},{"body":{"nodeType":"YulBlock","src":"27377:230:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27394:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27405:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27387:6:14"},"nodeType":"YulFunctionCall","src":"27387:21:14"},"nodeType":"YulExpressionStatement","src":"27387:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27428:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27439:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27424:3:14"},"nodeType":"YulFunctionCall","src":"27424:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"27444:2:14","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27417:6:14"},"nodeType":"YulFunctionCall","src":"27417:30:14"},"nodeType":"YulExpressionStatement","src":"27417:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27467:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27478:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27463:3:14"},"nodeType":"YulFunctionCall","src":"27463:18:14"},{"hexValue":"455243313135353a206275726e20616d6f756e74206578636565647320746f74","kind":"string","nodeType":"YulLiteral","src":"27483:34:14","type":"","value":"ERC1155: burn amount exceeds tot"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27456:6:14"},"nodeType":"YulFunctionCall","src":"27456:62:14"},"nodeType":"YulExpressionStatement","src":"27456:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27538:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27549:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27534:3:14"},"nodeType":"YulFunctionCall","src":"27534:18:14"},{"hexValue":"616c537570706c79","kind":"string","nodeType":"YulLiteral","src":"27554:10:14","type":"","value":"alSupply"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27527:6:14"},"nodeType":"YulFunctionCall","src":"27527:38:14"},"nodeType":"YulExpressionStatement","src":"27527:38:14"},{"nodeType":"YulAssignment","src":"27574:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27586:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27597:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27582:3:14"},"nodeType":"YulFunctionCall","src":"27582:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27574:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27354:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27368:4:14","type":""}],"src":"27203:404:14"},{"body":{"nodeType":"YulBlock","src":"27943:496:14","statements":[{"nodeType":"YulVariableDeclaration","src":"27953:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27971:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"27976:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27967:3:14"},"nodeType":"YulFunctionCall","src":"27967:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"27980:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27963:3:14"},"nodeType":"YulFunctionCall","src":"27963:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"27957:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27998:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28013:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"28021:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28009:3:14"},"nodeType":"YulFunctionCall","src":"28009:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27991:6:14"},"nodeType":"YulFunctionCall","src":"27991:34:14"},"nodeType":"YulExpressionStatement","src":"27991:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28045:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28056:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28041:3:14"},"nodeType":"YulFunctionCall","src":"28041:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28065:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"28073:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28061:3:14"},"nodeType":"YulFunctionCall","src":"28061:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28034:6:14"},"nodeType":"YulFunctionCall","src":"28034:43:14"},"nodeType":"YulExpressionStatement","src":"28034:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28097:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28108:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28093:3:14"},"nodeType":"YulFunctionCall","src":"28093:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"28113:3:14","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28086:6:14"},"nodeType":"YulFunctionCall","src":"28086:31:14"},"nodeType":"YulExpressionStatement","src":"28086:31:14"},{"nodeType":"YulVariableDeclaration","src":"28126:71:14","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28169:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28181:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28192:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28177:3:14"},"nodeType":"YulFunctionCall","src":"28177:19:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"28140:28:14"},"nodeType":"YulFunctionCall","src":"28140:57:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"28130:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28217:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28228:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28213:3:14"},"nodeType":"YulFunctionCall","src":"28213:18:14"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"28237:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"28245:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28233:3:14"},"nodeType":"YulFunctionCall","src":"28233:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28206:6:14"},"nodeType":"YulFunctionCall","src":"28206:50:14"},"nodeType":"YulExpressionStatement","src":"28206:50:14"},{"nodeType":"YulVariableDeclaration","src":"28265:58:14","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"28308:6:14"},{"name":"tail_1","nodeType":"YulIdentifier","src":"28316:6:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"28279:28:14"},"nodeType":"YulFunctionCall","src":"28279:44:14"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"28269:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28343:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28354:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28339:3:14"},"nodeType":"YulFunctionCall","src":"28339:19:14"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"28364:6:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"28372:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28360:3:14"},"nodeType":"YulFunctionCall","src":"28360:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28332:6:14"},"nodeType":"YulFunctionCall","src":"28332:51:14"},"nodeType":"YulExpressionStatement","src":"28332:51:14"},{"nodeType":"YulAssignment","src":"28392:41:14","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"28418:6:14"},{"name":"tail_2","nodeType":"YulIdentifier","src":"28426:6:14"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"28400:17:14"},"nodeType":"YulFunctionCall","src":"28400:33:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28392:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27880:9:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"27891:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27899:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27907:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27915:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27923:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27934:4:14","type":""}],"src":"27612:827:14"},{"body":{"nodeType":"YulBlock","src":"28524:169:14","statements":[{"body":{"nodeType":"YulBlock","src":"28570:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28579:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28582:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28572:6:14"},"nodeType":"YulFunctionCall","src":"28572:12:14"},"nodeType":"YulExpressionStatement","src":"28572:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28545:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"28554:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28541:3:14"},"nodeType":"YulFunctionCall","src":"28541:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"28566:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28537:3:14"},"nodeType":"YulFunctionCall","src":"28537:32:14"},"nodeType":"YulIf","src":"28534:52:14"},{"nodeType":"YulVariableDeclaration","src":"28595:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28614:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28608:5:14"},"nodeType":"YulFunctionCall","src":"28608:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"28599:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28657:5:14"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"28633:23:14"},"nodeType":"YulFunctionCall","src":"28633:30:14"},"nodeType":"YulExpressionStatement","src":"28633:30:14"},{"nodeType":"YulAssignment","src":"28672:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"28682:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28672:6:14"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28490:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28501:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28513:6:14","type":""}],"src":"28444:249:14"},{"body":{"nodeType":"YulBlock","src":"28741:136:14","statements":[{"body":{"nodeType":"YulBlock","src":"28786:85:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28815:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28818:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28821:1:14","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"28800:14:14"},"nodeType":"YulFunctionCall","src":"28800:23:14"},"nodeType":"YulExpressionStatement","src":"28800:23:14"},{"nodeType":"YulAssignment","src":"28836:25:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28847:3:14","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28858:1:14","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28852:5:14"},"nodeType":"YulFunctionCall","src":"28852:8:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28843:3:14"},"nodeType":"YulFunctionCall","src":"28843:18:14"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"28836:3:14"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"28757:14:14"},"nodeType":"YulFunctionCall","src":"28757:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"28775:1:14","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28754:2:14"},"nodeType":"YulFunctionCall","src":"28754:23:14"},"nodeType":"YulIf","src":"28751:120:14"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"28733:3:14","type":""}],"src":"28698:179:14"},{"body":{"nodeType":"YulBlock","src":"28929:624:14","statements":[{"body":{"nodeType":"YulBlock","src":"28969:9:14","statements":[{"nodeType":"YulLeave","src":"28971:5:14"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"28945:14:14"},"nodeType":"YulFunctionCall","src":"28945:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"28963:4:14","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28942:2:14"},"nodeType":"YulFunctionCall","src":"28942:26:14"},"nodeType":"YulIf","src":"28939:39:14"},{"nodeType":"YulVariableDeclaration","src":"28987:21:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29005:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28999:5:14"},"nodeType":"YulFunctionCall","src":"28999:9:14"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"28991:4:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29017:16:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29031:1:14","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29027:3:14"},"nodeType":"YulFunctionCall","src":"29027:6:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"29021:2:14","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29057:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"29063:1:14","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29070:14:14"},"nodeType":"YulFunctionCall","src":"29070:16:14"},{"name":"_1","nodeType":"YulIdentifier","src":"29088:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29066:3:14"},"nodeType":"YulFunctionCall","src":"29066:25:14"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"29042:14:14"},"nodeType":"YulFunctionCall","src":"29042:50:14"},"nodeType":"YulExpressionStatement","src":"29042:50:14"},{"nodeType":"YulVariableDeclaration","src":"29101:25:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29121:4:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29115:5:14"},"nodeType":"YulFunctionCall","src":"29115:11:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29105:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29135:26:14","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29145:14:14"},"nodeType":"YulFunctionCall","src":"29145:16:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"29139:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29170:28:14","value":{"kind":"number","nodeType":"YulLiteral","src":"29180:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"29174:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"29256:9:14","statements":[{"nodeType":"YulLeave","src":"29258:5:14"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29216:6:14"},{"name":"_3","nodeType":"YulIdentifier","src":"29224:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29213:2:14"},"nodeType":"YulFunctionCall","src":"29213:14:14"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29236:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29244:4:14","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29232:3:14"},"nodeType":"YulFunctionCall","src":"29232:17:14"},{"name":"_2","nodeType":"YulIdentifier","src":"29251:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29229:2:14"},"nodeType":"YulFunctionCall","src":"29229:25:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"29210:2:14"},"nodeType":"YulFunctionCall","src":"29210:45:14"},"nodeType":"YulIf","src":"29207:58:14"},{"nodeType":"YulVariableDeclaration","src":"29274:28:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29289:4:14"},{"name":"offset","nodeType":"YulIdentifier","src":"29295:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29285:3:14"},"nodeType":"YulFunctionCall","src":"29285:17:14"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"29278:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29311:24:14","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"29331:3:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29325:5:14"},"nodeType":"YulFunctionCall","src":"29325:10:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29315:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"29362:9:14","statements":[{"nodeType":"YulLeave","src":"29364:5:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29350:6:14"},{"name":"_3","nodeType":"YulIdentifier","src":"29358:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29347:2:14"},"nodeType":"YulFunctionCall","src":"29347:14:14"},"nodeType":"YulIf","src":"29344:27:14"},{"body":{"nodeType":"YulBlock","src":"29453:9:14","statements":[{"nodeType":"YulLeave","src":"29455:5:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"29394:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"29399:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29390:3:14"},"nodeType":"YulFunctionCall","src":"29390:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"29408:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29386:3:14"},"nodeType":"YulFunctionCall","src":"29386:27:14"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29423:4:14"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29429:14:14"},"nodeType":"YulFunctionCall","src":"29429:16:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29419:3:14"},"nodeType":"YulFunctionCall","src":"29419:27:14"},{"name":"_1","nodeType":"YulIdentifier","src":"29448:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29415:3:14"},"nodeType":"YulFunctionCall","src":"29415:36:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29383:2:14"},"nodeType":"YulFunctionCall","src":"29383:69:14"},"nodeType":"YulIf","src":"29380:82:14"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29491:4:14"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29505:6:14"},{"name":"length","nodeType":"YulIdentifier","src":"29513:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29501:3:14"},"nodeType":"YulFunctionCall","src":"29501:19:14"},{"kind":"number","nodeType":"YulLiteral","src":"29522:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29497:3:14"},"nodeType":"YulFunctionCall","src":"29497:30:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"29471:19:14"},"nodeType":"YulFunctionCall","src":"29471:57:14"},"nodeType":"YulExpressionStatement","src":"29471:57:14"},{"nodeType":"YulAssignment","src":"29537:10:14","value":{"name":"msg","nodeType":"YulIdentifier","src":"29544:3:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29537:3:14"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28921:3:14","type":""}],"src":"28882:671:14"},{"body":{"nodeType":"YulBlock","src":"29732:242:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29749:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29760:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29742:6:14"},"nodeType":"YulFunctionCall","src":"29742:21:14"},"nodeType":"YulExpressionStatement","src":"29742:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29783:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29794:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29779:3:14"},"nodeType":"YulFunctionCall","src":"29779:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"29799:2:14","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29772:6:14"},"nodeType":"YulFunctionCall","src":"29772:30:14"},"nodeType":"YulExpressionStatement","src":"29772:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29822:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29833:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29818:3:14"},"nodeType":"YulFunctionCall","src":"29818:18:14"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535","kind":"string","nodeType":"YulLiteral","src":"29838:34:14","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29811:6:14"},"nodeType":"YulFunctionCall","src":"29811:62:14"},"nodeType":"YulExpressionStatement","src":"29811:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29893:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29904:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29889:3:14"},"nodeType":"YulFunctionCall","src":"29889:18:14"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"29909:22:14","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29882:6:14"},"nodeType":"YulFunctionCall","src":"29882:50:14"},"nodeType":"YulExpressionStatement","src":"29882:50:14"},{"nodeType":"YulAssignment","src":"29941:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29953:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29964:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29949:3:14"},"nodeType":"YulFunctionCall","src":"29949:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29941:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29709:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29723:4:14","type":""}],"src":"29558:416:14"},{"body":{"nodeType":"YulBlock","src":"30153:230:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30170:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30181:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30163:6:14"},"nodeType":"YulFunctionCall","src":"30163:21:14"},"nodeType":"YulExpressionStatement","src":"30163:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30204:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30215:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30200:3:14"},"nodeType":"YulFunctionCall","src":"30200:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"30220:2:14","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30193:6:14"},"nodeType":"YulFunctionCall","src":"30193:30:14"},"nodeType":"YulExpressionStatement","src":"30193:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30243:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30254:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30239:3:14"},"nodeType":"YulFunctionCall","src":"30239:18:14"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"30259:34:14","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30232:6:14"},"nodeType":"YulFunctionCall","src":"30232:62:14"},"nodeType":"YulExpressionStatement","src":"30232:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30314:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30325:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30310:3:14"},"nodeType":"YulFunctionCall","src":"30310:18:14"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"30330:10:14","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30303:6:14"},"nodeType":"YulFunctionCall","src":"30303:38:14"},"nodeType":"YulExpressionStatement","src":"30303:38:14"},{"nodeType":"YulAssignment","src":"30350:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30362:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30373:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30358:3:14"},"nodeType":"YulFunctionCall","src":"30358:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30350:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30130:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30144:4:14","type":""}],"src":"29979:404:14"},{"body":{"nodeType":"YulBlock","src":"30619:330:14","statements":[{"nodeType":"YulVariableDeclaration","src":"30629:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30647:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"30652:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30643:3:14"},"nodeType":"YulFunctionCall","src":"30643:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"30656:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30639:3:14"},"nodeType":"YulFunctionCall","src":"30639:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"30633:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30674:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30689:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"30697:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30685:3:14"},"nodeType":"YulFunctionCall","src":"30685:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30667:6:14"},"nodeType":"YulFunctionCall","src":"30667:34:14"},"nodeType":"YulExpressionStatement","src":"30667:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30721:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30732:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30717:3:14"},"nodeType":"YulFunctionCall","src":"30717:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30741:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"30749:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30737:3:14"},"nodeType":"YulFunctionCall","src":"30737:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30710:6:14"},"nodeType":"YulFunctionCall","src":"30710:43:14"},"nodeType":"YulExpressionStatement","src":"30710:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30773:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30784:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30769:3:14"},"nodeType":"YulFunctionCall","src":"30769:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"30789:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30762:6:14"},"nodeType":"YulFunctionCall","src":"30762:34:14"},"nodeType":"YulExpressionStatement","src":"30762:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30816:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30827:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30812:3:14"},"nodeType":"YulFunctionCall","src":"30812:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"30832:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30805:6:14"},"nodeType":"YulFunctionCall","src":"30805:34:14"},"nodeType":"YulExpressionStatement","src":"30805:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30859:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30870:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30855:3:14"},"nodeType":"YulFunctionCall","src":"30855:19:14"},{"kind":"number","nodeType":"YulLiteral","src":"30876:3:14","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30848:6:14"},"nodeType":"YulFunctionCall","src":"30848:32:14"},"nodeType":"YulExpressionStatement","src":"30848:32:14"},{"nodeType":"YulAssignment","src":"30889:54:14","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"30915:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30927:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30938:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30923:3:14"},"nodeType":"YulFunctionCall","src":"30923:19:14"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"30897:17:14"},"nodeType":"YulFunctionCall","src":"30897:46:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30889:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30556:9:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"30567:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30575:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30583:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30591:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30599:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30610:4:14","type":""}],"src":"30388:561:14"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_contract$_IHashPunk_$2784(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IHashPunk_$2784__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_2), dataEnd)\n        let offset_3 := calldataload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_3), dataEnd)\n        let offset_4 := calldataload(add(headStart, 128))\n        if gt(offset_4, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_4), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        end := add(ret, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_7dea929535f31a6a3d4da771c56c977f613aa2b2d875a3332f245e364beb66cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"HValue: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c68bca7fa283e487dffc110655d1b436451e784bf6064e5151d72f6ebe27cd0c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"HValue: caller is not the contro\")\n        mstore(add(headStart, 96), \"ller\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_11556822b0dbb84e42a57d7995abf090c129f85f99798a55739c0b2df8acb3f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"exceed exchange limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6495068f22747f4702ada372c895e8589607dd29d4c382d701a9201403183e08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"HValue: not enough voucher\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_716d8e8655960bf2154053439ce31facdc46548c3a16249c94ec73f924c8ba9c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"HValue: not punk owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aec0b404f50382a0e834a5f06508507c26b41f9bce791ef403d53b5948e659cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"HValue: not lucky punk\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_a102db2d7672fdad004a63c326088de6266268bad23ec664881a9c9d6d98a5b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"HValue: not new year\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds tot\")\n        mstore(add(headStart, 96), \"alSupply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x226 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xCDDA418C GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xF5298ACA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0xF96B7BF9 EQ PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xD717B05E EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xE1012A89 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9BA138C8 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x9BA138C8 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xA0BCFC7F EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xA5AFB7E0 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x9642903F EQ PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4C25E11F GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x6BE55BB4 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x6BE55BB4 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x887BE052 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x8B0BB069 EQ PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4C25E11F EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x2A36C108 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x340A9A1C EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x444B7AAF EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE471525 EQ PUSH2 0x289 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23E PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x248 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2052 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2156 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xCE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2203 JUMP JUMPDEST PUSH1 0xD7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x312 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x2220 JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x264 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x35F CALLDATASIZE PUSH1 0x4 PUSH2 0x22D1 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH2 0x23E PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x2203 JUMP JUMPDEST PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH2 0x3B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x248 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x9C2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH2 0x3B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x2333 JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x42D CALLDATASIZE PUSH1 0x4 PUSH2 0x2383 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x23E PUSH2 0x453 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C1 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x2434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x24CA JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x4FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2333 JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH2 0x3B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x23E PUSH1 0xD4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x593 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x5EF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x5B8 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH2 0x61B SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x647 SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x694 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x669 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x694 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x677 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCF PUSH2 0x6A9 DUP4 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6BA SWAP3 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x73C JUMPI PUSH2 0x72A DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 PUSH2 0x110A JUMP JUMPDEST DUP1 PUSH2 0x734 DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6FD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x75E JUMPI POP PUSH2 0x75E DUP6 CALLER PUSH2 0x498 JUMP JUMPDEST PUSH2 0x77A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x787 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x12A9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x80E JUMPI PUSH2 0x80E PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x837 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH2 0x882 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x85B JUMPI PUSH2 0x85B PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x875 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x523 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x8A8 DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP1 POP PUSH2 0x83D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xCF DUP1 SLOAD PUSH2 0x61B SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST TIMESTAMP PUSH1 0xCE SSTORE JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x268A JUMP JUMPDEST PUSH2 0x73C DUP5 DUP5 DUP5 DUP5 PUSH2 0x144E JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST PUSH1 0xCD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH2 0x61B SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0xD5 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x195E18D9595908195E18DA185B99D9481B1A5B5A5D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58A JUMP JUMPDEST DUP1 PUSH2 0xA35 CALLER PUSH1 0xD2 SLOAD PUSH2 0x523 JUMP JUMPDEST LT ISZERO PUSH2 0xA83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4856616C75653A206E6F7420656E6F75676820766F7563686572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58A JUMP JUMPDEST PUSH2 0xA90 CALLER PUSH1 0xD2 SLOAD DUP4 PUSH2 0x1539 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAAF SWAP1 DUP5 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST PUSH1 0xCF PUSH2 0xAED DUP3 DUP3 PUSH2 0x2727 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAED CALLER DUP4 DUP4 PUSH2 0x1655 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB69 SWAP2 SWAP1 PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x242B30B63AB29D103737BA10383AB7359037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0xD3 SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xBCC JUMPI POP PUSH1 0xD4 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4856616C75653A206E6F74206C75636B792070756E6B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58A JUMP JUMPDEST PUSH2 0xC2F CALLER PUSH1 0xD1 SLOAD PUSH1 0x46 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x144E JUMP JUMPDEST PUSH2 0xC3D CALLER PUSH1 0xD2 SLOAD PUSH1 0x1 PUSH2 0x1539 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x787 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x25C0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xD6D JUMPI PUSH2 0xCFE DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCEE JUMPI PUSH2 0xCEE PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP7 DUP6 PUSH2 0x1735 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD10 JUMPI PUSH2 0xD10 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xD7 PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD2E JUMPI PUSH2 0xD2E PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xD65 SWAP1 PUSH2 0x2623 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCD0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xD91 JUMPI POP PUSH2 0xD91 DUP6 CALLER PUSH2 0x498 JUMP JUMPDEST PUSH2 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x787 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x268A JUMP JUMPDEST PUSH2 0xDEF DUP4 DUP4 DUP4 PUSH2 0x1539 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xE14 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xE2E JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE2E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEB4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEBC PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x4856616C7565 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC9 SWAP1 PUSH2 0xEE6 SWAP1 DUP3 PUSH2 0x2727 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x242B PUSH1 0xF1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xCA SWAP1 PUSH2 0xF0D SWAP1 DUP3 PUSH2 0x2727 JUMP JUMPDEST POP PUSH2 0xF17 DUP3 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0xCE SSTORE DUP1 ISZERO PUSH2 0xAED JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xCE SLOAD PUSH2 0xF87 SWAP1 PUSH4 0x1E13380 PUSH2 0x26CE JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x242B30B63AB29D103737BA103732BB903CB2B0B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1006 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1030 JUMPI DUP1 PUSH2 0x101A DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP2 POP PUSH2 0x1029 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2803 JUMP JUMPDEST SWAP2 POP PUSH2 0x100A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x104A JUMPI PUSH2 0x104A PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1074 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0x1101 JUMPI PUSH2 0x108A PUSH1 0x1 DUP3 PUSH2 0x2825 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1099 PUSH1 0xA DUP9 PUSH2 0x2803 JUMP JUMPDEST PUSH2 0x10A4 SWAP1 PUSH1 0xA PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x10AE SWAP1 DUP9 PUSH2 0x2825 JUMP JUMPDEST PUSH2 0x10B9 SWAP1 PUSH1 0x30 PUSH2 0x284F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x10D6 JUMPI PUSH2 0x10D6 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x10F8 PUSH1 0xA DUP10 PUSH2 0x2803 JUMP JUMPDEST SWAP8 POP POP POP PUSH2 0x1079 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2868 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x1174 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1194 JUMPI PUSH2 0x1194 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11B2 JUMPI PUSH2 0x11B2 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0x1234 DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1177 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x128D SWAP3 SWAP2 SWAP1 PUSH2 0x2937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x73C JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x12CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x12F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2965 JUMP JUMPDEST CALLER PUSH2 0x12FF DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x13E8 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x131F JUMPI PUSH2 0x131F PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x133D JUMPI PUSH2 0x133D PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x138E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x13CD SWAP1 DUP5 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x13E1 SWAP1 PUSH2 0x2623 JUMP JUMPDEST SWAP1 POP PUSH2 0x1302 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1438 SWAP3 SWAP2 SWAP1 PUSH2 0x2937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xD6D DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x29F4 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1480 DUP6 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x148D DUP6 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH2 0x149E DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x14D0 SWAP1 DUP5 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1530 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1D58 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2868 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x156B DUP5 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1578 DUP5 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH2 0x1598 DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x15DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x1530 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x16C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x175B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x29F4 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x177C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x28AB JUMP JUMPDEST CALLER PUSH2 0x178C DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1828 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x17AA JUMPI PUSH2 0x17AA PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x65 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x17C8 JUMPI PUSH2 0x17C8 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1810 SWAP2 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x1820 DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x178F JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1879 SWAP3 SWAP2 SWAP1 PUSH2 0x2937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x787 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x18B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2965 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x18C2 DUP6 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18CF DUP6 PUSH2 0x1D0D JUMP JUMPDEST SWAP1 POP PUSH2 0x18DF DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1961 SWAP1 DUP5 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19C1 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1D58 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1AC0 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1ABE JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1A65 JUMPI PUSH2 0x1A65 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x97 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A83 JUMPI PUSH2 0x1A83 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AA8 SWAP2 SWAP1 PUSH2 0x26CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1AB7 SWAP1 POP DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A4A JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD6D JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1530 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1AEE JUMPI PUSH2 0x1AEE PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B0C JUMPI PUSH2 0x1B0C PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1B8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E74206578636565647320746F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x616C537570706C79 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0x1BAB DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1BF6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C31 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1C2E SWAP2 DUP2 ADD SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1CDD JUMPI PUSH2 0x1C3D PUSH2 0x2AB0 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1C76 JUMPI POP PUSH2 0x1C51 PUSH2 0x2ACC JUMP JUMPDEST DUP1 PUSH2 0x1C5C JUMPI POP PUSH2 0x1C78 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2B55 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D47 JUMPI PUSH2 0x1D47 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1D9C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2B9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1DD7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1DD4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1DE3 JUMPI PUSH2 0x1C3D PUSH2 0x2AB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x2B55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E49 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E8A DUP2 PUSH2 0x1E57 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EAC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E94 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1ECD DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E8A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F48 JUMPI PUSH2 0x1F48 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1F68 JUMPI PUSH2 0x1F68 PUSH2 0x1F0D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1F90 DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9D DUP3 DUP3 PUSH2 0x1F23 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1FBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1FE1 JUMPI DUP1 CALLDATALOAD PUSH2 0x1FD4 DUP2 PUSH2 0x1E13 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1FC1 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x200A DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2017 DUP3 DUP3 PUSH2 0x1F23 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x2037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1FE1 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x203B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208A DUP8 DUP4 DUP9 ADD PUSH2 0x1F72 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20AC DUP8 DUP4 DUP9 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20CF DUP7 DUP3 DUP8 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x20F2 JUMPI PUSH2 0x20F2 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2109 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1F23 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x211E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E8A DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x20D9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x216E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2179 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2189 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x21A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21B1 DUP10 DUP4 DUP11 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21D3 DUP10 DUP4 DUP11 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F6 DUP9 DUP3 DUP10 ADD PUSH2 0x2136 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E8A DUP2 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x224A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2256 DUP7 DUP4 DUP8 ADD PUSH2 0x1F72 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x226C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2279 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22B3 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2297 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E8A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x22F2 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x231B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2327 DUP8 DUP3 DUP9 ADD PUSH2 0x2136 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x235B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x236C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x237B DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x20D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x23A1 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x23B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x23F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23FC DUP10 DUP4 DUP11 ADD PUSH2 0x1F72 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x241E DUP10 DUP4 DUP11 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2452 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x23B6 DUP2 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x247A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2485 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2495 DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21F6 DUP9 DUP3 DUP10 ADD PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x24EA DUP2 PUSH2 0x1E13 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2513 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2533 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x2547 DUP2 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x255F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2574 JUMPI PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x25A3 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x259A JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x2581 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x25B7 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1E91 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x4856616C75653A2063616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2635 JUMPI PUSH2 0x2635 PUSH2 0x260D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4856616C75653A2063616C6C6572206973206E6F742074686520636F6E74726F PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x363632B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0x260D JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xDEF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2708 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD6D JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2714 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2740 JUMPI PUSH2 0x2740 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x2754 DUP2 PUSH2 0x274E DUP5 SLOAD PUSH2 0x24FF JUMP JUMPDEST DUP5 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2789 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2771 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x27B8 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2799 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x27D6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E8A DUP2 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2820 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0x260D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0x260D JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0x260D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x294A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2283 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x295C DUP2 DUP6 PUSH2 0x2283 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2A61 SWAP1 DUP4 ADD DUP7 PUSH2 0x2283 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2A73 DUP2 DUP7 PUSH2 0x2283 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2A87 DUP2 DUP6 PUSH2 0x1EB5 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E8A DUP2 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2AC9 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2ADA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2B09 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2B21 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2B3B JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2B4A PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1F23 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2BD7 SWAP1 DUP4 ADD DUP5 PUSH2 0x1EB5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SWAP5 0xD3 0xB1 MLOAD 0x5C BLOCKHASH BASEFEE DUP6 ISZERO 0xBB 0xC8 0xC0 PUSH5 0xFE58FBE4F0 CALLCODE PUSH10 0x68E2D36F879383A8F4A1 0x22 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"242:3879:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2593:227:1;;;;;;:::i;:::-;;:::i;:::-;;;616:25:14;;;604:2;589:18;2593:227:1;;;;;;;;1600:349;;;;;;:::i;:::-;;:::i;:::-;;;1203:14:14;;1196:22;1178:41;;1166:2;1151:18;1600:349:1;1038:187:14;299:30:13;;;:::i;:::-;;;;;;;:::i;743:46::-;;;;;;3397:160:12;;;;;;:::i;:::-;;:::i;1453:253::-;;;;;;:::i;:::-;;:::i;:::-;;4472:426:1;;;;;;:::i;:::-;;:::i;492:42:13:-;;;;;;587:46;;;;;;956:47;;;;;;:::i;:::-;;;;;;;;;;;;;;2977:508:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1149:131:4:-;;;;;;:::i;:::-;1206:4;1033:16;;;:12;:16;;;;;;-1:-1:-1;;;1149:131:4;540:41:13;;;:::i;2965:100:12:-;;;:::i;1712:189::-;;;;;;:::i;:::-;;:::i;639:46:13:-;;;;;;3071:96:12;;;;;;:::i;:::-;;:::i;902:48:13:-;;;;;;:::i;:::-;;;;;;;;;;;;;;373:31;;;;;-1:-1:-1;;;;;373:31:13;;;;;;-1:-1:-1;;;;;9467:32:14;;;9449:51;;9437:2;9422:18;373:31:13;9303:203:14;3285:102:12;;;;;;:::i;:::-;;:::i;335:32:13:-;;;:::i;2073:335:12:-;;;;;;:::i;:::-;;:::i;452:34:13:-;;;;;-1:-1:-1;;;;;452:34:13;;;3177:102:12;;;;;;:::i;:::-;;:::i;3553:153:1:-;;;;;;:::i;:::-;;:::i;2414:445:12:-;;;;;;:::i;:::-;;:::i;945:111:4:-;;;;;;:::i;:::-;1007:7;1033:16;;;:12;:16;;;;;;;945:111;691:46:13;;;;;;849;;;;;;1065:382:12;;;;;;:::i;:::-;;:::i;3773:166:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3895:27:1;;;3872:4;3895:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3773:166;4006:394;;;;;;:::i;:::-;;:::i;1907:160:12:-;;;;;;:::i;:::-;;:::i;308:258::-;;;;;;:::i;:::-;;:::i;410:36:13:-;;;;;-1:-1:-1;;;;;410:36:13;;;795:48;;;;;;2865:94:12;;;:::i;2593:227:1:-;2679:7;-1:-1:-1;;;;;2706:21:1;;2698:76;;;;-1:-1:-1;;;2698:76:1;;13587:2:14;2698:76:1;;;13569:21:14;13626:2;13606:18;;;13599:30;13665:34;13645:18;;;13638:62;-1:-1:-1;;;13716:18:14;;;13709:40;13766:19;;2698:76:1;;;;;;;;;-1:-1:-1;2791:13:1;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2791:22:1;;;;;;;;;;2593:227;;;;;:::o;1600:349::-;1724:4;-1:-1:-1;;;;;;1759:52:1;;-1:-1:-1;;;1759:52:1;;:131;;-1:-1:-1;;;;;;;1827:63:1;;-1:-1:-1;;;1827:63:1;1759:131;:183;;;-1:-1:-1;;;;;;;;;;1168:51:8;;;1906:36:1;1060:166:8;299:30:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3397:160:12:-;3457:13;3513:15;3530:18;3540:7;3530:9;:18::i;:::-;3496:53;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3482:68;;3397:160;;;:::o;1453:253::-;638:5;;-1:-1:-1;;;;;638:5:12;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:12;;;;;;;:::i;:::-;1605:9:::1;1600:100;1624:4;:11;1620:1;:15;1600:100;;;1656:33;1667:4;1672:1;1667:7;;;;;;;;:::i;:::-;;;;;;;1676:3;1681:7;1656:10;:33::i;:::-;1637:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1600:100;;;;1453:253:::0;;;:::o;4472:426:1:-;-1:-1:-1;;;;;4697:20:1;;929:10:7;4697:20:1;;:60;;-1:-1:-1;4721:36:1;4738:4;929:10:7;3773:166:1;:::i;4721:36::-;4676:153;;;;-1:-1:-1;;;4676:153:1;;;;;;;:::i;:::-;4839:52;4862:4;4868:2;4872:3;4877:7;4886:4;4839:22;:52::i;:::-;4472:426;;;;;:::o;2977:508::-;3128:16;3187:3;:10;3168:8;:15;:29;3160:83;;;;-1:-1:-1;;;3160:83:1;;16713:2:14;3160:83:1;;;16695:21:14;16752:2;16732:18;;;16725:30;16791:34;16771:18;;;16764:62;-1:-1:-1;;;16842:18:14;;;16835:39;16891:19;;3160:83:1;16511:405:14;3160:83:1;3254:30;3301:8;:15;-1:-1:-1;;;;;3287:30:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3287:30:1;;3254:63;;3333:9;3328:120;3352:8;:15;3348:1;:19;3328:120;;;3407:30;3417:8;3426:1;3417:11;;;;;;;;:::i;:::-;;;;;;;3430:3;3434:1;3430:6;;;;;;;;:::i;:::-;;;;;;;3407:9;:30::i;:::-;3388:13;3402:1;3388:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3369:3;;;:::i;:::-;;;3328:120;;;-1:-1:-1;3465:13:1;2977:508;-1:-1:-1;;;2977:508:1:o;540:41:13:-;;;;;;;:::i;2965:100:12:-;638:5;;-1:-1:-1;;;;;638:5:12;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:12;;;;;;;:::i;:::-;3043:15:::1;3024:16;:34:::0;2965:100::o;1712:189::-;799:10;;-1:-1:-1;;;;;799:10:12;785;:24;764:107;;;;-1:-1:-1;;;764:107:12;;;;;;;:::i;:::-;1862:32:::1;1868:2;1872:7;1881:6;1889:4;1862:5;:32::i;3071:96::-:0;638:5;;-1:-1:-1;;;;;638:5:12;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:12;;;;;;;:::i;:::-;3140:8:::1;:20:::0;;-1:-1:-1;;;;;;3140:20:12::1;-1:-1:-1::0;;;;;3140:20:12;;;::::1;::::0;;;::::1;::::0;;3071:96::o;3285:102::-;638:5;;-1:-1:-1;;;;;638:5:12;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:12;;;;;;;:::i;:::-;3356:10:::1;:24:::0;;-1:-1:-1;;;;;;3356:24:12::1;-1:-1:-1::0;;;;;3356:24:12;;;::::1;::::0;;;::::1;::::0;;3285:102::o;335:32:13:-;;;;;;;:::i;2073:335:12:-;2184:13;;2169:10;2155:25;;;;:13;:25;;;;;;:42;;2147:76;;;;-1:-1:-1;;;2147:76:12;;17528:2:14;2147:76:12;;;17510:21:14;17567:2;17547:18;;;17540:30;-1:-1:-1;;;17586:18:14;;;17579:51;17647:18;;2147:76:12;17326:345:14;2147:76:12;2275:6;2241:30;2251:10;2263:7;;2241:9;:30::i;:::-;:40;;2233:79;;;;-1:-1:-1;;;2233:79:12;;17878:2:14;2233:79:12;;;17860:21:14;17917:2;17897:18;;;17890:30;17956:28;17936:18;;;17929:56;18002:18;;2233:79:12;17676:350:14;2233:79:12;2322:34;2328:10;2340:7;;2349:6;2322:5;:34::i;:::-;2380:10;2366:25;;;;:13;:25;;;;;:35;;2395:6;;2366:25;:35;;2395:6;;2366:35;:::i;:::-;;;;-1:-1:-1;;;2073:335:12:o;3177:102::-;638:5;;-1:-1:-1;;;;;638:5:12;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:12;;;;;;;:::i;:::-;3247:15:::1;:25;3265:7:::0;3247:15;:25:::1;:::i;:::-;;3177:102:::0;:::o;3553:153:1:-;3647:52;929:10:7;3680:8:1;3690;3647:18;:52::i;2414:445:12:-;2493:8;;:25;;-1:-1:-1;;;2493:25:12;;;;;616::14;;;2522:10:12;;-1:-1:-1;;;;;2493:8:12;;:16;;589:18:14;;2493:25:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2493:39:12;;2472:108;;;;-1:-1:-1;;;2472:108:12;;20697:2:14;2472:108:12;;;20679:21:14;20736:2;20716:18;;;20709:30;-1:-1:-1;;;20755:18:14;;;20748:52;20817:18;;2472:108:12;20495:346:14;2472:108:12;2622:10;;2611:7;:21;;:44;;;;;2647:8;;2636:7;:19;;2611:44;2590:113;;;;-1:-1:-1;;;2590:113:12;;21048:2:14;2590:113:12;;;21030:21:14;21087:2;21067:18;;;21060:30;-1:-1:-1;;;21106:18:14;;;21099:52;21168:18;;2590:113:12;20846:346:14;2590:113:12;2713:33;2719:10;2731:6;;2739:2;2713:33;;;;;;;;;;;;:5;:33::i;:::-;2756:29;2762:10;2774:7;;2783:1;2756:5;:29::i;:::-;2795:8;;:57;;-1:-1:-1;;;2795:57:12;;2817:10;2795:57;;;21437:34:14;2837:4:12;21487:18:14;;;21480:43;21539:18;;;21532:34;;;-1:-1:-1;;;;;2795:8:12;;;;:21;;21372:18:14;;2795:57:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1065:382;638:5;;-1:-1:-1;;;;;638:5:12;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:12;;;;;;;:::i;:::-;1287:9:::1;1282:159;1306:2;:9;1302:1;:13;1282:159;;;1336:42;1347:2;1350:1;1347:5;;;;;;;;:::i;:::-;;;;;;;1354:8;1364:7;1373:4;1336:10;:42::i;:::-;1414:13;1428:1;1414:16;;;;;;;;:::i;:::-;;;;;;;1392:12;:19;1405:2;1408:1;1405:5;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;1392:19:12::1;-1:-1:-1::0;;;;;1392:19:12::1;;;;;;;;;;;;:38;;;;1317:3;;;;;:::i;:::-;;;;1282:159;;;;1065:382:::0;;;;;:::o;4006:394:1:-;-1:-1:-1;;;;;4206:20:1;;929:10:7;4206:20:1;;:60;;-1:-1:-1;4230:36:1;4247:4;929:10:7;3773:166:1;:::i;4230:36::-;4185:153;;;;-1:-1:-1;;;4185:153:1;;;;;;;:::i;:::-;4348:45;4366:4;4372:2;4376;4380:6;4388:4;4348:17;:45::i;1907:160:12:-;799:10;;-1:-1:-1;;;;;799:10:12;785;:24;764:107;;;;-1:-1:-1;;;764:107:12;;;;;;;:::i;:::-;2032:28:::1;2038:4;2044:7;2053:6;2032:5;:28::i;:::-;1907:160:::0;;;:::o;308:258::-;3268:19:0;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:0;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:0;1476:19:6;:23;;;3376:66:0;;-1:-1:-1;3425:12:0;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:0;;21779:2:14;3314:201:0;;;21761:21:14;21818:2;21798:18;;;21791:30;21857:34;21837:18;;;21830:62;-1:-1:-1;;;21908:18:14;;;21901:44;21962:19;;3314:201:0;21577:410:14;3314:201:0;3525:12;:16;;-1:-1:-1;;3525:16:0;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:0;;;;;3551:65;391:22:12::1;:20;:22::i;:::-;423:15;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;423:15:12::1;::::0;::::1;::::0;:4:::1;::::0;:15:::1;::::0;:4;:15:::1;:::i;:::-;-1:-1:-1::0;448:13:12::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;448:13:12::1;::::0;::::1;::::0;:6:::1;::::0;:13:::1;::::0;:6;:13:::1;:::i;:::-;;471:16;482:4;471:10;:16::i;:::-;497:5;:18:::0;;-1:-1:-1;;;;;;497:18:12::1;505:10;497:18;::::0;;544:15:::1;525:16;:34:::0;3636:99:0;;;;3686:5;3670:21;;-1:-1:-1;;3670:21:0;;;3710:14;;-1:-1:-1;22144:36:14;;3710:14:0;;22132:2:14;22117:18;3710:14:0;;;;;;;3258:483;308:258:12;:::o;2865:94::-;968:16;;:27;;987:8;968:27;:::i;:::-;949:15;:46;;928:113;;;;-1:-1:-1;;;928:113:12;;22393:2:14;928:113:12;;;22375:21:14;22432:2;22412:18;;;22405:30;-1:-1:-1;;;22451:18:14;;;22444:50;22511:18;;928:113:12;22191:344:14;928:113:12;2937:10:::1;2951:1;2923:25:::0;;;:13:::1;:25;::::0;;;;:29;2865:94::o;3563:556::-;3617:13;3646:2;3652:1;3646:7;3642:48;;-1:-1:-1;;3669:10:12;;;;;;;;;;;;-1:-1:-1;;;3669:10:12;;;;;3563:556::o;3642:48::-;3711:2;3699:9;3744:66;3751:6;;3744:66;;3773:5;;;;:::i;:::-;;-1:-1:-1;3792:7:12;;-1:-1:-1;3797:2:12;3792:7;;:::i;:::-;;;3744:66;;;3819:17;3849:3;-1:-1:-1;;;;;3839:14:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3839:14:12;-1:-1:-1;3819:34:12;-1:-1:-1;3875:3:12;3888:196;3895:7;;3888:196;;3922:5;3926:1;3922;:5;:::i;:::-;3918:9;-1:-1:-1;3941:10:12;3972:7;3977:2;3972;:7;:::i;:::-;3971:14;;3983:2;3971:14;:::i;:::-;3966:19;;:2;:19;:::i;:::-;3955:31;;:2;:31;:::i;:::-;3941:46;;4001:9;4020:4;4013:12;;4001:24;;4049:2;4039:4;4044:1;4039:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;4039:12:12;;;;;;;;-1:-1:-1;4065:8:12;4071:2;4065:8;;:::i;:::-;;;3904:180;;3888:196;;;-1:-1:-1;4107:4:12;3563:556;-1:-1:-1;;;;3563:556:12:o;12239:943:1:-;-1:-1:-1;;;;;12386:18:1;;12378:66;;;;-1:-1:-1;;;12378:66:1;;;;;;;:::i;:::-;12476:7;:14;12462:3;:10;:28;12454:81;;;;-1:-1:-1;;;12454:81:1;;;;;;;:::i;:::-;12546:16;929:10:7;12546:31:1;;12588:66;12609:8;12619:4;12633:1;12637:3;12642:7;12588:66;;;;;;;;;;;;:20;:66::i;:::-;12670:9;12665:364;12689:3;:10;12685:1;:14;12665:364;;;12720:10;12733:3;12737:1;12733:6;;;;;;;;:::i;:::-;;;;;;;12720:19;;12753:14;12770:7;12778:1;12770:10;;;;;;;;:::i;:::-;;;;;;;;;;;;12795:19;12817:13;;;:9;:13;;;;;;-1:-1:-1;;;;;12817:19:1;;;;;;;;;;;;12770:10;;-1:-1:-1;12858:21:1;;;;12850:70;;;;-1:-1:-1;;;12850:70:1;;;;;;;:::i;:::-;12962:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;12962:19:1;;;;;;;;;;12984:20;;12962:42;;12701:3;;;;:::i;:::-;;;;12665:364;;;;13082:1;-1:-1:-1;;;;;13044:55:1;13068:4;-1:-1:-1;;;;;13044:55:1;13058:8;-1:-1:-1;;;;;13044:55:1;;13086:3;13091:7;13044:55;;;;;;;:::i;:::-;;;;;;;;13110:65;;;;;;;;;13154:1;13110:65;;;1065:382:12;6641:1115:1;6861:7;:14;6847:3;:10;:28;6839:81;;;;-1:-1:-1;;;6839:81:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6938:16:1;;6930:66;;;;-1:-1:-1;;;6930:66:1;;;;;;;:::i;:::-;929:10:7;7049:60:1;929:10:7;7080:4:1;7086:2;7090:3;7095:7;7104:4;7049:20;:60::i;:::-;7125:9;7120:411;7144:3;:10;7140:1;:14;7120:411;;;7175:10;7188:3;7192:1;7188:6;;;;;;;;:::i;:::-;;;;;;;7175:19;;7208:14;7225:7;7233:1;7225:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7250:19;7272:13;;;:9;:13;;;;;;-1:-1:-1;;;;;7272:19:1;;;;;;;;;;;;7225:10;;-1:-1:-1;7313:21:1;;;;7305:76;;;;-1:-1:-1;;;7305:76:1;;;;;;;:::i;:::-;7423:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7423:19:1;;;;;;;;;;7445:20;;;7423:42;;7493:17;;;;;;;:27;;7445:20;;7423:13;7493:27;;7445:20;;7493:27;:::i;:::-;;;;;;;;7161:370;;;7156:3;;;;:::i;:::-;;;7120:411;;;;7576:2;-1:-1:-1;;;;;7546:47:1;7570:4;-1:-1:-1;;;;;7546:47:1;7560:8;-1:-1:-1;;;;;7546:47:1;;7580:3;7585:7;7546:47;;;;;;;:::i;:::-;;;;;;;;7674:75;7710:8;7720:4;7726:2;7730:3;7735:7;7744:4;7674:35;:75::i;9038:709::-;-1:-1:-1;;;;;9185:16:1;;9177:62;;;;-1:-1:-1;;;9177:62:1;;;;;;;:::i;:::-;929:10:7;9250:16:1;9314:21;9332:2;9314:17;:21::i;:::-;9291:44;;9345:24;9372:25;9390:6;9372:17;:25::i;:::-;9345:52;;9408:66;9429:8;9447:1;9451:2;9455:3;9460:7;9469:4;9408:20;:66::i;:::-;9485:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;9485:17:1;;;;;;;;;:27;;9506:6;;9485:13;:27;;9506:6;;9485:27;:::i;:::-;;;;-1:-1:-1;;9527:52:1;;;26302:25:14;;;26358:2;26343:18;;26336:34;;;-1:-1:-1;;;;;9527:52:1;;;;9560:1;;9527:52;;;;;;26275:18:14;9527:52:1;;;;;;;9666:74;9697:8;9715:1;9719:2;9723;9727:6;9735:4;9666:30;:74::i;:::-;9167:580;;;9038:709;;;;:::o;11214:786::-;-1:-1:-1;;;;;11336:18:1;;11328:66;;;;-1:-1:-1;;;11328:66:1;;;;;;;:::i;:::-;929:10:7;11405:16:1;11469:21;11487:2;11469:17;:21::i;:::-;11446:44;;11500:24;11527:25;11545:6;11527:17;:25::i;:::-;11500:52;;11563:66;11584:8;11594:4;11608:1;11612:3;11617:7;11563:66;;;;;;;;;;;;:20;:66::i;:::-;11640:19;11662:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;11662:19:1;;;;;;;;;;11699:21;;;;11691:70;;;;-1:-1:-1;;;11691:70:1;;;;;;;:::i;:::-;11795:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;11795:19:1;;;;;;;;;;;;11817:20;;;11795:42;;11863:54;;26302:25:14;;;26343:18;;;26336:34;;;11795:19:1;;11863:54;;;;;;26275:18:14;11863:54:1;;;;;;;11928:65;;;;;;;;;11972:1;11928:65;;;1065:382:12;13318:323:1;13468:8;-1:-1:-1;;;;;13459:17:1;:5;-1:-1:-1;;;;;13459:17:1;;13451:71;;;;-1:-1:-1;;;13451:71:1;;26583:2:14;13451:71:1;;;26565:21:14;26622:2;26602:18;;;26595:30;26661:34;26641:18;;;26634:62;-1:-1:-1;;;26712:18:14;;;26705:39;26761:19;;13451:71:1;26381:405:14;13451:71:1;-1:-1:-1;;;;;13532:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13532:46:1;;;;;;;;;;13593:41;;1178::14;;;13593::1;;1151:18:14;13593:41:1;;;;;;;13318:323;;;:::o;10137:791::-;-1:-1:-1;;;;;10309:16:1;;10301:62;;;;-1:-1:-1;;;10301:62:1;;;;;;;:::i;:::-;10395:7;:14;10381:3;:10;:28;10373:81;;;;-1:-1:-1;;;10373:81:1;;;;;;;:::i;:::-;929:10:7;10507:66:1;929:10:7;10465:16:1;10550:2;10554:3;10559:7;10568:4;10507:20;:66::i;:::-;10589:9;10584:101;10608:3;:10;10604:1;:14;10584:101;;;10664:7;10672:1;10664:10;;;;;;;;:::i;:::-;;;;;;;10639:9;:17;10649:3;10653:1;10649:6;;;;;;;;:::i;:::-;;;;;;;10639:17;;;;;;;;;;;:21;10657:2;-1:-1:-1;;;;;10639:21:1;-1:-1:-1;;;;;10639:21:1;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;10620:3:1;;-1:-1:-1;10620:3:1;;;:::i;:::-;;;;10584:101;;;;10736:2;-1:-1:-1;;;;;10700:53:1;10732:1;-1:-1:-1;;;;;10700:53:1;10714:8;-1:-1:-1;;;;;10700:53:1;;10740:3;10745:7;10700:53;;;;;;;:::i;:::-;;;;;;;;10840:81;10876:8;10894:1;10898:2;10902:3;10907:7;10916:4;10840:35;:81::i;5348:947::-;-1:-1:-1;;;;;5529:16:1;;5521:66;;;;-1:-1:-1;;;5521:66:1;;;;;;;:::i;:::-;929:10:7;5598:16:1;5662:21;5680:2;5662:17;:21::i;:::-;5639:44;;5693:24;5720:25;5738:6;5720:17;:25::i;:::-;5693:52;;5756:60;5777:8;5787:4;5793:2;5797:3;5802:7;5811:4;5756:20;:60::i;:::-;5827:19;5849:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5849:19:1;;;;;;;;;;5886:21;;;;5878:76;;;;-1:-1:-1;;;5878:76:1;;;;;;;:::i;:::-;5988:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5988:19:1;;;;;;;;;;6010:20;;;5988:42;;6050:17;;;;;;;:27;;6010:20;;5988:13;6050:27;;6010:20;;6050:27;:::i;:::-;;;;-1:-1:-1;;6093:46:1;;;26302:25:14;;;26358:2;26343:18;;26336:34;;;-1:-1:-1;;;;;6093:46:1;;;;;;;;;;;;;;26275:18:14;6093:46:1;;;;;;;6220:68;6251:8;6261:4;6267:2;6271;6275:6;6283:4;6220:30;:68::i;:::-;5511:784;;;;5348:947;;;;;:::o;668:65:4:-;5363:13:0;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:0;;26993:2:14;5355:69:0;;;26975:21:14;27032:2;27012:18;;;27005:30;27071:34;27051:18;;;27044:62;-1:-1:-1;;;27122:18:14;;;27115:41;27173:19;;5355:69:0;26791:407:14;5355:69:0;668:65:4:o;1350:904::-;-1:-1:-1;;;;;1662:18:4;;1658:156;;1701:9;1696:108;1720:3;:10;1716:1;:14;1696:108;;;1779:7;1787:1;1779:10;;;;;;;;:::i;:::-;;;;;;;1755:12;:20;1768:3;1772:1;1768:6;;;;;;;;:::i;:::-;;;;;;;1755:20;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;1732:3:4;;-1:-1:-1;1732:3:4;;:::i;:::-;;;1696:108;;;;1658:156;-1:-1:-1;;;;;1828:16:4;;1824:424;;1865:9;1860:378;1884:3;:10;1880:1;:14;1860:378;;;1919:10;1932:3;1936:1;1932:6;;;;;;;;:::i;:::-;;;;;;;1919:19;;1956:14;1973:7;1981:1;1973:10;;;;;;;;:::i;:::-;;;;;;;1956:27;;2001:14;2018:12;:16;2031:2;2018:16;;;;;;;;;;;;2001:33;;2070:6;2060;:16;;2052:69;;;;-1:-1:-1;;;2052:69:4;;27405:2:14;2052:69:4;;;27387:21:14;27444:2;27424:18;;;27417:30;27483:34;27463:18;;;27456:62;-1:-1:-1;;;27534:18:14;;;27527:38;27582:19;;2052:69:4;27203:404:14;2052:69:4;2171:16;;;;:12;:16;;;;;;2190:15;;2171:34;;1896:3;;;:::i;:::-;;;1860:378;;16696:814:1;-1:-1:-1;;;;;16928:13:1;;1476:19:6;:23;16924:580:1;;16963:90;;-1:-1:-1;;;16963:90:1;;-1:-1:-1;;;;;16963:54:1;;;;;:90;;17018:8;;17028:4;;17034:3;;17039:7;;17048:4;;16963:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16963:90:1;;;;;;;;-1:-1:-1;;16963:90:1;;;;;;;;;;;;:::i;:::-;;;16959:535;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;17370:6;17363:14;;-1:-1:-1;;;17363:14:1;;;;;;;;:::i;16959:535::-;;;17417:62;;-1:-1:-1;;;17417:62:1;;29760:2:14;17417:62:1;;;29742:21:14;29799:2;29779:18;;;29772:30;29838:34;29818:18;;;29811:62;-1:-1:-1;;;29889:18:14;;;29882:50;29949:19;;17417:62:1;29558:416:14;16959:535:1;-1:-1:-1;;;;;;17132:71:1;;-1:-1:-1;;;17132:71:1;17128:168;;17227:50;;-1:-1:-1;;;17227:50:1;;;;;;;:::i;17516:193::-;17635:16;;;17649:1;17635:16;;;;;;;;;17582;;17610:22;;17635:16;;;;;;;;;;;;-1:-1:-1;17635:16:1;17610:41;;17672:7;17661:5;17667:1;17661:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17697:5;17516:193;-1:-1:-1;;17516:193:1:o;15943:747::-;-1:-1:-1;;;;;16150:13:1;;1476:19:6;:23;16146:538:1;;16185:83;;-1:-1:-1;;;16185:83:1;;-1:-1:-1;;;;;16185:49:1;;;;;:83;;16235:8;;16245:4;;16251:2;;16255:6;;16263:4;;16185:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16185:83:1;;;;;;;;-1:-1:-1;;16185:83:1;;;;;;;;;;;;:::i;:::-;;;16181:493;;;;:::i;:::-;-1:-1:-1;;;;;;16317:66:1;;-1:-1:-1;;;16317:66:1;16313:163;;16407:50;;-1:-1:-1;;;16407:50:1;;;;;;;:::i;14:131:14:-;-1:-1:-1;;;;;89:31:14;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:315::-;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:14:o;652:131::-;-1:-1:-1;;;;;;726:32:14;;716:43;;706:71;;773:1;770;763:12;788:245;846:6;899:2;887:9;878:7;874:23;870:32;867:52;;;915:1;912;905:12;867:52;954:9;941:23;973:30;997:5;973:30;:::i;:::-;1022:5;788:245;-1:-1:-1;;;788:245:14:o;1230:250::-;1315:1;1325:113;1339:6;1336:1;1333:13;1325:113;;;1415:11;;;1409:18;1396:11;;;1389:39;1361:2;1354:10;1325:113;;;-1:-1:-1;;1472:1:14;1454:16;;1447:27;1230:250::o;1485:271::-;1527:3;1565:5;1559:12;1592:6;1587:3;1580:19;1608:76;1677:6;1670:4;1665:3;1661:14;1654:4;1647:5;1643:16;1608:76;:::i;:::-;1738:2;1717:15;-1:-1:-1;;1713:29:14;1704:39;;;;1745:4;1700:50;;1485:271;-1:-1:-1;;1485:271:14:o;1761:220::-;1910:2;1899:9;1892:21;1873:4;1930:45;1971:2;1960:9;1956:18;1948:6;1930:45;:::i;1986:180::-;2045:6;2098:2;2086:9;2077:7;2073:23;2069:32;2066:52;;;2114:1;2111;2104:12;2066:52;-1:-1:-1;2137:23:14;;1986:180;-1:-1:-1;1986:180:14:o;2171:127::-;2232:10;2227:3;2223:20;2220:1;2213:31;2263:4;2260:1;2253:15;2287:4;2284:1;2277:15;2303:249;2413:2;2394:13;;-1:-1:-1;;2390:27:14;2378:40;;-1:-1:-1;;;;;2433:34:14;;2469:22;;;2430:62;2427:88;;;2495:18;;:::i;:::-;2531:2;2524:22;-1:-1:-1;;2303:249:14:o;2557:183::-;2617:4;-1:-1:-1;;;;;2642:6:14;2639:30;2636:56;;;2672:18;;:::i;:::-;-1:-1:-1;2717:1:14;2713:14;2729:4;2709:25;;2557:183::o;2745:799::-;2799:5;2852:3;2845:4;2837:6;2833:17;2829:27;2819:55;;2870:1;2867;2860:12;2819:55;2906:6;2893:20;2932:4;2955:43;2995:2;2955:43;:::i;:::-;3027:2;3021:9;3039:31;3067:2;3059:6;3039:31;:::i;:::-;3105:18;;;3197:1;3193:10;;;;3181:23;;3177:32;;;3139:15;;;;-1:-1:-1;3221:15:14;;;3218:35;;;3249:1;3246;3239:12;3218:35;3285:2;3277:6;3273:15;3297:217;3313:6;3308:3;3305:15;3297:217;;;3393:3;3380:17;3410:31;3435:5;3410:31;:::i;:::-;3454:18;;3492:12;;;;3330;;3297:217;;;-1:-1:-1;3532:6:14;2745:799;-1:-1:-1;;;;;;2745:799:14:o;3549:724::-;3603:5;3656:3;3649:4;3641:6;3637:17;3633:27;3623:55;;3674:1;3671;3664:12;3623:55;3710:6;3697:20;3736:4;3759:43;3799:2;3759:43;:::i;:::-;3831:2;3825:9;3843:31;3871:2;3863:6;3843:31;:::i;:::-;3909:18;;;4001:1;3997:10;;;;3985:23;;3981:32;;;3943:15;;;;-1:-1:-1;4025:15:14;;;4022:35;;;4053:1;4050;4043:12;4022:35;4089:2;4081:6;4077:15;4101:142;4117:6;4112:3;4109:15;4101:142;;;4183:17;;4171:30;;4221:12;;;;4134;;4101:142;;4278:821;4430:6;4438;4446;4499:2;4487:9;4478:7;4474:23;4470:32;4467:52;;;4515:1;4512;4505:12;4467:52;4555:9;4542:23;-1:-1:-1;;;;;4625:2:14;4617:6;4614:14;4611:34;;;4641:1;4638;4631:12;4611:34;4664:61;4717:7;4708:6;4697:9;4693:22;4664:61;:::i;:::-;4654:71;;4778:2;4767:9;4763:18;4750:32;4734:48;;4807:2;4797:8;4794:16;4791:36;;;4823:1;4820;4813:12;4791:36;4846:63;4901:7;4890:8;4879:9;4875:24;4846:63;:::i;:::-;4836:73;;4962:2;4951:9;4947:18;4934:32;4918:48;;4991:2;4981:8;4978:16;4975:36;;;5007:1;5004;4997:12;4975:36;;5030:63;5085:7;5074:8;5063:9;5059:24;5030:63;:::i;:::-;5020:73;;;4278:821;;;;;:::o;5104:468::-;5168:5;-1:-1:-1;;;;;5194:6:14;5191:30;5188:56;;;5224:18;;:::i;:::-;5273:2;5267:9;5285:69;5342:2;5321:15;;-1:-1:-1;;5317:29:14;5348:4;5313:40;5267:9;5285:69;:::i;:::-;5372:6;5363:15;;5402:6;5394;5387:22;5442:3;5433:6;5428:3;5424:16;5421:25;5418:45;;;5459:1;5456;5449:12;5418:45;5509:6;5504:3;5497:4;5489:6;5485:17;5472:44;5564:1;5557:4;5548:6;5540;5536:19;5532:30;5525:41;;5104:468;;;;;:::o;5577:220::-;5619:5;5672:3;5665:4;5657:6;5653:17;5649:27;5639:55;;5690:1;5687;5680:12;5639:55;5712:79;5787:3;5778:6;5765:20;5758:4;5750:6;5746:17;5712:79;:::i;5802:1071::-;5956:6;5964;5972;5980;5988;6041:3;6029:9;6020:7;6016:23;6012:33;6009:53;;;6058:1;6055;6048:12;6009:53;6097:9;6084:23;6116:31;6141:5;6116:31;:::i;:::-;6166:5;-1:-1:-1;6223:2:14;6208:18;;6195:32;6236:33;6195:32;6236:33;:::i;:::-;6288:7;-1:-1:-1;6346:2:14;6331:18;;6318:32;-1:-1:-1;;;;;6399:14:14;;;6396:34;;;6426:1;6423;6416:12;6396:34;6449:61;6502:7;6493:6;6482:9;6478:22;6449:61;:::i;:::-;6439:71;;6563:2;6552:9;6548:18;6535:32;6519:48;;6592:2;6582:8;6579:16;6576:36;;;6608:1;6605;6598:12;6576:36;6631:63;6686:7;6675:8;6664:9;6660:24;6631:63;:::i;:::-;6621:73;;6747:3;6736:9;6732:19;6719:33;6703:49;;6777:2;6767:8;6764:16;6761:36;;;6793:1;6790;6783:12;6761:36;;6816:51;6859:7;6848:8;6837:9;6833:24;6816:51;:::i;:::-;6806:61;;;5802:1071;;;;;;;;:::o;6878:247::-;6937:6;6990:2;6978:9;6969:7;6965:23;6961:32;6958:52;;;7006:1;7003;6996:12;6958:52;7045:9;7032:23;7064:31;7089:5;7064:31;:::i;7130:595::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;7365:9;7352:23;-1:-1:-1;;;;;7435:2:14;7427:6;7424:14;7421:34;;;7451:1;7448;7441:12;7421:34;7474:61;7527:7;7518:6;7507:9;7503:22;7474:61;:::i;:::-;7464:71;;7588:2;7577:9;7573:18;7560:32;7544:48;;7617:2;7607:8;7604:16;7601:36;;;7633:1;7630;7623:12;7601:36;;7656:63;7711:7;7700:8;7689:9;7685:24;7656:63;:::i;:::-;7646:73;;;7130:595;;;;;:::o;7730:435::-;7783:3;7821:5;7815:12;7848:6;7843:3;7836:19;7874:4;7903:2;7898:3;7894:12;7887:19;;7940:2;7933:5;7929:14;7961:1;7971:169;7985:6;7982:1;7979:13;7971:169;;;8046:13;;8034:26;;8080:12;;;;8115:15;;;;8007:1;8000:9;7971:169;;;-1:-1:-1;8156:3:14;;7730:435;-1:-1:-1;;;;;7730:435:14:o;8170:261::-;8349:2;8338:9;8331:21;8312:4;8369:56;8421:2;8410:9;8406:18;8398:6;8369:56;:::i;8436:592::-;8531:6;8539;8547;8555;8608:3;8596:9;8587:7;8583:23;8579:33;8576:53;;;8625:1;8622;8615:12;8576:53;8664:9;8651:23;8683:31;8708:5;8683:31;:::i;:::-;8733:5;-1:-1:-1;8785:2:14;8770:18;;8757:32;;-1:-1:-1;8836:2:14;8821:18;;8808:32;;-1:-1:-1;8891:2:14;8876:18;;8863:32;-1:-1:-1;;;;;8907:30:14;;8904:50;;;8950:1;8947;8940:12;8904:50;8973:49;9014:7;9005:6;8994:9;8990:22;8973:49;:::i;:::-;8963:59;;;8436:592;;;;;;;:::o;9737:450::-;9806:6;9859:2;9847:9;9838:7;9834:23;9830:32;9827:52;;;9875:1;9872;9865:12;9827:52;9915:9;9902:23;-1:-1:-1;;;;;9940:6:14;9937:30;9934:50;;;9980:1;9977;9970:12;9934:50;10003:22;;10056:4;10048:13;;10044:27;-1:-1:-1;10034:55:14;;10085:1;10082;10075:12;10034:55;10108:73;10173:7;10168:2;10155:16;10150:2;10146;10142:11;10108:73;:::i;:::-;10098:83;9737:450;-1:-1:-1;;;;9737:450:14:o;10192:416::-;10257:6;10265;10318:2;10306:9;10297:7;10293:23;10289:32;10286:52;;;10334:1;10331;10324:12;10286:52;10373:9;10360:23;10392:31;10417:5;10392:31;:::i;:::-;10442:5;-1:-1:-1;10499:2:14;10484:18;;10471:32;10541:15;;10534:23;10522:36;;10512:64;;10572:1;10569;10562:12;10512:64;10595:7;10585:17;;;10192:416;;;;;:::o;10613:1247::-;10817:6;10825;10833;10841;10849;10902:3;10890:9;10881:7;10877:23;10873:33;10870:53;;;10919:1;10916;10909:12;10870:53;10959:9;10946:23;-1:-1:-1;;;;;11029:2:14;11021:6;11018:14;11015:34;;;11045:1;11042;11035:12;11015:34;11068:61;11121:7;11112:6;11101:9;11097:22;11068:61;:::i;:::-;11058:71;;11182:2;11171:9;11167:18;11154:32;11138:48;;11211:2;11201:8;11198:16;11195:36;;;11227:1;11224;11217:12;11195:36;11250:63;11305:7;11294:8;11283:9;11279:24;11250:63;:::i;:::-;11240:73;;11366:2;11355:9;11351:18;11338:32;11322:48;;11395:2;11385:8;11382:16;11379:36;;;11411:1;11408;11401:12;11865:388;11933:6;11941;11994:2;11982:9;11973:7;11969:23;11965:32;11962:52;;;12010:1;12007;12000:12;11962:52;12049:9;12036:23;12068:31;12093:5;12068:31;:::i;:::-;12118:5;-1:-1:-1;12175:2:14;12160:18;;12147:32;12188:33;12147:32;12188:33;:::i;12258:734::-;12362:6;12370;12378;12386;12394;12447:3;12435:9;12426:7;12422:23;12418:33;12415:53;;;12464:1;12461;12454:12;12415:53;12503:9;12490:23;12522:31;12547:5;12522:31;:::i;:::-;12572:5;-1:-1:-1;12629:2:14;12614:18;;12601:32;12642:33;12601:32;12642:33;:::i;:::-;12694:7;-1:-1:-1;12748:2:14;12733:18;;12720:32;;-1:-1:-1;12799:2:14;12784:18;;12771:32;;-1:-1:-1;12854:3:14;12839:19;;12826:33;-1:-1:-1;;;;;12871:30:14;;12868:50;;;12914:1;12911;12904:12;12868:50;12937:49;12978:7;12969:6;12958:9;12954:22;12937:49;:::i;12997:383::-;13074:6;13082;13090;13143:2;13131:9;13122:7;13118:23;13114:32;13111:52;;;13159:1;13156;13149:12;13111:52;13198:9;13185:23;13217:31;13242:5;13217:31;:::i;:::-;13267:5;13319:2;13304:18;;13291:32;;-1:-1:-1;13370:2:14;13355:18;;;13342:32;;12997:383;-1:-1:-1;;;12997:383:14:o;13796:380::-;13875:1;13871:12;;;;13918;;;13939:61;;13993:4;13985:6;13981:17;13971:27;;13939:61;14046:2;14038:6;14035:14;14015:18;14012:38;14009:161;;14092:10;14087:3;14083:20;14080:1;14073:31;14127:4;14124:1;14117:15;14155:4;14152:1;14145:15;14009:161;;13796:380;;;:::o;14307:1020::-;14483:3;14512:1;14545:6;14539:13;14575:36;14601:9;14575:36;:::i;:::-;14630:1;14647:18;;;14674:133;;;;14821:1;14816:356;;;;14640:532;;14674:133;-1:-1:-1;;14707:24:14;;14695:37;;14780:14;;14773:22;14761:35;;14752:45;;;-1:-1:-1;14674:133:14;;14816:356;14847:6;14844:1;14837:17;14877:4;14922:2;14919:1;14909:16;14947:1;14961:165;14975:6;14972:1;14969:13;14961:165;;;15053:14;;15040:11;;;15033:35;15096:16;;;;14990:10;;14961:165;;;14965:3;;;15155:6;15150:3;15146:16;15139:23;;14640:532;;;;;15203:6;15197:13;15219:68;15278:8;15273:3;15266:4;15258:6;15254:17;15219:68;:::i;:::-;15303:18;;14307:1020;-1:-1:-1;;;;14307:1020:14:o;15332:355::-;15534:2;15516:21;;;15573:2;15553:18;;;15546:30;15612:33;15607:2;15592:18;;15585:61;15678:2;15663:18;;15332:355::o;15692:127::-;15753:10;15748:3;15744:20;15741:1;15734:31;15784:4;15781:1;15774:15;15808:4;15805:1;15798:15;15824:127;15885:10;15880:3;15876:20;15873:1;15866:31;15916:4;15913:1;15906:15;15940:4;15937:1;15930:15;15956:135;15995:3;16016:17;;;16013:43;;16036:18;;:::i;:::-;-1:-1:-1;16083:1:14;16072:13;;15956:135::o;16096:410::-;16298:2;16280:21;;;16337:2;16317:18;;;16310:30;16376:34;16371:2;16356:18;;16349:62;-1:-1:-1;;;16442:2:14;16427:18;;16420:44;16496:3;16481:19;;16096:410::o;16921:400::-;17123:2;17105:21;;;17162:2;17142:18;;;17135:30;17201:34;17196:2;17181:18;;17174:62;-1:-1:-1;;;17267:2:14;17252:18;;17245:34;17311:3;17296:19;;16921:400::o;18031:125::-;18096:9;;;18117:10;;;18114:36;;;18130:18;;:::i;18161:545::-;18263:2;18258:3;18255:11;18252:448;;;18299:1;18324:5;18320:2;18313:17;18369:4;18365:2;18355:19;18439:2;18427:10;18423:19;18420:1;18416:27;18410:4;18406:38;18475:4;18463:10;18460:20;18457:47;;;-1:-1:-1;18498:4:14;18457:47;18553:2;18548:3;18544:12;18541:1;18537:20;18531:4;18527:31;18517:41;;18608:82;18626:2;18619:5;18616:13;18608:82;;;18671:17;;;18652:1;18641:13;18608:82;;18882:1352;19008:3;19002:10;-1:-1:-1;;;;;19027:6:14;19024:30;19021:56;;;19057:18;;:::i;:::-;19086:97;19176:6;19136:38;19168:4;19162:11;19136:38;:::i;:::-;19130:4;19086:97;:::i;:::-;19238:4;;19302:2;19291:14;;19319:1;19314:663;;;;20021:1;20038:6;20035:89;;;-1:-1:-1;20090:19:14;;;20084:26;20035:89;-1:-1:-1;;18839:1:14;18835:11;;;18831:24;18827:29;18817:40;18863:1;18859:11;;;18814:57;20137:81;;19284:944;;19314:663;14254:1;14247:14;;;14291:4;14278:18;;-1:-1:-1;;19350:20:14;;;19468:236;19482:7;19479:1;19476:14;19468:236;;;19571:19;;;19565:26;19550:42;;19663:27;;;;19631:1;19619:14;;;;19498:19;;19468:236;;;19472:3;19732:6;19723:7;19720:19;19717:201;;;19793:19;;;19787:26;-1:-1:-1;;19876:1:14;19872:14;;;19888:3;19868:24;19864:37;19860:42;19845:58;19830:74;;19717:201;-1:-1:-1;;;;;19964:1:14;19948:14;;;19944:22;19931:36;;-1:-1:-1;18882:1352:14:o;20239:251::-;20309:6;20362:2;20350:9;20341:7;20337:23;20333:32;20330:52;;;20378:1;20375;20368:12;20330:52;20410:9;20404:16;20429:31;20454:5;20429:31;:::i;22540:217::-;22580:1;22606;22596:132;;22650:10;22645:3;22641:20;22638:1;22631:31;22685:4;22682:1;22675:15;22713:4;22710:1;22703:15;22596:132;-1:-1:-1;22742:9:14;;22540:217::o;22762:128::-;22829:9;;;22850:11;;;22847:37;;;22864:18;;:::i;22895:168::-;22968:9;;;22999;;23016:15;;;23010:22;;22996:37;22986:71;;23037:18;;:::i;23068:148::-;23156:4;23135:12;;;23149;;;23131:31;;23174:13;;23171:39;;;23190:18;;:::i;23221:399::-;23423:2;23405:21;;;23462:2;23442:18;;;23435:30;23501:34;23496:2;23481:18;;23474:62;-1:-1:-1;;;23567:2:14;23552:18;;23545:33;23610:3;23595:19;;23221:399::o;23625:404::-;23827:2;23809:21;;;23866:2;23846:18;;;23839:30;23905:34;23900:2;23885:18;;23878:62;-1:-1:-1;;;23971:2:14;23956:18;;23949:38;24019:3;24004:19;;23625:404::o;24034:400::-;24236:2;24218:21;;;24275:2;24255:18;;;24248:30;24314:34;24309:2;24294:18;;24287:62;-1:-1:-1;;;24380:2:14;24365:18;;24358:34;24424:3;24409:19;;24034:400::o;24439:465::-;24696:2;24685:9;24678:21;24659:4;24722:56;24774:2;24763:9;24759:18;24751:6;24722:56;:::i;:::-;24826:9;24818:6;24814:22;24809:2;24798:9;24794:18;24787:50;24854:44;24891:6;24883;24854:44;:::i;:::-;24846:52;24439:465;-1:-1:-1;;;;;24439:465:14:o;24909:401::-;25111:2;25093:21;;;25150:2;25130:18;;;25123:30;25189:34;25184:2;25169:18;;25162:62;-1:-1:-1;;;25255:2:14;25240:18;;25233:35;25300:3;25285:19;;24909:401::o;25315:406::-;25517:2;25499:21;;;25556:2;25536:18;;;25529:30;25595:34;25590:2;25575:18;;25568:62;-1:-1:-1;;;25661:2:14;25646:18;;25639:40;25711:3;25696:19;;25315:406::o;25726:397::-;25928:2;25910:21;;;25967:2;25947:18;;;25940:30;26006:34;26001:2;25986:18;;25979:62;-1:-1:-1;;;26072:2:14;26057:18;;26050:31;26113:3;26098:19;;25726:397::o;27612:827::-;-1:-1:-1;;;;;28009:15:14;;;27991:34;;28061:15;;28056:2;28041:18;;28034:43;27971:3;28108:2;28093:18;;28086:31;;;27934:4;;28140:57;;28177:19;;28169:6;28140:57;:::i;:::-;28245:9;28237:6;28233:22;28228:2;28217:9;28213:18;28206:50;28279:44;28316:6;28308;28279:44;:::i;:::-;28265:58;;28372:9;28364:6;28360:22;28354:3;28343:9;28339:19;28332:51;28400:33;28426:6;28418;28400:33;:::i;:::-;28392:41;27612:827;-1:-1:-1;;;;;;;;27612:827:14:o;28444:249::-;28513:6;28566:2;28554:9;28545:7;28541:23;28537:32;28534:52;;;28582:1;28579;28572:12;28534:52;28614:9;28608:16;28633:30;28657:5;28633:30;:::i;28698:179::-;28733:3;28775:1;28757:16;28754:23;28751:120;;;28821:1;28818;28815;28800:23;-1:-1:-1;28858:1:14;28852:8;28847:3;28843:18;28751:120;28698:179;:::o;28882:671::-;28921:3;28963:4;28945:16;28942:26;28939:39;;;28882:671;:::o;28939:39::-;29005:2;28999:9;-1:-1:-1;;29070:16:14;29066:25;;29063:1;28999:9;29042:50;29121:4;29115:11;29145:16;-1:-1:-1;;;;;29251:2:14;29244:4;29236:6;29232:17;29229:25;29224:2;29216:6;29213:14;29210:45;29207:58;;;29258:5;;;;;28882:671;:::o;29207:58::-;29295:6;29289:4;29285:17;29274:28;;29331:3;29325:10;29358:2;29350:6;29347:14;29344:27;;;29364:5;;;;;;28882:671;:::o;29344:27::-;29448:2;29429:16;29423:4;29419:27;29415:36;29408:4;29399:6;29394:3;29390:16;29386:27;29383:69;29380:82;;;29455:5;;;;;;28882:671;:::o;29380:82::-;29471:57;29522:4;29513:6;29505;29501:19;29497:30;29491:4;29471:57;:::i;:::-;-1:-1:-1;29544:3:14;;28882:671;-1:-1:-1;;;;;28882:671:14:o;29979:404::-;30181:2;30163:21;;;30220:2;30200:18;;;30193:30;30259:34;30254:2;30239:18;;30232:62;-1:-1:-1;;;30325:2:14;30310:18;;30303:38;30373:3;30358:19;;29979:404::o;30388:561::-;-1:-1:-1;;;;;30685:15:14;;;30667:34;;30737:15;;30732:2;30717:18;;30710:43;30784:2;30769:18;;30762:34;;;30827:2;30812:18;;30805:34;;;30647:3;30870;30855:19;;30848:32;;;30610:4;;30897:46;;30923:19;;30915:6;30897:46;:::i;:::-;30889:54;30388:561;-1:-1:-1;;;;;;;30388:561:14:o"},"gasEstimates":{"creation":{"codeDepositCost":"2257600","executionCost":"135048","totalCost":"2392648"},"external":{"Hpoint()":"2373","balanceOf(address,uint256)":"2720","balanceOfBatch(address[],uint256[])":"infinite","baseMetadataURI()":"infinite","burn(address,uint256,uint256)":"infinite","burnBatch(address[],uint256[],uint256[])":"infinite","controller()":"2425","currentTimeStamp()":"2396","exchangeHValue(uint256)":"infinite","exchangeHoliday(uint256)":"infinite","exchangeLimit()":"2351","exchangeTimes(address)":"2635","exists(uint256)":"2540","hashPunk()":"2382","initialize(string)":"infinite","isApprovedForAll(address,address)":"infinite","luckyEnd()":"2394","luckyStart()":"2397","mint(address,uint256,uint256,bytes)":"infinite","mintBatch(address[],uint256[],uint256[],uint256[],bytes)":"infinite","name()":"infinite","negtiveValue(address)":"2548","owner()":"2383","passId()":"2418","resetCurrentTimeStamp()":"24434","resetExchangeTimes()":"7547","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26766","setBaseUri(string)":"infinite","setController(address)":"26773","setHashPunk(address)":"26816","supportsInterface(bytes4)":"601","symbol()":"infinite","totalSupply(uint256)":"2560","uri(uint256)":"infinite","voucher()":"2329"},"internal":{"_uint2str(uint256)":"infinite"}},"methodIdentifiers":{"Hpoint()":"83d18f7a","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","baseMetadataURI()":"5b2bd79e","burn(address,uint256,uint256)":"f5298aca","burnBatch(address[],uint256[],uint256[])":"2a36c108","controller()":"f77c4791","currentTimeStamp()":"340a9a1c","exchangeHValue(uint256)":"a5afb7e0","exchangeHoliday(uint256)":"9642903f","exchangeLimit()":"d717b05e","exchangeTimes(address)":"8b0bb069","exists(uint256)":"4f558e79","hashPunk()":"9ba138c8","initialize(string)":"f62d1888","isApprovedForAll(address,address)":"e985e9c5","luckyEnd()":"f7e056ee","luckyStart()":"0e471525","mint(address,uint256,uint256,bytes)":"731133e9","mintBatch(address[],uint256[],uint256[],uint256[],bytes)":"e1012a89","name()":"06fdde03","negtiveValue(address)":"4c25e11f","owner()":"8da5cb5b","passId()":"444b7aaf","resetCurrentTimeStamp()":"6be55bb4","resetExchangeTimes()":"f96b7bf9","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setBaseUri(string)":"a0bcfc7f","setController(address)":"92eefe9b","setHashPunk(address)":"887be052","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply(uint256)":"bd85b039","uri(uint256)":"0e89341c","voucher()":"cdda418c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Hpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMetadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exchangeHValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchangeHoliday\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exchangeTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hashPunk\",\"outputs\":[{\"internalType\":\"contract IHashPunk\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"negtiveValues\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"negtiveValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"passId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetCurrentTimeStamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetExchangeTimes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"}],\"name\":\"setBaseUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHashPunk\",\"name\":\"_hashPunk\",\"type\":\"address\"}],\"name\":\"setHashPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voucher\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HValue.sol\":\"HValue\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155Upgradeable.sol\\\";\\nimport \\\"./IERC1155ReceiverUpgradeable.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURIUpgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {\\n    using AddressUpgradeable for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\\n        __ERC1155_init_unchained(uri_);\\n    }\\n\\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155Upgradeable).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(\\n        address from,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[47] private __gap;\\n}\\n\",\"keccak256\":\"0x6de308cde403f95519bf4b25123cbfe9126f2e0212564bb2ad3c23ac99f1a9cb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1155Upgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\\n *\\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\\n * clearly identified. Note: While a totalSupply of 1 might mean the\\n * corresponding is an NFT, there is no guarantees that no other token with the\\n * same id are not going to be minted.\\n */\\nabstract contract ERC1155SupplyUpgradeable is Initializable, ERC1155Upgradeable {\\n    function __ERC1155Supply_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1155Supply_init_unchained() internal onlyInitializing {\\n    }\\n    mapping(uint256 => uint256) private _totalSupply;\\n\\n    /**\\n     * @dev Total amount of tokens in with a given id.\\n     */\\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\\n        return _totalSupply[id];\\n    }\\n\\n    /**\\n     * @dev Indicates whether any token exist with a given id, or not.\\n     */\\n    function exists(uint256 id) public view virtual returns (bool) {\\n        return ERC1155SupplyUpgradeable.totalSupply(id) > 0;\\n    }\\n\\n    /**\\n     * @dev See {ERC1155-_beforeTokenTransfer}.\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        if (from == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                _totalSupply[ids[i]] += amounts[i];\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                uint256 id = ids[i];\\n                uint256 amount = amounts[i];\\n                uint256 supply = _totalSupply[id];\\n                require(supply >= amount, \\\"ERC1155: burn amount exceeds totalSupply\\\");\\n                unchecked {\\n                    _totalSupply[id] = supply - amount;\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xf7bdbcbb9fcf42997f280db8c02070e9c561406e6971ff680c6c43f92065ac9e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/HValue.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./HValueStorage.sol\\\";\\n\\ncontract HValue is ERC1155SupplyUpgradeable, HValueStorage {\\n\\n    function initialize(\\n        string memory _uri\\n    ) public initializer {\\n        __ERC1155Supply_init();\\n        name = \\\"HValue\\\";\\n        symbol = \\\"HV\\\";\\n        setBaseUri(_uri);\\n        owner = msg.sender;\\n        currentTimeStamp = block.timestamp;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(\\n            msg.sender == owner,\\n            \\\"HValue: caller is not the owner\\\"\\n        );\\n        _;\\n    }\\n    \\n    modifier onlyController() {\\n        require(\\n            msg.sender == controller,\\n            \\\"HValue: caller is not the controller\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyNewYear() {\\n        require(\\n            block.timestamp >= currentTimeStamp + 365 days,\\n            \\\"HValue: not new year\\\"\\n        );\\n        _;\\n    }\\n\\n    function mintBatch(\\n        address[] memory to,\\n        uint256[] memory tokenIds,\\n        uint256[] memory amounts,\\n        uint256[] memory negtiveValues,\\n        bytes memory data\\n    ) public onlyOwner {\\n        for (uint256 i = 0; i < to.length; i++) {\\n            _mintBatch(to[i], tokenIds, amounts, data);\\n            negtiveValue[to[i]] = negtiveValues[i];\\n        }\\n    }\\n\\n    function burnBatch(\\n        address[] memory from,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) public onlyOwner {\\n        for (uint256 i = 0; i < from.length; i++) {\\n            _burnBatch(from[i], ids, amounts);\\n        }\\n    }\\n\\n    function mint(\\n        address to,\\n        uint256 tokenId,\\n        uint256 amount,\\n        bytes memory data\\n    ) external onlyController {\\n        _mint(to, tokenId, amount, data);\\n    }\\n\\n    function burn(\\n        address from,\\n        uint256 tokenId,\\n        uint256 amount\\n    ) external onlyController {\\n        _burn(from, tokenId, amount);\\n    }\\n\\n    function exchangeHoliday(\\n        uint256 amount\\n    ) external {\\n        require(exchangeTimes[msg.sender] <= exchangeLimit, \\\"exceed exchange limit\\\");\\n        require(balanceOf(msg.sender, voucher) >= amount, \\\"HValue: not enough voucher\\\");\\n        _burn(msg.sender, voucher, amount);\\n        exchangeTimes[msg.sender] += amount;\\n    }\\n\\n    function exchangeHValue(uint256 tokenId) public {\\n        require(\\n            hashPunk.ownerOf(tokenId) == msg.sender,\\n            \\\"HValue: not punk owner\\\"\\n        );\\n        require(\\n            tokenId >= luckyStart && tokenId <= luckyEnd,\\n            \\\"HValue: not lucky punk\\\"\\n        );\\n        _mint(msg.sender, Hpoint, 70, \\\"\\\");\\n        _burn(msg.sender, voucher, 1);\\n        hashPunk.transferFrom(msg.sender, address(this), tokenId);\\n    }\\n\\n    function resetExchangeTimes() public onlyNewYear{\\n        exchangeTimes[msg.sender] = 0;\\n    }\\n\\n    function resetCurrentTimeStamp() public onlyOwner{\\n        currentTimeStamp = block.timestamp;\\n    }\\n\\n    function setHashPunk(IHashPunk _hashPunk) public onlyOwner {\\n        hashPunk = _hashPunk;\\n    }\\n    \\n    function setBaseUri(string memory baseUri) public onlyOwner {\\n        baseMetadataURI = baseUri;\\n    }\\n\\n    function setController(address _controller) public onlyOwner {\\n        controller = _controller;\\n    }\\n    \\n    function uri(uint256 tokenId) public view override returns (string memory) {\\n        return string(abi.encodePacked(baseMetadataURI, _uint2str(tokenId)));\\n    }\\n\\n    function _uint2str(uint256 _i) internal pure returns (string memory) {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 j = _i;\\n        uint256 len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bStr = new bytes(len);\\n        uint256 k = len;\\n        while (_i != 0) {\\n            k = k - 1;\\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bStr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bStr);\\n    }\\n}\\n\",\"keccak256\":\"0x43c800bfaff0402f53bea2d6ae5e1bdd138f397bff307b36409d9258d8d8758d\",\"license\":\"MIT\"},\"contracts/HValueStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHashPunk {\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n}\\n\\ncontract HValueStorage {\\n    string    public          name;\\n    string    public          symbol;\\n    address   public          owner;\\n    address   public          controller;\\n    IHashPunk public          hashPunk;\\n    uint256   public          currentTimeStamp;\\n    string    public          baseMetadataURI;\\n    uint256   public          passId           = 1;\\n    uint256   public          Hpoint           = 2;\\n    uint256   public          voucher          = 3;\\n    uint256   public          luckyStart       = 1;\\n    uint256   public          luckyEnd         = 500;\\n    uint256   public          exchangeLimit    = 3;\\n\\n    mapping(address => uint256) public exchangeTimes;\\n    mapping(address => uint256) public negtiveValue;\\n}\",\"keccak256\":\"0x5c378df1d5e2a5b28f3e5d31211f9f80ddd972b5fd42aba2b0c93211c989bf9f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"contracts/HValue.sol:HValue","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"contracts/HValue.sol:HValue","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2093,"contract":"contracts/HValue.sol:HValue","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":2137,"contract":"contracts/HValue.sol:HValue","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":197,"contract":"contracts/HValue.sol:HValue","label":"_balances","offset":0,"slot":"101","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":203,"contract":"contracts/HValue.sol:HValue","label":"_operatorApprovals","offset":0,"slot":"102","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":205,"contract":"contracts/HValue.sol:HValue","label":"_uri","offset":0,"slot":"103","type":"t_string_storage"},{"astId":1412,"contract":"contracts/HValue.sol:HValue","label":"__gap","offset":0,"slot":"104","type":"t_array(t_uint256)47_storage"},{"astId":1601,"contract":"contracts/HValue.sol:HValue","label":"_totalSupply","offset":0,"slot":"151","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1752,"contract":"contracts/HValue.sol:HValue","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":2786,"contract":"contracts/HValue.sol:HValue","label":"name","offset":0,"slot":"201","type":"t_string_storage"},{"astId":2788,"contract":"contracts/HValue.sol:HValue","label":"symbol","offset":0,"slot":"202","type":"t_string_storage"},{"astId":2790,"contract":"contracts/HValue.sol:HValue","label":"owner","offset":0,"slot":"203","type":"t_address"},{"astId":2792,"contract":"contracts/HValue.sol:HValue","label":"controller","offset":0,"slot":"204","type":"t_address"},{"astId":2795,"contract":"contracts/HValue.sol:HValue","label":"hashPunk","offset":0,"slot":"205","type":"t_contract(IHashPunk)2784"},{"astId":2797,"contract":"contracts/HValue.sol:HValue","label":"currentTimeStamp","offset":0,"slot":"206","type":"t_uint256"},{"astId":2799,"contract":"contracts/HValue.sol:HValue","label":"baseMetadataURI","offset":0,"slot":"207","type":"t_string_storage"},{"astId":2802,"contract":"contracts/HValue.sol:HValue","label":"passId","offset":0,"slot":"208","type":"t_uint256"},{"astId":2805,"contract":"contracts/HValue.sol:HValue","label":"Hpoint","offset":0,"slot":"209","type":"t_uint256"},{"astId":2808,"contract":"contracts/HValue.sol:HValue","label":"voucher","offset":0,"slot":"210","type":"t_uint256"},{"astId":2811,"contract":"contracts/HValue.sol:HValue","label":"luckyStart","offset":0,"slot":"211","type":"t_uint256"},{"astId":2814,"contract":"contracts/HValue.sol:HValue","label":"luckyEnd","offset":0,"slot":"212","type":"t_uint256"},{"astId":2817,"contract":"contracts/HValue.sol:HValue","label":"exchangeLimit","offset":0,"slot":"213","type":"t_uint256"},{"astId":2821,"contract":"contracts/HValue.sol:HValue","label":"exchangeTimes","offset":0,"slot":"214","type":"t_mapping(t_address,t_uint256)"},{"astId":2825,"contract":"contracts/HValue.sol:HValue","label":"negtiveValue","offset":0,"slot":"215","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IHashPunk)2784":{"encoding":"inplace","label":"contract IHashPunk","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/HValueStorage.sol":{"HValueStorage":{"abi":[{"inputs":[],"name":"Hpoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMetadataURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"controller","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"exchangeLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"exchangeTimes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hashPunk","outputs":[{"internalType":"contract IHashPunk","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyEnd","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"negtiveValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"passId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"voucher","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60806040526001600755600260085560036009556001600a556101f4600b556003600c5534801561002f57600080fd5b5061039c8061003f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638b0bb06911610097578063cdda418c11610066578063cdda418c146101d8578063d717b05e146101e1578063f77c4791146101ea578063f7e056ee146101fd57600080fd5b80638b0bb069146101725780638da5cb5b1461019257806395d89b41146101bd5780639ba138c8146101c557600080fd5b8063444b7aaf116100d3578063444b7aaf146101385780634c25e11f146101415780635b2bd79e1461016157806383d18f7a1461016957600080fd5b806306fdde03146100fa5780630e47152514610118578063340a9a1c1461012f575b600080fd5b610102610206565b60405161010f91906102ae565b60405180910390f35b610121600a5481565b60405190815260200161010f565b61012160055481565b61012160075481565b61012161014f3660046102fc565b600e6020526000908152604090205481565b610102610294565b61012160085481565b6101216101803660046102fc565b600d6020526000908152604090205481565b6002546101a5906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b6101026102a1565b6004546101a5906001600160a01b031681565b61012160095481565b610121600c5481565b6003546101a5906001600160a01b031681565b610121600b5481565b600080546102139061032c565b80601f016020809104026020016040519081016040528092919081815260200182805461023f9061032c565b801561028c5780601f106102615761010080835404028352916020019161028c565b820191906000526020600020905b81548152906001019060200180831161026f57829003601f168201915b505050505081565b600680546102139061032c565b600180546102139061032c565b600060208083528351808285015260005b818110156102db578581018301518582016040015282016102bf565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561030e57600080fd5b81356001600160a01b038116811461032557600080fd5b9392505050565b600181811c9082168061034057607f821691505b60208210810361036057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208f6831d6fde0f6edfbfb89ff87dc34ae856236895a781b85829d6c56d0dd37a164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x7 SSTORE PUSH1 0x2 PUSH1 0x8 SSTORE PUSH1 0x3 PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0xA SSTORE PUSH2 0x1F4 PUSH1 0xB SSTORE PUSH1 0x3 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C DUP1 PUSH2 0x3F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B0BB069 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCDDA418C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xD717B05E EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B0BB069 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x9BA138C8 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x444B7AAF GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x444B7AAF EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x4C25E11F EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xE471525 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x340A9A1C EQ PUSH2 0x12F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x121 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x294 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23F SWAP1 PUSH2 0x32C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x261 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2BF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x340 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x360 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH9 0x31D6FDE0F6EDFBFB89 SELFDESTRUCT DUP8 0xDC CALLVALUE 0xAE DUP6 PUSH3 0x36895A PUSH25 0x1B85829D6C56D0DD37A164736F6C6343000811003300000000 ","sourceMap":"270:736:13:-:0;;;632:1;587:46;;684:1;639:46;;736:1;691:46;;788:1;743:46;;840:3;795:48;;894:1;849:46;;270:736;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Hpoint_2805":{"entryPoint":null,"id":2805,"parameterSlots":0,"returnSlots":0},"@baseMetadataURI_2799":{"entryPoint":660,"id":2799,"parameterSlots":0,"returnSlots":0},"@controller_2792":{"entryPoint":null,"id":2792,"parameterSlots":0,"returnSlots":0},"@currentTimeStamp_2797":{"entryPoint":null,"id":2797,"parameterSlots":0,"returnSlots":0},"@exchangeLimit_2817":{"entryPoint":null,"id":2817,"parameterSlots":0,"returnSlots":0},"@exchangeTimes_2821":{"entryPoint":null,"id":2821,"parameterSlots":0,"returnSlots":0},"@hashPunk_2795":{"entryPoint":null,"id":2795,"parameterSlots":0,"returnSlots":0},"@luckyEnd_2814":{"entryPoint":null,"id":2814,"parameterSlots":0,"returnSlots":0},"@luckyStart_2811":{"entryPoint":null,"id":2811,"parameterSlots":0,"returnSlots":0},"@name_2786":{"entryPoint":518,"id":2786,"parameterSlots":0,"returnSlots":0},"@negtiveValue_2825":{"entryPoint":null,"id":2825,"parameterSlots":0,"returnSlots":0},"@owner_2790":{"entryPoint":null,"id":2790,"parameterSlots":0,"returnSlots":0},"@passId_2802":{"entryPoint":null,"id":2802,"parameterSlots":0,"returnSlots":0},"@symbol_2788":{"entryPoint":673,"id":2788,"parameterSlots":0,"returnSlots":0},"@voucher_2808":{"entryPoint":null,"id":2808,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":764,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IHashPunk_$2784__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":686,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":812,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1856:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:14","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:14"},"nodeType":"YulFunctionCall","src":"166:21:14"},"nodeType":"YulExpressionStatement","src":"166:21:14"},{"nodeType":"YulVariableDeclaration","src":"196:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:14"},"nodeType":"YulFunctionCall","src":"210:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:14"},"nodeType":"YulFunctionCall","src":"239:18:14"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:14"},"nodeType":"YulFunctionCall","src":"232:34:14"},"nodeType":"YulExpressionStatement","src":"232:34:14"},{"nodeType":"YulVariableDeclaration","src":"275:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:14"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:14"},"nodeType":"YulFunctionCall","src":"369:17:14"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:14"},"nodeType":"YulFunctionCall","src":"365:26:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:14"},"nodeType":"YulFunctionCall","src":"403:14:14"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:14"},"nodeType":"YulFunctionCall","src":"399:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:14"},"nodeType":"YulFunctionCall","src":"393:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:14"},"nodeType":"YulFunctionCall","src":"358:66:14"},"nodeType":"YulExpressionStatement","src":"358:66:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:14"},"nodeType":"YulFunctionCall","src":"302:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:14","statements":[{"nodeType":"YulAssignment","src":"318:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:14"},"nodeType":"YulFunctionCall","src":"323:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:14","statements":[]},"src":"294:140:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:14"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:14"},"nodeType":"YulFunctionCall","src":"454:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:14"},"nodeType":"YulFunctionCall","src":"450:31:14"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:14"},"nodeType":"YulFunctionCall","src":"443:42:14"},"nodeType":"YulExpressionStatement","src":"443:42:14"},{"nodeType":"YulAssignment","src":"494:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:14"},"nodeType":"YulFunctionCall","src":"525:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:14"},"nodeType":"YulFunctionCall","src":"542:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:14"},"nodeType":"YulFunctionCall","src":"521:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:14"},"nodeType":"YulFunctionCall","src":"506:45:14"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:14"},"nodeType":"YulFunctionCall","src":"502:54:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:14","type":""}],"src":"14:548:14"},{"body":{"nodeType":"YulBlock","src":"668:76:14","statements":[{"nodeType":"YulAssignment","src":"678:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"690:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"701:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"686:3:14"},"nodeType":"YulFunctionCall","src":"686:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"678:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"720:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"731:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"713:6:14"},"nodeType":"YulFunctionCall","src":"713:25:14"},"nodeType":"YulExpressionStatement","src":"713:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"637:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"648:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"659:4:14","type":""}],"src":"567:177:14"},{"body":{"nodeType":"YulBlock","src":"819:216:14","statements":[{"body":{"nodeType":"YulBlock","src":"865:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"874:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"877:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"867:6:14"},"nodeType":"YulFunctionCall","src":"867:12:14"},"nodeType":"YulExpressionStatement","src":"867:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"840:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"849:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"836:3:14"},"nodeType":"YulFunctionCall","src":"836:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"861:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"832:3:14"},"nodeType":"YulFunctionCall","src":"832:32:14"},"nodeType":"YulIf","src":"829:52:14"},{"nodeType":"YulVariableDeclaration","src":"890:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"916:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"903:12:14"},"nodeType":"YulFunctionCall","src":"903:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"894:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"989:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"998:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1001:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"991:6:14"},"nodeType":"YulFunctionCall","src":"991:12:14"},"nodeType":"YulExpressionStatement","src":"991:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"948:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"974:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"979:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"970:3:14"},"nodeType":"YulFunctionCall","src":"970:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"983:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"966:3:14"},"nodeType":"YulFunctionCall","src":"966:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"955:3:14"},"nodeType":"YulFunctionCall","src":"955:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"945:2:14"},"nodeType":"YulFunctionCall","src":"945:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"938:6:14"},"nodeType":"YulFunctionCall","src":"938:50:14"},"nodeType":"YulIf","src":"935:70:14"},{"nodeType":"YulAssignment","src":"1014:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1024:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1014:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"785:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"796:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"808:6:14","type":""}],"src":"749:286:14"},{"body":{"nodeType":"YulBlock","src":"1141:102:14","statements":[{"nodeType":"YulAssignment","src":"1151:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1163:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1159:3:14"},"nodeType":"YulFunctionCall","src":"1159:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1151:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1193:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1208:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1224:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1229:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1220:3:14"},"nodeType":"YulFunctionCall","src":"1220:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"1233:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1216:3:14"},"nodeType":"YulFunctionCall","src":"1216:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1204:3:14"},"nodeType":"YulFunctionCall","src":"1204:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1186:6:14"},"nodeType":"YulFunctionCall","src":"1186:51:14"},"nodeType":"YulExpressionStatement","src":"1186:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1110:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1121:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1132:4:14","type":""}],"src":"1040:203:14"},{"body":{"nodeType":"YulBlock","src":"1367:102:14","statements":[{"nodeType":"YulAssignment","src":"1377:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1389:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1400:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1385:3:14"},"nodeType":"YulFunctionCall","src":"1385:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1377:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1419:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1434:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1450:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1455:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1446:3:14"},"nodeType":"YulFunctionCall","src":"1446:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"1459:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1442:3:14"},"nodeType":"YulFunctionCall","src":"1442:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1430:3:14"},"nodeType":"YulFunctionCall","src":"1430:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1412:6:14"},"nodeType":"YulFunctionCall","src":"1412:51:14"},"nodeType":"YulExpressionStatement","src":"1412:51:14"}]},"name":"abi_encode_tuple_t_contract$_IHashPunk_$2784__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1336:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1347:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1358:4:14","type":""}],"src":"1248:221:14"},{"body":{"nodeType":"YulBlock","src":"1529:325:14","statements":[{"nodeType":"YulAssignment","src":"1539:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1553:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1556:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1549:3:14"},"nodeType":"YulFunctionCall","src":"1549:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1539:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1570:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1600:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"1606:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1596:3:14"},"nodeType":"YulFunctionCall","src":"1596:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1574:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1647:31:14","statements":[{"nodeType":"YulAssignment","src":"1649:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1663:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1671:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1659:3:14"},"nodeType":"YulFunctionCall","src":"1659:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1649:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1627:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1620:6:14"},"nodeType":"YulFunctionCall","src":"1620:26:14"},"nodeType":"YulIf","src":"1617:61:14"},{"body":{"nodeType":"YulBlock","src":"1737:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1758:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1765:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1770:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1761:3:14"},"nodeType":"YulFunctionCall","src":"1761:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1751:6:14"},"nodeType":"YulFunctionCall","src":"1751:31:14"},"nodeType":"YulExpressionStatement","src":"1751:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1802:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1805:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1795:6:14"},"nodeType":"YulFunctionCall","src":"1795:15:14"},"nodeType":"YulExpressionStatement","src":"1795:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1830:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1833:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1823:6:14"},"nodeType":"YulFunctionCall","src":"1823:15:14"},"nodeType":"YulExpressionStatement","src":"1823:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1693:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1716:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1713:2:14"},"nodeType":"YulFunctionCall","src":"1713:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1690:2:14"},"nodeType":"YulFunctionCall","src":"1690:38:14"},"nodeType":"YulIf","src":"1687:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1509:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1518:6:14","type":""}],"src":"1474:380:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IHashPunk_$2784__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c80638b0bb06911610097578063cdda418c11610066578063cdda418c146101d8578063d717b05e146101e1578063f77c4791146101ea578063f7e056ee146101fd57600080fd5b80638b0bb069146101725780638da5cb5b1461019257806395d89b41146101bd5780639ba138c8146101c557600080fd5b8063444b7aaf116100d3578063444b7aaf146101385780634c25e11f146101415780635b2bd79e1461016157806383d18f7a1461016957600080fd5b806306fdde03146100fa5780630e47152514610118578063340a9a1c1461012f575b600080fd5b610102610206565b60405161010f91906102ae565b60405180910390f35b610121600a5481565b60405190815260200161010f565b61012160055481565b61012160075481565b61012161014f3660046102fc565b600e6020526000908152604090205481565b610102610294565b61012160085481565b6101216101803660046102fc565b600d6020526000908152604090205481565b6002546101a5906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b6101026102a1565b6004546101a5906001600160a01b031681565b61012160095481565b610121600c5481565b6003546101a5906001600160a01b031681565b610121600b5481565b600080546102139061032c565b80601f016020809104026020016040519081016040528092919081815260200182805461023f9061032c565b801561028c5780601f106102615761010080835404028352916020019161028c565b820191906000526020600020905b81548152906001019060200180831161026f57829003601f168201915b505050505081565b600680546102139061032c565b600180546102139061032c565b600060208083528351808285015260005b818110156102db578581018301518582016040015282016102bf565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561030e57600080fd5b81356001600160a01b038116811461032557600080fd5b9392505050565b600181811c9082168061034057607f821691505b60208210810361036057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208f6831d6fde0f6edfbfb89ff87dc34ae856236895a781b85829d6c56d0dd37a164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B0BB069 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCDDA418C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xD717B05E EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B0BB069 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x9BA138C8 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x444B7AAF GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x444B7AAF EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x4C25E11F EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xE471525 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x340A9A1C EQ PUSH2 0x12F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x121 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x294 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23F SWAP1 PUSH2 0x32C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x261 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2BF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x340 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x360 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH9 0x31D6FDE0F6EDFBFB89 SELFDESTRUCT DUP8 0xDC CALLVALUE 0xAE DUP6 PUSH3 0x36895A PUSH25 0x1B85829D6C56D0DD37A164736F6C6343000811003300000000 ","sourceMap":"270:736:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;299:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;743:46;;;;;;;;;713:25:14;;;701:2;686:18;743:46:13;567:177:14;492:42:13;;;;;;587:46;;;;;;956:47;;;;;;:::i;:::-;;;;;;;;;;;;;;540:41;;;:::i;639:46::-;;;;;;902:48;;;;;;:::i;:::-;;;;;;;;;;;;;;373:31;;;;;-1:-1:-1;;;;;373:31:13;;;;;;-1:-1:-1;;;;;1204:32:14;;;1186:51;;1174:2;1159:18;373:31:13;1040:203:14;335:32:13;;;:::i;452:34::-;;;;;-1:-1:-1;;;;;452:34:13;;;691:46;;;;;;849;;;;;;410:36;;;;;-1:-1:-1;;;;;410:36:13;;;795:48;;;;;;299:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;540:41::-;;;;;;;:::i;335:32::-;;;;;;;:::i;14:548:14:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;749:286::-;808:6;861:2;849:9;840:7;836:23;832:32;829:52;;;877:1;874;867:12;829:52;903:23;;-1:-1:-1;;;;;955:31:14;;945:42;;935:70;;1001:1;998;991:12;935:70;1024:5;749:286;-1:-1:-1;;;749:286:14:o;1474:380::-;1553:1;1549:12;;;;1596;;;1617:61;;1671:4;1663:6;1659:17;1649:27;;1617:61;1724:2;1716:6;1713:14;1693:18;1690:38;1687:161;;1770:10;1765:3;1761:20;1758:1;1751:31;1805:4;1802:1;1795:15;1833:4;1830:1;1823:15;1687:161;;1474:380;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"184800","executionCost":"132862","totalCost":"317662"},"external":{"Hpoint()":"2384","baseMetadataURI()":"infinite","controller()":"2403","currentTimeStamp()":"2363","exchangeLimit()":"2339","exchangeTimes(address)":"2507","hashPunk()":"2426","luckyEnd()":"2383","luckyStart()":"2341","name()":"infinite","negtiveValue(address)":"2529","owner()":"2382","passId()":"2318","symbol()":"infinite","voucher()":"2317"}},"methodIdentifiers":{"Hpoint()":"83d18f7a","baseMetadataURI()":"5b2bd79e","controller()":"f77c4791","currentTimeStamp()":"340a9a1c","exchangeLimit()":"d717b05e","exchangeTimes(address)":"8b0bb069","hashPunk()":"9ba138c8","luckyEnd()":"f7e056ee","luckyStart()":"0e471525","name()":"06fdde03","negtiveValue(address)":"4c25e11f","owner()":"8da5cb5b","passId()":"444b7aaf","symbol()":"95d89b41","voucher()":"cdda418c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Hpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMetadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exchangeTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hashPunk\",\"outputs\":[{\"internalType\":\"contract IHashPunk\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"negtiveValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"passId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voucher\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HValueStorage.sol\":\"HValueStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HValueStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHashPunk {\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n}\\n\\ncontract HValueStorage {\\n    string    public          name;\\n    string    public          symbol;\\n    address   public          owner;\\n    address   public          controller;\\n    IHashPunk public          hashPunk;\\n    uint256   public          currentTimeStamp;\\n    string    public          baseMetadataURI;\\n    uint256   public          passId           = 1;\\n    uint256   public          Hpoint           = 2;\\n    uint256   public          voucher          = 3;\\n    uint256   public          luckyStart       = 1;\\n    uint256   public          luckyEnd         = 500;\\n    uint256   public          exchangeLimit    = 3;\\n\\n    mapping(address => uint256) public exchangeTimes;\\n    mapping(address => uint256) public negtiveValue;\\n}\",\"keccak256\":\"0x5c378df1d5e2a5b28f3e5d31211f9f80ddd972b5fd42aba2b0c93211c989bf9f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2786,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2788,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2790,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"owner","offset":0,"slot":"2","type":"t_address"},{"astId":2792,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"controller","offset":0,"slot":"3","type":"t_address"},{"astId":2795,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"hashPunk","offset":0,"slot":"4","type":"t_contract(IHashPunk)2784"},{"astId":2797,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"currentTimeStamp","offset":0,"slot":"5","type":"t_uint256"},{"astId":2799,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"baseMetadataURI","offset":0,"slot":"6","type":"t_string_storage"},{"astId":2802,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"passId","offset":0,"slot":"7","type":"t_uint256"},{"astId":2805,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"Hpoint","offset":0,"slot":"8","type":"t_uint256"},{"astId":2808,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"voucher","offset":0,"slot":"9","type":"t_uint256"},{"astId":2811,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"luckyStart","offset":0,"slot":"10","type":"t_uint256"},{"astId":2814,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"luckyEnd","offset":0,"slot":"11","type":"t_uint256"},{"astId":2817,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"exchangeLimit","offset":0,"slot":"12","type":"t_uint256"},{"astId":2821,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"exchangeTimes","offset":0,"slot":"13","type":"t_mapping(t_address,t_uint256)"},{"astId":2825,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"negtiveValue","offset":0,"slot":"14","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IHashPunk)2784":{"encoding":"inplace","label":"contract IHashPunk","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"IHashPunk":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ownerOf(uint256)":"6352211e","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HValueStorage.sol\":\"IHashPunk\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HValueStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHashPunk {\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n}\\n\\ncontract HValueStorage {\\n    string    public          name;\\n    string    public          symbol;\\n    address   public          owner;\\n    address   public          controller;\\n    IHashPunk public          hashPunk;\\n    uint256   public          currentTimeStamp;\\n    string    public          baseMetadataURI;\\n    uint256   public          passId           = 1;\\n    uint256   public          Hpoint           = 2;\\n    uint256   public          voucher          = 3;\\n    uint256   public          luckyStart       = 1;\\n    uint256   public          luckyEnd         = 500;\\n    uint256   public          exchangeLimit    = 3;\\n\\n    mapping(address => uint256) public exchangeTimes;\\n    mapping(address => uint256) public negtiveValue;\\n}\",\"keccak256\":\"0x5c378df1d5e2a5b28f3e5d31211f9f80ddd972b5fd42aba2b0c93211c989bf9f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}