{"id":"a2a766d1b8371f779bca68305608590a","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155Upgradeable.sol\";\nimport \"./IERC1155ReceiverUpgradeable.sol\";\nimport \"./extensions/IERC1155MetadataURIUpgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {\n    using AddressUpgradeable for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\n        __ERC1155_init_unchained(uri_);\n    }\n\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\n        return\n            interfaceId == type(IERC1155Upgradeable).interfaceId ||\n            interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[47] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155Upgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n */\nabstract contract ERC1155SupplyUpgradeable is Initializable, ERC1155Upgradeable {\n    function __ERC1155Supply_init() internal onlyInitializing {\n    }\n\n    function __ERC1155Supply_init_unchained() internal onlyInitializing {\n    }\n    mapping(uint256 => uint256) private _totalSupply;\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return ERC1155SupplyUpgradeable.totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        if (from == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                _totalSupply[ids[i]] += amounts[i];\n            }\n        }\n\n        if (to == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 id = ids[i];\n                uint256 amount = amounts[i];\n                uint256 supply = _totalSupply[id];\n                require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\");\n                unchecked {\n                    _totalSupply[id] = supply - amount;\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Upgradeable.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Upgradeable.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721MetadataUpgradeable is IERC721Upgradeable {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721ReceiverUpgradeable {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/ERC721rUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension. This does random batch minting.\n */\ncontract ERC721rUpgradeable is ContextUpgradeable, ERC165Upgradeable, IERC721Upgradeable, IERC721MetadataUpgradeable {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n    \n    mapping(uint => uint) private _availableTokens;\n    uint256 private _numAvailableTokens;\n    uint256 private _maxSupply;\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function __ERC721r_init(string memory name_, string memory symbol_, uint maxSupply_) internal onlyInitializing {\n        __ERC721r_init_unchained(name_, symbol_, maxSupply_);\n    }\n\n    function __ERC721r_init_unchained(string memory name_, string memory symbol_, uint maxSupply_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n        _maxSupply = maxSupply_;\n        _numAvailableTokens = maxSupply_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\n        return\n            interfaceId == type(IERC721Upgradeable).interfaceId ||\n            interfaceId == type(IERC721MetadataUpgradeable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n    \n    function totalSupply() public view virtual returns (uint256) {\n        return _maxSupply - _numAvailableTokens;\n    }\n    \n    function maxSupply() public view virtual returns (uint256) {\n        return _maxSupply;\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        //require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721rUpgradeable.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721rUpgradeable.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    function _mintIdWithoutBalanceUpdate(address to, uint256 tokenId) private {\n        _beforeTokenTransfer(address(0), to, tokenId);\n        \n        _owners[tokenId] = to;\n        \n        emit Transfer(address(0), to, tokenId);\n        \n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    function _mintRandom(address to, uint _numToMint) internal virtual returns(uint[] memory){\n        require(_msgSender() == tx.origin, \"Contracts cannot mint\");\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(_numToMint > 0, \"ERC721r: need to mint at least one token\");\n        \n        // TODO: Probably don't need this as it will underflow and revert automatically in this case\n        require(_numAvailableTokens >= _numToMint, \"ERC721r: minting more tokens than available\");\n        \n        uint updatedNumAvailableTokens = _numAvailableTokens;\n        uint[] memory res = new uint[](_numToMint);\n        for (uint256 i; i < _numToMint; ++i) { // Do this ++ unchecked?\n            uint256 tokenId = getRandomAvailableTokenId(to, updatedNumAvailableTokens);\n            res[i] = tokenId;\n            _mintIdWithoutBalanceUpdate(to, tokenId);\n            \n            --updatedNumAvailableTokens;\n        }\n        \n        _numAvailableTokens = updatedNumAvailableTokens;\n        _balances[to] += _numToMint;\n        return res;\n    }\n        \n    function getRandomAvailableTokenId(address to, uint updatedNumAvailableTokens)\n        internal\n        returns (uint256)\n    {\n        uint256 randomNum = uint256(\n            keccak256(\n                abi.encode(\n                    to,\n                    tx.gasprice,\n                    block.number,\n                    block.timestamp,\n                    block.difficulty,\n                    blockhash(block.number - 1),\n                    address(this),\n                    updatedNumAvailableTokens\n                )\n            )\n        );\n        uint256 randomIndex = randomNum % updatedNumAvailableTokens;\n        return getAvailableTokenAtIndex(randomIndex, updatedNumAvailableTokens);\n    }\n\n    // Implements https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle. Code taken from CryptoPhunksV2\n    function getAvailableTokenAtIndex(uint256 indexToUse, uint updatedNumAvailableTokens)\n        internal\n        returns (uint256)\n    {\n        uint256 valAtIndex = _availableTokens[indexToUse];\n        uint256 result;\n        if (valAtIndex == 0) {\n            // This means the index itself is still an available token\n            result = indexToUse;\n        } else {\n            // This means the index itself is not an available token, but the val at that index is.\n            result = valAtIndex;\n        }\n\n        uint256 lastIndex = updatedNumAvailableTokens - 1;\n        uint256 lastValInArray = _availableTokens[lastIndex];\n        if (indexToUse != lastIndex) {\n            // Replace the value at indexToUse, now that it's been used.\n            // Replace it with the data from the last index in the array, since we are going to decrease the array size afterwards.\n            if (lastValInArray == 0) {\n                // This means the index itself is still an available token\n                _availableTokens[indexToUse] = lastIndex;\n            } else {\n                // This means the index itself is not an available token, but the val at that index is.\n                _availableTokens[indexToUse] = lastValInArray;\n            }\n        }\n        if (lastValInArray != 0) {\n            // Gas refund courtsey of @dievardump\n            delete _availableTokens[lastIndex];\n        }\n        \n        return result;\n    }\n    \n    // Not as good as minting a specific tokenId, but will behave the same at the start\n    // allowing you to explicitly mint some tokens at launch.\n    function _mintAtIndex(address to, uint index) internal virtual {\n        require(_msgSender() == tx.origin, \"Contracts cannot mint\");\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(_numAvailableTokens >= 1, \"ERC721r: minting more tokens than available\");\n        \n        uint tokenId = getAvailableTokenAtIndex(index, _numAvailableTokens);\n        --_numAvailableTokens;\n        \n        _mintIdWithoutBalanceUpdate(to, tokenId);\n        \n        _balances[to] += 1;\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721rUpgradeable.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721rUpgradeable.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721ReceiverUpgradeable.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}"},"contracts/HashPunk.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ERC721rUpgradeable.sol\";\nimport \"./HashPunkStorage.sol\";\n\ncontract HashPunk is ERC721rUpgradeable, HashPunkStorage {\n\n    function initialize(\n        string memory _uri,\n        address _hValue,\n        uint256 _base,\n        uint256 _passIdBase\n    ) public initializer {\n        __ERC721r_init(\"HashPunk\", \"HP\", 3000);\n        passIdBase = _passIdBase;\n        base = _base;\n        hValue = IHValue(_hValue);\n        baseMetadataURI = _uri;\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(\n            msg.sender == owner,\n            \"HashPunk: caller is not the owner\"\n        );\n        _;\n    }\n\n    function mint(uint256 id, uint256 amount) public {\n        require(tx.origin == msg.sender, \"\");\n        require(id == passId || id == Hpoint, \"invalid id\");\n        if (id == passId) {\n            require(hValue.balanceOf(msg.sender, passId) >= passIdBase * amount, \"insufficient Pass Card balance\");\n            hValue.burn(msg.sender, passId, passIdBase * amount);\n            _mintRandom(msg.sender, amount);\n            hValue.mint(msg.sender, voucher, 1, \"\");\n            return;\n        }\n        require(hValue.balanceOf(msg.sender, Hpoint) - hValue.negtiveValue(msg.sender) >= base * amount, \"insufficient HValue balance\");\n        hValue.burn(msg.sender, Hpoint, base * amount);\n        uint[] memory tokenIds = _mintRandom(msg.sender, amount);\n        for(uint i = 0; i < tokenIds.length; i++) {\n            if(tokenIds[i]>=luckyStart && tokenIds[i]<=luckyEnd) {\n               userToRareIds[msg.sender].push(tokenIds[i]);\n            }\n        }\n        hValue.mint(msg.sender, voucher, 1, \"\");\n    }\n\n    /**\n     * Sets a new baseURI for NFT.\n     */\n    function setBaseUri(string memory baseUri) external onlyOwner {\n        baseMetadataURI = baseUri;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        return string(abi.encodePacked(baseMetadataURI, _uint2str(tokenId)));\n    }\n\n    function setPassIdBase(uint256 _passIdBase) public onlyOwner {\n        passIdBase = _passIdBase;\n    }\n\n    function setBase(uint256 _base) public onlyOwner {\n        base = _base;\n    }\n\n    function setHValue(IHValue _hValue) public onlyOwner {\n        hValue = _hValue;\n    }\n\n    function _uint2str(uint256 _i) internal pure returns (string memory) {\n        if (_i == 0) {\n            return \"0\";\n        }\n        uint256 j = _i;\n        uint256 len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bStr = new bytes(len);\n        uint256 k = len;\n        while (_i != 0) {\n            k = k - 1;\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\n            bytes1 b1 = bytes1(temp);\n            bStr[k] = b1;\n            _i /= 10;\n        }\n        return string(bStr);\n    }\n\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view override returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        if(msg.sender == address(hValue)) {\n            return true;\n        }\n        address owner = ERC721rUpgradeable.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n}\n"},"contracts/HashPunkStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface IHValue {\n\n    function balanceOf(address account, uint256 id)\n        external\n        view\n        returns (uint256);\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    function burn(\n        address from,\n        uint256 tokenId,\n        uint256 amount\n    ) external;\n\n    function mint(\n        address to,\n        uint256 tokenId,\n        uint256 amount,\n        bytes memory data\n    ) external;\n\n    function negtiveValue(address _address) external view returns (uint256);\n}\n\ncontract HashPunkStorage {\n    uint256 public constant passId  = 1;\n    uint256 public constant Hpoint  = 2;\n    uint256 public constant voucher = 3;\n    uint256 public          passIdBase;\n    uint256 public          base;\n    IHValue public          hValue;\n    address public          owner;\n    string  public          baseMetadataURI;\n    uint256 public          luckyStart       = 1;\n    uint256 public          luckyEnd         = 500;\n    mapping(address => uint[]) public userToRareIds;\n}"},"contracts/HValue.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./HValueStorage.sol\";\n\ncontract HValue is ERC1155SupplyUpgradeable, HValueStorage {\n\n    function initialize(\n        string memory _uri\n    ) public initializer {\n        __ERC1155Supply_init();\n        name = \"HValue\";\n        symbol = \"HV\";\n        setBaseUri(_uri);\n        owner = msg.sender;\n        currentTimeStamp = block.timestamp;\n    }\n\n    modifier onlyOwner() {\n        require(\n            msg.sender == owner,\n            \"HValue: caller is not the owner\"\n        );\n        _;\n    }\n    \n    modifier onlyController() {\n        require(\n            msg.sender == controller,\n            \"HValue: caller is not the controller\"\n        );\n        _;\n    }\n\n    modifier onlyNewYear() {\n        require(\n            block.timestamp >= currentTimeStamp + 365 days,\n            \"HValue: not new year\"\n        );\n        _;\n    }\n\n    function mintBatch(\n        address[] memory to,\n        uint256[] memory tokenIds,\n        uint256[] memory amounts,\n        uint256[] memory negtiveValues,\n        bytes memory data\n    ) public onlyOwner {\n        for (uint256 i = 0; i < to.length; i++) {\n            _mintBatch(to[i], tokenIds, amounts, data);\n            negtiveValue[to[i]] = negtiveValues[i];\n        }\n    }\n\n    function burnBatch(\n        address[] memory from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) public onlyOwner {\n        for (uint256 i = 0; i < from.length; i++) {\n            _burnBatch(from[i], ids, amounts);\n        }\n    }\n\n    function mint(\n        address to,\n        uint256 tokenId,\n        uint256 amount,\n        bytes memory data\n    ) external onlyController {\n        _mint(to, tokenId, amount, data);\n    }\n\n    function burn(\n        address from,\n        uint256 tokenId,\n        uint256 amount\n    ) external onlyController {\n        _burn(from, tokenId, amount);\n    }\n\n    function exchangeHoliday(\n        uint256 amount\n    ) external {\n        require(exchangeTimes[msg.sender] <= exchangeLimit, \"exceed exchange limit\");\n        require(balanceOf(msg.sender, voucher) >= amount, \"HValue: not enough voucher\");\n        _burn(msg.sender, voucher, amount);\n        exchangeTimes[msg.sender] += amount;\n    }\n\n    function exchangeHValue(uint256 tokenId) public {\n        require(\n            hashPunk.ownerOf(tokenId) == msg.sender,\n            \"HValue: not punk owner\"\n        );\n        require(\n            tokenId >= luckyStart && tokenId <= luckyEnd,\n            \"HValue: not lucky punk\"\n        );\n        _mint(msg.sender, Hpoint, 70, \"\");\n        _burn(msg.sender, voucher, 1);\n        hashPunk.transferFrom(msg.sender, address(this), tokenId);\n    }\n\n    function resetExchangeTimes() public onlyNewYear{\n        exchangeTimes[msg.sender] = 0;\n    }\n\n    function resetCurrentTimeStamp() public onlyOwner{\n        currentTimeStamp = block.timestamp;\n    }\n\n    function setHashPunk(IHashPunk _hashPunk) public onlyOwner {\n        hashPunk = _hashPunk;\n    }\n    \n    function setBaseUri(string memory baseUri) public onlyOwner {\n        baseMetadataURI = baseUri;\n    }\n\n    function setController(address _controller) public onlyOwner {\n        controller = _controller;\n    }\n    \n    function uri(uint256 tokenId) public view override returns (string memory) {\n        return string(abi.encodePacked(baseMetadataURI, _uint2str(tokenId)));\n    }\n\n    function rareAddress() public view returns (address[] memory) {\n        address[] memory res = new address[](luckyEnd - luckyStart + 1);\n        for (uint i = luckyStart; i <= luckyEnd; i++) {\n            res[i - 1] = hashPunk.ownerOf(i);\n        }\n        return res;\n    }\n\n    function isRare(uint256 tokenId) public view returns (bool) {\n        return tokenId >= luckyStart && tokenId <= luckyEnd;\n    }\n\n    function _uint2str(uint256 _i) internal pure returns (string memory) {\n        if (_i == 0) {\n            return \"0\";\n        }\n        uint256 j = _i;\n        uint256 len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bStr = new bytes(len);\n        uint256 k = len;\n        while (_i != 0) {\n            k = k - 1;\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\n            bytes1 b1 = bytes1(temp);\n            bStr[k] = b1;\n            _i /= 10;\n        }\n        return string(bStr);\n    }\n}\n"},"contracts/HValueStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface IHashPunk {\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n}\n\ncontract HValueStorage {\n    string    public          name;\n    string    public          symbol;\n    address   public          owner;\n    address   public          controller;\n    IHashPunk public          hashPunk;\n    uint256   public          currentTimeStamp;\n    string    public          baseMetadataURI;\n    uint256   public          passId           = 1;\n    uint256   public          Hpoint           = 2;\n    uint256   public          voucher          = 3;\n    uint256   public          luckyStart       = 1;\n    uint256   public          luckyEnd         = 500;\n    uint256   public          exchangeLimit    = 3;\n\n    mapping(address => uint256) public exchangeTimes;\n    mapping(address => uint256) public negtiveValue;\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[2213],"Initializable":[168]},"id":169,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":169,"sourceUnit":2214,"src":"138:44:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"184:2198:0","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":168,"linearizedBaseContracts":[168],"name":"Initializable","nameLocation":"2401:13:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"2421:109:0","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":6,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:0","nodeType":"VariableDeclaration","scope":168,"src":"2535:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"2568:91:0","text":" @dev Indicates that the contract is in the process of being initialized."},"id":9,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:0","nodeType":"VariableDeclaration","scope":168,"src":"2664:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"2697:90:0","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":14,"name":"Initialized","nameLocation":"2798:11:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:0","nodeType":"VariableDeclaration","scope":14,"src":"2810:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:0"},"src":"2792:33:0"},{"body":{"id":69,"nodeType":"Block","src":"3258:483:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:0","nodeType":"VariableDeclaration","scope":69,"src":"3268:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":21,"initialValue":{"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:0","subExpression":{"id":19,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3291:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":23,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3336:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":24,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3354:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":28,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:45:0","subExpression":{"arguments":[{"arguments":[{"id":33,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3415:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$168","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$168","typeString":"contract Initializable"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3407:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"3407:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3407:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":29,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3377:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2213_$","typeString":"type(library AddressUpgradeable)"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3396:10:0","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1947,"src":"3377:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3377:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":37,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3425:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":38,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3441:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3425:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":41,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:108:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3457:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":22,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:201:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45,"nodeType":"ExpressionStatement","src":"3314:201:0"},{"expression":{"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":46,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3525:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3525:16:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":49,"nodeType":"ExpressionStatement","src":"3525:16:0"},{"condition":{"id":50,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3555:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":56,"nodeType":"IfStatement","src":"3551:65:0","trueBody":{"id":55,"nodeType":"Block","src":"3571:45:0","statements":[{"expression":{"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":51,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3585:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3601:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3585:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":54,"nodeType":"ExpressionStatement","src":"3585:20:0"}]}},{"id":57,"nodeType":"PlaceholderStatement","src":"3625:1:0"},{"condition":{"id":58,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3640:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":68,"nodeType":"IfStatement","src":"3636:99:0","trueBody":{"id":67,"nodeType":"Block","src":"3656:79:0","statements":[{"expression":{"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3670:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":60,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3686:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3670:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62,"nodeType":"ExpressionStatement","src":"3670:21:0"},{"eventCall":{"arguments":[{"hexValue":"31","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":63,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"3710:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3710:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"EmitStatement","src":"3705:19:0"}]}}]},"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"2831:399:0","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":70,"name":"initializer","nameLocation":"3244:11:0","nodeType":"ModifierDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"3255:2:0"},"src":"3235:506:0","virtual":false,"visibility":"internal"},{"body":{"id":102,"nodeType":"Block","src":"4852:255:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:14:0","subExpression":{"id":76,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"4871:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4888:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":79,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4888:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4870:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":75,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4862:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4862:99:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":84,"nodeType":"ExpressionStatement","src":"4862:99:0"},{"expression":{"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":85,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4971:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":86,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"4986:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4971:22:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":88,"nodeType":"ExpressionStatement","src":"4971:22:0"},{"expression":{"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":89,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5003:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":90,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5019:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5003:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":92,"nodeType":"ExpressionStatement","src":"5003:20:0"},{"id":93,"nodeType":"PlaceholderStatement","src":"5033:1:0"},{"expression":{"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":94,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5044:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5060:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5044:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":97,"nodeType":"ExpressionStatement","src":"5044:21:0"},{"eventCall":{"arguments":[{"id":99,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"5092:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":98,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5080:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"EmitStatement","src":"5075:25:0"}]},"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"3747:1062:0","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":103,"name":"reinitializer","nameLocation":"4823:13:0","nodeType":"ModifierDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"version","nameLocation":"4843:7:0","nodeType":"VariableDeclaration","scope":103,"src":"4837:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":72,"name":"uint8","nodeType":"ElementaryTypeName","src":"4837:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4836:15:0"},"src":"4814:293:0","virtual":false,"visibility":"internal"},{"body":{"id":112,"nodeType":"Block","src":"5345:97:0","statements":[{"expression":{"arguments":[{"id":107,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5363:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5378:45:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5355:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5355:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"ExpressionStatement","src":"5355:69:0"},{"id":111,"nodeType":"PlaceholderStatement","src":"5434:1:0"}]},"documentation":{"id":104,"nodeType":"StructuredDocumentation","src":"5113:199:0","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":113,"name":"onlyInitializing","nameLocation":"5326:16:0","nodeType":"ModifierDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"5342:2:0"},"src":"5317:125:0","virtual":false,"visibility":"internal"},{"body":{"id":148,"nodeType":"Block","src":"5977:230:0","statements":[{"expression":{"arguments":[{"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5995:14:0","subExpression":{"id":118,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5996:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6011:41:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5987:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5987:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":122,"nodeType":"ExpressionStatement","src":"5987:66:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6067:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":125,"name":"uint8","nodeType":"ElementaryTypeName","src":"6087:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6082:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6082:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6094:3:0","memberName":"max","nodeType":"MemberAccess","src":"6082:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6067:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":147,"nodeType":"IfStatement","src":"6063:138:0","trueBody":{"id":146,"nodeType":"Block","src":"6099:102:0","statements":[{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":130,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6113:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":132,"name":"uint8","nodeType":"ElementaryTypeName","src":"6133:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6128:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6140:3:0","memberName":"max","nodeType":"MemberAccess","src":"6128:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6113:30:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":137,"nodeType":"ExpressionStatement","src":"6113:30:0"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6179:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":140,"name":"uint8","nodeType":"ElementaryTypeName","src":"6179:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6174:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6186:3:0","memberName":"max","nodeType":"MemberAccess","src":"6174:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":138,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"6162:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6162:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":145,"nodeType":"EmitStatement","src":"6157:33:0"}]}}]},"documentation":{"id":114,"nodeType":"StructuredDocumentation","src":"5448:475:0","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":149,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5937:20:0","nodeType":"FunctionDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[],"src":"5957:2:0"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"5977:0:0"},"scope":168,"src":"5928:279:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":157,"nodeType":"Block","src":"6381:36:0","statements":[{"expression":{"id":155,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6398:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":154,"id":156,"nodeType":"Return","src":"6391:19:0"}]},"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"6213:99:0","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":158,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6326:22:0","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"6348:2:0"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"6374:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":152,"name":"uint8","nodeType":"ElementaryTypeName","src":"6374:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6373:7:0"},"scope":168,"src":"6317:100:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":166,"nodeType":"Block","src":"6589:37:0","statements":[{"expression":{"id":164,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"6606:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":163,"id":165,"nodeType":"Return","src":"6599:20:0"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"6423:105:0","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":167,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6542:15:0","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"6557:2:0"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"6583:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":161,"name":"bool","nodeType":"ElementaryTypeName","src":"6583:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6582:6:0"},"scope":168,"src":"6533:93:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":169,"src":"2383:4245:0","usedErrors":[]}],"src":"113:6516:0"},"id":0},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2213],"ContextUpgradeable":[2255],"ERC1155Upgradeable":[1413],"ERC165Upgradeable":[2299],"IERC1155MetadataURIUpgradeable":[1768],"IERC1155ReceiverUpgradeable":[1454],"IERC1155Upgradeable":[1576],"IERC165Upgradeable":[2311],"Initializable":[168]},"id":1414,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":170,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol","file":"./IERC1155Upgradeable.sol","id":171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":1577,"src":"134:35:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol","file":"./IERC1155ReceiverUpgradeable.sol","id":172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":1455,"src":"170:43:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol","file":"./extensions/IERC1155MetadataURIUpgradeable.sol","id":173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":1769,"src":"214:57:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":2214,"src":"272:44:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":2256,"src":"317:44:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":2300,"src":"362:57:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":169,"src":"420:45:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":179,"name":"Initializable","nameLocations":["713:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"713:13:1"},"id":180,"nodeType":"InheritanceSpecifier","src":"713:13:1"},{"baseName":{"id":181,"name":"ContextUpgradeable","nameLocations":["728:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"728:18:1"},"id":182,"nodeType":"InheritanceSpecifier","src":"728:18:1"},{"baseName":{"id":183,"name":"ERC165Upgradeable","nameLocations":["748:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":2299,"src":"748:17:1"},"id":184,"nodeType":"InheritanceSpecifier","src":"748:17:1"},{"baseName":{"id":185,"name":"IERC1155Upgradeable","nameLocations":["767:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":1576,"src":"767:19:1"},"id":186,"nodeType":"InheritanceSpecifier","src":"767:19:1"},{"baseName":{"id":187,"name":"IERC1155MetadataURIUpgradeable","nameLocations":["788:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"788:30:1"},"id":188,"nodeType":"InheritanceSpecifier","src":"788:30:1"}],"canonicalName":"ERC1155Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"467:214:1","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"},"fullyImplemented":true,"id":1413,"linearizedBaseContracts":[1413,1768,1576,2299,2311,2255,168],"name":"ERC1155Upgradeable","nameLocation":"691:18:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":191,"libraryName":{"id":189,"name":"AddressUpgradeable","nameLocations":["831:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":2213,"src":"831:18:1"},"nodeType":"UsingForDirective","src":"825:37:1","typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":197,"mutability":"mutable","name":"_balances","nameLocation":"973:9:1","nodeType":"VariableDeclaration","scope":1413,"src":"917:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":196,"keyType":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"917:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueType":{"id":195,"keyType":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"944:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"936:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"955:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":203,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1092:18:1","nodeType":"VariableDeclaration","scope":1413,"src":"1039:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":202,"keyType":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1039:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":201,"keyType":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1058:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":200,"name":"bool","nodeType":"ElementaryTypeName","src":"1077:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":205,"mutability":"mutable","name":"_uri","nameLocation":"1246:4:1","nodeType":"VariableDeclaration","scope":1413,"src":"1231:19:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":204,"name":"string","nodeType":"ElementaryTypeName","src":"1231:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":217,"nodeType":"Block","src":"1370:47:1","statements":[{"expression":{"arguments":[{"id":214,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1405:4:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":213,"name":"__ERC1155_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"1380:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"1380:30:1"}]},"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"1257:38:1","text":" @dev See {_setURI}."},"id":218,"implemented":true,"kind":"function","modifiers":[{"id":211,"kind":"modifierInvocation","modifierName":{"id":210,"name":"onlyInitializing","nameLocations":["1353:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"1353:16:1"},"nodeType":"ModifierInvocation","src":"1353:16:1"}],"name":"__ERC1155_init","nameLocation":"1309:14:1","nodeType":"FunctionDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"uri_","nameLocation":"1338:4:1","nodeType":"VariableDeclaration","scope":218,"src":"1324:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":207,"name":"string","nodeType":"ElementaryTypeName","src":"1324:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1323:20:1"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"1370:0:1"},"scope":1413,"src":"1300:117:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":229,"nodeType":"Block","src":"1503:30:1","statements":[{"expression":{"arguments":[{"id":226,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"1521:4:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":225,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"1513:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1513:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":228,"nodeType":"ExpressionStatement","src":"1513:13:1"}]},"id":230,"implemented":true,"kind":"function","modifiers":[{"id":223,"kind":"modifierInvocation","modifierName":{"id":222,"name":"onlyInitializing","nameLocations":["1486:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"1486:16:1"},"nodeType":"ModifierInvocation","src":"1486:16:1"}],"name":"__ERC1155_init_unchained","nameLocation":"1432:24:1","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"uri_","nameLocation":"1471:4:1","nodeType":"VariableDeclaration","scope":230,"src":"1457:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":219,"name":"string","nodeType":"ElementaryTypeName","src":"1457:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1456:20:1"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"1503:0:1"},"scope":1413,"src":"1423:110:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2293,2310],"body":{"id":260,"nodeType":"Block","src":"1730:219:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1759:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":243,"name":"IERC1155Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1779:19:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Upgradeable_$1576_$","typeString":"type(contract IERC1155Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155Upgradeable_$1576_$","typeString":"type(contract IERC1155Upgradeable)"}],"id":242,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1774:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155Upgradeable_$1576","typeString":"type(contract IERC1155Upgradeable)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1800:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1774:37:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1759:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":247,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1827:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":249,"name":"IERC1155MetadataURIUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"1847:30:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURIUpgradeable_$1768_$","typeString":"type(contract IERC1155MetadataURIUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURIUpgradeable_$1768_$","typeString":"type(contract IERC1155MetadataURIUpgradeable)"}],"id":248,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1842:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURIUpgradeable_$1768","typeString":"type(contract IERC1155MetadataURIUpgradeable)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1879:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1842:48:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1827:63:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1759:131:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":256,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1930:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":254,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1906:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Upgradeable_$1413_$","typeString":"type(contract super ERC1155Upgradeable)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1912:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2293,"src":"1906:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1906:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1759:183:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":240,"id":259,"nodeType":"Return","src":"1740:202:1"}]},"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"1539:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1609:17:1","nodeType":"FunctionDefinition","overrides":{"id":237,"nodeType":"OverrideSpecifier","overrides":[{"id":235,"name":"ERC165Upgradeable","nameLocations":["1676:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":2299,"src":"1676:17:1"},{"id":236,"name":"IERC165Upgradeable","nameLocations":["1695:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":2311,"src":"1695:18:1"}],"src":"1667:47:1"},"parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"interfaceId","nameLocation":"1634:11:1","nodeType":"VariableDeclaration","scope":261,"src":"1627:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":232,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1627:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1626:20:1"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"1724:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":238,"name":"bool","nodeType":"ElementaryTypeName","src":"1724:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1723:6:1"},"scope":1413,"src":"1600:349:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1767],"body":{"id":272,"nodeType":"Block","src":"2423:28:1","statements":[{"expression":{"id":270,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2440:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":269,"id":271,"nodeType":"Return","src":"2433:11:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"1955:388:1","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":273,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2357:3:1","nodeType":"FunctionDefinition","overrides":{"id":266,"nodeType":"OverrideSpecifier","overrides":[],"src":"2390:8:1"},"parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":273,"src":"2361:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"2361:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2360:9:1"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":273,"src":"2408:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":267,"name":"string","nodeType":"ElementaryTypeName","src":"2408:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2407:15:1"},"scope":1413,"src":"2348:103:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1514],"body":{"id":300,"nodeType":"Block","src":"2688:132:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":285,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2706:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2725:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:1","typeDescriptions":{}}},"id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2706:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2729:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""},"value":"ERC1155: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2698:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":293,"nodeType":"ExpressionStatement","src":"2698:76:1"},{"expression":{"baseExpression":{"baseExpression":{"id":294,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"2791:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":296,"indexExpression":{"id":295,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2801:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2791:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":298,"indexExpression":{"id":297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2805:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2791:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":283,"id":299,"nodeType":"Return","src":"2784:29:1"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"2457:131:1","text":" @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":301,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2602:9:1","nodeType":"FunctionDefinition","overrides":{"id":280,"nodeType":"OverrideSpecifier","overrides":[],"src":"2661:8:1"},"parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"account","nameLocation":"2620:7:1","nodeType":"VariableDeclaration","scope":301,"src":"2612:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"2612:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":278,"mutability":"mutable","name":"id","nameLocation":"2637:2:1","nodeType":"VariableDeclaration","scope":301,"src":"2629:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"2629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2611:29:1"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":301,"src":"2679:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:9:1"},"scope":1413,"src":"2593:227:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1527],"body":{"id":364,"nodeType":"Block","src":"3150:335:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":316,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3168:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3177:6:1","memberName":"length","nodeType":"MemberAccess","src":"3168:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":318,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3187:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3191:6:1","memberName":"length","nodeType":"MemberAccess","src":"3187:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3168:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3199:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""},"value":"ERC1155: accounts and ids length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""}],"id":315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3160:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3160:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":323,"nodeType":"ExpressionStatement","src":"3160:83:1"},{"assignments":[328],"declarations":[{"constant":false,"id":328,"mutability":"mutable","name":"batchBalances","nameLocation":"3271:13:1","nodeType":"VariableDeclaration","scope":364,"src":"3254:30:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"3254:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":327,"nodeType":"ArrayTypeName","src":"3254:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":335,"initialValue":{"arguments":[{"expression":{"id":332,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3301:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3310:6:1","memberName":"length","nodeType":"MemberAccess","src":"3301:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3287:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":330,"nodeType":"ArrayTypeName","src":"3291:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3287:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3254:63:1"},{"body":{"id":360,"nodeType":"Block","src":"3374:74:1","statements":[{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":347,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3388:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":349,"indexExpression":{"id":348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3402:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3388:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":351,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3417:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":353,"indexExpression":{"id":352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3426:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3417:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":354,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3430:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":356,"indexExpression":{"id":355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3434:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3430:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":350,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"3407:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3407:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3388:49:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":359,"nodeType":"ExpressionStatement","src":"3388:49:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3348:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":341,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3352:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3361:6:1","memberName":"length","nodeType":"MemberAccess","src":"3352:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3348:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":361,"initializationExpression":{"assignments":[337],"declarations":[{"constant":false,"id":337,"mutability":"mutable","name":"i","nameLocation":"3341:1:1","nodeType":"VariableDeclaration","scope":361,"src":"3333:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"3333:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":339,"initialValue":{"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3345:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3333:13:1"},"loopExpression":{"expression":{"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3369:3:1","subExpression":{"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3371:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":346,"nodeType":"ExpressionStatement","src":"3369:3:1"},"nodeType":"ForStatement","src":"3328:120:1"},{"expression":{"id":362,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3465:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":314,"id":363,"nodeType":"Return","src":"3458:20:1"}]},"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"2826:146:1","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":365,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2986:14:1","nodeType":"FunctionDefinition","overrides":{"id":310,"nodeType":"OverrideSpecifier","overrides":[],"src":"3102:8:1"},"parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"accounts","nameLocation":"3018:8:1","nodeType":"VariableDeclaration","scope":365,"src":"3001:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"3001:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":304,"nodeType":"ArrayTypeName","src":"3001:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"ids","nameLocation":"3045:3:1","nodeType":"VariableDeclaration","scope":365,"src":"3028:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"3028:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":307,"nodeType":"ArrayTypeName","src":"3028:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3000:49:1"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":365,"src":"3128:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3128:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":312,"nodeType":"ArrayTypeName","src":"3128:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3127:18:1"},"scope":1413,"src":"2977:508:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1535],"body":{"id":381,"nodeType":"Block","src":"3637:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":375,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"3666:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3666:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"3680:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":378,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3690:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":374,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"3647:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3647:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":380,"nodeType":"ExpressionStatement","src":"3647:52:1"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"3491:57:1","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":382,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3562:17:1","nodeType":"FunctionDefinition","overrides":{"id":372,"nodeType":"OverrideSpecifier","overrides":[],"src":"3628:8:1"},"parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"operator","nameLocation":"3588:8:1","nodeType":"VariableDeclaration","scope":382,"src":"3580:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"3580:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"approved","nameLocation":"3603:8:1","nodeType":"VariableDeclaration","scope":382,"src":"3598:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":369,"name":"bool","nodeType":"ElementaryTypeName","src":"3598:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3579:33:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"3637:0:1"},"scope":1413,"src":"3553:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1545],"body":{"id":399,"nodeType":"Block","src":"3878:61:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":393,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"3895:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":395,"indexExpression":{"id":394,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"3914:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3895:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":397,"indexExpression":{"id":396,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3923:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3895:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":392,"id":398,"nodeType":"Return","src":"3888:44:1"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"3712:56:1","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":400,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3782:16:1","nodeType":"FunctionDefinition","overrides":{"id":389,"nodeType":"OverrideSpecifier","overrides":[],"src":"3854:8:1"},"parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"account","nameLocation":"3807:7:1","nodeType":"VariableDeclaration","scope":400,"src":"3799:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"3799:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"operator","nameLocation":"3824:8:1","nodeType":"VariableDeclaration","scope":400,"src":"3816:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"3816:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3798:35:1"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":400,"src":"3872:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":390,"name":"bool","nodeType":"ElementaryTypeName","src":"3872:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3871:6:1"},"scope":1413,"src":"3773:166:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1559],"body":{"id":437,"nodeType":"Block","src":"4175:225:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":416,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4206:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":417,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4214:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4206:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":421,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4247:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4253:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":420,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"4230:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4206:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4280:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4185:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4185:153:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"4185:153:1"},{"expression":{"arguments":[{"id":430,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4366:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4372:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":432,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"4376:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":433,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"4380:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":434,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"4388:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":429,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"4348:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4348:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"4348:45:1"}]},"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"3945:56:1","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":438,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4015:16:1","nodeType":"FunctionDefinition","overrides":{"id":413,"nodeType":"OverrideSpecifier","overrides":[],"src":"4166:8:1"},"parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"from","nameLocation":"4049:4:1","nodeType":"VariableDeclaration","scope":438,"src":"4041:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"4041:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"to","nameLocation":"4071:2:1","nodeType":"VariableDeclaration","scope":438,"src":"4063:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"4063:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"id","nameLocation":"4091:2:1","nodeType":"VariableDeclaration","scope":438,"src":"4083:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"4083:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"amount","nameLocation":"4111:6:1","nodeType":"VariableDeclaration","scope":438,"src":"4103:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"4103:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"data","nameLocation":"4140:4:1","nodeType":"VariableDeclaration","scope":438,"src":"4127:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":410,"name":"bytes","nodeType":"ElementaryTypeName","src":"4127:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4031:119:1"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"4175:0:1"},"scope":1413,"src":"4006:394:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1575],"body":{"id":477,"nodeType":"Block","src":"4666:232:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":456,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"4697:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4705:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4705:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4697:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":461,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"4738:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":462,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4744:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4744:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":460,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"4721:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4721:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4697:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4771:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":455,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4676:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4676:153:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"ExpressionStatement","src":"4676:153:1"},{"expression":{"arguments":[{"id":470,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"4862:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"4868:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":472,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4872:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":473,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"4877:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":474,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4886:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":469,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"4839:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4839:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"4839:52:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"4406:61:1","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":478,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4481:21:1","nodeType":"FunctionDefinition","overrides":{"id":453,"nodeType":"OverrideSpecifier","overrides":[],"src":"4657:8:1"},"parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"from","nameLocation":"4520:4:1","nodeType":"VariableDeclaration","scope":478,"src":"4512:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"4512:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"to","nameLocation":"4542:2:1","nodeType":"VariableDeclaration","scope":478,"src":"4534:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"4534:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"ids","nameLocation":"4571:3:1","nodeType":"VariableDeclaration","scope":478,"src":"4554:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"4554:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":445,"nodeType":"ArrayTypeName","src":"4554:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"amounts","nameLocation":"4601:7:1","nodeType":"VariableDeclaration","scope":478,"src":"4584:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"4584:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":448,"nodeType":"ArrayTypeName","src":"4584:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"data","nameLocation":"4631:4:1","nodeType":"VariableDeclaration","scope":478,"src":"4618:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":450,"name":"bytes","nodeType":"ElementaryTypeName","src":"4618:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4502:139:1"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"4666:0:1"},"scope":1413,"src":"4472:426:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":594,"nodeType":"Block","src":"5511:784:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":493,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5529:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:1","typeDescriptions":{}}},"id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5529:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5547:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5521:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5521:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"ExpressionStatement","src":"5521:66:1"},{"assignments":[503],"declarations":[{"constant":false,"id":503,"mutability":"mutable","name":"operator","nameLocation":"5606:8:1","nodeType":"VariableDeclaration","scope":594,"src":"5598:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"5598:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":506,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":504,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"5617:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5598:31:1"},{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"ids","nameLocation":"5656:3:1","nodeType":"VariableDeclaration","scope":594,"src":"5639:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"5639:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":510,"nodeType":"ArrayTypeName","src":"5639:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":515,"initialValue":{"arguments":[{"id":513,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5680:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":512,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5662:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5639:44:1"},{"assignments":[520],"declarations":[{"constant":false,"id":520,"mutability":"mutable","name":"amounts","nameLocation":"5710:7:1","nodeType":"VariableDeclaration","scope":594,"src":"5693:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"5693:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":519,"nodeType":"ArrayTypeName","src":"5693:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":524,"initialValue":{"arguments":[{"id":522,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5738:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":521,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5720:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5693:52:1"},{"expression":{"arguments":[{"id":526,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"5777:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"5787:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5793:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":529,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"5797:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":530,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5802:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":531,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5811:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":525,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"5756:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5756:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"5756:60:1"},{"assignments":[535],"declarations":[{"constant":false,"id":535,"mutability":"mutable","name":"fromBalance","nameLocation":"5835:11:1","nodeType":"VariableDeclaration","scope":594,"src":"5827:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":541,"initialValue":{"baseExpression":{"baseExpression":{"id":536,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5849:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":538,"indexExpression":{"id":537,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5859:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5849:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":540,"indexExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"5863:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5849:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5827:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":543,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5886:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":544,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5901:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5886:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5909:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5878:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5878:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":548,"nodeType":"ExpressionStatement","src":"5878:76:1"},{"id":559,"nodeType":"UncheckedBlock","src":"5964:77:1","statements":[{"expression":{"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":549,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5988:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":552,"indexExpression":{"id":550,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5998:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5988:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":553,"indexExpression":{"id":551,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"6002:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5988:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6010:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"6024:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6010:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5988:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"nodeType":"ExpressionStatement","src":"5988:42:1"}]},{"expression":{"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":560,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"6050:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":563,"indexExpression":{"id":561,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6060:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6050:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":564,"indexExpression":{"id":562,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"6064:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6050:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"6071:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6050:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":567,"nodeType":"ExpressionStatement","src":"6050:27:1"},{"eventCall":{"arguments":[{"id":569,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6108:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":570,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"6118:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":571,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"6124:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":572,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6128:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"6132:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":568,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"6093:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6093:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":575,"nodeType":"EmitStatement","src":"6088:51:1"},{"expression":{"arguments":[{"id":577,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6170:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"6180:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":579,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"6186:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":580,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6190:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":581,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6195:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":582,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"6204:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":576,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6150:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6150:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"ExpressionStatement","src":"6150:59:1"},{"expression":{"arguments":[{"id":586,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6251:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"6261:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"6267:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":589,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6271:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":590,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":591,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"6283:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":585,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"6220:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6220:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"6220:68:1"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"4904:439:1","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"5357:17:1","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"from","nameLocation":"5392:4:1","nodeType":"VariableDeclaration","scope":595,"src":"5384:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"5384:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"to","nameLocation":"5414:2:1","nodeType":"VariableDeclaration","scope":595,"src":"5406:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"5406:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"id","nameLocation":"5434:2:1","nodeType":"VariableDeclaration","scope":595,"src":"5426:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"5426:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"amount","nameLocation":"5454:6:1","nodeType":"VariableDeclaration","scope":595,"src":"5446:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"5446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"data","nameLocation":"5483:4:1","nodeType":"VariableDeclaration","scope":595,"src":"5470:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":488,"name":"bytes","nodeType":"ElementaryTypeName","src":"5470:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5374:119:1"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5511:0:1"},"scope":1413,"src":"5348:947:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":729,"nodeType":"Block","src":"6829:927:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":612,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"6847:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6851:6:1","memberName":"length","nodeType":"MemberAccess","src":"6847:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":614,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"6861:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:1","memberName":"length","nodeType":"MemberAccess","src":"6861:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6847:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6877:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6839:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6839:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"6839:81:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6938:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6944:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"6944:7:1","typeDescriptions":{}}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6944:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6938:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6956:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6930:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"ExpressionStatement","src":"6930:66:1"},{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"operator","nameLocation":"7015:8:1","nodeType":"VariableDeclaration","scope":729,"src":"7007:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7007:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":634,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":632,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"7026:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7026:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7007:31:1"},{"expression":{"arguments":[{"id":636,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7070:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7080:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7086:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7090:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":640,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7095:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":641,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7104:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":635,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"7049:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7049:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"7049:60:1"},{"body":{"id":701,"nodeType":"Block","src":"7161:370:1","statements":[{"assignments":[656],"declarations":[{"constant":false,"id":656,"mutability":"mutable","name":"id","nameLocation":"7183:2:1","nodeType":"VariableDeclaration","scope":701,"src":"7175:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":655,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":660,"initialValue":{"baseExpression":{"id":657,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7188:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":659,"indexExpression":{"id":658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7192:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7188:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7175:19:1"},{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"amount","nameLocation":"7216:6:1","nodeType":"VariableDeclaration","scope":701,"src":"7208:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"7208:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":666,"initialValue":{"baseExpression":{"id":663,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7225:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":665,"indexExpression":{"id":664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7233:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7225:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7208:27:1"},{"assignments":[668],"declarations":[{"constant":false,"id":668,"mutability":"mutable","name":"fromBalance","nameLocation":"7258:11:1","nodeType":"VariableDeclaration","scope":701,"src":"7250:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"7250:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":674,"initialValue":{"baseExpression":{"baseExpression":{"id":669,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"7272:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":671,"indexExpression":{"id":670,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7282:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7272:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":673,"indexExpression":{"id":672,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7286:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7272:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7250:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"7313:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":677,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"7328:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7313:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7336:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7305:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7305:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":681,"nodeType":"ExpressionStatement","src":"7305:76:1"},{"id":692,"nodeType":"UncheckedBlock","src":"7395:85:1","statements":[{"expression":{"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":682,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"7423:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":685,"indexExpression":{"id":683,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7433:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7423:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":686,"indexExpression":{"id":684,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7437:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7423:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"7445:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"7459:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7445:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7423:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":691,"nodeType":"ExpressionStatement","src":"7423:42:1"}]},{"expression":{"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":693,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"7493:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":696,"indexExpression":{"id":694,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7503:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7493:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":697,"indexExpression":{"id":695,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7507:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7493:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":698,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"7514:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7493:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":700,"nodeType":"ExpressionStatement","src":"7493:27:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7140:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":649,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7144:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7148:6:1","memberName":"length","nodeType":"MemberAccess","src":"7144:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7140:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":702,"initializationExpression":{"assignments":[645],"declarations":[{"constant":false,"id":645,"mutability":"mutable","name":"i","nameLocation":"7133:1:1","nodeType":"VariableDeclaration","scope":702,"src":"7125:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"7125:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"hexValue":"30","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7137:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7125:13:1"},"loopExpression":{"expression":{"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7156:3:1","subExpression":{"id":652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7158:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":654,"nodeType":"ExpressionStatement","src":"7156:3:1"},"nodeType":"ForStatement","src":"7120:411:1"},{"eventCall":{"arguments":[{"id":704,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7560:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":705,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7570:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7576:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":707,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7580:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":708,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7585:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":703,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"7546:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7546:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":710,"nodeType":"EmitStatement","src":"7541:52:1"},{"expression":{"arguments":[{"id":712,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7624:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":713,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7634:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":714,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7640:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":715,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7644:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":716,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7649:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":717,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7658:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":711,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7604:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7604:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"7604:59:1"},{"expression":{"arguments":[{"id":721,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7710:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":722,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7720:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7726:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7730:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":725,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7735:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":726,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7744:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":720,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"7674:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"7674:75:1"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"6301:335:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":730,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"6650:22:1","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"from","nameLocation":"6690:4:1","nodeType":"VariableDeclaration","scope":730,"src":"6682:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"6682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"to","nameLocation":"6712:2:1","nodeType":"VariableDeclaration","scope":730,"src":"6704:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"ids","nameLocation":"6741:3:1","nodeType":"VariableDeclaration","scope":730,"src":"6724:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"6724:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":602,"nodeType":"ArrayTypeName","src":"6724:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"amounts","nameLocation":"6771:7:1","nodeType":"VariableDeclaration","scope":730,"src":"6754:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"6754:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":605,"nodeType":"ArrayTypeName","src":"6754:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"data","nameLocation":"6801:4:1","nodeType":"VariableDeclaration","scope":730,"src":"6788:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":607,"name":"bytes","nodeType":"ElementaryTypeName","src":"6788:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6672:139:1"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"6829:0:1"},"scope":1413,"src":"6641:1115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"8635:30:1","statements":[{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":736,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8645:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"8652:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8645:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":739,"nodeType":"ExpressionStatement","src":"8645:13:1"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"7762:812:1","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":741,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"8588:7:1","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"newuri","nameLocation":"8610:6:1","nodeType":"VariableDeclaration","scope":741,"src":"8596:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":732,"name":"string","nodeType":"ElementaryTypeName","src":"8596:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8595:22:1"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[],"src":"8635:0:1"},"scope":1413,"src":"8579:86:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"9167:580:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":754,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9185:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9199:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9191:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"9191:7:1","typeDescriptions":{}}},"id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9191:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9185:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9203:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":753,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9177:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9177:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"ExpressionStatement","src":"9177:62:1"},{"assignments":[764],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"operator","nameLocation":"9258:8:1","nodeType":"VariableDeclaration","scope":841,"src":"9250:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"9250:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":767,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":765,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"9269:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9269:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9250:31:1"},{"assignments":[772],"declarations":[{"constant":false,"id":772,"mutability":"mutable","name":"ids","nameLocation":"9308:3:1","nodeType":"VariableDeclaration","scope":841,"src":"9291:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"9291:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":771,"nodeType":"ArrayTypeName","src":"9291:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":776,"initialValue":{"arguments":[{"id":774,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9332:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":773,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"9314:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9314:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9291:44:1"},{"assignments":[781],"declarations":[{"constant":false,"id":781,"mutability":"mutable","name":"amounts","nameLocation":"9362:7:1","nodeType":"VariableDeclaration","scope":841,"src":"9345:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"9345:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":780,"nodeType":"ArrayTypeName","src":"9345:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":785,"initialValue":{"arguments":[{"id":783,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9390:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":782,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"9372:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9372:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9345:52:1"},{"expression":{"arguments":[{"id":787,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9429:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9447:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9439:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"9439:7:1","typeDescriptions":{}}},"id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9439:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":792,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9451:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9455:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":794,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"9460:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":795,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9469:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":786,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"9408:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9408:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"9408:66:1"},{"expression":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":798,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"9485:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":801,"indexExpression":{"id":799,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9495:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9485:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":802,"indexExpression":{"id":800,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9499:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9485:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":803,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9506:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9485:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":805,"nodeType":"ExpressionStatement","src":"9485:27:1"},{"eventCall":{"arguments":[{"id":807,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9542:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9560:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9552:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"9552:7:1","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9564:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9568:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":814,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9572:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":806,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"9527:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9527:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":816,"nodeType":"EmitStatement","src":"9522:57:1"},{"expression":{"arguments":[{"id":818,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9610:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9628:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9620:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"9620:7:1","typeDescriptions":{}}},"id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9620:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":823,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9632:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":824,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9636:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":825,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"9641:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":826,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9650:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":817,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"9590:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9590:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":828,"nodeType":"ExpressionStatement","src":"9590:65:1"},{"expression":{"arguments":[{"id":830,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9697:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9715:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"9707:7:1","typeDescriptions":{}}},"id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":835,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"9719:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9723:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":837,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9727:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":838,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9735:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":829,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"9666:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9666:74:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"ExpressionStatement","src":"9666:74:1"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"8671:362:1","text":" @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":842,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9047:5:1","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"to","nameLocation":"9070:2:1","nodeType":"VariableDeclaration","scope":842,"src":"9062:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"9062:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"id","nameLocation":"9090:2:1","nodeType":"VariableDeclaration","scope":842,"src":"9082:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"9082:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"amount","nameLocation":"9110:6:1","nodeType":"VariableDeclaration","scope":842,"src":"9102:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"9102:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"data","nameLocation":"9139:4:1","nodeType":"VariableDeclaration","scope":842,"src":"9126:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":749,"name":"bytes","nodeType":"ElementaryTypeName","src":"9126:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9052:97:1"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"9167:0:1"},"scope":1413,"src":"9038:709:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"10291:637:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10309:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10323:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10315:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"10315:7:1","typeDescriptions":{}}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10315:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10309:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10327:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10301:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"ExpressionStatement","src":"10301:62:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":867,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10381:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10385:6:1","memberName":"length","nodeType":"MemberAccess","src":"10381:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":869,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10395:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10403:6:1","memberName":"length","nodeType":"MemberAccess","src":"10395:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10381:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10411:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":866,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10373:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10373:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"ExpressionStatement","src":"10373:81:1"},{"assignments":[876],"declarations":[{"constant":false,"id":876,"mutability":"mutable","name":"operator","nameLocation":"10473:8:1","nodeType":"VariableDeclaration","scope":952,"src":"10465:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"10465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":879,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":877,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"10484:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10484:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10465:31:1"},{"expression":{"arguments":[{"id":881,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10528:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10538:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"10538:7:1","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10538:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":886,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10550:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":887,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10554:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":888,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10559:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":889,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10568:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":880,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"10507:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10507:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"ExpressionStatement","src":"10507:66:1"},{"body":{"id":915,"nodeType":"Block","src":"10625:60:1","statements":[{"expression":{"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":903,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"10639:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":908,"indexExpression":{"baseExpression":{"id":904,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10649:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":906,"indexExpression":{"id":905,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10653:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10649:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10639:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":909,"indexExpression":{"id":907,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10657:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10639:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":910,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10664:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":912,"indexExpression":{"id":911,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10672:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10664:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10639:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":914,"nodeType":"ExpressionStatement","src":"10639:35:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10604:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":897,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10608:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10612:6:1","memberName":"length","nodeType":"MemberAccess","src":"10608:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10604:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":916,"initializationExpression":{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"i","nameLocation":"10597:1:1","nodeType":"VariableDeclaration","scope":916,"src":"10589:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"10589:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":895,"initialValue":{"hexValue":"30","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10601:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10589:13:1"},"loopExpression":{"expression":{"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10620:3:1","subExpression":{"id":900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10620:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":902,"nodeType":"ExpressionStatement","src":"10620:3:1"},"nodeType":"ForStatement","src":"10584:101:1"},{"eventCall":{"arguments":[{"id":918,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10714:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:1","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10724:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":923,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10736:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10740:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":925,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10745:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":917,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"10700:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"EmitStatement","src":"10695:58:1"},{"expression":{"arguments":[{"id":929,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10784:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10802:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10794:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"10794:7:1","typeDescriptions":{}}},"id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10794:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":934,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10806:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10810:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":936,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10815:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":937,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10824:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":928,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"10764:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10764:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"10764:65:1"},{"expression":{"arguments":[{"id":941,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10876:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10894:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10886:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"10886:7:1","typeDescriptions":{}}},"id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10886:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10898:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":947,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10902:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":948,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10907:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":949,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10916:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":940,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10840:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":951,"nodeType":"ExpressionStatement","src":"10840:81:1"}]},"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"9753:379:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"10146:10:1","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"to","nameLocation":"10174:2:1","nodeType":"VariableDeclaration","scope":953,"src":"10166:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"10166:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"ids","nameLocation":"10203:3:1","nodeType":"VariableDeclaration","scope":953,"src":"10186:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":847,"nodeType":"ArrayTypeName","src":"10186:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"amounts","nameLocation":"10233:7:1","nodeType":"VariableDeclaration","scope":953,"src":"10216:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"10216:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":850,"nodeType":"ArrayTypeName","src":"10216:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"data","nameLocation":"10263:4:1","nodeType":"VariableDeclaration","scope":953,"src":"10250:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":852,"name":"bytes","nodeType":"ElementaryTypeName","src":"10250:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10156:117:1"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"10291:0:1"},"scope":1413,"src":"10137:791:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1057,"nodeType":"Block","src":"11318:682:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":964,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11336:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11352:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11344:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"11344:7:1","typeDescriptions":{}}},"id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11344:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11336:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11356:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":963,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11328:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11328:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"11328:66:1"},{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"operator","nameLocation":"11413:8:1","nodeType":"VariableDeclaration","scope":1057,"src":"11405:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"11405:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":977,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":975,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"11424:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11424:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11405:31:1"},{"assignments":[982],"declarations":[{"constant":false,"id":982,"mutability":"mutable","name":"ids","nameLocation":"11463:3:1","nodeType":"VariableDeclaration","scope":1057,"src":"11446:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ArrayTypeName","src":"11446:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":986,"initialValue":{"arguments":[{"id":984,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11487:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":983,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"11469:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11469:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11446:44:1"},{"assignments":[991],"declarations":[{"constant":false,"id":991,"mutability":"mutable","name":"amounts","nameLocation":"11517:7:1","nodeType":"VariableDeclaration","scope":1057,"src":"11500:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"11500:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":990,"nodeType":"ArrayTypeName","src":"11500:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":995,"initialValue":{"arguments":[{"id":993,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"11545:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":992,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"11527:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11527:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11500:52:1"},{"expression":{"arguments":[{"id":997,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"11584:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":998,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11594:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11608:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11600:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"11600:7:1","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11600:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11612:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1004,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"11617:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11626:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":996,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"11563:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11563:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"ExpressionStatement","src":"11563:66:1"},{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"fromBalance","nameLocation":"11648:11:1","nodeType":"VariableDeclaration","scope":1057,"src":"11640:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"11640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1015,"initialValue":{"baseExpression":{"baseExpression":{"id":1010,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"11662:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1012,"indexExpression":{"id":1011,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11672:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11662:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1014,"indexExpression":{"id":1013,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11676:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11662:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11640:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11699:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1018,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"11714:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11699:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11722:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":1016,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11691:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1022,"nodeType":"ExpressionStatement","src":"11691:70:1"},{"id":1033,"nodeType":"UncheckedBlock","src":"11771:77:1","statements":[{"expression":{"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1023,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"11795:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1026,"indexExpression":{"id":1024,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11805:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11795:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1027,"indexExpression":{"id":1025,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11809:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11795:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11817:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1029,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"11831:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11817:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11795:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1032,"nodeType":"ExpressionStatement","src":"11795:42:1"}]},{"eventCall":{"arguments":[{"id":1035,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"11878:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1036,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11888:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11902:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11894:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"11894:7:1","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11894:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11906:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1042,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"11910:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1034,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"11863:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11863:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"11858:59:1"},{"expression":{"arguments":[{"id":1046,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"11948:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1047,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11958:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11972:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11964:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"11964:7:1","typeDescriptions":{}}},"id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11964:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1052,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11976:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1053,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"11981:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11990:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1045,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"11928:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11928:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"ExpressionStatement","src":"11928:65:1"}]},"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"10934:275:1","text":" @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."},"id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11223:5:1","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"from","nameLocation":"11246:4:1","nodeType":"VariableDeclaration","scope":1058,"src":"11238:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"11238:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"id","nameLocation":"11268:2:1","nodeType":"VariableDeclaration","scope":1058,"src":"11260:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"amount","nameLocation":"11288:6:1","nodeType":"VariableDeclaration","scope":1058,"src":"11280:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"11280:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11228:72:1"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"11318:0:1"},"scope":1413,"src":"11214:786:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1180,"nodeType":"Block","src":"12368:814:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12386:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12402:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12394:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"12394:7:1","typeDescriptions":{}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12394:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12386:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12406:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":1070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12378:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12378:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"ExpressionStatement","src":"12378:66:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1081,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12462:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12466:6:1","memberName":"length","nodeType":"MemberAccess","src":"12462:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1083,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"12476:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12484:6:1","memberName":"length","nodeType":"MemberAccess","src":"12476:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12462:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12492:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":1080,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12454:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"12454:81:1"},{"assignments":[1090],"declarations":[{"constant":false,"id":1090,"mutability":"mutable","name":"operator","nameLocation":"12554:8:1","nodeType":"VariableDeclaration","scope":1180,"src":"12546:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"12546:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1093,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1091,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"12565:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12565:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12546:31:1"},{"expression":{"arguments":[{"id":1095,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"12609:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12619:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12633:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12625:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"12625:7:1","typeDescriptions":{}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12625:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12637:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1102,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"12642:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12651:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1094,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"12588:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12588:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1105,"nodeType":"ExpressionStatement","src":"12588:66:1"},{"body":{"id":1155,"nodeType":"Block","src":"12706:323:1","statements":[{"assignments":[1118],"declarations":[{"constant":false,"id":1118,"mutability":"mutable","name":"id","nameLocation":"12728:2:1","nodeType":"VariableDeclaration","scope":1155,"src":"12720:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1122,"initialValue":{"baseExpression":{"id":1119,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12733:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1121,"indexExpression":{"id":1120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"12737:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12733:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12720:19:1"},{"assignments":[1124],"declarations":[{"constant":false,"id":1124,"mutability":"mutable","name":"amount","nameLocation":"12761:6:1","nodeType":"VariableDeclaration","scope":1155,"src":"12753:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"12753:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1128,"initialValue":{"baseExpression":{"id":1125,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"12770:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1127,"indexExpression":{"id":1126,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"12778:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12770:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12753:27:1"},{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"fromBalance","nameLocation":"12803:11:1","nodeType":"VariableDeclaration","scope":1155,"src":"12795:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"12795:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1136,"initialValue":{"baseExpression":{"baseExpression":{"id":1131,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"12817:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1133,"indexExpression":{"id":1132,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"12827:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12817:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1135,"indexExpression":{"id":1134,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12831:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12817:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12795:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"12858:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1139,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"12873:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12858:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12881:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":1137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12850:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12850:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1143,"nodeType":"ExpressionStatement","src":"12850:70:1"},{"id":1154,"nodeType":"UncheckedBlock","src":"12934:85:1","statements":[{"expression":{"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1144,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"12962:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1147,"indexExpression":{"id":1145,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"12972:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12962:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1148,"indexExpression":{"id":1146,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"12976:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12962:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1149,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"12984:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1150,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"12998:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12984:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12962:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1153,"nodeType":"ExpressionStatement","src":"12962:42:1"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"12685:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1111,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12689:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12693:6:1","memberName":"length","nodeType":"MemberAccess","src":"12689:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12685:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1156,"initializationExpression":{"assignments":[1107],"declarations":[{"constant":false,"id":1107,"mutability":"mutable","name":"i","nameLocation":"12678:1:1","nodeType":"VariableDeclaration","scope":1156,"src":"12670:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"12670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1109,"initialValue":{"hexValue":"30","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12682:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12670:13:1"},"loopExpression":{"expression":{"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12701:3:1","subExpression":{"id":1114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"12701:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1116,"nodeType":"ExpressionStatement","src":"12701:3:1"},"nodeType":"ForStatement","src":"12665:364:1"},{"eventCall":{"arguments":[{"id":1158,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"13058:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"13068:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13082:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13074:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"13074:7:1","typeDescriptions":{}}},"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13074:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"13086:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1165,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13091:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1157,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"13044:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13044:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"EmitStatement","src":"13039:60:1"},{"expression":{"arguments":[{"id":1169,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"13130:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1170,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"13140:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13146:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"13146:7:1","typeDescriptions":{}}},"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13146:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"13158:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1176,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13163:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13172:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1168,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"13110:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13110:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1179,"nodeType":"ExpressionStatement","src":"13110:65:1"}]},"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"12006:228:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."},"id":1181,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12248:10:1","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"from","nameLocation":"12276:4:1","nodeType":"VariableDeclaration","scope":1181,"src":"12268:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"12268:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"ids","nameLocation":"12307:3:1","nodeType":"VariableDeclaration","scope":1181,"src":"12290:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"12290:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1063,"nodeType":"ArrayTypeName","src":"12290:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"amounts","nameLocation":"12337:7:1","nodeType":"VariableDeclaration","scope":1181,"src":"12320:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1066,"nodeType":"ArrayTypeName","src":"12320:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12258:92:1"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"12368:0:1"},"scope":1413,"src":"12239:943:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"13441:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"13459:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1193,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"13468:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13459:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13478:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""},"value":"ERC1155: setting approval status for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""}],"id":1191,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13451:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1197,"nodeType":"ExpressionStatement","src":"13451:71:1"},{"expression":{"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1198,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"13532:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1201,"indexExpression":{"id":1199,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"13551:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13532:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1202,"indexExpression":{"id":1200,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"13558:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13532:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1203,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"13570:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13532:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1205,"nodeType":"ExpressionStatement","src":"13532:46:1"},{"eventCall":{"arguments":[{"id":1207,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"13608:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1208,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"13615:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"13625:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1206,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"13593:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13593:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"EmitStatement","src":"13588:46:1"}]},"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"13188:125:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13327:18:1","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"owner","nameLocation":"13363:5:1","nodeType":"VariableDeclaration","scope":1213,"src":"13355:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"13355:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"operator","nameLocation":"13386:8:1","nodeType":"VariableDeclaration","scope":1213,"src":"13378:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"13378:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"approved","nameLocation":"13409:8:1","nodeType":"VariableDeclaration","scope":1213,"src":"13404:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1187,"name":"bool","nodeType":"ElementaryTypeName","src":"13404:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13345:78:1"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"13441:0:1"},"scope":1413,"src":"13318:323:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1231,"nodeType":"Block","src":"14789:2:1","statements":[]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"13647:925:1","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"14586:20:1","nodeType":"FunctionDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"operator","nameLocation":"14624:8:1","nodeType":"VariableDeclaration","scope":1232,"src":"14616:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"14616:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"from","nameLocation":"14650:4:1","nodeType":"VariableDeclaration","scope":1232,"src":"14642:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"14642:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"to","nameLocation":"14672:2:1","nodeType":"VariableDeclaration","scope":1232,"src":"14664:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"14664:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"ids","nameLocation":"14701:3:1","nodeType":"VariableDeclaration","scope":1232,"src":"14684:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"14684:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1222,"nodeType":"ArrayTypeName","src":"14684:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1226,"mutability":"mutable","name":"amounts","nameLocation":"14731:7:1","nodeType":"VariableDeclaration","scope":1232,"src":"14714:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"14714:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1225,"nodeType":"ArrayTypeName","src":"14714:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"data","nameLocation":"14761:4:1","nodeType":"VariableDeclaration","scope":1232,"src":"14748:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1227,"name":"bytes","nodeType":"ElementaryTypeName","src":"14748:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14606:165:1"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[],"src":"14789:0:1"},"scope":1413,"src":"14577:214:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1250,"nodeType":"Block","src":"15935:2:1","statements":[]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"14797:922:1","text":" @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1251,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"15733:19:1","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"operator","nameLocation":"15770:8:1","nodeType":"VariableDeclaration","scope":1251,"src":"15762:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"15762:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"from","nameLocation":"15796:4:1","nodeType":"VariableDeclaration","scope":1251,"src":"15788:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"15788:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"to","nameLocation":"15818:2:1","nodeType":"VariableDeclaration","scope":1251,"src":"15810:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"15810:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"ids","nameLocation":"15847:3:1","nodeType":"VariableDeclaration","scope":1251,"src":"15830:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"15830:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1241,"nodeType":"ArrayTypeName","src":"15830:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"amounts","nameLocation":"15877:7:1","nodeType":"VariableDeclaration","scope":1251,"src":"15860:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"15860:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1244,"nodeType":"ArrayTypeName","src":"15860:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"data","nameLocation":"15907:4:1","nodeType":"VariableDeclaration","scope":1251,"src":"15894:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"15894:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15752:165:1"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"15935:0:1"},"scope":1413,"src":"15724:213:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"16136:554:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1266,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"16150:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16153:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1947,"src":"16150:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16150:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1312,"nodeType":"IfStatement","src":"16146:538:1","trueBody":{"id":1311,"nodeType":"Block","src":"16167:517:1","statements":[{"clauses":[{"block":{"id":1293,"nodeType":"Block","src":"16295:195:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1282,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"16317:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1283,"name":"IERC1155ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"16329:27:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$","typeString":"type(contract IERC1155ReceiverUpgradeable)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16357:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1435,"src":"16329:45:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155ReceiverUpgradeable.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16375:8:1","memberName":"selector","nodeType":"MemberAccess","src":"16329:54:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"16317:66:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1292,"nodeType":"IfStatement","src":"16313:163:1","trueBody":{"id":1291,"nodeType":"Block","src":"16385:91:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16414:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1287,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16407:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16407:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"ExpressionStatement","src":"16407:50:1"}]}}]},"errorName":"","id":1294,"nodeType":"TryCatchClause","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"response","nameLocation":"16285:8:1","nodeType":"VariableDeclaration","scope":1294,"src":"16278:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1279,"name":"bytes4","nodeType":"ElementaryTypeName","src":"16278:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"16277:17:1"},"src":"16269:221:1"},{"block":{"id":1302,"nodeType":"Block","src":"16525:47:1","statements":[{"expression":{"arguments":[{"id":1299,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"16550:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1298,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16543:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16543:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1301,"nodeType":"ExpressionStatement","src":"16543:14:1"}]},"errorName":"Error","id":1303,"nodeType":"TryCatchClause","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"reason","nameLocation":"16517:6:1","nodeType":"VariableDeclaration","scope":1303,"src":"16503:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1295,"name":"string","nodeType":"ElementaryTypeName","src":"16503:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16502:22:1"},"src":"16491:81:1"},{"block":{"id":1308,"nodeType":"Block","src":"16579:95:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16604:54:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1304,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16597:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16597:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1307,"nodeType":"ExpressionStatement","src":"16597:62:1"}]},"errorName":"","id":1309,"nodeType":"TryCatchClause","src":"16573:101:1"}],"externalCall":{"arguments":[{"id":1273,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"16235:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1274,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"16245:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1275,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"16251:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1276,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"16255:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1277,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"16263:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1270,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"16213:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1269,"name":"IERC1155ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"16185:27:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$","typeString":"type(contract IERC1155ReceiverUpgradeable)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16185:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155ReceiverUpgradeable_$1454","typeString":"contract IERC1155ReceiverUpgradeable"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16217:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1435,"src":"16185:49:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16185:83:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1310,"nodeType":"TryStatement","src":"16181:493:1"}]}}]},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"15952:30:1","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"operator","nameLocation":"16000:8:1","nodeType":"VariableDeclaration","scope":1314,"src":"15992:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"15992:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"from","nameLocation":"16026:4:1","nodeType":"VariableDeclaration","scope":1314,"src":"16018:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"16018:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"to","nameLocation":"16048:2:1","nodeType":"VariableDeclaration","scope":1314,"src":"16040:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"16040:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"id","nameLocation":"16068:2:1","nodeType":"VariableDeclaration","scope":1314,"src":"16060:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"16060:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"amount","nameLocation":"16088:6:1","nodeType":"VariableDeclaration","scope":1314,"src":"16080:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"16080:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"data","nameLocation":"16117:4:1","nodeType":"VariableDeclaration","scope":1314,"src":"16104:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1262,"name":"bytes","nodeType":"ElementaryTypeName","src":"16104:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15982:145:1"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"16136:0:1"},"scope":1413,"src":"15943:747:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1378,"nodeType":"Block","src":"16914:596:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1331,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"16928:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16931:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1947,"src":"16928:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16928:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1377,"nodeType":"IfStatement","src":"16924:580:1","trueBody":{"id":1376,"nodeType":"Block","src":"16945:559:1","statements":[{"clauses":[{"block":{"id":1358,"nodeType":"Block","src":"17110:200:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1347,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"17132:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1348,"name":"IERC1155ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"17144:27:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$","typeString":"type(contract IERC1155ReceiverUpgradeable)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17172:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"17144:50:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155ReceiverUpgradeable.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17195:8:1","memberName":"selector","nodeType":"MemberAccess","src":"17144:59:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"17132:71:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1357,"nodeType":"IfStatement","src":"17128:168:1","trueBody":{"id":1356,"nodeType":"Block","src":"17205:91:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17234:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1352,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"17227:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17227:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1355,"nodeType":"ExpressionStatement","src":"17227:50:1"}]}}]},"errorName":"","id":1359,"nodeType":"TryCatchClause","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"response","nameLocation":"17087:8:1","nodeType":"VariableDeclaration","scope":1359,"src":"17080:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1344,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17080:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"17062:47:1"},"src":"17054:256:1"},{"block":{"id":1367,"nodeType":"Block","src":"17345:47:1","statements":[{"expression":{"arguments":[{"id":1364,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"17370:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1363,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"17363:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17363:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"ExpressionStatement","src":"17363:14:1"}]},"errorName":"Error","id":1368,"nodeType":"TryCatchClause","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"reason","nameLocation":"17337:6:1","nodeType":"VariableDeclaration","scope":1368,"src":"17323:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1360,"name":"string","nodeType":"ElementaryTypeName","src":"17323:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17322:22:1"},"src":"17311:81:1"},{"block":{"id":1373,"nodeType":"Block","src":"17399:95:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17424:54:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1369,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"17417:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17417:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"ExpressionStatement","src":"17417:62:1"}]},"errorName":"","id":1374,"nodeType":"TryCatchClause","src":"17393:101:1"}],"externalCall":{"arguments":[{"id":1338,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"17018:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1339,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"17028:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1340,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"17034:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1341,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"17039:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1342,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"17048:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"16991:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1334,"name":"IERC1155ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"16963:27:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1454_$","typeString":"type(contract IERC1155ReceiverUpgradeable)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16963:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155ReceiverUpgradeable_$1454","typeString":"contract IERC1155ReceiverUpgradeable"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16995:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"16963:54:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16963:90:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1375,"nodeType":"TryStatement","src":"16959:535:1"}]}}]},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"16705:35:1","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"operator","nameLocation":"16758:8:1","nodeType":"VariableDeclaration","scope":1379,"src":"16750:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"16750:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"from","nameLocation":"16784:4:1","nodeType":"VariableDeclaration","scope":1379,"src":"16776:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"16776:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"to","nameLocation":"16806:2:1","nodeType":"VariableDeclaration","scope":1379,"src":"16798:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"16798:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"ids","nameLocation":"16835:3:1","nodeType":"VariableDeclaration","scope":1379,"src":"16818:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"16818:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1322,"nodeType":"ArrayTypeName","src":"16818:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"amounts","nameLocation":"16865:7:1","nodeType":"VariableDeclaration","scope":1379,"src":"16848:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"16848:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1325,"nodeType":"ArrayTypeName","src":"16848:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"data","nameLocation":"16895:4:1","nodeType":"VariableDeclaration","scope":1379,"src":"16882:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1327,"name":"bytes","nodeType":"ElementaryTypeName","src":"16882:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16740:165:1"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[],"src":"16914:0:1"},"scope":1413,"src":"16696:814:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1406,"nodeType":"Block","src":"17600:109:1","statements":[{"assignments":[1391],"declarations":[{"constant":false,"id":1391,"mutability":"mutable","name":"array","nameLocation":"17627:5:1","nodeType":"VariableDeclaration","scope":1406,"src":"17610:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"17610:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1390,"nodeType":"ArrayTypeName","src":"17610:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1397,"initialValue":{"arguments":[{"hexValue":"31","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17649:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17635:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"17639:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1393,"nodeType":"ArrayTypeName","src":"17639:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17635:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17610:41:1"},{"expression":{"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1398,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"17661:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1400,"indexExpression":{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17667:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17661:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1401,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"17672:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17661:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1403,"nodeType":"ExpressionStatement","src":"17661:18:1"},{"expression":{"id":1404,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"17697:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1386,"id":1405,"nodeType":"Return","src":"17690:12:1"}]},"id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArray","nameLocation":"17525:17:1","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"element","nameLocation":"17551:7:1","nodeType":"VariableDeclaration","scope":1407,"src":"17543:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"17543:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17542:17:1"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1407,"src":"17582:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"17582:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1384,"nodeType":"ArrayTypeName","src":"17582:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17581:18:1"},"scope":1413,"src":"17516:193:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"17715:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1412,"mutability":"mutable","name":"__gap","nameLocation":"17994:5:1","nodeType":"VariableDeclaration","scope":1413,"src":"17974:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage","typeString":"uint256[47]"},"typeName":{"baseType":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"17974:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1411,"length":{"hexValue":"3437","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17982:2:1","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"nodeType":"ArrayTypeName","src":"17974:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage_ptr","typeString":"uint256[47]"}},"visibility":"private"}],"scope":1414,"src":"682:17320:1","usedErrors":[]}],"src":"109:17894:1"},"id":1},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol","exportedSymbols":{"IERC1155ReceiverUpgradeable":[1454],"IERC165Upgradeable":[2311]},"id":1455,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1415,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"../../utils/introspection/IERC165Upgradeable.sol","id":1416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1455,"sourceUnit":2312,"src":"143:58:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1418,"name":"IERC165Upgradeable","nameLocations":["284:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":2311,"src":"284:18:2"},"id":1419,"nodeType":"InheritanceSpecifier","src":"284:18:2"}],"canonicalName":"IERC1155ReceiverUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"203:39:2","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":1454,"linearizedBaseContracts":[1454,2311],"name":"IERC1155ReceiverUpgradeable","nameLocation":"253:27:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1420,"nodeType":"StructuredDocumentation","src":"309:826:2","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1435,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1149:17:2","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"operator","nameLocation":"1184:8:2","nodeType":"VariableDeclaration","scope":1435,"src":"1176:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"1176:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"from","nameLocation":"1210:4:2","nodeType":"VariableDeclaration","scope":1435,"src":"1202:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"id","nameLocation":"1232:2:2","nodeType":"VariableDeclaration","scope":1435,"src":"1224:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"value","nameLocation":"1252:5:2","nodeType":"VariableDeclaration","scope":1435,"src":"1244:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1244:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"data","nameLocation":"1282:4:2","nodeType":"VariableDeclaration","scope":1435,"src":"1267:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1429,"name":"bytes","nodeType":"ElementaryTypeName","src":"1267:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1166:126:2"},"returnParameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1435,"src":"1311:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1432,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1311:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1310:8:2"},"scope":1454,"src":"1140:179:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"1325:994:2","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1453,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2333:22:2","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"operator","nameLocation":"2373:8:2","nodeType":"VariableDeclaration","scope":1453,"src":"2365:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"2365:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"from","nameLocation":"2399:4:2","nodeType":"VariableDeclaration","scope":1453,"src":"2391:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"ids","nameLocation":"2432:3:2","nodeType":"VariableDeclaration","scope":1453,"src":"2413:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2413:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1442,"nodeType":"ArrayTypeName","src":"2413:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"values","nameLocation":"2464:6:2","nodeType":"VariableDeclaration","scope":1453,"src":"2445:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1445,"nodeType":"ArrayTypeName","src":"2445:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"data","nameLocation":"2495:4:2","nodeType":"VariableDeclaration","scope":1453,"src":"2480:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1447,"name":"bytes","nodeType":"ElementaryTypeName","src":"2480:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2355:150:2"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"2524:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1450,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2524:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2523:8:2"},"scope":1454,"src":"2324:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1455,"src":"243:2291:2","usedErrors":[]}],"src":"118:2417:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol","exportedSymbols":{"IERC1155Upgradeable":[1576],"IERC165Upgradeable":[2311]},"id":1577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1456,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"../../utils/introspection/IERC165Upgradeable.sol","id":1457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1577,"sourceUnit":2312,"src":"135:58:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1459,"name":"IERC165Upgradeable","nameLocations":["394:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":2311,"src":"394:18:3"},"id":1460,"nodeType":"InheritanceSpecifier","src":"394:18:3"}],"canonicalName":"IERC1155Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"195:165:3","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1576,"linearizedBaseContracts":[1576,2311],"name":"IERC1155Upgradeable","nameLocation":"371:19:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"419:121:3","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1473,"name":"TransferSingle","nameLocation":"551:14:3","nodeType":"EventDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"582:8:3","nodeType":"VariableDeclaration","scope":1473,"src":"566:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1465,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"608:4:3","nodeType":"VariableDeclaration","scope":1473,"src":"592:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"592:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1467,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"630:2:3","nodeType":"VariableDeclaration","scope":1473,"src":"614:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1466,"name":"address","nodeType":"ElementaryTypeName","src":"614:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1469,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"642:2:3","nodeType":"VariableDeclaration","scope":1473,"src":"634:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1471,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"654:5:3","nodeType":"VariableDeclaration","scope":1473,"src":"646:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"565:95:3"},"src":"545:116:3"},{"anonymous":false,"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"667:144:3","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1488,"name":"TransferBatch","nameLocation":"822:13:3","nodeType":"EventDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"861:8:3","nodeType":"VariableDeclaration","scope":1488,"src":"845:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1478,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"895:4:3","nodeType":"VariableDeclaration","scope":1488,"src":"879:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"879:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1480,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"925:2:3","nodeType":"VariableDeclaration","scope":1488,"src":"909:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1479,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1483,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"947:3:3","nodeType":"VariableDeclaration","scope":1488,"src":"937:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1482,"nodeType":"ArrayTypeName","src":"937:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1486,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"970:6:3","nodeType":"VariableDeclaration","scope":1488,"src":"960:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"960:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1485,"nodeType":"ArrayTypeName","src":"960:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"835:147:3"},"src":"816:167:3"},{"anonymous":false,"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"989:147:3","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1497,"name":"ApprovalForAll","nameLocation":"1147:14:3","nodeType":"EventDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1178:7:3","nodeType":"VariableDeclaration","scope":1497,"src":"1162:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"1162:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1493,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1203:8:3","nodeType":"VariableDeclaration","scope":1497,"src":"1187:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1218:8:3","nodeType":"VariableDeclaration","scope":1497,"src":"1213:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1494,"name":"bool","nodeType":"ElementaryTypeName","src":"1213:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1161:66:3"},"src":"1141:87:3"},{"anonymous":false,"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"1234:343:3","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1504,"name":"URI","nameLocation":"1588:3:3","nodeType":"EventDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1599:5:3","nodeType":"VariableDeclaration","scope":1504,"src":"1592:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1499,"name":"string","nodeType":"ElementaryTypeName","src":"1592:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1502,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1622:2:3","nodeType":"VariableDeclaration","scope":1504,"src":"1606:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1606:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1591:34:3"},"src":"1582:44:3"},{"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"1632:173:3","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1514,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1819:9:3","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"account","nameLocation":"1837:7:3","nodeType":"VariableDeclaration","scope":1514,"src":"1829:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"1829:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"id","nameLocation":"1854:2:3","nodeType":"VariableDeclaration","scope":1514,"src":"1846:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1846:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1828:29:3"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1514,"src":"1881:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1880:9:3"},"scope":1576,"src":"1810:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"1896:188:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1527,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2098:14:3","nodeType":"FunctionDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"accounts","nameLocation":"2132:8:3","nodeType":"VariableDeclaration","scope":1527,"src":"2113:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"2113:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1517,"nodeType":"ArrayTypeName","src":"2113:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"ids","nameLocation":"2161:3:3","nodeType":"VariableDeclaration","scope":1527,"src":"2142:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"2142:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1520,"nodeType":"ArrayTypeName","src":"2142:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2112:53:3"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"2213:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2213:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1524,"nodeType":"ArrayTypeName","src":"2213:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2212:18:3"},"scope":1576,"src":"2089:142:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"2237:248:3","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1535,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2499:17:3","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"operator","nameLocation":"2525:8:3","nodeType":"VariableDeclaration","scope":1535,"src":"2517:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"2517:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"approved","nameLocation":"2540:8:3","nodeType":"VariableDeclaration","scope":1535,"src":"2535:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1531,"name":"bool","nodeType":"ElementaryTypeName","src":"2535:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2516:33:3"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[],"src":"2558:0:3"},"scope":1576,"src":"2490:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"2565:135:3","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1545,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2714:16:3","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"account","nameLocation":"2739:7:3","nodeType":"VariableDeclaration","scope":1545,"src":"2731:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"2731:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"operator","nameLocation":"2756:8:3","nodeType":"VariableDeclaration","scope":1545,"src":"2748:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"2748:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2730:35:3"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"2789:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1542,"name":"bool","nodeType":"ElementaryTypeName","src":"2789:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2788:6:3"},"scope":1576,"src":"2705:90:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"2801:556:3","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1559,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3371:16:3","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"from","nameLocation":"3405:4:3","nodeType":"VariableDeclaration","scope":1559,"src":"3397:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"3397:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"to","nameLocation":"3427:2:3","nodeType":"VariableDeclaration","scope":1559,"src":"3419:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"3419:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"id","nameLocation":"3447:2:3","nodeType":"VariableDeclaration","scope":1559,"src":"3439:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"3439:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"amount","nameLocation":"3467:6:3","nodeType":"VariableDeclaration","scope":1559,"src":"3459:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"3459:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"data","nameLocation":"3498:4:3","nodeType":"VariableDeclaration","scope":1559,"src":"3483:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1555,"name":"bytes","nodeType":"ElementaryTypeName","src":"3483:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3387:121:3"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"3517:0:3"},"scope":1576,"src":"3362:156:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"3524:390:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1575,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3928:21:3","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"from","nameLocation":"3967:4:3","nodeType":"VariableDeclaration","scope":1575,"src":"3959:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"3959:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"to","nameLocation":"3989:2:3","nodeType":"VariableDeclaration","scope":1575,"src":"3981:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"ids","nameLocation":"4020:3:3","nodeType":"VariableDeclaration","scope":1575,"src":"4001:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"4001:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1566,"nodeType":"ArrayTypeName","src":"4001:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"amounts","nameLocation":"4052:7:3","nodeType":"VariableDeclaration","scope":1575,"src":"4033:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"4033:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1569,"nodeType":"ArrayTypeName","src":"4033:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"data","nameLocation":"4084:4:3","nodeType":"VariableDeclaration","scope":1575,"src":"4069:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1571,"name":"bytes","nodeType":"ElementaryTypeName","src":"4069:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3949:145:3"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[],"src":"4103:0:3"},"scope":1576,"src":"3919:185:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1577,"src":"361:3745:3","usedErrors":[]}],"src":"110:3997:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2213],"ContextUpgradeable":[2255],"ERC1155SupplyUpgradeable":[1753],"ERC1155Upgradeable":[1413],"ERC165Upgradeable":[2299],"IERC1155MetadataURIUpgradeable":[1768],"IERC1155ReceiverUpgradeable":[1454],"IERC1155Upgradeable":[1576],"IERC165Upgradeable":[2311],"Initializable":[168]},"id":1754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1578,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"126:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"../ERC1155Upgradeable.sol","id":1579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1754,"sourceUnit":1414,"src":"151:35:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1754,"sourceUnit":169,"src":"187:48:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1582,"name":"Initializable","nameLocations":["628:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"628:13:4"},"id":1583,"nodeType":"InheritanceSpecifier","src":"628:13:4"},{"baseName":{"id":1584,"name":"ERC1155Upgradeable","nameLocations":["643:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":1413,"src":"643:18:4"},"id":1585,"nodeType":"InheritanceSpecifier","src":"643:18:4"}],"canonicalName":"ERC1155SupplyUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"237:344:4","text":" @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted."},"fullyImplemented":true,"id":1753,"linearizedBaseContracts":[1753,1413,1768,1576,2299,2311,2255,168],"name":"ERC1155SupplyUpgradeable","nameLocation":"600:24:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1590,"nodeType":"Block","src":"726:7:4","statements":[]},"id":1591,"implemented":true,"kind":"function","modifiers":[{"id":1588,"kind":"modifierInvocation","modifierName":{"id":1587,"name":"onlyInitializing","nameLocations":["709:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"709:16:4"},"nodeType":"ModifierInvocation","src":"709:16:4"}],"name":"__ERC1155Supply_init","nameLocation":"677:20:4","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"697:2:4"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[],"src":"726:0:4"},"scope":1753,"src":"668:65:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"807:7:4","statements":[]},"id":1597,"implemented":true,"kind":"function","modifiers":[{"id":1594,"kind":"modifierInvocation","modifierName":{"id":1593,"name":"onlyInitializing","nameLocations":["790:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"790:16:4"},"nodeType":"ModifierInvocation","src":"790:16:4"}],"name":"__ERC1155Supply_init_unchained","nameLocation":"748:30:4","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[],"src":"778:2:4"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"807:0:4"},"scope":1753,"src":"739:75:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"_totalSupply","nameLocation":"855:12:4","nodeType":"VariableDeclaration","scope":1753,"src":"819:48:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1600,"keyType":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"827:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"819:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1613,"nodeType":"Block","src":"1016:40:4","statements":[{"expression":{"baseExpression":{"id":1609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1033:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1611,"indexExpression":{"id":1610,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1046:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1033:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1608,"id":1612,"nodeType":"Return","src":"1026:23:4"}]},"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"874:66:4","text":" @dev Total amount of tokens in with a given id."},"functionSelector":"bd85b039","id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"954:11:4","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"id","nameLocation":"974:2:4","nodeType":"VariableDeclaration","scope":1614,"src":"966:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"966:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"965:12:4"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"1007:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:9:4"},"scope":1753,"src":"945:111:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1629,"nodeType":"Block","src":"1212:68:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1624,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"1266:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1622,"name":"ERC1155SupplyUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"1229:24:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155SupplyUpgradeable_$1753_$","typeString":"type(contract ERC1155SupplyUpgradeable)"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1254:11:4","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"1229:36:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1229:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1272:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1229:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1621,"id":1628,"nodeType":"Return","src":"1222:51:4"}]},"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"1062:82:4","text":" @dev Indicates whether any token exist with a given id, or not."},"functionSelector":"4f558e79","id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"exists","nameLocation":"1158:6:4","nodeType":"FunctionDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"id","nameLocation":"1173:2:4","nodeType":"VariableDeclaration","scope":1630,"src":"1165:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1165:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1164:12:4"},"returnParameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1630,"src":"1206:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1619,"name":"bool","nodeType":"ElementaryTypeName","src":"1206:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1205:6:4"},"scope":1753,"src":"1149:131:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1232],"body":{"id":1746,"nodeType":"Block","src":"1571:683:4","statements":[{"expression":{"arguments":[{"id":1652,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"1608:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1653,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1618:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1654,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"1624:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1655,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1628:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1656,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1633:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1657,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"1642:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1649,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1581:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155SupplyUpgradeable_$1753_$","typeString":"type(contract super ERC1155SupplyUpgradeable)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1587:20:4","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1232,"src":"1581:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"ExpressionStatement","src":"1581:66:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1660,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1662:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1678:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1670:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1661,"name":"address","nodeType":"ElementaryTypeName","src":"1670:7:4","typeDescriptions":{}}},"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1670:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1690,"nodeType":"IfStatement","src":"1658:156:4","trueBody":{"id":1689,"nodeType":"Block","src":"1682:132:4","statements":[{"body":{"id":1687,"nodeType":"Block","src":"1737:67:4","statements":[{"expression":{"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1677,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1755:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1681,"indexExpression":{"baseExpression":{"id":1678,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1768:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1680,"indexExpression":{"id":1679,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"1772:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1768:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1755:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":1682,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1779:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1684,"indexExpression":{"id":1683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"1787:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1779:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1755:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1686,"nodeType":"ExpressionStatement","src":"1755:34:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"1716:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1671,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1720:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1724:6:4","memberName":"length","nodeType":"MemberAccess","src":"1720:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1716:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1688,"initializationExpression":{"assignments":[1667],"declarations":[{"constant":false,"id":1667,"mutability":"mutable","name":"i","nameLocation":"1709:1:4","nodeType":"VariableDeclaration","scope":1688,"src":"1701:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1701:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1669,"initialValue":{"hexValue":"30","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1701:13:4"},"loopExpression":{"expression":{"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1732:3:4","subExpression":{"id":1674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"1734:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1676,"nodeType":"ExpressionStatement","src":"1732:3:4"},"nodeType":"ForStatement","src":"1696:108:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"1828:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1842:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1834:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"1834:7:4","typeDescriptions":{}}},"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1834:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1828:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1745,"nodeType":"IfStatement","src":"1824:424:4","trueBody":{"id":1744,"nodeType":"Block","src":"1846:402:4","statements":[{"body":{"id":1742,"nodeType":"Block","src":"1901:337:4","statements":[{"assignments":[1709],"declarations":[{"constant":false,"id":1709,"mutability":"mutable","name":"id","nameLocation":"1927:2:4","nodeType":"VariableDeclaration","scope":1742,"src":"1919:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1713,"initialValue":{"baseExpression":{"id":1710,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1932:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1712,"indexExpression":{"id":1711,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1936:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1932:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1919:19:4"},{"assignments":[1715],"declarations":[{"constant":false,"id":1715,"mutability":"mutable","name":"amount","nameLocation":"1964:6:4","nodeType":"VariableDeclaration","scope":1742,"src":"1956:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1719,"initialValue":{"baseExpression":{"id":1716,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1973:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1718,"indexExpression":{"id":1717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1981:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1973:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1956:27:4"},{"assignments":[1721],"declarations":[{"constant":false,"id":1721,"mutability":"mutable","name":"supply","nameLocation":"2009:6:4","nodeType":"VariableDeclaration","scope":1742,"src":"2001:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1725,"initialValue":{"baseExpression":{"id":1722,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"2018:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1724,"indexExpression":{"id":1723,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2031:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2018:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2001:33:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1727,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"2060:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1728,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"2070:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2060:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e74206578636565647320746f74616c537570706c79","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2078:42:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4","typeString":"literal_string \"ERC1155: burn amount exceeds totalSupply\""},"value":"ERC1155: burn amount exceeds totalSupply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4","typeString":"literal_string \"ERC1155: burn amount exceeds totalSupply\""}],"id":1726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2052:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2052:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1732,"nodeType":"ExpressionStatement","src":"2052:69:4"},{"id":1741,"nodeType":"UncheckedBlock","src":"2139:85:4","statements":[{"expression":{"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1733,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"2171:12:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1735,"indexExpression":{"id":1734,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2184:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2171:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1736,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"2190:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1737,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"2199:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2190:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2171:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1740,"nodeType":"ExpressionStatement","src":"2171:34:4"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1701,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1880:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1702,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1884:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1888:6:4","memberName":"length","nodeType":"MemberAccess","src":"1884:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1880:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1743,"initializationExpression":{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"i","nameLocation":"1873:1:4","nodeType":"VariableDeclaration","scope":1743,"src":"1865:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1865:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1700,"initialValue":{"hexValue":"30","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1877:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1865:13:4"},"loopExpression":{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1896:3:4","subExpression":{"id":1705,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1898:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1707,"nodeType":"ExpressionStatement","src":"1896:3:4"},"nodeType":"ForStatement","src":"1860:378:4"}]}}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"1286:59:4","text":" @dev See {ERC1155-_beforeTokenTransfer}."},"id":1747,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1359:20:4","nodeType":"FunctionDefinition","overrides":{"id":1647,"nodeType":"OverrideSpecifier","overrides":[],"src":"1562:8:4"},"parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"operator","nameLocation":"1397:8:4","nodeType":"VariableDeclaration","scope":1747,"src":"1389:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"1389:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"from","nameLocation":"1423:4:4","nodeType":"VariableDeclaration","scope":1747,"src":"1415:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"1415:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"to","nameLocation":"1445:2:4","nodeType":"VariableDeclaration","scope":1747,"src":"1437:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"1437:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"ids","nameLocation":"1474:3:4","nodeType":"VariableDeclaration","scope":1747,"src":"1457:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1457:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1639,"nodeType":"ArrayTypeName","src":"1457:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"amounts","nameLocation":"1504:7:4","nodeType":"VariableDeclaration","scope":1747,"src":"1487:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1487:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1642,"nodeType":"ArrayTypeName","src":"1487:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"data","nameLocation":"1534:4:4","nodeType":"VariableDeclaration","scope":1747,"src":"1521:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1644,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1379:165:4"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[],"src":"1571:0:4"},"scope":1753,"src":"1350:904:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"2260:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1752,"mutability":"mutable","name":"__gap","nameLocation":"2539:5:4","nodeType":"VariableDeclaration","scope":1753,"src":"2519:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2519:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"length":{"hexValue":"3439","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2527:2:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2519:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1754,"src":"582:1965:4","usedErrors":[]}],"src":"126:2422:4"},"id":4},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol","exportedSymbols":{"IERC1155MetadataURIUpgradeable":[1768],"IERC1155Upgradeable":[1576],"IERC165Upgradeable":[2311]},"id":1769,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1755,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"117:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol","file":"../IERC1155Upgradeable.sol","id":1756,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1769,"sourceUnit":1577,"src":"142:36:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1758,"name":"IERC1155Upgradeable","nameLocations":["419:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1576,"src":"419:19:5"},"id":1759,"nodeType":"InheritanceSpecifier","src":"419:19:5"}],"canonicalName":"IERC1155MetadataURIUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"180:194:5","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1768,"linearizedBaseContracts":[1768,1576,2311],"name":"IERC1155MetadataURIUpgradeable","nameLocation":"385:30:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"445:192:5","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1767,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"651:3:5","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"id","nameLocation":"663:2:5","nodeType":"VariableDeclaration","scope":1767,"src":"655:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:12:5"},"returnParameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"690:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1764,"name":"string","nodeType":"ElementaryTypeName","src":"690:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"689:15:5"},"scope":1768,"src":"642:63:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1769,"src":"375:332:5","usedErrors":[]}],"src":"117:591:5"},"id":5},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol","exportedSymbols":{"IERC721ReceiverUpgradeable":[1786]},"id":1787,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1770,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721ReceiverUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1771,"nodeType":"StructuredDocumentation","src":"141:152:6","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1786,"linearizedBaseContracts":[1786],"name":"IERC721ReceiverUpgradeable","nameLocation":"304:26:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"337:493:6","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1785,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"844:16:6","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"operator","nameLocation":"878:8:6","nodeType":"VariableDeclaration","scope":1785,"src":"870:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"from","nameLocation":"904:4:6","nodeType":"VariableDeclaration","scope":1785,"src":"896:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"tokenId","nameLocation":"926:7:6","nodeType":"VariableDeclaration","scope":1785,"src":"918:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"data","nameLocation":"958:4:6","nodeType":"VariableDeclaration","scope":1785,"src":"943:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1779,"name":"bytes","nodeType":"ElementaryTypeName","src":"943:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"860:108:6"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1785,"src":"987:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1782,"name":"bytes4","nodeType":"ElementaryTypeName","src":"987:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"986:8:6"},"scope":1786,"src":"835:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1787,"src":"294:703:6","usedErrors":[]}],"src":"116:882:6"},"id":6},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[2311],"IERC721Upgradeable":[1902]},"id":1903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1788,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"../../utils/introspection/IERC165Upgradeable.sol","id":1789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1903,"sourceUnit":2312,"src":"133:58:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1791,"name":"IERC165Upgradeable","nameLocations":["293:18:7"],"nodeType":"IdentifierPath","referencedDeclaration":2311,"src":"293:18:7"},"id":1792,"nodeType":"InheritanceSpecifier","src":"293:18:7"}],"canonicalName":"IERC721Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"193:67:7","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1902,"linearizedBaseContracts":[1902,2311],"name":"IERC721Upgradeable","nameLocation":"271:18:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"318:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1801,"name":"Transfer","nameLocation":"417:8:7","nodeType":"EventDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"442:4:7","nodeType":"VariableDeclaration","scope":1801,"src":"426:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1797,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"464:2:7","nodeType":"VariableDeclaration","scope":1801,"src":"448:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1799,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"484:7:7","nodeType":"VariableDeclaration","scope":1801,"src":"468:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:67:7"},"src":"411:82:7"},{"anonymous":false,"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"499:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1810,"name":"Approval","nameLocation":"604:8:7","nodeType":"EventDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"629:5:7","nodeType":"VariableDeclaration","scope":1810,"src":"613:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"613:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1806,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"652:8:7","nodeType":"VariableDeclaration","scope":1810,"src":"636:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"678:7:7","nodeType":"VariableDeclaration","scope":1810,"src":"662:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"612:74:7"},"src":"598:89:7"},{"anonymous":false,"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"693:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1819,"name":"ApprovalForAll","nameLocation":"821:14:7","nodeType":"EventDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"852:5:7","nodeType":"VariableDeclaration","scope":1819,"src":"836:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1815,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"875:8:7","nodeType":"VariableDeclaration","scope":1819,"src":"859:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"890:8:7","nodeType":"VariableDeclaration","scope":1819,"src":"885:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1816,"name":"bool","nodeType":"ElementaryTypeName","src":"885:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"835:64:7"},"src":"815:85:7"},{"documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"906:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1827,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"996:9:7","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"owner","nameLocation":"1014:5:7","nodeType":"VariableDeclaration","scope":1827,"src":"1006:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1005:15:7"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"balance","nameLocation":"1052:7:7","nodeType":"VariableDeclaration","scope":1827,"src":"1044:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1043:17:7"},"scope":1902,"src":"987:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"1067:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1835,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1212:7:7","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"tokenId","nameLocation":"1228:7:7","nodeType":"VariableDeclaration","scope":1835,"src":"1220:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1219:17:7"},"returnParameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"owner","nameLocation":"1268:5:7","nodeType":"VariableDeclaration","scope":1835,"src":"1260:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1832,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1259:15:7"},"scope":1902,"src":"1203:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"1281:556:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1847,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1851:16:7","nodeType":"FunctionDefinition","parameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"from","nameLocation":"1885:4:7","nodeType":"VariableDeclaration","scope":1847,"src":"1877:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"1877:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"to","nameLocation":"1907:2:7","nodeType":"VariableDeclaration","scope":1847,"src":"1899:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1839,"name":"address","nodeType":"ElementaryTypeName","src":"1899:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"tokenId","nameLocation":"1927:7:7","nodeType":"VariableDeclaration","scope":1847,"src":"1919:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"data","nameLocation":"1959:4:7","nodeType":"VariableDeclaration","scope":1847,"src":"1944:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1843,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1867:102:7"},"returnParameters":{"id":1846,"nodeType":"ParameterList","parameters":[],"src":"1978:0:7"},"scope":1902,"src":"1842:137:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"1985:687:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1857,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2686:16:7","nodeType":"FunctionDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"from","nameLocation":"2720:4:7","nodeType":"VariableDeclaration","scope":1857,"src":"2712:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"to","nameLocation":"2742:2:7","nodeType":"VariableDeclaration","scope":1857,"src":"2734:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"tokenId","nameLocation":"2762:7:7","nodeType":"VariableDeclaration","scope":1857,"src":"2754:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"2754:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2702:73:7"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[],"src":"2784:0:7"},"scope":1902,"src":"2677:108:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"2791:732:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1867,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3537:12:7","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"from","nameLocation":"3567:4:7","nodeType":"VariableDeclaration","scope":1867,"src":"3559:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"3559:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1862,"mutability":"mutable","name":"to","nameLocation":"3589:2:7","nodeType":"VariableDeclaration","scope":1867,"src":"3581:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"3581:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"tokenId","nameLocation":"3609:7:7","nodeType":"VariableDeclaration","scope":1867,"src":"3601:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"3601:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3549:73:7"},"returnParameters":{"id":1866,"nodeType":"ParameterList","parameters":[],"src":"3631:0:7"},"scope":1902,"src":"3528:104:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"3638:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1875,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4104:7:7","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"to","nameLocation":"4120:2:7","nodeType":"VariableDeclaration","scope":1875,"src":"4112:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"4112:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"tokenId","nameLocation":"4132:7:7","nodeType":"VariableDeclaration","scope":1875,"src":"4124:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4111:29:7"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[],"src":"4149:0:7"},"scope":1902,"src":"4095:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"4156:309:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1883,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4479:17:7","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"operator","nameLocation":"4505:8:7","nodeType":"VariableDeclaration","scope":1883,"src":"4497:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"_approved","nameLocation":"4520:9:7","nodeType":"VariableDeclaration","scope":1883,"src":"4515:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1879,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4496:34:7"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"4539:0:7"},"scope":1902,"src":"4470:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1884,"nodeType":"StructuredDocumentation","src":"4546:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1891,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4699:11:7","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"tokenId","nameLocation":"4719:7:7","nodeType":"VariableDeclaration","scope":1891,"src":"4711:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"4711:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4710:17:7"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"operator","nameLocation":"4759:8:7","nodeType":"VariableDeclaration","scope":1891,"src":"4751:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"4751:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4750:18:7"},"scope":1902,"src":"4690:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"4775:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1901,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4927:16:7","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"owner","nameLocation":"4952:5:7","nodeType":"VariableDeclaration","scope":1901,"src":"4944:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"4944:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"operator","nameLocation":"4967:8:7","nodeType":"VariableDeclaration","scope":1901,"src":"4959:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"4959:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4943:33:7"},"returnParameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"5000:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1898,"name":"bool","nodeType":"ElementaryTypeName","src":"5000:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4999:6:7"},"scope":1902,"src":"4918:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1903,"src":"261:4747:7","usedErrors":[]}],"src":"108:4901:7"},"id":7},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[2311],"IERC721MetadataUpgradeable":[1929],"IERC721Upgradeable":[1902]},"id":1930,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1904,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","file":"../IERC721Upgradeable.sol","id":1905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1930,"sourceUnit":1903,"src":"137:35:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1907,"name":"IERC721Upgradeable","nameLocations":["348:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"348:18:8"},"id":1908,"nodeType":"InheritanceSpecifier","src":"348:18:8"}],"canonicalName":"IERC721MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"174:133:8","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1929,"linearizedBaseContracts":[1929,1902,2311],"name":"IERC721MetadataUpgradeable","nameLocation":"318:26:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"373:58:8","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1914,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"445:4:8","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[],"src":"449:2:8"},"returnParameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1914,"src":"475:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1911,"name":"string","nodeType":"ElementaryTypeName","src":"475:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"474:15:8"},"scope":1929,"src":"436:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"496:60:8","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1920,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"570:6:8","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[],"src":"576:2:8"},"returnParameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"602:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1917,"name":"string","nodeType":"ElementaryTypeName","src":"602:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"601:15:8"},"scope":1929,"src":"561:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"623:90:8","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1928,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"727:8:8","nodeType":"FunctionDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"tokenId","nameLocation":"744:7:8","nodeType":"VariableDeclaration","scope":1928,"src":"736:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"736:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"735:17:8"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1928,"src":"776:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1925,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"775:15:8"},"scope":1929,"src":"718:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1930,"src":"308:485:8","usedErrors":[]}],"src":"112:682:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2213]},"id":2214,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1931,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1932,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2213,"linearizedBaseContracts":[2213],"name":"AddressUpgradeable","nameLocation":"202:18:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1946,"nodeType":"Block","src":"1252:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1940,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1476:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1484:4:9","memberName":"code","nodeType":"MemberAccess","src":"1476:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1489:6:9","memberName":"length","nodeType":"MemberAccess","src":"1476:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1939,"id":1945,"nodeType":"Return","src":"1469:30:9"}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"227:954:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1947,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:9","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"account","nameLocation":"1214:7:9","nodeType":"VariableDeclaration","scope":1947,"src":"1206:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1934,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:9"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"1246:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1937,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:9"},"scope":2213,"src":"1186:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"2494:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1958,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2213","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2213","typeString":"library AddressUpgradeable"}],"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:9","typeDescriptions":{}}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2526:7:9","memberName":"balance","nodeType":"MemberAccess","src":"2512:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1961,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"2537:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1955,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"ExpressionStatement","src":"2504:73:9"},{"assignments":[1967,null],"declarations":[{"constant":false,"id":1967,"mutability":"mutable","name":"success","nameLocation":"2594:7:9","nodeType":"VariableDeclaration","scope":1980,"src":"2589:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1966,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1974,"initialValue":{"arguments":[{"hexValue":"","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1968,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2607:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2617:4:9","memberName":"call","nodeType":"MemberAccess","src":"2607:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1970,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"2629:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:9"},{"expression":{"arguments":[{"id":1976,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"2658:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1975,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1979,"nodeType":"ExpressionStatement","src":"2650:78:9"}]},"documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"1512:906:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:9","nodeType":"FunctionDefinition","parameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:9","nodeType":"VariableDeclaration","scope":1981,"src":"2442:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"amount","nameLocation":"2477:6:9","nodeType":"VariableDeclaration","scope":1981,"src":"2469:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:9"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"2494:0:9"},"scope":2213,"src":"2423:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1998,"nodeType":"Block","src":"3566:96:9","statements":[{"expression":{"arguments":[{"id":1992,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"3605:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1993,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"3613:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3619:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3622:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1991,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2039,2083],"referencedDeclaration":2083,"src":"3583:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1990,"id":1997,"nodeType":"Return","src":"3576:79:9"}]},"documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"2741:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:9","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"target","nameLocation":"3507:6:9","nodeType":"VariableDeclaration","scope":1999,"src":"3499:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"data","nameLocation":"3528:4:9","nodeType":"VariableDeclaration","scope":1999,"src":"3515:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1985,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:9"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1999,"src":"3552:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1988,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:9"},"scope":2213,"src":"3477:185:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2018,"nodeType":"Block","src":"4031:76:9","statements":[{"expression":{"arguments":[{"id":2012,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"4070:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2013,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"4078:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4084:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2015,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"4087:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2011,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2039,2083],"referencedDeclaration":2083,"src":"4048:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4048:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2010,"id":2017,"nodeType":"Return","src":"4041:59:9"}]},"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"3668:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2019,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3893:12:9","nodeType":"FunctionDefinition","parameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"target","nameLocation":"3923:6:9","nodeType":"VariableDeclaration","scope":2019,"src":"3915:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"3915:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"data","nameLocation":"3952:4:9","nodeType":"VariableDeclaration","scope":2019,"src":"3939:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2003,"name":"bytes","nodeType":"ElementaryTypeName","src":"3939:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"errorMessage","nameLocation":"3980:12:9","nodeType":"VariableDeclaration","scope":2019,"src":"3966:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2005,"name":"string","nodeType":"ElementaryTypeName","src":"3966:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3905:93:9"},"returnParameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2019,"src":"4017:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2008,"name":"bytes","nodeType":"ElementaryTypeName","src":"4017:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4016:14:9"},"scope":2213,"src":"3884:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2038,"nodeType":"Block","src":"4612:111:9","statements":[{"expression":{"arguments":[{"id":2032,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"4651:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2033,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"4659:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"4665:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2031,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2039,2083],"referencedDeclaration":2083,"src":"4629:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4629:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2030,"id":2037,"nodeType":"Return","src":"4622:94:9"}]},"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"4113:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2039,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4478:21:9","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"target","nameLocation":"4517:6:9","nodeType":"VariableDeclaration","scope":2039,"src":"4509:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"4509:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"data","nameLocation":"4546:4:9","nodeType":"VariableDeclaration","scope":2039,"src":"4533:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2023,"name":"bytes","nodeType":"ElementaryTypeName","src":"4533:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"value","nameLocation":"4568:5:9","nodeType":"VariableDeclaration","scope":2039,"src":"4560:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"4560:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:80:9"},"returnParameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2039,"src":"4598:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2028,"name":"bytes","nodeType":"ElementaryTypeName","src":"4598:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4597:14:9"},"scope":2213,"src":"4469:254:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2082,"nodeType":"Block","src":"5150:267:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2056,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5176:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2213","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2213","typeString":"library AddressUpgradeable"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5168:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2054,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:9","typeDescriptions":{}}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5168:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5182:7:9","memberName":"balance","nodeType":"MemberAccess","src":"5168:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"5193:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5200:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2053,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5160:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2063,"nodeType":"ExpressionStatement","src":"5160:81:9"},{"assignments":[2065,2067],"declarations":[{"constant":false,"id":2065,"mutability":"mutable","name":"success","nameLocation":"5257:7:9","nodeType":"VariableDeclaration","scope":2082,"src":"5252:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2064,"name":"bool","nodeType":"ElementaryTypeName","src":"5252:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"returndata","nameLocation":"5279:10:9","nodeType":"VariableDeclaration","scope":2082,"src":"5266:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2066,"name":"bytes","nodeType":"ElementaryTypeName","src":"5266:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2074,"initialValue":{"arguments":[{"id":2072,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"5319:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2068,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"5293:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5300:4:9","memberName":"call","nodeType":"MemberAccess","src":"5293:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"5312:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5293:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5293:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5251:73:9"},{"expression":{"arguments":[{"id":2076,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"5368:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2077,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"5376:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2078,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"5385:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2079,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"5397:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2075,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"5341:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2052,"id":2081,"nodeType":"Return","src":"5334:76:9"}]},"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"4729:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2083,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4980:21:9","nodeType":"FunctionDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"target","nameLocation":"5019:6:9","nodeType":"VariableDeclaration","scope":2083,"src":"5011:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2041,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2044,"mutability":"mutable","name":"data","nameLocation":"5048:4:9","nodeType":"VariableDeclaration","scope":2083,"src":"5035:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2043,"name":"bytes","nodeType":"ElementaryTypeName","src":"5035:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"value","nameLocation":"5070:5:9","nodeType":"VariableDeclaration","scope":2083,"src":"5062:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"5062:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"errorMessage","nameLocation":"5099:12:9","nodeType":"VariableDeclaration","scope":2083,"src":"5085:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2047,"name":"string","nodeType":"ElementaryTypeName","src":"5085:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5001:116:9"},"returnParameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2083,"src":"5136:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2050,"name":"bytes","nodeType":"ElementaryTypeName","src":"5136:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5135:14:9"},"scope":2213,"src":"4971:446:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2099,"nodeType":"Block","src":"5694:97:9","statements":[{"expression":{"arguments":[{"id":2094,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"5730:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2095,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"5738:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5744:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2093,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2100,2129],"referencedDeclaration":2129,"src":"5711:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5711:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2092,"id":2098,"nodeType":"Return","src":"5704:80:9"}]},"documentation":{"id":2084,"nodeType":"StructuredDocumentation","src":"5423:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2100,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5603:18:9","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"target","nameLocation":"5630:6:9","nodeType":"VariableDeclaration","scope":2100,"src":"5622:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"5622:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"data","nameLocation":"5651:4:9","nodeType":"VariableDeclaration","scope":2100,"src":"5638:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2087,"name":"bytes","nodeType":"ElementaryTypeName","src":"5638:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5621:35:9"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2100,"src":"5680:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2090,"name":"bytes","nodeType":"ElementaryTypeName","src":"5680:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5679:14:9"},"scope":2213,"src":"5594:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2128,"nodeType":"Block","src":"6133:168:9","statements":[{"assignments":[2113,2115],"declarations":[{"constant":false,"id":2113,"mutability":"mutable","name":"success","nameLocation":"6149:7:9","nodeType":"VariableDeclaration","scope":2128,"src":"6144:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2112,"name":"bool","nodeType":"ElementaryTypeName","src":"6144:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2115,"mutability":"mutable","name":"returndata","nameLocation":"6171:10:9","nodeType":"VariableDeclaration","scope":2128,"src":"6158:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2114,"name":"bytes","nodeType":"ElementaryTypeName","src":"6158:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2120,"initialValue":{"arguments":[{"id":2118,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"6203:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2116,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"6185:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6192:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"6185:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6185:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6143:65:9"},{"expression":{"arguments":[{"id":2122,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"6252:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2123,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"6260:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2124,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"6269:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2125,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"6281:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2121,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6225:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2111,"id":2127,"nodeType":"Return","src":"6218:76:9"}]},"documentation":{"id":2101,"nodeType":"StructuredDocumentation","src":"5797:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2129,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5984:18:9","nodeType":"FunctionDefinition","parameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"target","nameLocation":"6020:6:9","nodeType":"VariableDeclaration","scope":2129,"src":"6012:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2102,"name":"address","nodeType":"ElementaryTypeName","src":"6012:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2105,"mutability":"mutable","name":"data","nameLocation":"6049:4:9","nodeType":"VariableDeclaration","scope":2129,"src":"6036:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2104,"name":"bytes","nodeType":"ElementaryTypeName","src":"6036:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2107,"mutability":"mutable","name":"errorMessage","nameLocation":"6077:12:9","nodeType":"VariableDeclaration","scope":2129,"src":"6063:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2106,"name":"string","nodeType":"ElementaryTypeName","src":"6063:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6002:93:9"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2129,"src":"6119:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2109,"name":"bytes","nodeType":"ElementaryTypeName","src":"6119:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6118:14:9"},"scope":2213,"src":"5975:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2167,"nodeType":"Block","src":"6783:434:9","statements":[{"condition":{"id":2143,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"6797:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2165,"nodeType":"Block","src":"7153:58:9","statements":[{"expression":{"arguments":[{"id":2161,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"7175:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2162,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"7187:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2160,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7167:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7167:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2164,"nodeType":"ExpressionStatement","src":"7167:33:9"}]},"id":2166,"nodeType":"IfStatement","src":"6793:418:9","trueBody":{"id":2159,"nodeType":"Block","src":"6806:341:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2144,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"6824:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6835:6:9","memberName":"length","nodeType":"MemberAccess","src":"6824:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6845:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6824:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2156,"nodeType":"IfStatement","src":"6820:286:9","trueBody":{"id":2155,"nodeType":"Block","src":"6848:258:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2150,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"7050:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2149,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"7039:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7059:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7031:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7031:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2154,"nodeType":"ExpressionStatement","src":"7031:60:9"}]}},{"expression":{"id":2157,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"7126:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2142,"id":2158,"nodeType":"Return","src":"7119:17:9"}]}}]},"documentation":{"id":2130,"nodeType":"StructuredDocumentation","src":"6307:277:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2168,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"6598:26:9","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"target","nameLocation":"6642:6:9","nodeType":"VariableDeclaration","scope":2168,"src":"6634:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2131,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"success","nameLocation":"6663:7:9","nodeType":"VariableDeclaration","scope":2168,"src":"6658:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2133,"name":"bool","nodeType":"ElementaryTypeName","src":"6658:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2136,"mutability":"mutable","name":"returndata","nameLocation":"6693:10:9","nodeType":"VariableDeclaration","scope":2168,"src":"6680:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2135,"name":"bytes","nodeType":"ElementaryTypeName","src":"6680:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2138,"mutability":"mutable","name":"errorMessage","nameLocation":"6727:12:9","nodeType":"VariableDeclaration","scope":2168,"src":"6713:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2137,"name":"string","nodeType":"ElementaryTypeName","src":"6713:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6624:121:9"},"returnParameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2168,"src":"6769:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2140,"name":"bytes","nodeType":"ElementaryTypeName","src":"6769:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6768:14:9"},"scope":2213,"src":"6589:628:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2191,"nodeType":"Block","src":"7598:135:9","statements":[{"condition":{"id":2180,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"7612:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2189,"nodeType":"Block","src":"7669:58:9","statements":[{"expression":{"arguments":[{"id":2185,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"7691:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2186,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"7703:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2184,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7683:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2188,"nodeType":"ExpressionStatement","src":"7683:33:9"}]},"id":2190,"nodeType":"IfStatement","src":"7608:119:9","trueBody":{"id":2183,"nodeType":"Block","src":"7621:42:9","statements":[{"expression":{"id":2181,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"7642:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2179,"id":2182,"nodeType":"Return","src":"7635:17:9"}]}}]},"documentation":{"id":2169,"nodeType":"StructuredDocumentation","src":"7223:210:9","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2192,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7447:16:9","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"success","nameLocation":"7478:7:9","nodeType":"VariableDeclaration","scope":2192,"src":"7473:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2170,"name":"bool","nodeType":"ElementaryTypeName","src":"7473:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2173,"mutability":"mutable","name":"returndata","nameLocation":"7508:10:9","nodeType":"VariableDeclaration","scope":2192,"src":"7495:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2172,"name":"bytes","nodeType":"ElementaryTypeName","src":"7495:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2175,"mutability":"mutable","name":"errorMessage","nameLocation":"7542:12:9","nodeType":"VariableDeclaration","scope":2192,"src":"7528:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2174,"name":"string","nodeType":"ElementaryTypeName","src":"7528:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:97:9"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2192,"src":"7584:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2177,"name":"bytes","nodeType":"ElementaryTypeName","src":"7584:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:14:9"},"scope":2213,"src":"7438:295:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2211,"nodeType":"Block","src":"7822:457:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2199,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"7898:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7909:6:9","memberName":"length","nodeType":"MemberAccess","src":"7898:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7918:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7898:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2209,"nodeType":"Block","src":"8228:45:9","statements":[{"expression":{"arguments":[{"id":2206,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"8249:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2205,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8242:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8242:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"ExpressionStatement","src":"8242:20:9"}]},"id":2210,"nodeType":"IfStatement","src":"7894:379:9","trueBody":{"id":2204,"nodeType":"Block","src":"7921:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8079:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8097:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8126:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8120:5:9"},"nodeType":"YulFunctionCall","src":"8120:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8101:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8165:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8169:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8161:3:9"},"nodeType":"YulFunctionCall","src":"8161:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8182:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8154:6:9"},"nodeType":"YulFunctionCall","src":"8154:44:9"},"nodeType":"YulExpressionStatement","src":"8154:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2194,"isOffset":false,"isSlot":false,"src":"8126:10:9","valueSize":1},{"declaration":2194,"isOffset":false,"isSlot":false,"src":"8169:10:9","valueSize":1}],"id":2203,"nodeType":"InlineAssembly","src":"8070:142:9"}]}}]},"id":2212,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"7748:7:9","nodeType":"FunctionDefinition","parameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"returndata","nameLocation":"7769:10:9","nodeType":"VariableDeclaration","scope":2212,"src":"7756:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2193,"name":"bytes","nodeType":"ElementaryTypeName","src":"7756:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2196,"mutability":"mutable","name":"errorMessage","nameLocation":"7795:12:9","nodeType":"VariableDeclaration","scope":2212,"src":"7781:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2195,"name":"string","nodeType":"ElementaryTypeName","src":"7781:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7755:53:9"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[],"src":"7822:0:9"},"scope":2213,"src":"7739:540:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2214,"src":"194:8087:9","usedErrors":[]}],"src":"101:8181:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2213],"ContextUpgradeable":[2255],"Initializable":[168]},"id":2256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2215,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2256,"sourceUnit":169,"src":"110:42:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2218,"name":"Initializable","nameLocations":["691:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"691:13:10"},"id":2219,"nodeType":"InheritanceSpecifier","src":"691:13:10"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"154:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2255,"linearizedBaseContracts":[2255,168],"name":"ContextUpgradeable","nameLocation":"669:18:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2224,"nodeType":"Block","src":"763:7:10","statements":[]},"id":2225,"implemented":true,"kind":"function","modifiers":[{"id":2222,"kind":"modifierInvocation","modifierName":{"id":2221,"name":"onlyInitializing","nameLocations":["746:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"746:16:10"},"nodeType":"ModifierInvocation","src":"746:16:10"}],"name":"__Context_init","nameLocation":"720:14:10","nodeType":"FunctionDefinition","parameters":{"id":2220,"nodeType":"ParameterList","parameters":[],"src":"734:2:10"},"returnParameters":{"id":2223,"nodeType":"ParameterList","parameters":[],"src":"763:0:10"},"scope":2255,"src":"711:59:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2230,"nodeType":"Block","src":"838:7:10","statements":[]},"id":2231,"implemented":true,"kind":"function","modifiers":[{"id":2228,"kind":"modifierInvocation","modifierName":{"id":2227,"name":"onlyInitializing","nameLocations":["821:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"821:16:10"},"nodeType":"ModifierInvocation","src":"821:16:10"}],"name":"__Context_init_unchained","nameLocation":"785:24:10","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[],"src":"809:2:10"},"returnParameters":{"id":2229,"nodeType":"ParameterList","parameters":[],"src":"838:0:10"},"scope":2255,"src":"776:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2239,"nodeType":"Block","src":"912:34:10","statements":[{"expression":{"expression":{"id":2236,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:10","memberName":"sender","nodeType":"MemberAccess","src":"929:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2235,"id":2238,"nodeType":"Return","src":"922:17:10"}]},"id":2240,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:10","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[],"src":"869:2:10"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"903:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:10"},"scope":2255,"src":"850:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2248,"nodeType":"Block","src":"1019:32:10","statements":[{"expression":{"expression":{"id":2245,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:10","memberName":"data","nodeType":"MemberAccess","src":"1036:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2244,"id":2247,"nodeType":"Return","src":"1029:15:10"}]},"id":2249,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:10","nodeType":"FunctionDefinition","parameters":{"id":2241,"nodeType":"ParameterList","parameters":[],"src":"969:2:10"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2249,"src":"1003:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2242,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:10"},"scope":2255,"src":"952:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2250,"nodeType":"StructuredDocumentation","src":"1057:254:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2254,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:10","nodeType":"VariableDeclaration","scope":2255,"src":"1316:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2253,"length":{"hexValue":"3530","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2256,"src":"651:693:10","usedErrors":[]}],"src":"86:1259:10"},"id":10},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2213],"ERC165Upgradeable":[2299],"IERC165Upgradeable":[2311],"Initializable":[168]},"id":2300,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2257,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","id":2258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2300,"sourceUnit":2312,"src":"124:34:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2300,"sourceUnit":169,"src":"159:45:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2261,"name":"Initializable","nameLocations":["822:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"822:13:11"},"id":2262,"nodeType":"InheritanceSpecifier","src":"822:13:11"},{"baseName":{"id":2263,"name":"IERC165Upgradeable","nameLocations":["837:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":2311,"src":"837:18:11"},"id":2264,"nodeType":"InheritanceSpecifier","src":"837:18:11"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2260,"nodeType":"StructuredDocumentation","src":"206:576:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2299,"linearizedBaseContracts":[2299,2311,168],"name":"ERC165Upgradeable","nameLocation":"801:17:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2269,"nodeType":"Block","src":"913:7:11","statements":[]},"id":2270,"implemented":true,"kind":"function","modifiers":[{"id":2267,"kind":"modifierInvocation","modifierName":{"id":2266,"name":"onlyInitializing","nameLocations":["896:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"896:16:11"},"nodeType":"ModifierInvocation","src":"896:16:11"}],"name":"__ERC165_init","nameLocation":"871:13:11","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[],"src":"884:2:11"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[],"src":"913:0:11"},"scope":2299,"src":"862:58:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2275,"nodeType":"Block","src":"987:7:11","statements":[]},"id":2276,"implemented":true,"kind":"function","modifiers":[{"id":2273,"kind":"modifierInvocation","modifierName":{"id":2272,"name":"onlyInitializing","nameLocations":["970:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"970:16:11"},"nodeType":"ModifierInvocation","src":"970:16:11"}],"name":"__ERC165_init_unchained","nameLocation":"935:23:11","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[],"src":"958:2:11"},"returnParameters":{"id":2274,"nodeType":"ParameterList","parameters":[],"src":"987:0:11"},"scope":2299,"src":"926:68:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2310],"body":{"id":2292,"nodeType":"Block","src":"1151:75:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"1168:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2287,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"1188:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$2311_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$2311_$","typeString":"type(contract IERC165Upgradeable)"}],"id":2286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1183:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$2311","typeString":"type(contract IERC165Upgradeable)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1208:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"1183:36:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1168:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2284,"id":2291,"nodeType":"Return","src":"1161:58:11"}]},"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"999:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2293,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1069:17:11","nodeType":"FunctionDefinition","overrides":{"id":2281,"nodeType":"OverrideSpecifier","overrides":[],"src":"1127:8:11"},"parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"interfaceId","nameLocation":"1094:11:11","nodeType":"VariableDeclaration","scope":2293,"src":"1087:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2278,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1087:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1086:20:11"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2293,"src":"1145:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2282,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:11"},"scope":2299,"src":"1060:166:11","stateMutability":"view","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"1232:254:11","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2298,"mutability":"mutable","name":"__gap","nameLocation":"1511:5:11","nodeType":"VariableDeclaration","scope":2299,"src":"1491:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2297,"length":{"hexValue":"3530","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1499:2:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1491:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2300,"src":"783:736:11","usedErrors":[]}],"src":"99:1421:11"},"id":11},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[2311]},"id":2312,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2301,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"125:279:12","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2311,"linearizedBaseContracts":[2311],"name":"IERC165Upgradeable","nameLocation":"415:18:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"440:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2310,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:12","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:12","nodeType":"VariableDeclaration","scope":2310,"src":"812:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2304,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:12"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2310,"src":"855:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2307,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:12"},"scope":2311,"src":"785:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2312,"src":"405:458:12","usedErrors":[]}],"src":"100:764:12"},"id":12},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2776],"Ownable":[2424]},"id":2425,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2313,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2314,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2425,"sourceUnit":2777,"src":"127:30:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2316,"name":"Context","nameLocations":["683:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2776,"src":"683:7:13"},"id":2317,"nodeType":"InheritanceSpecifier","src":"683:7:13"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"159:494:13","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2424,"linearizedBaseContracts":[2424,2776],"name":"Ownable","nameLocation":"672:7:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2319,"mutability":"mutable","name":"_owner","nameLocation":"713:6:13","nodeType":"VariableDeclaration","scope":2424,"src":"697:22:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2318,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2325,"name":"OwnershipTransferred","nameLocation":"732:20:13","nodeType":"EventDefinition","parameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:13","nodeType":"VariableDeclaration","scope":2325,"src":"753:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2320,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2323,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:13","nodeType":"VariableDeclaration","scope":2325,"src":"784:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:13"},"src":"726:84:13"},{"body":{"id":2334,"nodeType":"Block","src":"926:49:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2330,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"955:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2329,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"936:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2333,"nodeType":"ExpressionStatement","src":"936:32:13"}]},"documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"816:91:13","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":2335,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[],"src":"923:2:13"},"returnParameters":{"id":2328,"nodeType":"ParameterList","parameters":[],"src":"926:0:13"},"scope":2424,"src":"912:63:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2342,"nodeType":"Block","src":"1084:41:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2338,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"1094:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2340,"nodeType":"ExpressionStatement","src":"1094:13:13"},{"id":2341,"nodeType":"PlaceholderStatement","src":"1117:1:13"}]},"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"981:77:13","text":" @dev Throws if called by any account other than the owner."},"id":2343,"name":"onlyOwner","nameLocation":"1072:9:13","nodeType":"ModifierDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[],"src":"1081:2:13"},"src":"1063:62:13","virtual":false,"visibility":"internal"},{"body":{"id":2351,"nodeType":"Block","src":"1256:30:13","statements":[{"expression":{"id":2349,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"1273:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2348,"id":2350,"nodeType":"Return","src":"1266:13:13"}]},"documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"1131:65:13","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2352,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:13","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[],"src":"1215:2:13"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2352,"src":"1247:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:13"},"scope":2424,"src":"1201:85:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2365,"nodeType":"Block","src":"1404:85:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2357,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"1422:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2359,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"1433:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":2356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2364,"nodeType":"ExpressionStatement","src":"1414:68:13"}]},"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"1292:62:13","text":" @dev Throws if the sender is not the owner."},"id":2366,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:13","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[],"src":"1379:2:13"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[],"src":"1404:0:13"},"scope":2424,"src":"1359:130:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2379,"nodeType":"Block","src":"1885:47:13","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2373,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:13","typeDescriptions":{}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2372,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"1895:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2378,"nodeType":"ExpressionStatement","src":"1895:30:13"}]},"documentation":{"id":2367,"nodeType":"StructuredDocumentation","src":"1495:331:13","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2380,"implemented":true,"kind":"function","modifiers":[{"id":2370,"kind":"modifierInvocation","modifierName":{"id":2369,"name":"onlyOwner","nameLocations":["1875:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2343,"src":"1875:9:13"},"nodeType":"ModifierInvocation","src":"1875:9:13"}],"name":"renounceOwnership","nameLocation":"1840:17:13","nodeType":"FunctionDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[],"src":"1857:2:13"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[],"src":"1885:0:13"},"scope":2424,"src":"1831:101:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2402,"nodeType":"Block","src":"2151:128:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2389,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"2169:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2390,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:13","typeDescriptions":{}}},"id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":2388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2397,"nodeType":"ExpressionStatement","src":"2161:73:13"},{"expression":{"arguments":[{"id":2399,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"2263:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2398,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"2244:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2401,"nodeType":"ExpressionStatement","src":"2244:28:13"}]},"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"1938:138:13","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2403,"implemented":true,"kind":"function","modifiers":[{"id":2386,"kind":"modifierInvocation","modifierName":{"id":2385,"name":"onlyOwner","nameLocations":["2141:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2343,"src":"2141:9:13"},"nodeType":"ModifierInvocation","src":"2141:9:13"}],"name":"transferOwnership","nameLocation":"2090:17:13","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:13","nodeType":"VariableDeclaration","scope":2403,"src":"2108:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:13"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[],"src":"2151:0:13"},"scope":2424,"src":"2081:198:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2422,"nodeType":"Block","src":"2496:124:13","statements":[{"assignments":[2410],"declarations":[{"constant":false,"id":2410,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:13","nodeType":"VariableDeclaration","scope":2422,"src":"2506:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2409,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2412,"initialValue":{"id":2411,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"2525:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:13"},{"expression":{"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2413,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"2541:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2414,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"2550:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2416,"nodeType":"ExpressionStatement","src":"2541:17:13"},{"eventCall":{"arguments":[{"id":2418,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"2594:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2419,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"2604:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2417,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2573:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2421,"nodeType":"EmitStatement","src":"2568:45:13"}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"2285:143:13","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2423,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:13","nodeType":"FunctionDefinition","parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:13","nodeType":"VariableDeclaration","scope":2423,"src":"2461:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2405,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:13"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[],"src":"2496:0:13"},"scope":2424,"src":"2433:187:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2425,"src":"654:1968:13","usedErrors":[]}],"src":"102:2521:13"},"id":13},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2754]},"id":2755,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2426,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"126:67:14","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2754,"linearizedBaseContracts":[2754],"name":"Address","nameLocation":"202:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2441,"nodeType":"Block","src":"1241:254:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2435,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"1465:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:14","memberName":"code","nodeType":"MemberAccess","src":"1465:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:14","memberName":"length","nodeType":"MemberAccess","src":"1465:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2434,"id":2440,"nodeType":"Return","src":"1458:30:14"}]},"documentation":{"id":2428,"nodeType":"StructuredDocumentation","src":"216:954:14","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2442,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:14","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"account","nameLocation":"1203:7:14","nodeType":"VariableDeclaration","scope":2442,"src":"1195:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2429,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:14"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2442,"src":"1235:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2432,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:14"},"scope":2754,"src":"1175:320:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2475,"nodeType":"Block","src":"2483:241:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2453,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}],"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:14","typeDescriptions":{}}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:14","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2456,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"2526:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2460,"nodeType":"ExpressionStatement","src":"2493:73:14"},{"assignments":[2462,null],"declarations":[{"constant":false,"id":2462,"mutability":"mutable","name":"success","nameLocation":"2583:7:14","nodeType":"VariableDeclaration","scope":2475,"src":"2578:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2461,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2469,"initialValue":{"arguments":[{"hexValue":"","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2463,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"2596:9:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:14","memberName":"call","nodeType":"MemberAccess","src":"2596:14:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2465,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"2618:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:14"},{"expression":{"arguments":[{"id":2471,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"2647:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2474,"nodeType":"ExpressionStatement","src":"2639:78:14"}]},"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"1501:906:14","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2476,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:14","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:14","nodeType":"VariableDeclaration","scope":2476,"src":"2431:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"amount","nameLocation":"2466:6:14","nodeType":"VariableDeclaration","scope":2476,"src":"2458:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:14"},"returnParameters":{"id":2449,"nodeType":"ParameterList","parameters":[],"src":"2483:0:14"},"scope":2754,"src":"2412:312:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2493,"nodeType":"Block","src":"3555:96:14","statements":[{"expression":{"arguments":[{"id":2487,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"3594:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2488,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"3602:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2486,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2534,2578],"referencedDeclaration":2578,"src":"3572:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2485,"id":2492,"nodeType":"Return","src":"3565:79:14"}]},"documentation":{"id":2477,"nodeType":"StructuredDocumentation","src":"2730:731:14","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2494,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:14","nodeType":"FunctionDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"target","nameLocation":"3496:6:14","nodeType":"VariableDeclaration","scope":2494,"src":"3488:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2478,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"data","nameLocation":"3517:4:14","nodeType":"VariableDeclaration","scope":2494,"src":"3504:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2480,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:14"},"returnParameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2494,"src":"3541:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2483,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:14"},"scope":2754,"src":"3466:185:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2513,"nodeType":"Block","src":"4020:76:14","statements":[{"expression":{"arguments":[{"id":2507,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"4059:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2508,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"4067:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2510,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"4076:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2506,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2534,2578],"referencedDeclaration":2578,"src":"4037:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2505,"id":2512,"nodeType":"Return","src":"4030:59:14"}]},"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"3657:211:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2514,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:14","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"target","nameLocation":"3912:6:14","nodeType":"VariableDeclaration","scope":2514,"src":"3904:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2496,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"data","nameLocation":"3941:4:14","nodeType":"VariableDeclaration","scope":2514,"src":"3928:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2498,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:14","nodeType":"VariableDeclaration","scope":2514,"src":"3955:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2500,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:14"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2514,"src":"4006:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2503,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:14"},"scope":2754,"src":"3873:223:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2533,"nodeType":"Block","src":"4601:111:14","statements":[{"expression":{"arguments":[{"id":2527,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"4640:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2528,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4648:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"4654:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2526,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2534,2578],"referencedDeclaration":2578,"src":"4618:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2525,"id":2532,"nodeType":"Return","src":"4611:94:14"}]},"documentation":{"id":2515,"nodeType":"StructuredDocumentation","src":"4102:351:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2534,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:14","nodeType":"FunctionDefinition","parameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"target","nameLocation":"4506:6:14","nodeType":"VariableDeclaration","scope":2534,"src":"4498:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2516,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"data","nameLocation":"4535:4:14","nodeType":"VariableDeclaration","scope":2534,"src":"4522:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2518,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2521,"mutability":"mutable","name":"value","nameLocation":"4557:5:14","nodeType":"VariableDeclaration","scope":2534,"src":"4549:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:14"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2534,"src":"4587:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2523,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:14"},"scope":2754,"src":"4458:254:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2577,"nodeType":"Block","src":"5139:267:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2551,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}],"id":2550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:14","typeDescriptions":{}}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:14","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"5182:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2558,"nodeType":"ExpressionStatement","src":"5149:81:14"},{"assignments":[2560,2562],"declarations":[{"constant":false,"id":2560,"mutability":"mutable","name":"success","nameLocation":"5246:7:14","nodeType":"VariableDeclaration","scope":2577,"src":"5241:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2559,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:14","nodeType":"VariableDeclaration","scope":2577,"src":"5255:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2561,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2569,"initialValue":{"arguments":[{"id":2567,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"5308:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2563,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"5282:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:14","memberName":"call","nodeType":"MemberAccess","src":"5282:11:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"5301:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:14"},{"expression":{"arguments":[{"id":2571,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"5357:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2572,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"5365:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2573,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"5374:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2574,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"5386:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2570,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"5330:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2547,"id":2576,"nodeType":"Return","src":"5323:76:14"}]},"documentation":{"id":2535,"nodeType":"StructuredDocumentation","src":"4718:237:14","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2578,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:14","nodeType":"FunctionDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"target","nameLocation":"5008:6:14","nodeType":"VariableDeclaration","scope":2578,"src":"5000:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2539,"mutability":"mutable","name":"data","nameLocation":"5037:4:14","nodeType":"VariableDeclaration","scope":2578,"src":"5024:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2538,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2541,"mutability":"mutable","name":"value","nameLocation":"5059:5:14","nodeType":"VariableDeclaration","scope":2578,"src":"5051:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2540,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:14","nodeType":"VariableDeclaration","scope":2578,"src":"5074:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2542,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:14"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2578,"src":"5125:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2545,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:14"},"scope":2754,"src":"4960:446:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2594,"nodeType":"Block","src":"5683:97:14","statements":[{"expression":{"arguments":[{"id":2589,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"5719:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2590,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"5727:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2588,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2595,2624],"referencedDeclaration":2624,"src":"5700:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2587,"id":2593,"nodeType":"Return","src":"5693:80:14"}]},"documentation":{"id":2579,"nodeType":"StructuredDocumentation","src":"5412:166:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2595,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:14","nodeType":"FunctionDefinition","parameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"target","nameLocation":"5619:6:14","nodeType":"VariableDeclaration","scope":2595,"src":"5611:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2580,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2583,"mutability":"mutable","name":"data","nameLocation":"5640:4:14","nodeType":"VariableDeclaration","scope":2595,"src":"5627:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2582,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:14"},"returnParameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2595,"src":"5669:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2585,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:14"},"scope":2754,"src":"5583:197:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2623,"nodeType":"Block","src":"6122:168:14","statements":[{"assignments":[2608,2610],"declarations":[{"constant":false,"id":2608,"mutability":"mutable","name":"success","nameLocation":"6138:7:14","nodeType":"VariableDeclaration","scope":2623,"src":"6133:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2607,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2610,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:14","nodeType":"VariableDeclaration","scope":2623,"src":"6147:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2609,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2615,"initialValue":{"arguments":[{"id":2613,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6192:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2611,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"6174:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:14","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:14","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:14"},{"expression":{"arguments":[{"id":2617,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"6241:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2618,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"6249:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2619,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"6258:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2620,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"6270:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2616,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"6214:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2606,"id":2622,"nodeType":"Return","src":"6207:76:14"}]},"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"5786:173:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2624,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:14","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"target","nameLocation":"6009:6:14","nodeType":"VariableDeclaration","scope":2624,"src":"6001:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2597,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"data","nameLocation":"6038:4:14","nodeType":"VariableDeclaration","scope":2624,"src":"6025:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2599,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:14","nodeType":"VariableDeclaration","scope":2624,"src":"6052:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2601,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:14"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2624,"src":"6108:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2604,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:14"},"scope":2754,"src":"5964:326:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2640,"nodeType":"Block","src":"6566:101:14","statements":[{"expression":{"arguments":[{"id":2635,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"6604:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2636,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"6612:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2634,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2641,2670],"referencedDeclaration":2670,"src":"6583:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2633,"id":2639,"nodeType":"Return","src":"6576:84:14"}]},"documentation":{"id":2625,"nodeType":"StructuredDocumentation","src":"6296:168:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2641,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:14","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"target","nameLocation":"6507:6:14","nodeType":"VariableDeclaration","scope":2641,"src":"6499:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2629,"mutability":"mutable","name":"data","nameLocation":"6528:4:14","nodeType":"VariableDeclaration","scope":2641,"src":"6515:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2628,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:14"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2641,"src":"6552:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2631,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:14"},"scope":2754,"src":"6469:198:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2669,"nodeType":"Block","src":"7008:170:14","statements":[{"assignments":[2654,2656],"declarations":[{"constant":false,"id":2654,"mutability":"mutable","name":"success","nameLocation":"7024:7:14","nodeType":"VariableDeclaration","scope":2669,"src":"7019:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2653,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:14","nodeType":"VariableDeclaration","scope":2669,"src":"7033:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2655,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2661,"initialValue":{"arguments":[{"id":2659,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"7080:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2657,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"7060:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:14","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:14","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:14"},{"expression":{"arguments":[{"id":2663,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"7129:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2664,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"7137:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2665,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"7146:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2666,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"7158:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2662,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"7102:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2652,"id":2668,"nodeType":"Return","src":"7095:76:14"}]},"documentation":{"id":2642,"nodeType":"StructuredDocumentation","src":"6673:175:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2670,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:14","nodeType":"FunctionDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"target","nameLocation":"6900:6:14","nodeType":"VariableDeclaration","scope":2670,"src":"6892:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2643,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2646,"mutability":"mutable","name":"data","nameLocation":"6929:4:14","nodeType":"VariableDeclaration","scope":2670,"src":"6916:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2645,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:14","nodeType":"VariableDeclaration","scope":2670,"src":"6943:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2647,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:14"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2670,"src":"6994:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2650,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:14"},"scope":2754,"src":"6853:325:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"7660:434:14","statements":[{"condition":{"id":2684,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"7674:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2706,"nodeType":"Block","src":"8030:58:14","statements":[{"expression":{"arguments":[{"id":2702,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"8052:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2703,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"8064:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2701,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"8044:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2705,"nodeType":"ExpressionStatement","src":"8044:33:14"}]},"id":2707,"nodeType":"IfStatement","src":"7670:418:14","trueBody":{"id":2700,"nodeType":"Block","src":"7683:341:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2685,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"7701:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:14","memberName":"length","nodeType":"MemberAccess","src":"7701:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2697,"nodeType":"IfStatement","src":"7697:286:14","trueBody":{"id":2696,"nodeType":"Block","src":"7725:258:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2691,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"7927:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2690,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"7916:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2695,"nodeType":"ExpressionStatement","src":"7908:60:14"}]}},{"expression":{"id":2698,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"8003:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2683,"id":2699,"nodeType":"Return","src":"7996:17:14"}]}}]},"documentation":{"id":2671,"nodeType":"StructuredDocumentation","src":"7184:277:14","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:14","nodeType":"FunctionDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"target","nameLocation":"7519:6:14","nodeType":"VariableDeclaration","scope":2709,"src":"7511:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2672,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"success","nameLocation":"7540:7:14","nodeType":"VariableDeclaration","scope":2709,"src":"7535:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2674,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:14","nodeType":"VariableDeclaration","scope":2709,"src":"7557:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2676,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2679,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:14","nodeType":"VariableDeclaration","scope":2709,"src":"7590:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2678,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:14"},"returnParameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"7646:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2681,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:14"},"scope":2754,"src":"7466:628:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2732,"nodeType":"Block","src":"8475:135:14","statements":[{"condition":{"id":2721,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"8489:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2730,"nodeType":"Block","src":"8546:58:14","statements":[{"expression":{"arguments":[{"id":2726,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"8568:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2727,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"8580:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2725,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"8560:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2729,"nodeType":"ExpressionStatement","src":"8560:33:14"}]},"id":2731,"nodeType":"IfStatement","src":"8485:119:14","trueBody":{"id":2724,"nodeType":"Block","src":"8498:42:14","statements":[{"expression":{"id":2722,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"8519:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2720,"id":2723,"nodeType":"Return","src":"8512:17:14"}]}}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"8100:210:14","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2733,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:14","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"success","nameLocation":"8355:7:14","nodeType":"VariableDeclaration","scope":2733,"src":"8350:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2711,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:14","nodeType":"VariableDeclaration","scope":2733,"src":"8372:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2713,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:14","nodeType":"VariableDeclaration","scope":2733,"src":"8405:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2715,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:14"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2733,"src":"8461:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2718,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:14"},"scope":2754,"src":"8315:295:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2752,"nodeType":"Block","src":"8699:457:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2740,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"8775:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:14","memberName":"length","nodeType":"MemberAccess","src":"8775:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2750,"nodeType":"Block","src":"9105:45:14","statements":[{"expression":{"arguments":[{"id":2747,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9126:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2746,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2749,"nodeType":"ExpressionStatement","src":"9119:20:14"}]},"id":2751,"nodeType":"IfStatement","src":"8771:379:14","trueBody":{"id":2745,"nodeType":"Block","src":"8798:301:14","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:14","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:14"},"nodeType":"YulFunctionCall","src":"8997:17:14"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:14","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:14"},"nodeType":"YulFunctionCall","src":"9038:19:14"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:14"},"nodeType":"YulFunctionCall","src":"9031:44:14"},"nodeType":"YulExpressionStatement","src":"9031:44:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2735,"isOffset":false,"isSlot":false,"src":"9003:10:14","valueSize":1},{"declaration":2735,"isOffset":false,"isSlot":false,"src":"9046:10:14","valueSize":1}],"id":2744,"nodeType":"InlineAssembly","src":"8947:142:14"}]}}]},"id":2753,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:14","nodeType":"FunctionDefinition","parameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:14","nodeType":"VariableDeclaration","scope":2753,"src":"8633:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2734,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2737,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:14","nodeType":"VariableDeclaration","scope":2753,"src":"8658:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2736,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:14"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[],"src":"8699:0:14"},"scope":2754,"src":"8616:540:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2755,"src":"194:8964:14","usedErrors":[]}],"src":"101:9058:14"},"id":14},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2776]},"id":2777,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2756,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:15"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2757,"nodeType":"StructuredDocumentation","src":"111:496:15","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2776,"linearizedBaseContracts":[2776],"name":"Context","nameLocation":"626:7:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2765,"nodeType":"Block","src":"702:34:15","statements":[{"expression":{"expression":{"id":2762,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:15","memberName":"sender","nodeType":"MemberAccess","src":"719:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2761,"id":2764,"nodeType":"Return","src":"712:17:15"}]},"id":2766,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:15","nodeType":"FunctionDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[],"src":"659:2:15"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2766,"src":"693:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:15"},"scope":2776,"src":"640:96:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2774,"nodeType":"Block","src":"809:32:15","statements":[{"expression":{"expression":{"id":2771,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:15","memberName":"data","nodeType":"MemberAccess","src":"826:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2770,"id":2773,"nodeType":"Return","src":"819:15:15"}]},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:15","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[],"src":"759:2:15"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"793:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2768,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:15"},"scope":2776,"src":"742:99:15","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2777,"src":"608:235:15","usedErrors":[]}],"src":"86:758:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3816],"Strings":[2951]},"id":2952,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2778,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2779,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2952,"sourceUnit":3817,"src":"126:25:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2780,"nodeType":"StructuredDocumentation","src":"153:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":2951,"linearizedBaseContracts":[2951],"name":"Strings","nameLocation":"196:7:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2783,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:16","nodeType":"VariableDeclaration","scope":2951,"src":"210:54:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2781,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2786,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:16","nodeType":"VariableDeclaration","scope":2951,"src":"270:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2784,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2833,"nodeType":"Block","src":"486:625:16","statements":[{"id":2832,"nodeType":"UncheckedBlock","src":"496:609:16","statements":[{"assignments":[2795],"declarations":[{"constant":false,"id":2795,"mutability":"mutable","name":"length","nameLocation":"528:6:16","nodeType":"VariableDeclaration","scope":2832,"src":"520:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2802,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"548:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2796,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"537:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3816_$","typeString":"type(library Math)"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"542:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3653,"src":"537:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"537:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:16"},{"assignments":[2804],"declarations":[{"constant":false,"id":2804,"mutability":"mutable","name":"buffer","nameLocation":"586:6:16","nodeType":"VariableDeclaration","scope":2832,"src":"572:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2803,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2809,"initialValue":{"arguments":[{"id":2807,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"606:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2805,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:16"},{"assignments":[2811],"declarations":[{"constant":false,"id":2811,"mutability":"mutable","name":"ptr","nameLocation":"635:3:16","nodeType":"VariableDeclaration","scope":2832,"src":"627:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2812,"nodeType":"VariableDeclarationStatement","src":"627:11:16"},{"AST":{"nodeType":"YulBlock","src":"708:67:16","statements":[{"nodeType":"YulAssignment","src":"726:35:16","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:16","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:16"},"nodeType":"YulFunctionCall","src":"745:15:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:16"},"nodeType":"YulFunctionCall","src":"733:28:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2804,"isOffset":false,"isSlot":false,"src":"737:6:16","valueSize":1},{"declaration":2795,"isOffset":false,"isSlot":false,"src":"753:6:16","valueSize":1},{"declaration":2811,"isOffset":false,"isSlot":false,"src":"726:3:16","valueSize":1}],"id":2813,"nodeType":"InlineAssembly","src":"699:76:16"},{"body":{"id":2828,"nodeType":"Block","src":"801:267:16","statements":[{"expression":{"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:16","subExpression":{"id":2815,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"819:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2817,"nodeType":"ExpressionStatement","src":"819:5:16"},{"AST":{"nodeType":"YulBlock","src":"902:84:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:16"},"nodeType":"YulFunctionCall","src":"942:14:16"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:16"},"nodeType":"YulFunctionCall","src":"937:30:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:16"},"nodeType":"YulFunctionCall","src":"924:44:16"},"nodeType":"YulExpressionStatement","src":"924:44:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2783,"isOffset":false,"isSlot":false,"src":"958:8:16","valueSize":1},{"declaration":2811,"isOffset":false,"isSlot":false,"src":"932:3:16","valueSize":1},{"declaration":2789,"isOffset":false,"isSlot":false,"src":"946:5:16","valueSize":1}],"id":2818,"nodeType":"InlineAssembly","src":"893:93:16"},{"expression":{"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"1003:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2822,"nodeType":"ExpressionStatement","src":"1003:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"1036:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2827,"nodeType":"IfStatement","src":"1032:21:16","trueBody":{"id":2826,"nodeType":"Break","src":"1048:5:16"}}]},"condition":{"hexValue":"74727565","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2829,"nodeType":"WhileStatement","src":"788:280:16"},{"expression":{"id":2830,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"1088:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2793,"id":2831,"nodeType":"Return","src":"1081:13:16"}]}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"320:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2834,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:16","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"value","nameLocation":"441:5:16","nodeType":"VariableDeclaration","scope":2834,"src":"433:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:16"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2834,"src":"471:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2791,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:16"},"scope":2951,"src":"415:696:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2853,"nodeType":"Block","src":"1290:100:16","statements":[{"id":2852,"nodeType":"UncheckedBlock","src":"1300:84:16","statements":[{"expression":{"arguments":[{"id":2843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1343:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1362:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2844,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"1350:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3816_$","typeString":"type(library Math)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1355:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3776,"src":"1350:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2842,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2854,2930,2950],"referencedDeclaration":2930,"src":"1331:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1331:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2841,"id":2851,"nodeType":"Return","src":"1324:49:16"}]}]},"documentation":{"id":2835,"nodeType":"StructuredDocumentation","src":"1117:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2854,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:16","nodeType":"FunctionDefinition","parameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"value","nameLocation":"1245:5:16","nodeType":"VariableDeclaration","scope":2854,"src":"1237:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:16"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2854,"src":"1275:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2839,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:16"},"scope":2951,"src":"1216:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2929,"nodeType":"Block","src":"1603:347:16","statements":[{"assignments":[2865],"declarations":[{"constant":false,"id":2865,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:16","nodeType":"VariableDeclaration","scope":2929,"src":"1613:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2864,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2874,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2869,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"1649:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2866,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:16"},{"expression":{"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2875,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"1670:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2877,"indexExpression":{"hexValue":"30","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2880,"nodeType":"ExpressionStatement","src":"1670:15:16"},{"expression":{"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2881,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"1695:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2883,"indexExpression":{"hexValue":"31","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2886,"nodeType":"ExpressionStatement","src":"1695:15:16"},{"body":{"id":2915,"nodeType":"Block","src":"1765:83:16","statements":[{"expression":{"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2901,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"1779:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2903,"indexExpression":{"id":2902,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"1786:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2904,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"1791:8:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2908,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"1800:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2910,"nodeType":"ExpressionStatement","src":"1779:33:16"},{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"1826:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2914,"nodeType":"ExpressionStatement","src":"1826:11:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"1753:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2916,"initializationExpression":{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"i","nameLocation":"1733:1:16","nodeType":"VariableDeclaration","scope":2916,"src":"1725:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2894,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2890,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"1741:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:16"},"loopExpression":{"expression":{"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:16","subExpression":{"id":2898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"1762:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2900,"nodeType":"ExpressionStatement","src":"1760:3:16"},"nodeType":"ForStatement","src":"1720:128:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"1865:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2917,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2923,"nodeType":"ExpressionStatement","src":"1857:55:16"},{"expression":{"arguments":[{"id":2926,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"1936:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2924,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:16","typeDescriptions":{}}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2863,"id":2928,"nodeType":"Return","src":"1922:21:16"}]},"documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"1396:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2930,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:16","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"value","nameLocation":"1542:5:16","nodeType":"VariableDeclaration","scope":2930,"src":"1534:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"length","nameLocation":"1557:6:16","nodeType":"VariableDeclaration","scope":2930,"src":"1549:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:16"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2930,"src":"1588:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2861,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:16"},"scope":2951,"src":"1513:437:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2949,"nodeType":"Block","src":"2175:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2943,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"2220:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2941,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:16","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:16","typeDescriptions":{}}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2946,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"2228:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2938,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2854,2930,2950],"referencedDeclaration":2930,"src":"2192:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2937,"id":2948,"nodeType":"Return","src":"2185:59:16"}]},"documentation":{"id":2931,"nodeType":"StructuredDocumentation","src":"1956:141:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2950,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:16","nodeType":"FunctionDefinition","parameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"addr","nameLocation":"2131:4:16","nodeType":"VariableDeclaration","scope":2950,"src":"2123:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2932,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:16"},"returnParameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2950,"src":"2160:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2935,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:16"},"scope":2951,"src":"2102:149:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2952,"src":"188:2065:16","usedErrors":[]}],"src":"101:2153:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3816]},"id":3817,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2953,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"128:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3816,"linearizedBaseContracts":[3816],"name":"Math","nameLocation":"210:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2958,"members":[{"id":2955,"name":"Down","nameLocation":"245:4:17","nodeType":"EnumValue","src":"245:4:17"},{"id":2956,"name":"Up","nameLocation":"287:2:17","nodeType":"EnumValue","src":"287:2:17"},{"id":2957,"name":"Zero","nameLocation":"318:4:17","nodeType":"EnumValue","src":"318:4:17"}],"name":"Rounding","nameLocation":"226:8:17","nodeType":"EnumDefinition","src":"221:122:17"},{"body":{"id":2975,"nodeType":"Block","src":"480:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"497:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"501:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2972,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"509:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:17","trueExpression":{"id":2971,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"505:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2967,"id":2974,"nodeType":"Return","src":"490:20:17"}]},"documentation":{"id":2959,"nodeType":"StructuredDocumentation","src":"349:59:17","text":" @dev Returns the largest of two numbers."},"id":2976,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:17","nodeType":"FunctionDefinition","parameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"a","nameLocation":"434:1:17","nodeType":"VariableDeclaration","scope":2976,"src":"426:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2963,"mutability":"mutable","name":"b","nameLocation":"445:1:17","nodeType":"VariableDeclaration","scope":2976,"src":"437:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:17"},"returnParameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2976,"src":"471:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:17"},"scope":3816,"src":"413:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2993,"nodeType":"Block","src":"655:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"672:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2987,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"676:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"684:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:17","trueExpression":{"id":2989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"680:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2985,"id":2992,"nodeType":"Return","src":"665:20:17"}]},"documentation":{"id":2977,"nodeType":"StructuredDocumentation","src":"523:60:17","text":" @dev Returns the smallest of two numbers."},"id":2994,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:17","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"a","nameLocation":"609:1:17","nodeType":"VariableDeclaration","scope":2994,"src":"601:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"b","nameLocation":"620:1:17","nodeType":"VariableDeclaration","scope":2994,"src":"612:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2980,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:17"},"returnParameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2994,"src":"646:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:17"},"scope":3816,"src":"588:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3016,"nodeType":"Block","src":"876:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"931:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3005,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"935:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"941:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3009,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"945:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3003,"id":3015,"nodeType":"Return","src":"923:28:17"}]},"documentation":{"id":2995,"nodeType":"StructuredDocumentation","src":"698:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3017,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:17","nodeType":"FunctionDefinition","parameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"a","nameLocation":"830:1:17","nodeType":"VariableDeclaration","scope":3017,"src":"822:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"b","nameLocation":"841:1:17","nodeType":"VariableDeclaration","scope":3017,"src":"833:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:17"},"returnParameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3017,"src":"867:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:17"},"scope":3816,"src":"805:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3041,"nodeType":"Block","src":"1228:123:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"1316:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"1330:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3035,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"1339:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:17","trueExpression":{"hexValue":"30","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3026,"id":3040,"nodeType":"Return","src":"1309:35:17"}]},"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"964:188:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3042,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:17","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"a","nameLocation":"1182:1:17","nodeType":"VariableDeclaration","scope":3042,"src":"1174:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"b","nameLocation":"1193:1:17","nodeType":"VariableDeclaration","scope":3042,"src":"1185:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:17"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3042,"src":"1219:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:17"},"scope":3816,"src":"1157:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3163,"nodeType":"Block","src":"1795:3797:17","statements":[{"id":3162,"nodeType":"UncheckedBlock","src":"1805:3781:17","statements":[{"assignments":[3055],"declarations":[{"constant":false,"id":3055,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:17","nodeType":"VariableDeclaration","scope":3162,"src":"2126:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3056,"nodeType":"VariableDeclarationStatement","src":"2126:13:17"},{"assignments":[3058],"declarations":[{"constant":false,"id":3058,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:17","nodeType":"VariableDeclaration","scope":3162,"src":"2198:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3059,"nodeType":"VariableDeclarationStatement","src":"2198:13:17"},{"AST":{"nodeType":"YulBlock","src":"2278:157:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:17"},"nodeType":"YulFunctionCall","src":"2319:6:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:17"},"nodeType":"YulFunctionCall","src":"2306:20:17"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:17","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:17"},"nodeType":"YulFunctionCall","src":"2352:9:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:17"}]},{"nodeType":"YulAssignment","src":"2378:43:17","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:17"},"nodeType":"YulFunctionCall","src":"2391:14:17"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:17"},"nodeType":"YulFunctionCall","src":"2407:13:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:17"},"nodeType":"YulFunctionCall","src":"2387:34:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3055,"isOffset":false,"isSlot":false,"src":"2343:5:17","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"2399:5:17","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"2414:5:17","valueSize":1},{"declaration":3058,"isOffset":false,"isSlot":false,"src":"2378:5:17","valueSize":1},{"declaration":3045,"isOffset":false,"isSlot":false,"src":"2313:1:17","valueSize":1},{"declaration":3045,"isOffset":false,"isSlot":false,"src":"2356:1:17","valueSize":1},{"declaration":3047,"isOffset":false,"isSlot":false,"src":"2316:1:17","valueSize":1},{"declaration":3047,"isOffset":false,"isSlot":false,"src":"2359:1:17","valueSize":1}],"id":3060,"nodeType":"InlineAssembly","src":"2269:166:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3061,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"2516:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3069,"nodeType":"IfStatement","src":"2512:75:17","trueBody":{"id":3068,"nodeType":"Block","src":"2528:59:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2553:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3065,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"2561:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3053,"id":3067,"nodeType":"Return","src":"2546:26:17"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3071,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"2697:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3072,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"2711:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3075,"nodeType":"ExpressionStatement","src":"2689:28:17"},{"assignments":[3077],"declarations":[{"constant":false,"id":3077,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:17","nodeType":"VariableDeclaration","scope":3162,"src":"2973:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3078,"nodeType":"VariableDeclarationStatement","src":"2973:17:17"},{"AST":{"nodeType":"YulBlock","src":"3013:291:17","statements":[{"nodeType":"YulAssignment","src":"3082:38:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:17"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:17"},"nodeType":"YulFunctionCall","src":"3095:25:17"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:17"}]},{"nodeType":"YulAssignment","src":"3202:41:17","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:17"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:17"},"nodeType":"YulFunctionCall","src":"3222:20:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:17"},"nodeType":"YulFunctionCall","src":"3211:32:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:17"}]},{"nodeType":"YulAssignment","src":"3260:30:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:17"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:17"},"nodeType":"YulFunctionCall","src":"3269:21:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3049,"isOffset":false,"isSlot":false,"src":"3108:11:17","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"3236:5:17","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"3260:5:17","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"3273:5:17","valueSize":1},{"declaration":3058,"isOffset":false,"isSlot":false,"src":"3202:5:17","valueSize":1},{"declaration":3058,"isOffset":false,"isSlot":false,"src":"3215:5:17","valueSize":1},{"declaration":3077,"isOffset":false,"isSlot":false,"src":"3082:9:17","valueSize":1},{"declaration":3077,"isOffset":false,"isSlot":false,"src":"3225:9:17","valueSize":1},{"declaration":3077,"isOffset":false,"isSlot":false,"src":"3280:9:17","valueSize":1},{"declaration":3045,"isOffset":false,"isSlot":false,"src":"3102:1:17","valueSize":1},{"declaration":3047,"isOffset":false,"isSlot":false,"src":"3105:1:17","valueSize":1}],"id":3079,"nodeType":"InlineAssembly","src":"3004:300:17"},{"assignments":[3081],"declarations":[{"constant":false,"id":3081,"mutability":"mutable","name":"twos","nameLocation":"3619:4:17","nodeType":"VariableDeclaration","scope":3162,"src":"3611:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3089,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3082,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"3626:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:17","subExpression":{"id":3083,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"3642:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:17"},{"AST":{"nodeType":"YulBlock","src":"3681:362:17","statements":[{"nodeType":"YulAssignment","src":"3746:37:17","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:17"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:17"},"nodeType":"YulFunctionCall","src":"3761:22:17"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:17"}]},{"nodeType":"YulAssignment","src":"3850:25:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:17"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:17"},"nodeType":"YulFunctionCall","src":"3859:16:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:17"}]},{"nodeType":"YulAssignment","src":"3990:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:17","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:17"},"nodeType":"YulFunctionCall","src":"4006:12:17"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:17"},"nodeType":"YulFunctionCall","src":"4002:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:17"},"nodeType":"YulFunctionCall","src":"3998:31:17"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3049,"isOffset":false,"isSlot":false,"src":"3746:11:17","valueSize":1},{"declaration":3049,"isOffset":false,"isSlot":false,"src":"3765:11:17","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"3850:5:17","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"3863:5:17","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"3778:4:17","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"3870:4:17","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"3990:4:17","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"4013:4:17","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"4020:4:17","valueSize":1}],"id":3090,"nodeType":"InlineAssembly","src":"3672:371:17"},{"expression":{"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3091,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4109:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"4118:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3093,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"4126:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3096,"nodeType":"ExpressionStatement","src":"4109:21:17"},{"assignments":[3098],"declarations":[{"constant":false,"id":3098,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:17","nodeType":"VariableDeclaration","scope":3162,"src":"4448:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3105,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3100,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4471:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:17"},{"expression":{"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3106,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3108,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4719:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3109,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4733:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3113,"nodeType":"ExpressionStatement","src":"4704:36:17"},{"expression":{"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3114,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4773:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3116,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4788:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3117,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4802:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3121,"nodeType":"ExpressionStatement","src":"4773:36:17"},{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3122,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4843:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4858:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3125,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4872:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3129,"nodeType":"ExpressionStatement","src":"4843:36:17"},{"expression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3130,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4913:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3132,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4928:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3133,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4942:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3137,"nodeType":"ExpressionStatement","src":"4913:36:17"},{"expression":{"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3138,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4983:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3140,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4998:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3141,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"5012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3145,"nodeType":"ExpressionStatement","src":"4983:36:17"},{"expression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3146,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"5054:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3148,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"5069:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3149,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"5083:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3153,"nodeType":"ExpressionStatement","src":"5054:36:17"},{"expression":{"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"5524:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"5533:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3156,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"5541:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3159,"nodeType":"ExpressionStatement","src":"5524:24:17"},{"expression":{"id":3160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"5569:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3053,"id":3161,"nodeType":"Return","src":"5562:13:17"}]}]},"documentation":{"id":3043,"nodeType":"StructuredDocumentation","src":"1357:305:17","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3164,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:17","nodeType":"FunctionDefinition","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"x","nameLocation":"1700:1:17","nodeType":"VariableDeclaration","scope":3164,"src":"1692:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"y","nameLocation":"1719:1:17","nodeType":"VariableDeclaration","scope":3164,"src":"1711:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3049,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:17","nodeType":"VariableDeclaration","scope":3164,"src":"1730:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:17"},"returnParameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"result","nameLocation":"1787:6:17","nodeType":"VariableDeclaration","scope":3164,"src":"1779:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:17"},"scope":3816,"src":"1667:3925:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3207,"nodeType":"Block","src":"5872:189:17","statements":[{"assignments":[3180],"declarations":[{"constant":false,"id":3180,"mutability":"mutable","name":"result","nameLocation":"5890:6:17","nodeType":"VariableDeclaration","scope":3207,"src":"5882:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3186,"initialValue":{"arguments":[{"id":3182,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"5906:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3183,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"5909:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3184,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"5912:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3181,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3164,3208],"referencedDeclaration":3164,"src":"5899:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5899:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3187,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"5938:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3188,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"5950:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2958_$","typeString":"type(enum Math.Rounding)"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5959:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"5950:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"src":"5938:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3192,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"5972:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3193,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"5975:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3194,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"5978:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3191,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3204,"nodeType":"IfStatement","src":"5934:98:17","trueBody":{"id":3203,"nodeType":"Block","src":"5996:36:17","statements":[{"expression":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"6010:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3202,"nodeType":"ExpressionStatement","src":"6010:11:17"}]}},{"expression":{"id":3205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"6048:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3178,"id":3206,"nodeType":"Return","src":"6041:13:17"}]},"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"5598:121:17","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3208,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:17","nodeType":"FunctionDefinition","parameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"x","nameLocation":"5757:1:17","nodeType":"VariableDeclaration","scope":3208,"src":"5749:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"y","nameLocation":"5776:1:17","nodeType":"VariableDeclaration","scope":3208,"src":"5768:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:17","nodeType":"VariableDeclaration","scope":3208,"src":"5787:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3174,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:17","nodeType":"VariableDeclaration","scope":3208,"src":"5816:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"},"typeName":{"id":3173,"nodeType":"UserDefinedTypeName","pathNode":{"id":3172,"name":"Rounding","nameLocations":["5816:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2958,"src":"5816:8:17"},"referencedDeclaration":2958,"src":"5816:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:17"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3208,"src":"5863:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:17"},"scope":3816,"src":"5724:337:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3319,"nodeType":"Block","src":"6337:1585:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3216,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"6351:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3222,"nodeType":"IfStatement","src":"6347:45:17","trueBody":{"id":3221,"nodeType":"Block","src":"6359:33:17","statements":[{"expression":{"hexValue":"30","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3215,"id":3220,"nodeType":"Return","src":"6373:8:17"}]}},{"assignments":[3224],"declarations":[{"constant":false,"id":3224,"mutability":"mutable","name":"result","nameLocation":"7079:6:17","nodeType":"VariableDeclaration","scope":3319,"src":"7071:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3233,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"7099:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3226,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3488,3524],"referencedDeclaration":3488,"src":"7094:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7094:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:17"},{"id":3318,"nodeType":"UncheckedBlock","src":"7508:408:17","statements":[{"expression":{"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7532:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7542:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"7551:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7555:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3244,"nodeType":"ExpressionStatement","src":"7532:35:17"},{"expression":{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3245,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7581:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7591:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"7600:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7604:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3255,"nodeType":"ExpressionStatement","src":"7581:35:17"},{"expression":{"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7630:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7640:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"7649:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7653:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3266,"nodeType":"ExpressionStatement","src":"7630:35:17"},{"expression":{"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7679:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7689:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"7698:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7702:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3277,"nodeType":"ExpressionStatement","src":"7679:35:17"},{"expression":{"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7728:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7738:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"7747:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7751:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3288,"nodeType":"ExpressionStatement","src":"7728:35:17"},{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3289,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7777:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7787:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3291,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"7796:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7800:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"7777:35:17"},{"expression":{"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7826:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7836:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3302,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"7845:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3303,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7849:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3310,"nodeType":"ExpressionStatement","src":"7826:35:17"},{"expression":{"arguments":[{"id":3312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7886:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"7894:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7898:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3311,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"7882:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7882:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3215,"id":3317,"nodeType":"Return","src":"7875:30:17"}]}]},"documentation":{"id":3209,"nodeType":"StructuredDocumentation","src":"6067:208:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3320,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:17","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"a","nameLocation":"6302:1:17","nodeType":"VariableDeclaration","scope":3320,"src":"6294:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3210,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:17"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3320,"src":"6328:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:17"},"scope":3816,"src":"6280:1642:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3355,"nodeType":"Block","src":"8098:161:17","statements":[{"id":3354,"nodeType":"UncheckedBlock","src":"8108:145:17","statements":[{"assignments":[3332],"declarations":[{"constant":false,"id":3332,"mutability":"mutable","name":"result","nameLocation":"8140:6:17","nodeType":"VariableDeclaration","scope":3354,"src":"8132:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3336,"initialValue":{"arguments":[{"id":3334,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"8154:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3333,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3320,3356],"referencedDeclaration":3320,"src":"8149:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"8177:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"8187:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3339,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"8199:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2958_$","typeString":"type(enum Math.Rounding)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8208:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"8199:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"src":"8187:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"8214:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"8223:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"8232:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:17","trueExpression":{"hexValue":"31","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3330,"id":3353,"nodeType":"Return","src":"8170:72:17"}]}]},"documentation":{"id":3321,"nodeType":"StructuredDocumentation","src":"7928:89:17","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3356,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:17","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"a","nameLocation":"8044:1:17","nodeType":"VariableDeclaration","scope":3356,"src":"8036:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3322,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:17","nodeType":"VariableDeclaration","scope":3356,"src":"8047:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"},"typeName":{"id":3325,"nodeType":"UserDefinedTypeName","pathNode":{"id":3324,"name":"Rounding","nameLocations":["8047:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2958,"src":"8047:8:17"},"referencedDeclaration":2958,"src":"8047:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:17"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3356,"src":"8089:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:17"},"scope":3816,"src":"8022:237:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3487,"nodeType":"Block","src":"8444:922:17","statements":[{"assignments":[3365],"declarations":[{"constant":false,"id":3365,"mutability":"mutable","name":"result","nameLocation":"8462:6:17","nodeType":"VariableDeclaration","scope":3487,"src":"8454:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3367,"initialValue":{"hexValue":"30","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:17"},{"id":3484,"nodeType":"UncheckedBlock","src":"8482:855:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"8510:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3382,"nodeType":"IfStatement","src":"8506:99:17","trueBody":{"id":3381,"nodeType":"Block","src":"8528:77:17","statements":[{"expression":{"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"8546:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3376,"nodeType":"ExpressionStatement","src":"8546:13:17"},{"expression":{"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"8577:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3380,"nodeType":"ExpressionStatement","src":"8577:13:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"8622:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3397,"nodeType":"IfStatement","src":"8618:96:17","trueBody":{"id":3396,"nodeType":"Block","src":"8639:75:17","statements":[{"expression":{"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"8657:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3391,"nodeType":"ExpressionStatement","src":"8657:12:17"},{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"8687:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3395,"nodeType":"ExpressionStatement","src":"8687:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"8731:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3412,"nodeType":"IfStatement","src":"8727:96:17","trueBody":{"id":3411,"nodeType":"Block","src":"8748:75:17","statements":[{"expression":{"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"8766:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3406,"nodeType":"ExpressionStatement","src":"8766:12:17"},{"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"8796:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3410,"nodeType":"ExpressionStatement","src":"8796:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"8840:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3427,"nodeType":"IfStatement","src":"8836:96:17","trueBody":{"id":3426,"nodeType":"Block","src":"8857:75:17","statements":[{"expression":{"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"8875:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3421,"nodeType":"ExpressionStatement","src":"8875:12:17"},{"expression":{"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"8905:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3425,"nodeType":"ExpressionStatement","src":"8905:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"8949:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3442,"nodeType":"IfStatement","src":"8945:93:17","trueBody":{"id":3441,"nodeType":"Block","src":"8965:73:17","statements":[{"expression":{"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"8983:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3436,"nodeType":"ExpressionStatement","src":"8983:11:17"},{"expression":{"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"9012:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3440,"nodeType":"ExpressionStatement","src":"9012:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"9055:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3457,"nodeType":"IfStatement","src":"9051:93:17","trueBody":{"id":3456,"nodeType":"Block","src":"9071:73:17","statements":[{"expression":{"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"9089:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3451,"nodeType":"ExpressionStatement","src":"9089:11:17"},{"expression":{"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"9118:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3455,"nodeType":"ExpressionStatement","src":"9118:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"9161:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3472,"nodeType":"IfStatement","src":"9157:93:17","trueBody":{"id":3471,"nodeType":"Block","src":"9177:73:17","statements":[{"expression":{"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"9195:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3466,"nodeType":"ExpressionStatement","src":"9195:11:17"},{"expression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"9224:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3470,"nodeType":"ExpressionStatement","src":"9224:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"9267:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3483,"nodeType":"IfStatement","src":"9263:64:17","trueBody":{"id":3482,"nodeType":"Block","src":"9283:44:17","statements":[{"expression":{"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"9301:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3481,"nodeType":"ExpressionStatement","src":"9301:11:17"}]}}]},{"expression":{"id":3485,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"9353:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3363,"id":3486,"nodeType":"Return","src":"9346:13:17"}]},"documentation":{"id":3357,"nodeType":"StructuredDocumentation","src":"8265:113:17","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3488,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:17","nodeType":"FunctionDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"value","nameLocation":"8405:5:17","nodeType":"VariableDeclaration","scope":3488,"src":"8397:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:17"},"returnParameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"8435:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:17"},"scope":3816,"src":"8383:983:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3523,"nodeType":"Block","src":"9599:165:17","statements":[{"id":3522,"nodeType":"UncheckedBlock","src":"9609:149:17","statements":[{"assignments":[3500],"declarations":[{"constant":false,"id":3500,"mutability":"mutable","name":"result","nameLocation":"9641:6:17","nodeType":"VariableDeclaration","scope":3522,"src":"9633:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3504,"initialValue":{"arguments":[{"id":3502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"9655:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3501,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3488,3524],"referencedDeclaration":3488,"src":"9650:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9650:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"9682:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"9692:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3507,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"9704:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2958_$","typeString":"type(enum Math.Rounding)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9713:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"9704:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"src":"9692:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"9724:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"9733:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:17","trueExpression":{"hexValue":"31","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3498,"id":3521,"nodeType":"Return","src":"9675:72:17"}]}]},"documentation":{"id":3489,"nodeType":"StructuredDocumentation","src":"9372:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3524,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:17","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"value","nameLocation":"9541:5:17","nodeType":"VariableDeclaration","scope":3524,"src":"9533:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:17","nodeType":"VariableDeclaration","scope":3524,"src":"9548:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"},"typeName":{"id":3493,"nodeType":"UserDefinedTypeName","pathNode":{"id":3492,"name":"Rounding","nameLocations":["9548:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2958,"src":"9548:8:17"},"referencedDeclaration":2958,"src":"9548:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:17"},"returnParameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3524,"src":"9590:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:17"},"scope":3816,"src":"9519:245:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3652,"nodeType":"Block","src":"9951:828:17","statements":[{"assignments":[3533],"declarations":[{"constant":false,"id":3533,"mutability":"mutable","name":"result","nameLocation":"9969:6:17","nodeType":"VariableDeclaration","scope":3652,"src":"9961:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3535,"initialValue":{"hexValue":"30","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:17"},{"id":3649,"nodeType":"UncheckedBlock","src":"9989:761:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10017:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3552,"nodeType":"IfStatement","src":"10013:99:17","trueBody":{"id":3551,"nodeType":"Block","src":"10034:78:17","statements":[{"expression":{"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10052:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3546,"nodeType":"ExpressionStatement","src":"10052:15:17"},{"expression":{"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3547,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"10085:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3550,"nodeType":"ExpressionStatement","src":"10085:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10129:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3569,"nodeType":"IfStatement","src":"10125:99:17","trueBody":{"id":3568,"nodeType":"Block","src":"10146:78:17","statements":[{"expression":{"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10164:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3563,"nodeType":"ExpressionStatement","src":"10164:15:17"},{"expression":{"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"10197:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3567,"nodeType":"ExpressionStatement","src":"10197:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10241:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3586,"nodeType":"IfStatement","src":"10237:99:17","trueBody":{"id":3585,"nodeType":"Block","src":"10258:78:17","statements":[{"expression":{"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10276:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3580,"nodeType":"ExpressionStatement","src":"10276:15:17"},{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"10309:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ExpressionStatement","src":"10309:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10353:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3603,"nodeType":"IfStatement","src":"10349:96:17","trueBody":{"id":3602,"nodeType":"Block","src":"10369:76:17","statements":[{"expression":{"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10387:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3597,"nodeType":"ExpressionStatement","src":"10387:14:17"},{"expression":{"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"10419:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3601,"nodeType":"ExpressionStatement","src":"10419:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10462:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3620,"nodeType":"IfStatement","src":"10458:96:17","trueBody":{"id":3619,"nodeType":"Block","src":"10478:76:17","statements":[{"expression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3614,"nodeType":"ExpressionStatement","src":"10496:14:17"},{"expression":{"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"10528:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3618,"nodeType":"ExpressionStatement","src":"10528:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10571:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3637,"nodeType":"IfStatement","src":"10567:96:17","trueBody":{"id":3636,"nodeType":"Block","src":"10587:76:17","statements":[{"expression":{"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10605:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3631,"nodeType":"ExpressionStatement","src":"10605:14:17"},{"expression":{"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"10637:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3635,"nodeType":"ExpressionStatement","src":"10637:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"10680:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3648,"nodeType":"IfStatement","src":"10676:64:17","trueBody":{"id":3647,"nodeType":"Block","src":"10696:44:17","statements":[{"expression":{"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3643,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"10714:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3646,"nodeType":"ExpressionStatement","src":"10714:11:17"}]}}]},{"expression":{"id":3650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"10766:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3531,"id":3651,"nodeType":"Return","src":"10759:13:17"}]},"documentation":{"id":3525,"nodeType":"StructuredDocumentation","src":"9770:114:17","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3653,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:17","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"value","nameLocation":"9912:5:17","nodeType":"VariableDeclaration","scope":3653,"src":"9904:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:17"},"returnParameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3653,"src":"9942:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:17"},"scope":3816,"src":"9889:890:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3688,"nodeType":"Block","src":"11014:165:17","statements":[{"id":3687,"nodeType":"UncheckedBlock","src":"11024:149:17","statements":[{"assignments":[3665],"declarations":[{"constant":false,"id":3665,"mutability":"mutable","name":"result","nameLocation":"11056:6:17","nodeType":"VariableDeclaration","scope":3687,"src":"11048:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3669,"initialValue":{"arguments":[{"id":3667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"11071:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3666,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3653,3689],"referencedDeclaration":3653,"src":"11065:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11098:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3671,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"11108:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3672,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"11120:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2958_$","typeString":"type(enum Math.Rounding)"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11129:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"11120:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"src":"11108:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"11139:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"11148:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:17","trueExpression":{"hexValue":"31","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3663,"id":3686,"nodeType":"Return","src":"11091:71:17"}]}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"10785:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3689,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:17","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"value","nameLocation":"10956:5:17","nodeType":"VariableDeclaration","scope":3689,"src":"10948:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:17","nodeType":"VariableDeclaration","scope":3689,"src":"10963:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"},"typeName":{"id":3658,"nodeType":"UserDefinedTypeName","pathNode":{"id":3657,"name":"Rounding","nameLocations":["10963:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2958,"src":"10963:8:17"},"referencedDeclaration":2958,"src":"10963:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:17"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3689,"src":"11005:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3661,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:17"},"scope":3816,"src":"10933:246:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3775,"nodeType":"Block","src":"11493:600:17","statements":[{"assignments":[3698],"declarations":[{"constant":false,"id":3698,"mutability":"mutable","name":"result","nameLocation":"11511:6:17","nodeType":"VariableDeclaration","scope":3775,"src":"11503:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3700,"initialValue":{"hexValue":"30","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:17"},{"id":3772,"nodeType":"UncheckedBlock","src":"11531:533:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11559:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3715,"nodeType":"IfStatement","src":"11555:98:17","trueBody":{"id":3714,"nodeType":"Block","src":"11577:76:17","statements":[{"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11595:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3709,"nodeType":"ExpressionStatement","src":"11595:13:17"},{"expression":{"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"11626:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3713,"nodeType":"ExpressionStatement","src":"11626:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11670:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3730,"nodeType":"IfStatement","src":"11666:95:17","trueBody":{"id":3729,"nodeType":"Block","src":"11687:74:17","statements":[{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11705:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3724,"nodeType":"ExpressionStatement","src":"11705:12:17"},{"expression":{"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"11735:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3728,"nodeType":"ExpressionStatement","src":"11735:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11778:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3745,"nodeType":"IfStatement","src":"11774:95:17","trueBody":{"id":3744,"nodeType":"Block","src":"11795:74:17","statements":[{"expression":{"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11813:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3739,"nodeType":"ExpressionStatement","src":"11813:12:17"},{"expression":{"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"11843:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3743,"nodeType":"ExpressionStatement","src":"11843:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11886:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3760,"nodeType":"IfStatement","src":"11882:95:17","trueBody":{"id":3759,"nodeType":"Block","src":"11903:74:17","statements":[{"expression":{"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11921:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3754,"nodeType":"ExpressionStatement","src":"11921:12:17"},{"expression":{"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3755,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"11951:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3758,"nodeType":"ExpressionStatement","src":"11951:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"11994:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3771,"nodeType":"IfStatement","src":"11990:64:17","trueBody":{"id":3770,"nodeType":"Block","src":"12010:44:17","statements":[{"expression":{"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"12028:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3769,"nodeType":"ExpressionStatement","src":"12028:11:17"}]}}]},{"expression":{"id":3773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"12080:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3696,"id":3774,"nodeType":"Return","src":"12073:13:17"}]},"documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"11185:240:17","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3776,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:17","nodeType":"FunctionDefinition","parameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"value","nameLocation":"11454:5:17","nodeType":"VariableDeclaration","scope":3776,"src":"11446:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:17"},"returnParameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3776,"src":"11484:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:17"},"scope":3816,"src":"11430:663:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3814,"nodeType":"Block","src":"12329:173:17","statements":[{"id":3813,"nodeType":"UncheckedBlock","src":"12339:157:17","statements":[{"assignments":[3788],"declarations":[{"constant":false,"id":3788,"mutability":"mutable","name":"result","nameLocation":"12371:6:17","nodeType":"VariableDeclaration","scope":3813,"src":"12363:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3787,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3792,"initialValue":{"arguments":[{"id":3790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"12387:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3789,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3776,3815],"referencedDeclaration":3776,"src":"12380:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12380:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3793,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"12414:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3794,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"12424:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3795,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"12436:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2958_$","typeString":"type(enum Math.Rounding)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12445:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"12436:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"src":"12424:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"12457:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"12471:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:17","trueExpression":{"hexValue":"31","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3786,"id":3812,"nodeType":"Return","src":"12407:78:17"}]}]},"documentation":{"id":3777,"nodeType":"StructuredDocumentation","src":"12099:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3815,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:17","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"value","nameLocation":"12271:5:17","nodeType":"VariableDeclaration","scope":3815,"src":"12263:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:17","nodeType":"VariableDeclaration","scope":3815,"src":"12278:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"},"typeName":{"id":3781,"nodeType":"UserDefinedTypeName","pathNode":{"id":3780,"name":"Rounding","nameLocations":["12278:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2958,"src":"12278:8:17"},"referencedDeclaration":2958,"src":"12278:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2958","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:17"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3815,"src":"12320:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:17"},"scope":3816,"src":"12247:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3817,"src":"202:12302:17","usedErrors":[]}],"src":"103:12402:17"},"id":17},"contracts/ERC721rUpgradeable.sol":{"ast":{"absolutePath":"contracts/ERC721rUpgradeable.sol","exportedSymbols":{"Address":[2754],"AddressUpgradeable":[2213],"ContextUpgradeable":[2255],"ERC165Upgradeable":[2299],"ERC721rUpgradeable":[4889],"IERC165Upgradeable":[2311],"IERC721MetadataUpgradeable":[1929],"IERC721ReceiverUpgradeable":[1786],"IERC721Upgradeable":[1902],"Initializable":[168],"Math":[3816],"Strings":[2951]},"id":4890,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3818,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:18"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","id":3819,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4890,"sourceUnit":1903,"src":"58:81:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol","id":3820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4890,"sourceUnit":1787,"src":"140:89:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol","id":3821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4890,"sourceUnit":1930,"src":"230:100:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":3822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4890,"sourceUnit":2755,"src":"331:51:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":3823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4890,"sourceUnit":2256,"src":"383:74:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":3824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4890,"sourceUnit":2952,"src":"458:51:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","id":3825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4890,"sourceUnit":2300,"src":"510:87:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3827,"name":"ContextUpgradeable","nameLocations":["853:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"853:18:18"},"id":3828,"nodeType":"InheritanceSpecifier","src":"853:18:18"},{"baseName":{"id":3829,"name":"ERC165Upgradeable","nameLocations":["873:17:18"],"nodeType":"IdentifierPath","referencedDeclaration":2299,"src":"873:17:18"},"id":3830,"nodeType":"InheritanceSpecifier","src":"873:17:18"},{"baseName":{"id":3831,"name":"IERC721Upgradeable","nameLocations":["892:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"892:18:18"},"id":3832,"nodeType":"InheritanceSpecifier","src":"892:18:18"},{"baseName":{"id":3833,"name":"IERC721MetadataUpgradeable","nameLocations":["912:26:18"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"912:26:18"},"id":3834,"nodeType":"InheritanceSpecifier","src":"912:26:18"}],"canonicalName":"ERC721rUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3826,"nodeType":"StructuredDocumentation","src":"599:222:18","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension. This does random batch minting."},"fullyImplemented":true,"id":4889,"linearizedBaseContracts":[4889,1929,1902,2299,2311,2255,168],"name":"ERC721rUpgradeable","nameLocation":"831:18:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3837,"libraryName":{"id":3835,"name":"Address","nameLocations":["951:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2754,"src":"951:7:18"},"nodeType":"UsingForDirective","src":"945:26:18","typeName":{"id":3836,"name":"address","nodeType":"ElementaryTypeName","src":"963:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":3840,"libraryName":{"id":3838,"name":"Strings","nameLocations":["982:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"982:7:18"},"nodeType":"UsingForDirective","src":"976:26:18","typeName":{"id":3839,"name":"uint256","nodeType":"ElementaryTypeName","src":"994:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":3842,"mutability":"mutable","name":"_name","nameLocation":"1041:5:18","nodeType":"VariableDeclaration","scope":4889,"src":"1026:20:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3841,"name":"string","nodeType":"ElementaryTypeName","src":"1026:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3844,"mutability":"mutable","name":"_symbol","nameLocation":"1088:7:18","nodeType":"VariableDeclaration","scope":4889,"src":"1073:22:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3843,"name":"string","nodeType":"ElementaryTypeName","src":"1073:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3848,"mutability":"mutable","name":"_availableTokens","nameLocation":"1136:16:18","nodeType":"VariableDeclaration","scope":4889,"src":"1106:46:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":3847,"keyType":{"id":3845,"name":"uint","nodeType":"ElementaryTypeName","src":"1114:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1106:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":3846,"name":"uint","nodeType":"ElementaryTypeName","src":"1122:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":3850,"mutability":"mutable","name":"_numAvailableTokens","nameLocation":"1174:19:18","nodeType":"VariableDeclaration","scope":4889,"src":"1158:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1158:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3852,"mutability":"mutable","name":"_maxSupply","nameLocation":"1215:10:18","nodeType":"VariableDeclaration","scope":4889,"src":"1199:26:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3856,"mutability":"mutable","name":"_owners","nameLocation":"1313:7:18","nodeType":"VariableDeclaration","scope":4889,"src":"1277:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":3855,"keyType":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1277:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":3854,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":3860,"mutability":"mutable","name":"_balances","nameLocation":"1407:9:18","nodeType":"VariableDeclaration","scope":4889,"src":"1371:45:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3859,"keyType":{"id":3857,"name":"address","nodeType":"ElementaryTypeName","src":"1379:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1371:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1390:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":3864,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1508:15:18","nodeType":"VariableDeclaration","scope":4889,"src":"1472:51:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":3863,"keyType":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1480:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1472:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":3862,"name":"address","nodeType":"ElementaryTypeName","src":"1491:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":3870,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1631:18:18","nodeType":"VariableDeclaration","scope":4889,"src":"1578:71:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":3869,"keyType":{"id":3865,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1578:44:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":3868,"keyType":{"id":3866,"name":"address","nodeType":"ElementaryTypeName","src":"1605:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1597:24:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":3867,"name":"bool","nodeType":"ElementaryTypeName","src":"1616:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":3888,"nodeType":"Block","src":"1880:69:18","statements":[{"expression":{"arguments":[{"id":3883,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"1915:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3884,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"1922:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3885,"name":"maxSupply_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"1931:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3882,"name":"__ERC721r_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"1890:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,string memory,uint256)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1890:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3887,"nodeType":"ExpressionStatement","src":"1890:52:18"}]},"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"1656:108:18","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":3889,"implemented":true,"kind":"function","modifiers":[{"id":3880,"kind":"modifierInvocation","modifierName":{"id":3879,"name":"onlyInitializing","nameLocations":["1863:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"1863:16:18"},"nodeType":"ModifierInvocation","src":"1863:16:18"}],"name":"__ERC721r_init","nameLocation":"1778:14:18","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"name_","nameLocation":"1807:5:18","nodeType":"VariableDeclaration","scope":3889,"src":"1793:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3872,"name":"string","nodeType":"ElementaryTypeName","src":"1793:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3875,"mutability":"mutable","name":"symbol_","nameLocation":"1828:7:18","nodeType":"VariableDeclaration","scope":3889,"src":"1814:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3874,"name":"string","nodeType":"ElementaryTypeName","src":"1814:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"maxSupply_","nameLocation":"1842:10:18","nodeType":"VariableDeclaration","scope":3889,"src":"1837:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint","nodeType":"ElementaryTypeName","src":"1837:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1792:61:18"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[],"src":"1880:0:18"},"scope":4889,"src":"1769:180:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3916,"nodeType":"Block","src":"2076:132:18","statements":[{"expression":{"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3900,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"2086:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3901,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"2094:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2086:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3903,"nodeType":"ExpressionStatement","src":"2086:13:18"},{"expression":{"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3904,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"2109:7:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3905,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"2119:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2109:17:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3907,"nodeType":"ExpressionStatement","src":"2109:17:18"},{"expression":{"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3908,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"2136:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3909,"name":"maxSupply_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"2149:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2136:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3911,"nodeType":"ExpressionStatement","src":"2136:23:18"},{"expression":{"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3912,"name":"_numAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"2169:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3913,"name":"maxSupply_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"2191:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2169:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3915,"nodeType":"ExpressionStatement","src":"2169:32:18"}]},"id":3917,"implemented":true,"kind":"function","modifiers":[{"id":3898,"kind":"modifierInvocation","modifierName":{"id":3897,"name":"onlyInitializing","nameLocations":["2059:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"2059:16:18"},"nodeType":"ModifierInvocation","src":"2059:16:18"}],"name":"__ERC721r_init_unchained","nameLocation":"1964:24:18","nodeType":"FunctionDefinition","parameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"name_","nameLocation":"2003:5:18","nodeType":"VariableDeclaration","scope":3917,"src":"1989:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3890,"name":"string","nodeType":"ElementaryTypeName","src":"1989:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"symbol_","nameLocation":"2024:7:18","nodeType":"VariableDeclaration","scope":3917,"src":"2010:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3892,"name":"string","nodeType":"ElementaryTypeName","src":"2010:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"maxSupply_","nameLocation":"2038:10:18","nodeType":"VariableDeclaration","scope":3917,"src":"2033:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint","nodeType":"ElementaryTypeName","src":"2033:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1988:61:18"},"returnParameters":{"id":3899,"nodeType":"ParameterList","parameters":[],"src":"2076:0:18"},"scope":4889,"src":"1955:253:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2293,2310],"body":{"id":3947,"nodeType":"Block","src":"2405:214:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3928,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"2434:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3930,"name":"IERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"2454:18:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Upgradeable_$1902_$","typeString":"type(contract IERC721Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Upgradeable_$1902_$","typeString":"type(contract IERC721Upgradeable)"}],"id":3929,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2449:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Upgradeable_$1902","typeString":"type(contract IERC721Upgradeable)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2474:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"2449:36:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2434:51:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3934,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"2501:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3936,"name":"IERC721MetadataUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"2521:26:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721MetadataUpgradeable_$1929_$","typeString":"type(contract IERC721MetadataUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721MetadataUpgradeable_$1929_$","typeString":"type(contract IERC721MetadataUpgradeable)"}],"id":3935,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2516:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2516:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721MetadataUpgradeable_$1929","typeString":"type(contract IERC721MetadataUpgradeable)"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2549:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"2516:44:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2501:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2434:126:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3943,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"2600:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3941,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2576:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721rUpgradeable_$4889_$","typeString":"type(contract super ERC721rUpgradeable)"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2582:17:18","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2293,"src":"2576:23:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2576:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2434:178:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3927,"id":3946,"nodeType":"Return","src":"2415:197:18"}]},"documentation":{"id":3918,"nodeType":"StructuredDocumentation","src":"2214:56:18","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3948,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2284:17:18","nodeType":"FunctionDefinition","overrides":{"id":3924,"nodeType":"OverrideSpecifier","overrides":[{"id":3922,"name":"ERC165Upgradeable","nameLocations":["2351:17:18"],"nodeType":"IdentifierPath","referencedDeclaration":2299,"src":"2351:17:18"},{"id":3923,"name":"IERC165Upgradeable","nameLocations":["2370:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":2311,"src":"2370:18:18"}],"src":"2342:47:18"},"parameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3920,"mutability":"mutable","name":"interfaceId","nameLocation":"2309:11:18","nodeType":"VariableDeclaration","scope":3948,"src":"2302:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3919,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2302:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2301:20:18"},"returnParameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3948,"src":"2399:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3925,"name":"bool","nodeType":"ElementaryTypeName","src":"2399:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:6:18"},"scope":4889,"src":"2275:344:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3957,"nodeType":"Block","src":"2690:56:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3953,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"2707:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3954,"name":"_numAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"2720:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2707:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3952,"id":3956,"nodeType":"Return","src":"2700:39:18"}]},"functionSelector":"18160ddd","id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2638:11:18","nodeType":"FunctionDefinition","parameters":{"id":3949,"nodeType":"ParameterList","parameters":[],"src":"2649:2:18"},"returnParameters":{"id":3952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"2681:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"2681:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2680:9:18"},"scope":4889,"src":"2629:117:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3965,"nodeType":"Block","src":"2815:34:18","statements":[{"expression":{"id":3963,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"2832:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3962,"id":3964,"nodeType":"Return","src":"2825:17:18"}]},"functionSelector":"d5abeb01","id":3966,"implemented":true,"kind":"function","modifiers":[],"name":"maxSupply","nameLocation":"2765:9:18","nodeType":"FunctionDefinition","parameters":{"id":3959,"nodeType":"ParameterList","parameters":[],"src":"2774:2:18"},"returnParameters":{"id":3962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3966,"src":"2806:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2806:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2805:9:18"},"scope":4889,"src":"2756:93:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1827],"body":{"id":3989,"nodeType":"Block","src":"2989:124:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3976,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"3007:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3024:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3016:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3977,"name":"address","nodeType":"ElementaryTypeName","src":"3016:7:18","typeDescriptions":{}}},"id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3016:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3007:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3028:44:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""},"value":"ERC721: balance query for the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""}],"id":3975,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2999:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2999:74:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3984,"nodeType":"ExpressionStatement","src":"2999:74:18"},{"expression":{"baseExpression":{"id":3985,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"3090:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3987,"indexExpression":{"id":3986,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"3100:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3090:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3974,"id":3988,"nodeType":"Return","src":"3083:23:18"}]},"documentation":{"id":3967,"nodeType":"StructuredDocumentation","src":"2855:48:18","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":3990,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2917:9:18","nodeType":"FunctionDefinition","overrides":{"id":3971,"nodeType":"OverrideSpecifier","overrides":[],"src":"2962:8:18"},"parameters":{"id":3970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3969,"mutability":"mutable","name":"owner","nameLocation":"2935:5:18","nodeType":"VariableDeclaration","scope":3990,"src":"2927:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3968,"name":"address","nodeType":"ElementaryTypeName","src":"2927:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2926:15:18"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3990,"src":"2980:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"2980:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2979:9:18"},"scope":4889,"src":"2908:205:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1835],"body":{"id":4007,"nodeType":"Block","src":"3251:156:18","statements":[{"assignments":[4000],"declarations":[{"constant":false,"id":4000,"mutability":"mutable","name":"owner","nameLocation":"3269:5:18","nodeType":"VariableDeclaration","scope":4007,"src":"3261:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3999,"name":"address","nodeType":"ElementaryTypeName","src":"3261:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4004,"initialValue":{"baseExpression":{"id":4001,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"3277:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4003,"indexExpression":{"id":4002,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"3285:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3277:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3261:32:18"},{"expression":{"id":4005,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"3395:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3998,"id":4006,"nodeType":"Return","src":"3388:12:18"}]},"documentation":{"id":3991,"nodeType":"StructuredDocumentation","src":"3119:46:18","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":4008,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3179:7:18","nodeType":"FunctionDefinition","overrides":{"id":3995,"nodeType":"OverrideSpecifier","overrides":[],"src":"3224:8:18"},"parameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3993,"mutability":"mutable","name":"tokenId","nameLocation":"3195:7:18","nodeType":"VariableDeclaration","scope":4008,"src":"3187:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"3187:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3186:17:18"},"returnParameters":{"id":3998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4008,"src":"3242:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3996,"name":"address","nodeType":"ElementaryTypeName","src":"3242:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3241:9:18"},"scope":4889,"src":"3170:237:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1914],"body":{"id":4017,"nodeType":"Block","src":"3538:29:18","statements":[{"expression":{"id":4015,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"3555:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4014,"id":4016,"nodeType":"Return","src":"3548:12:18"}]},"documentation":{"id":4009,"nodeType":"StructuredDocumentation","src":"3413:51:18","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":4018,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3478:4:18","nodeType":"FunctionDefinition","overrides":{"id":4011,"nodeType":"OverrideSpecifier","overrides":[],"src":"3505:8:18"},"parameters":{"id":4010,"nodeType":"ParameterList","parameters":[],"src":"3482:2:18"},"returnParameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4018,"src":"3523:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4012,"name":"string","nodeType":"ElementaryTypeName","src":"3523:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3522:15:18"},"scope":4889,"src":"3469:98:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1920],"body":{"id":4027,"nodeType":"Block","src":"3702:31:18","statements":[{"expression":{"id":4025,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"3719:7:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4024,"id":4026,"nodeType":"Return","src":"3712:14:18"}]},"documentation":{"id":4019,"nodeType":"StructuredDocumentation","src":"3573:53:18","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":4028,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3640:6:18","nodeType":"FunctionDefinition","overrides":{"id":4021,"nodeType":"OverrideSpecifier","overrides":[],"src":"3669:8:18"},"parameters":{"id":4020,"nodeType":"ParameterList","parameters":[],"src":"3646:2:18"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4028,"src":"3687:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4022,"name":"string","nodeType":"ElementaryTypeName","src":"3687:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3686:15:18"},"scope":4889,"src":"3631:102:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1928],"body":{"id":4069,"nodeType":"Block","src":"3887:241:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":4039,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"3913:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4038,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"3905:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3905:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3923:49:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""},"value":"ERC721Metadata: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""}],"id":4037,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3897:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3897:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4043,"nodeType":"ExpressionStatement","src":"3897:76:18"},{"assignments":[4045],"declarations":[{"constant":false,"id":4045,"mutability":"mutable","name":"baseURI","nameLocation":"3998:7:18","nodeType":"VariableDeclaration","scope":4069,"src":"3984:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4044,"name":"string","nodeType":"ElementaryTypeName","src":"3984:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4048,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4046,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"4008:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4008:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3984:34:18"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4051,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"4041:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4035:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4049,"name":"bytes","nodeType":"ElementaryTypeName","src":"4035:5:18","typeDescriptions":{}}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4035:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4050:6:18","memberName":"length","nodeType":"MemberAccess","src":"4035:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4035:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4119:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4035:86:18","trueExpression":{"arguments":[{"arguments":[{"id":4060,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"4087:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4061,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"4096:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4104:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2834,"src":"4096:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4096:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4058,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4070:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4074:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"4070:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4070:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4063:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4056,"name":"string","nodeType":"ElementaryTypeName","src":"4063:6:18","typeDescriptions":{}}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4036,"id":4068,"nodeType":"Return","src":"4028:93:18"}]},"documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"3739:55:18","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":4070,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3808:8:18","nodeType":"FunctionDefinition","overrides":{"id":4033,"nodeType":"OverrideSpecifier","overrides":[],"src":"3854:8:18"},"parameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"tokenId","nameLocation":"3825:7:18","nodeType":"VariableDeclaration","scope":4070,"src":"3817:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4030,"name":"uint256","nodeType":"ElementaryTypeName","src":"3817:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3816:17:18"},"returnParameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4070,"src":"3872:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4034,"name":"string","nodeType":"ElementaryTypeName","src":"3872:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3871:15:18"},"scope":4889,"src":"3799:329:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4078,"nodeType":"Block","src":"4436:26:18","statements":[{"expression":{"hexValue":"","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4453:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":4075,"id":4077,"nodeType":"Return","src":"4446:9:18"}]},"documentation":{"id":4071,"nodeType":"StructuredDocumentation","src":"4134:231:18","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":4079,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"4379:8:18","nodeType":"FunctionDefinition","parameters":{"id":4072,"nodeType":"ParameterList","parameters":[],"src":"4387:2:18"},"returnParameters":{"id":4075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4079,"src":"4421:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4073,"name":"string","nodeType":"ElementaryTypeName","src":"4421:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4420:15:18"},"scope":4889,"src":"4370:92:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1875],"body":{"id":4121,"nodeType":"Block","src":"4589:343:18","statements":[{"assignments":[4089],"declarations":[{"constant":false,"id":4089,"mutability":"mutable","name":"owner","nameLocation":"4607:5:18","nodeType":"VariableDeclaration","scope":4121,"src":"4599:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4088,"name":"address","nodeType":"ElementaryTypeName","src":"4599:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4094,"initialValue":{"arguments":[{"id":4092,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"4642:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4090,"name":"ERC721rUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"4615:18:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721rUpgradeable_$4889_$","typeString":"type(contract ERC721rUpgradeable)"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4634:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"4615:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4615:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4599:51:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"4668:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4097,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"4674:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4668:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4681:35:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":4095,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4660:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4660:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4101,"nodeType":"ExpressionStatement","src":"4660:57:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4103,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4749:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4105,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"4765:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4108,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"4791:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4109,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4798:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4798:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4107,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"4774:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4774:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4749:62:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4825:58:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""},"value":"ERC721: approve caller is not owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""}],"id":4102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4728:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:165:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4115,"nodeType":"ExpressionStatement","src":"4728:165:18"},{"expression":{"arguments":[{"id":4117,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"4913:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4118,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"4917:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4116,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"4904:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4904:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4120,"nodeType":"ExpressionStatement","src":"4904:21:18"}]},"documentation":{"id":4080,"nodeType":"StructuredDocumentation","src":"4468:46:18","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":4122,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4528:7:18","nodeType":"FunctionDefinition","overrides":{"id":4086,"nodeType":"OverrideSpecifier","overrides":[],"src":"4580:8:18"},"parameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"to","nameLocation":"4544:2:18","nodeType":"VariableDeclaration","scope":4122,"src":"4536:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4081,"name":"address","nodeType":"ElementaryTypeName","src":"4536:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4084,"mutability":"mutable","name":"tokenId","nameLocation":"4556:7:18","nodeType":"VariableDeclaration","scope":4122,"src":"4548:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4083,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4535:29:18"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[],"src":"4589:0:18"},"scope":4889,"src":"4519:413:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1891],"body":{"id":4142,"nodeType":"Block","src":"5078:132:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":4133,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"5104:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4132,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"5096:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5114:46:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""},"value":"ERC721: approved query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""}],"id":4131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5088:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4137,"nodeType":"ExpressionStatement","src":"5088:73:18"},{"expression":{"baseExpression":{"id":4138,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"5179:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4140,"indexExpression":{"id":4139,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"5195:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5179:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4130,"id":4141,"nodeType":"Return","src":"5172:31:18"}]},"documentation":{"id":4123,"nodeType":"StructuredDocumentation","src":"4938:50:18","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":4143,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"5002:11:18","nodeType":"FunctionDefinition","overrides":{"id":4127,"nodeType":"OverrideSpecifier","overrides":[],"src":"5051:8:18"},"parameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"tokenId","nameLocation":"5022:7:18","nodeType":"VariableDeclaration","scope":4143,"src":"5014:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4124,"name":"uint256","nodeType":"ElementaryTypeName","src":"5014:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5013:17:18"},"returnParameters":{"id":4130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4143,"src":"5069:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4128,"name":"address","nodeType":"ElementaryTypeName","src":"5069:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5068:9:18"},"scope":4889,"src":"4993:217:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1883],"body":{"id":4159,"nodeType":"Block","src":"5361:69:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4153,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"5390:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5390:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4155,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"5404:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4156,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"5414:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4152,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"5371:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5371:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4158,"nodeType":"ExpressionStatement","src":"5371:52:18"}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"5216:56:18","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":4160,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"5286:17:18","nodeType":"FunctionDefinition","overrides":{"id":4150,"nodeType":"OverrideSpecifier","overrides":[],"src":"5352:8:18"},"parameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"operator","nameLocation":"5312:8:18","nodeType":"VariableDeclaration","scope":4160,"src":"5304:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4145,"name":"address","nodeType":"ElementaryTypeName","src":"5304:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"approved","nameLocation":"5327:8:18","nodeType":"VariableDeclaration","scope":4160,"src":"5322:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4147,"name":"bool","nodeType":"ElementaryTypeName","src":"5322:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5303:33:18"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[],"src":"5361:0:18"},"scope":4889,"src":"5277:153:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1901],"body":{"id":4177,"nodeType":"Block","src":"5599:59:18","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":4171,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"5616:18:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4173,"indexExpression":{"id":4172,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5635:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5616:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4175,"indexExpression":{"id":4174,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"5642:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5616:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4170,"id":4176,"nodeType":"Return","src":"5609:42:18"}]},"documentation":{"id":4161,"nodeType":"StructuredDocumentation","src":"5436:55:18","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":4178,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"5505:16:18","nodeType":"FunctionDefinition","overrides":{"id":4167,"nodeType":"OverrideSpecifier","overrides":[],"src":"5575:8:18"},"parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"owner","nameLocation":"5530:5:18","nodeType":"VariableDeclaration","scope":4178,"src":"5522:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4162,"name":"address","nodeType":"ElementaryTypeName","src":"5522:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"operator","nameLocation":"5545:8:18","nodeType":"VariableDeclaration","scope":4178,"src":"5537:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4164,"name":"address","nodeType":"ElementaryTypeName","src":"5537:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5521:33:18"},"returnParameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4178,"src":"5593:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4168,"name":"bool","nodeType":"ElementaryTypeName","src":"5593:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5592:6:18"},"scope":4889,"src":"5496:162:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1867],"body":{"id":4204,"nodeType":"Block","src":"5839:211:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4191,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"5928:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5928:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4193,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"5942:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4190,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"5909:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5909:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5952:51:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":4189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5901:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5901:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4197,"nodeType":"ExpressionStatement","src":"5901:103:18"},{"expression":{"arguments":[{"id":4199,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"6025:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4200,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"6031:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4201,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"6035:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4198,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"6015:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6015:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4203,"nodeType":"ExpressionStatement","src":"6015:28:18"}]},"documentation":{"id":4179,"nodeType":"StructuredDocumentation","src":"5664:51:18","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":4205,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5729:12:18","nodeType":"FunctionDefinition","overrides":{"id":4187,"nodeType":"OverrideSpecifier","overrides":[],"src":"5830:8:18"},"parameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4181,"mutability":"mutable","name":"from","nameLocation":"5759:4:18","nodeType":"VariableDeclaration","scope":4205,"src":"5751:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4180,"name":"address","nodeType":"ElementaryTypeName","src":"5751:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4183,"mutability":"mutable","name":"to","nameLocation":"5781:2:18","nodeType":"VariableDeclaration","scope":4205,"src":"5773:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4182,"name":"address","nodeType":"ElementaryTypeName","src":"5773:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4185,"mutability":"mutable","name":"tokenId","nameLocation":"5801:7:18","nodeType":"VariableDeclaration","scope":4205,"src":"5793:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint256","nodeType":"ElementaryTypeName","src":"5793:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5741:73:18"},"returnParameters":{"id":4188,"nodeType":"ParameterList","parameters":[],"src":"5839:0:18"},"scope":4889,"src":"5720:330:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1857],"body":{"id":4223,"nodeType":"Block","src":"6239:56:18","statements":[{"expression":{"arguments":[{"id":4217,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"6266:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4218,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"6272:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4219,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"6276:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6285:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":4216,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[4224,4254],"referencedDeclaration":4254,"src":"6249:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6249:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4222,"nodeType":"ExpressionStatement","src":"6249:39:18"}]},"documentation":{"id":4206,"nodeType":"StructuredDocumentation","src":"6056:55:18","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6125:16:18","nodeType":"FunctionDefinition","overrides":{"id":4214,"nodeType":"OverrideSpecifier","overrides":[],"src":"6230:8:18"},"parameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"from","nameLocation":"6159:4:18","nodeType":"VariableDeclaration","scope":4224,"src":"6151:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4207,"name":"address","nodeType":"ElementaryTypeName","src":"6151:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4210,"mutability":"mutable","name":"to","nameLocation":"6181:2:18","nodeType":"VariableDeclaration","scope":4224,"src":"6173:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4209,"name":"address","nodeType":"ElementaryTypeName","src":"6173:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4212,"mutability":"mutable","name":"tokenId","nameLocation":"6201:7:18","nodeType":"VariableDeclaration","scope":4224,"src":"6193:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"6193:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6141:73:18"},"returnParameters":{"id":4215,"nodeType":"ParameterList","parameters":[],"src":"6239:0:18"},"scope":4889,"src":"6116:179:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1847],"body":{"id":4253,"nodeType":"Block","src":"6512:169:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4239,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"6549:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4241,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"6563:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4238,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"6530:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6530:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6573:51:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":4237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6522:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6522:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4245,"nodeType":"ExpressionStatement","src":"6522:103:18"},{"expression":{"arguments":[{"id":4247,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"6649:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4248,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"6655:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4249,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"6659:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4250,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"6668:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4246,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"6635:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6635:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4252,"nodeType":"ExpressionStatement","src":"6635:39:18"}]},"documentation":{"id":4225,"nodeType":"StructuredDocumentation","src":"6301:55:18","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":4254,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6370:16:18","nodeType":"FunctionDefinition","overrides":{"id":4235,"nodeType":"OverrideSpecifier","overrides":[],"src":"6503:8:18"},"parameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"from","nameLocation":"6404:4:18","nodeType":"VariableDeclaration","scope":4254,"src":"6396:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4226,"name":"address","nodeType":"ElementaryTypeName","src":"6396:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"to","nameLocation":"6426:2:18","nodeType":"VariableDeclaration","scope":4254,"src":"6418:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4228,"name":"address","nodeType":"ElementaryTypeName","src":"6418:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"tokenId","nameLocation":"6446:7:18","nodeType":"VariableDeclaration","scope":4254,"src":"6438:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"6438:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4233,"mutability":"mutable","name":"_data","nameLocation":"6476:5:18","nodeType":"VariableDeclaration","scope":4254,"src":"6463:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4232,"name":"bytes","nodeType":"ElementaryTypeName","src":"6463:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6386:101:18"},"returnParameters":{"id":4236,"nodeType":"ParameterList","parameters":[],"src":"6512:0:18"},"scope":4889,"src":"6361:320:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4282,"nodeType":"Block","src":"7684:166:18","statements":[{"expression":{"arguments":[{"id":4267,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"7704:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4268,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"7710:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4269,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7714:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4266,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"7694:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7694:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4271,"nodeType":"ExpressionStatement","src":"7694:28:18"},{"expression":{"arguments":[{"arguments":[{"id":4274,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"7763:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4275,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"7769:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4276,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"7773:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4277,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"7782:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4273,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"7740:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7740:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7790:52:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":4272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7732:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7732:111:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4281,"nodeType":"ExpressionStatement","src":"7732:111:18"}]},"documentation":{"id":4255,"nodeType":"StructuredDocumentation","src":"6687:851:18","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":4283,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"7552:13:18","nodeType":"FunctionDefinition","parameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"from","nameLocation":"7583:4:18","nodeType":"VariableDeclaration","scope":4283,"src":"7575:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4256,"name":"address","nodeType":"ElementaryTypeName","src":"7575:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4259,"mutability":"mutable","name":"to","nameLocation":"7605:2:18","nodeType":"VariableDeclaration","scope":4283,"src":"7597:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4258,"name":"address","nodeType":"ElementaryTypeName","src":"7597:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4261,"mutability":"mutable","name":"tokenId","nameLocation":"7625:7:18","nodeType":"VariableDeclaration","scope":4283,"src":"7617:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4260,"name":"uint256","nodeType":"ElementaryTypeName","src":"7617:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4263,"mutability":"mutable","name":"_data","nameLocation":"7655:5:18","nodeType":"VariableDeclaration","scope":4283,"src":"7642:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4262,"name":"bytes","nodeType":"ElementaryTypeName","src":"7642:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7565:101:18"},"returnParameters":{"id":4265,"nodeType":"ParameterList","parameters":[],"src":"7684:0:18"},"scope":4889,"src":"7543:307:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4300,"nodeType":"Block","src":"8224:54:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4291,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"8241:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4293,"indexExpression":{"id":4292,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"8249:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8241:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8269:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8261:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4294,"name":"address","nodeType":"ElementaryTypeName","src":"8261:7:18","typeDescriptions":{}}},"id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8261:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8241:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4290,"id":4299,"nodeType":"Return","src":"8234:37:18"}]},"documentation":{"id":4284,"nodeType":"StructuredDocumentation","src":"7856:292:18","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"8162:7:18","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"tokenId","nameLocation":"8178:7:18","nodeType":"VariableDeclaration","scope":4301,"src":"8170:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"8170:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8169:17:18"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"8218:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4288,"name":"bool","nodeType":"ElementaryTypeName","src":"8218:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8217:6:18"},"scope":4889,"src":"8153:125:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4341,"nodeType":"Block","src":"8535:257:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":4313,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"8561:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4312,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"8553:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8553:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8571:46:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""},"value":"ERC721: operator query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""}],"id":4311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8545:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4317,"nodeType":"ExpressionStatement","src":"8545:73:18"},{"assignments":[4319],"declarations":[{"constant":false,"id":4319,"mutability":"mutable","name":"owner","nameLocation":"8636:5:18","nodeType":"VariableDeclaration","scope":4341,"src":"8628:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4318,"name":"address","nodeType":"ElementaryTypeName","src":"8628:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4324,"initialValue":{"arguments":[{"id":4322,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"8671:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4320,"name":"ERC721rUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"8644:18:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721rUpgradeable_$4889_$","typeString":"type(contract ERC721rUpgradeable)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8663:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"8644:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8644:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8628:51:18"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4325,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"8697:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4326,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"8708:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8697:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4329,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"8729:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4328,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"8717:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8717:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4331,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"8741:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8717:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8697:51:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4335,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"8769:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4336,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"8776:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4334,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8752:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8752:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8697:87:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8696:89:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4310,"id":4340,"nodeType":"Return","src":"8689:96:18"}]},"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"8284:147:18","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":4342,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"8445:18:18","nodeType":"FunctionDefinition","parameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"spender","nameLocation":"8472:7:18","nodeType":"VariableDeclaration","scope":4342,"src":"8464:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4303,"name":"address","nodeType":"ElementaryTypeName","src":"8464:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4306,"mutability":"mutable","name":"tokenId","nameLocation":"8489:7:18","nodeType":"VariableDeclaration","scope":4342,"src":"8481:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"8481:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8463:34:18"},"returnParameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4342,"src":"8529:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4308,"name":"bool","nodeType":"ElementaryTypeName","src":"8529:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8528:6:18"},"scope":4889,"src":"8436:356:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4382,"nodeType":"Block","src":"8872:222:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8911:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8903:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4350,"name":"address","nodeType":"ElementaryTypeName","src":"8903:7:18","typeDescriptions":{}}},"id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8903:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4354,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"8915:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4355,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"8919:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4349,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"8882:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8882:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4357,"nodeType":"ExpressionStatement","src":"8882:45:18"},{"expression":{"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4358,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"8946:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4360,"indexExpression":{"id":4359,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"8954:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4361,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"8965:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8946:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4363,"nodeType":"ExpressionStatement","src":"8946:21:18"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9008:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9000:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4365,"name":"address","nodeType":"ElementaryTypeName","src":"9000:7:18","typeDescriptions":{}}},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4369,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"9012:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4370,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"9016:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4364,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"8991:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8991:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4372,"nodeType":"EmitStatement","src":"8986:38:18"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9071:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9063:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4374,"name":"address","nodeType":"ElementaryTypeName","src":"9063:7:18","typeDescriptions":{}}},"id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9063:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4378,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"9075:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4379,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"9079:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4373,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"9043:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9043:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4381,"nodeType":"ExpressionStatement","src":"9043:44:18"}]},"id":4383,"implemented":true,"kind":"function","modifiers":[],"name":"_mintIdWithoutBalanceUpdate","nameLocation":"8807:27:18","nodeType":"FunctionDefinition","parameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4344,"mutability":"mutable","name":"to","nameLocation":"8843:2:18","nodeType":"VariableDeclaration","scope":4383,"src":"8835:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4343,"name":"address","nodeType":"ElementaryTypeName","src":"8835:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4346,"mutability":"mutable","name":"tokenId","nameLocation":"8855:7:18","nodeType":"VariableDeclaration","scope":4383,"src":"8847:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4345,"name":"uint256","nodeType":"ElementaryTypeName","src":"8847:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8834:29:18"},"returnParameters":{"id":4348,"nodeType":"ParameterList","parameters":[],"src":"8872:0:18"},"scope":4889,"src":"8798:296:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4485,"nodeType":"Block","src":"9189:987:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4394,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"9207:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9207:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4396,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"9223:2:18","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9226:6:18","memberName":"origin","nodeType":"MemberAccess","src":"9223:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9207:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e7472616374732063616e6e6f74206d696e74","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9234:23:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_32a53888ca69a743bbaa97a0e7d9316f442fadccf6d37bbebbe9ab28e7024e3e","typeString":"literal_string \"Contracts cannot mint\""},"value":"Contracts cannot mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32a53888ca69a743bbaa97a0e7d9316f442fadccf6d37bbebbe9ab28e7024e3e","typeString":"literal_string \"Contracts cannot mint\""}],"id":4393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9199:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9199:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4401,"nodeType":"ExpressionStatement","src":"9199:59:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"9276:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9290:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9282:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4404,"name":"address","nodeType":"ElementaryTypeName","src":"9282:7:18","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9282:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9276:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9294:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":4402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9268:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9268:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4411,"nodeType":"ExpressionStatement","src":"9268:61:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4413,"name":"_numToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"9347:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9347:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231723a206e65656420746f206d696e74206174206c65617374206f6e6520746f6b656e","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9363:42:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb31380de390e4e0627ca842496a815f4aa25ce62aeb0a04ee78aed6e6c12b62","typeString":"literal_string \"ERC721r: need to mint at least one token\""},"value":"ERC721r: need to mint at least one token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb31380de390e4e0627ca842496a815f4aa25ce62aeb0a04ee78aed6e6c12b62","typeString":"literal_string \"ERC721r: need to mint at least one token\""}],"id":4412,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9339:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9339:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4418,"nodeType":"ExpressionStatement","src":"9339:67:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"_numAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"9534:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4421,"name":"_numToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"9557:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9534:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231723a206d696e74696e67206d6f726520746f6b656e73207468616e20617661696c61626c65","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9569:45:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ffa3719eede42d3318b3817081dd67bc4c18fb5a15d06600fb820769c5c8571","typeString":"literal_string \"ERC721r: minting more tokens than available\""},"value":"ERC721r: minting more tokens than available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ffa3719eede42d3318b3817081dd67bc4c18fb5a15d06600fb820769c5c8571","typeString":"literal_string \"ERC721r: minting more tokens than available\""}],"id":4419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9526:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9526:89:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4425,"nodeType":"ExpressionStatement","src":"9526:89:18"},{"assignments":[4427],"declarations":[{"constant":false,"id":4427,"mutability":"mutable","name":"updatedNumAvailableTokens","nameLocation":"9639:25:18","nodeType":"VariableDeclaration","scope":4485,"src":"9634:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint","nodeType":"ElementaryTypeName","src":"9634:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4429,"initialValue":{"id":4428,"name":"_numAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"9667:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9634:52:18"},{"assignments":[4434],"declarations":[{"constant":false,"id":4434,"mutability":"mutable","name":"res","nameLocation":"9710:3:18","nodeType":"VariableDeclaration","scope":4485,"src":"9696:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4432,"name":"uint","nodeType":"ElementaryTypeName","src":"9696:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4433,"nodeType":"ArrayTypeName","src":"9696:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4440,"initialValue":{"arguments":[{"id":4438,"name":"_numToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"9727:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9716:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4435,"name":"uint","nodeType":"ElementaryTypeName","src":"9720:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4436,"nodeType":"ArrayTypeName","src":"9720:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9716:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9696:42:18"},{"body":{"id":4471,"nodeType":"Block","src":"9785:262:18","statements":[{"assignments":[4451],"declarations":[{"constant":false,"id":4451,"mutability":"mutable","name":"tokenId","nameLocation":"9832:7:18","nodeType":"VariableDeclaration","scope":4471,"src":"9824:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"9824:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4456,"initialValue":{"arguments":[{"id":4453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"9868:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4454,"name":"updatedNumAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"9872:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4452,"name":"getRandomAvailableTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"9842:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9842:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9824:74:18"},{"expression":{"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4457,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"9912:3:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4459,"indexExpression":{"id":4458,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"9916:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9912:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4460,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"9921:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9912:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4462,"nodeType":"ExpressionStatement","src":"9912:16:18"},{"expression":{"arguments":[{"id":4464,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"9970:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"9974:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4463,"name":"_mintIdWithoutBalanceUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"9942:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9942:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4467,"nodeType":"ExpressionStatement","src":"9942:40:18"},{"expression":{"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"10009:27:18","subExpression":{"id":4468,"name":"updatedNumAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"10011:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4470,"nodeType":"ExpressionStatement","src":"10009:27:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"9764:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4445,"name":"_numToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"9768:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9764:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4472,"initializationExpression":{"assignments":[4442],"declarations":[{"constant":false,"id":4442,"mutability":"mutable","name":"i","nameLocation":"9761:1:18","nodeType":"VariableDeclaration","scope":4472,"src":"9753:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4441,"name":"uint256","nodeType":"ElementaryTypeName","src":"9753:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4443,"nodeType":"VariableDeclarationStatement","src":"9753:9:18"},"loopExpression":{"expression":{"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"9780:3:18","subExpression":{"id":4447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"9782:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4449,"nodeType":"ExpressionStatement","src":"9780:3:18"},"nodeType":"ForStatement","src":"9748:299:18"},{"expression":{"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4473,"name":"_numAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10065:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4474,"name":"updatedNumAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"10087:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10065:47:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4476,"nodeType":"ExpressionStatement","src":"10065:47:18"},{"expression":{"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4477,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"10122:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4479,"indexExpression":{"id":4478,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"10132:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10122:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4480,"name":"_numToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"10139:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10122:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4482,"nodeType":"ExpressionStatement","src":"10122:27:18"},{"expression":{"id":4483,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"10166:3:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4392,"id":4484,"nodeType":"Return","src":"10159:10:18"}]},"id":4486,"implemented":true,"kind":"function","modifiers":[],"name":"_mintRandom","nameLocation":"9109:11:18","nodeType":"FunctionDefinition","parameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"to","nameLocation":"9129:2:18","nodeType":"VariableDeclaration","scope":4486,"src":"9121:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4384,"name":"address","nodeType":"ElementaryTypeName","src":"9121:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4387,"mutability":"mutable","name":"_numToMint","nameLocation":"9138:10:18","nodeType":"VariableDeclaration","scope":4486,"src":"9133:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint","nodeType":"ElementaryTypeName","src":"9133:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9120:29:18"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4486,"src":"9175:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4389,"name":"uint","nodeType":"ElementaryTypeName","src":"9175:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4390,"nodeType":"ArrayTypeName","src":"9175:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9174:15:18"},"scope":4889,"src":"9100:1076:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4537,"nodeType":"Block","src":"10316:584:18","statements":[{"assignments":[4496],"declarations":[{"constant":false,"id":4496,"mutability":"mutable","name":"randomNum","nameLocation":"10334:9:18","nodeType":"VariableDeclaration","scope":4537,"src":"10326:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4495,"name":"uint256","nodeType":"ElementaryTypeName","src":"10326:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4525,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4502,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"10426:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4503,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"10450:2:18","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10453:8:18","memberName":"gasprice","nodeType":"MemberAccess","src":"10450:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4505,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10483:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10489:6:18","memberName":"number","nodeType":"MemberAccess","src":"10483:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4507,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10517:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10523:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"10517:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4509,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10554:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10560:10:18","memberName":"difficulty","nodeType":"MemberAccess","src":"10554:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4512,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10602:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10608:6:18","memberName":"number","nodeType":"MemberAccess","src":"10602:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10617:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10602:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4511,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"10592:9:18","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10592:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4519,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10649:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721rUpgradeable_$4889","typeString":"contract ERC721rUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC721rUpgradeable_$4889","typeString":"contract ERC721rUpgradeable"}],"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10641:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4517,"name":"address","nodeType":"ElementaryTypeName","src":"10641:7:18","typeDescriptions":{}}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10641:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4521,"name":"updatedNumAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"10676:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4500,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10394:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10398:6:18","memberName":"encode","nodeType":"MemberAccess","src":"10394:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10394:325:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4499,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10367:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10367:366:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10346:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"10346:7:18","typeDescriptions":{}}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10346:397:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10326:417:18"},{"assignments":[4527],"declarations":[{"constant":false,"id":4527,"mutability":"mutable","name":"randomIndex","nameLocation":"10761:11:18","nodeType":"VariableDeclaration","scope":4537,"src":"10753:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4526,"name":"uint256","nodeType":"ElementaryTypeName","src":"10753:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4531,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"randomNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"10775:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4529,"name":"updatedNumAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"10787:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10775:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10753:59:18"},{"expression":{"arguments":[{"id":4533,"name":"randomIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"10854:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4534,"name":"updatedNumAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"10867:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4532,"name":"getAvailableTokenAtIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10829:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) returns (uint256)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10829:64:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4494,"id":4536,"nodeType":"Return","src":"10822:71:18"}]},"id":4538,"implemented":true,"kind":"function","modifiers":[],"name":"getRandomAvailableTokenId","nameLocation":"10199:25:18","nodeType":"FunctionDefinition","parameters":{"id":4491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"to","nameLocation":"10233:2:18","nodeType":"VariableDeclaration","scope":4538,"src":"10225:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4487,"name":"address","nodeType":"ElementaryTypeName","src":"10225:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4490,"mutability":"mutable","name":"updatedNumAvailableTokens","nameLocation":"10242:25:18","nodeType":"VariableDeclaration","scope":4538,"src":"10237:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4489,"name":"uint","nodeType":"ElementaryTypeName","src":"10237:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10224:44:18"},"returnParameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4538,"src":"10303:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4492,"name":"uint256","nodeType":"ElementaryTypeName","src":"10303:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10302:9:18"},"scope":4889,"src":"10190:710:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4617,"nodeType":"Block","src":"11148:1310:18","statements":[{"assignments":[4548],"declarations":[{"constant":false,"id":4548,"mutability":"mutable","name":"valAtIndex","nameLocation":"11166:10:18","nodeType":"VariableDeclaration","scope":4617,"src":"11158:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4547,"name":"uint256","nodeType":"ElementaryTypeName","src":"11158:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4552,"initialValue":{"baseExpression":{"id":4549,"name":"_availableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"11179:16:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4551,"indexExpression":{"id":4550,"name":"indexToUse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"11196:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11179:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11158:49:18"},{"assignments":[4554],"declarations":[{"constant":false,"id":4554,"mutability":"mutable","name":"result","nameLocation":"11225:6:18","nodeType":"VariableDeclaration","scope":4617,"src":"11217:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"11217:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4555,"nodeType":"VariableDeclarationStatement","src":"11217:14:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"valAtIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"11245:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11259:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11245:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4568,"nodeType":"Block","src":"11383:144:18","statements":[{"expression":{"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"11497:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4565,"name":"valAtIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"11506:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11497:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4567,"nodeType":"ExpressionStatement","src":"11497:19:18"}]},"id":4569,"nodeType":"IfStatement","src":"11241:286:18","trueBody":{"id":4563,"nodeType":"Block","src":"11262:115:18","statements":[{"expression":{"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"11347:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4560,"name":"indexToUse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"11356:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11347:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4562,"nodeType":"ExpressionStatement","src":"11347:19:18"}]}},{"assignments":[4571],"declarations":[{"constant":false,"id":4571,"mutability":"mutable","name":"lastIndex","nameLocation":"11545:9:18","nodeType":"VariableDeclaration","scope":4617,"src":"11537:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4570,"name":"uint256","nodeType":"ElementaryTypeName","src":"11537:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4575,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"updatedNumAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"11557:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11585:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11557:29:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11537:49:18"},{"assignments":[4577],"declarations":[{"constant":false,"id":4577,"mutability":"mutable","name":"lastValInArray","nameLocation":"11604:14:18","nodeType":"VariableDeclaration","scope":4617,"src":"11596:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"11596:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4581,"initialValue":{"baseExpression":{"id":4578,"name":"_availableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"11621:16:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4580,"indexExpression":{"id":4579,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"11638:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11621:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11596:52:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4582,"name":"indexToUse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"11662:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4583,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"11676:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11662:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4604,"nodeType":"IfStatement","src":"11658:619:18","trueBody":{"id":4603,"nodeType":"Block","src":"11687:590:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4585,"name":"lastValInArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"11910:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11928:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11910:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4601,"nodeType":"Block","src":"12085:182:18","statements":[{"expression":{"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4595,"name":"_availableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"12207:16:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4597,"indexExpression":{"id":4596,"name":"indexToUse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"12224:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12207:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4598,"name":"lastValInArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"12238:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12207:45:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4600,"nodeType":"ExpressionStatement","src":"12207:45:18"}]},"id":4602,"nodeType":"IfStatement","src":"11906:361:18","trueBody":{"id":4594,"nodeType":"Block","src":"11931:148:18","statements":[{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4588,"name":"_availableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"12024:16:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4590,"indexExpression":{"id":4589,"name":"indexToUse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"12041:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12024:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4591,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"12055:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12024:40:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4593,"nodeType":"ExpressionStatement","src":"12024:40:18"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4605,"name":"lastValInArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"12290:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12308:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12290:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4614,"nodeType":"IfStatement","src":"12286:134:18","trueBody":{"id":4613,"nodeType":"Block","src":"12311:109:18","statements":[{"expression":{"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"12375:34:18","subExpression":{"baseExpression":{"id":4608,"name":"_availableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"12382:16:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4610,"indexExpression":{"id":4609,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"12399:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12382:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4612,"nodeType":"ExpressionStatement","src":"12375:34:18"}]}},{"expression":{"id":4615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"12445:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4546,"id":4616,"nodeType":"Return","src":"12438:13:18"}]},"id":4618,"implemented":true,"kind":"function","modifiers":[],"name":"getAvailableTokenAtIndex","nameLocation":"11024:24:18","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"indexToUse","nameLocation":"11057:10:18","nodeType":"VariableDeclaration","scope":4618,"src":"11049:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"11049:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"updatedNumAvailableTokens","nameLocation":"11074:25:18","nodeType":"VariableDeclaration","scope":4618,"src":"11069:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint","nodeType":"ElementaryTypeName","src":"11069:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11048:52:18"},"returnParameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4618,"src":"11135:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11134:9:18"},"scope":4889,"src":"11015:1443:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4672,"nodeType":"Block","src":"12681:450:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4626,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"12699:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12699:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4628,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"12715:2:18","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:18","memberName":"origin","nodeType":"MemberAccess","src":"12715:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12699:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e7472616374732063616e6e6f74206d696e74","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12726:23:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_32a53888ca69a743bbaa97a0e7d9316f442fadccf6d37bbebbe9ab28e7024e3e","typeString":"literal_string \"Contracts cannot mint\""},"value":"Contracts cannot mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32a53888ca69a743bbaa97a0e7d9316f442fadccf6d37bbebbe9ab28e7024e3e","typeString":"literal_string \"Contracts cannot mint\""}],"id":4625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12691:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12691:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4633,"nodeType":"ExpressionStatement","src":"12691:59:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4635,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"12768:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12782:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12774:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4636,"name":"address","nodeType":"ElementaryTypeName","src":"12774:7:18","typeDescriptions":{}}},"id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12774:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12768:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12786:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":4634,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12760:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12760:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4643,"nodeType":"ExpressionStatement","src":"12760:61:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"_numAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"12839:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12862:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12839:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231723a206d696e74696e67206d6f726520746f6b656e73207468616e20617661696c61626c65","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12865:45:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ffa3719eede42d3318b3817081dd67bc4c18fb5a15d06600fb820769c5c8571","typeString":"literal_string \"ERC721r: minting more tokens than available\""},"value":"ERC721r: minting more tokens than available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ffa3719eede42d3318b3817081dd67bc4c18fb5a15d06600fb820769c5c8571","typeString":"literal_string \"ERC721r: minting more tokens than available\""}],"id":4644,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12831:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12831:80:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4650,"nodeType":"ExpressionStatement","src":"12831:80:18"},{"assignments":[4652],"declarations":[{"constant":false,"id":4652,"mutability":"mutable","name":"tokenId","nameLocation":"12935:7:18","nodeType":"VariableDeclaration","scope":4672,"src":"12930:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4651,"name":"uint","nodeType":"ElementaryTypeName","src":"12930:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4657,"initialValue":{"arguments":[{"id":4654,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"12970:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4655,"name":"_numAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"12977:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4653,"name":"getAvailableTokenAtIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"12945:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) returns (uint256)"}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12945:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12930:67:18"},{"expression":{"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"13007:21:18","subExpression":{"id":4658,"name":"_numAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"13009:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4660,"nodeType":"ExpressionStatement","src":"13007:21:18"},{"expression":{"arguments":[{"id":4662,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"13075:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4663,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"13079:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4661,"name":"_mintIdWithoutBalanceUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"13047:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13047:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4665,"nodeType":"ExpressionStatement","src":"13047:40:18"},{"expression":{"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4666,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"13106:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4668,"indexExpression":{"id":4667,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"13116:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13106:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13123:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13106:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4671,"nodeType":"ExpressionStatement","src":"13106:18:18"}]},"id":4673,"implemented":true,"kind":"function","modifiers":[],"name":"_mintAtIndex","nameLocation":"12627:12:18","nodeType":"FunctionDefinition","parameters":{"id":4623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4620,"mutability":"mutable","name":"to","nameLocation":"12648:2:18","nodeType":"VariableDeclaration","scope":4673,"src":"12640:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4619,"name":"address","nodeType":"ElementaryTypeName","src":"12640:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4622,"mutability":"mutable","name":"index","nameLocation":"12657:5:18","nodeType":"VariableDeclaration","scope":4673,"src":"12652:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4621,"name":"uint","nodeType":"ElementaryTypeName","src":"12652:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12639:24:18"},"returnParameters":{"id":4624,"nodeType":"ParameterList","parameters":[],"src":"12681:0:18"},"scope":4889,"src":"12618:513:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4747,"nodeType":"Block","src":"13564:508:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4686,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"13609:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4684,"name":"ERC721rUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"13582:18:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721rUpgradeable_$4889_$","typeString":"type(contract ERC721rUpgradeable)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13601:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"13582:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13582:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4688,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"13621:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13582:43:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13627:39:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":4683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13574:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13574:93:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4692,"nodeType":"ExpressionStatement","src":"13574:93:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"13685:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13699:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13691:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4695,"name":"address","nodeType":"ElementaryTypeName","src":"13691:7:18","typeDescriptions":{}}},"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13691:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13685:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13703:38:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":4693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13677:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13677:65:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4702,"nodeType":"ExpressionStatement","src":"13677:65:18"},{"expression":{"arguments":[{"id":4704,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"13774:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4705,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"13780:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4706,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"13784:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4703,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"13753:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13753:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4708,"nodeType":"ExpressionStatement","src":"13753:39:18"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13871:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13863:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4710,"name":"address","nodeType":"ElementaryTypeName","src":"13863:7:18","typeDescriptions":{}}},"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13863:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4714,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"13875:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4709,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"13854:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13854:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4716,"nodeType":"ExpressionStatement","src":"13854:29:18"},{"expression":{"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4717,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"13894:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4719,"indexExpression":{"id":4718,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"13904:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13894:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13913:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13894:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4722,"nodeType":"ExpressionStatement","src":"13894:20:18"},{"expression":{"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4723,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"13924:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4725,"indexExpression":{"id":4724,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"13934:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13924:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13941:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13924:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4728,"nodeType":"ExpressionStatement","src":"13924:18:18"},{"expression":{"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4729,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"13952:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4731,"indexExpression":{"id":4730,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"13960:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13952:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4732,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"13971:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13952:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4734,"nodeType":"ExpressionStatement","src":"13952:21:18"},{"eventCall":{"arguments":[{"id":4736,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"13998:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4737,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"14004:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4738,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"14008:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4735,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"13989:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4740,"nodeType":"EmitStatement","src":"13984:32:18"},{"expression":{"arguments":[{"id":4742,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"14047:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4743,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"14053:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4744,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"14057:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4741,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"14027:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14027:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4746,"nodeType":"ExpressionStatement","src":"14027:38:18"}]},"documentation":{"id":4674,"nodeType":"StructuredDocumentation","src":"13137:313:18","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":4748,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"13464:9:18","nodeType":"FunctionDefinition","parameters":{"id":4681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4676,"mutability":"mutable","name":"from","nameLocation":"13491:4:18","nodeType":"VariableDeclaration","scope":4748,"src":"13483:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4675,"name":"address","nodeType":"ElementaryTypeName","src":"13483:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4678,"mutability":"mutable","name":"to","nameLocation":"13513:2:18","nodeType":"VariableDeclaration","scope":4748,"src":"13505:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4677,"name":"address","nodeType":"ElementaryTypeName","src":"13505:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4680,"mutability":"mutable","name":"tokenId","nameLocation":"13533:7:18","nodeType":"VariableDeclaration","scope":4748,"src":"13525:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"13525:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13473:73:18"},"returnParameters":{"id":4682,"nodeType":"ParameterList","parameters":[],"src":"13564:0:18"},"scope":4889,"src":"13455:617:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4771,"nodeType":"Block","src":"14247:119:18","statements":[{"expression":{"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4756,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"14257:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4758,"indexExpression":{"id":4757,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"14273:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14257:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4759,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"14284:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14257:29:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4761,"nodeType":"ExpressionStatement","src":"14257:29:18"},{"eventCall":{"arguments":[{"arguments":[{"id":4765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"14337:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4763,"name":"ERC721rUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"14310:18:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721rUpgradeable_$4889_$","typeString":"type(contract ERC721rUpgradeable)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14329:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"14310:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14310:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4767,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"14347:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4768,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"14351:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4762,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"14301:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14301:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4770,"nodeType":"EmitStatement","src":"14296:63:18"}]},"documentation":{"id":4749,"nodeType":"StructuredDocumentation","src":"14078:100:18","text":" @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."},"id":4772,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14192:8:18","nodeType":"FunctionDefinition","parameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4751,"mutability":"mutable","name":"to","nameLocation":"14209:2:18","nodeType":"VariableDeclaration","scope":4772,"src":"14201:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4750,"name":"address","nodeType":"ElementaryTypeName","src":"14201:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4753,"mutability":"mutable","name":"tokenId","nameLocation":"14221:7:18","nodeType":"VariableDeclaration","scope":4772,"src":"14213:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"14213:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14200:29:18"},"returnParameters":{"id":4755,"nodeType":"ParameterList","parameters":[],"src":"14247:0:18"},"scope":4889,"src":"14183:183:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4803,"nodeType":"Block","src":"14624:184:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4783,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"14642:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4784,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"14651:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14642:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14661:27:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":4782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14634:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14634:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4788,"nodeType":"ExpressionStatement","src":"14634:55:18"},{"expression":{"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4789,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"14699:18:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4792,"indexExpression":{"id":4790,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"14718:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14699:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4793,"indexExpression":{"id":4791,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"14725:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14699:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4794,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"14737:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14699:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4796,"nodeType":"ExpressionStatement","src":"14699:46:18"},{"eventCall":{"arguments":[{"id":4798,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"14775:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4799,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"14782:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4800,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"14792:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4797,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"14760:14:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14760:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4802,"nodeType":"EmitStatement","src":"14755:46:18"}]},"documentation":{"id":4773,"nodeType":"StructuredDocumentation","src":"14372:124:18","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."},"id":4804,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"14510:18:18","nodeType":"FunctionDefinition","parameters":{"id":4780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"mutability":"mutable","name":"owner","nameLocation":"14546:5:18","nodeType":"VariableDeclaration","scope":4804,"src":"14538:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4774,"name":"address","nodeType":"ElementaryTypeName","src":"14538:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4777,"mutability":"mutable","name":"operator","nameLocation":"14569:8:18","nodeType":"VariableDeclaration","scope":4804,"src":"14561:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4776,"name":"address","nodeType":"ElementaryTypeName","src":"14561:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4779,"mutability":"mutable","name":"approved","nameLocation":"14592:8:18","nodeType":"VariableDeclaration","scope":4804,"src":"14587:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4778,"name":"bool","nodeType":"ElementaryTypeName","src":"14587:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14528:78:18"},"returnParameters":{"id":4781,"nodeType":"ParameterList","parameters":[],"src":"14624:0:18"},"scope":4889,"src":"14501:307:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4865,"nodeType":"Block","src":"15517:644:18","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4818,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"15531:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15534:10:18","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2442,"src":"15531:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15531:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4863,"nodeType":"Block","src":"16119:36:18","statements":[{"expression":{"hexValue":"74727565","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16140:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4817,"id":4862,"nodeType":"Return","src":"16133:11:18"}]},"id":4864,"nodeType":"IfStatement","src":"15527:628:18","trueBody":{"id":4860,"nodeType":"Block","src":"15548:565:18","statements":[{"clauses":[{"block":{"id":4840,"nodeType":"Block","src":"15674:102:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4834,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"15699:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4835,"name":"IERC721ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"15709:26:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721ReceiverUpgradeable_$1786_$","typeString":"type(contract IERC721ReceiverUpgradeable)"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15736:16:18","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"15709:43:18","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721ReceiverUpgradeable.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15753:8:18","memberName":"selector","nodeType":"MemberAccess","src":"15709:52:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"15699:62:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4817,"id":4839,"nodeType":"Return","src":"15692:69:18"}]},"errorName":"","id":4841,"nodeType":"TryCatchClause","parameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"retval","nameLocation":"15666:6:18","nodeType":"VariableDeclaration","scope":4841,"src":"15659:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4831,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15659:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15658:15:18"},"src":"15650:126:18"},{"block":{"id":4857,"nodeType":"Block","src":"15805:298:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4845,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"15827:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15834:6:18","memberName":"length","nodeType":"MemberAccess","src":"15827:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15844:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15827:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4855,"nodeType":"Block","src":"15954:135:18","statements":[{"AST":{"nodeType":"YulBlock","src":"15985:86:18","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16022:2:18","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"16026:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16018:3:18"},"nodeType":"YulFunctionCall","src":"16018:15:18"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"16041:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16035:5:18"},"nodeType":"YulFunctionCall","src":"16035:13:18"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16011:6:18"},"nodeType":"YulFunctionCall","src":"16011:38:18"},"nodeType":"YulExpressionStatement","src":"16011:38:18"}]},"evmVersion":"london","externalReferences":[{"declaration":4843,"isOffset":false,"isSlot":false,"src":"16026:6:18","valueSize":1},{"declaration":4843,"isOffset":false,"isSlot":false,"src":"16041:6:18","valueSize":1}],"id":4854,"nodeType":"InlineAssembly","src":"15976:95:18"}]},"id":4856,"nodeType":"IfStatement","src":"15823:266:18","trueBody":{"id":4853,"nodeType":"Block","src":"15847:101:18","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15876:52:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":4849,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15869:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15869:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4852,"nodeType":"ExpressionStatement","src":"15869:60:18"}]}}]},"errorName":"","id":4858,"nodeType":"TryCatchClause","parameters":{"id":4844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"reason","nameLocation":"15797:6:18","nodeType":"VariableDeclaration","scope":4858,"src":"15784:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4842,"name":"bytes","nodeType":"ElementaryTypeName","src":"15784:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15783:21:18"},"src":"15777:326:18"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4825,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"15614:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15614:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4827,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"15628:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4828,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"15634:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4829,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"15643:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4822,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"15593:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4821,"name":"IERC721ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"15566:26:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721ReceiverUpgradeable_$1786_$","typeString":"type(contract IERC721ReceiverUpgradeable)"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721ReceiverUpgradeable_$1786","typeString":"contract IERC721ReceiverUpgradeable"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15597:16:18","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"15566:47:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:83:18","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":4859,"nodeType":"TryStatement","src":"15562:541:18"}]}}]},"documentation":{"id":4805,"nodeType":"StructuredDocumentation","src":"14814:542:18","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":4866,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"15370:22:18","nodeType":"FunctionDefinition","parameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4807,"mutability":"mutable","name":"from","nameLocation":"15410:4:18","nodeType":"VariableDeclaration","scope":4866,"src":"15402:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4806,"name":"address","nodeType":"ElementaryTypeName","src":"15402:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4809,"mutability":"mutable","name":"to","nameLocation":"15432:2:18","nodeType":"VariableDeclaration","scope":4866,"src":"15424:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4808,"name":"address","nodeType":"ElementaryTypeName","src":"15424:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4811,"mutability":"mutable","name":"tokenId","nameLocation":"15452:7:18","nodeType":"VariableDeclaration","scope":4866,"src":"15444:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4810,"name":"uint256","nodeType":"ElementaryTypeName","src":"15444:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4813,"mutability":"mutable","name":"_data","nameLocation":"15482:5:18","nodeType":"VariableDeclaration","scope":4866,"src":"15469:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4812,"name":"bytes","nodeType":"ElementaryTypeName","src":"15469:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15392:101:18"},"returnParameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4866,"src":"15511:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4815,"name":"bool","nodeType":"ElementaryTypeName","src":"15511:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15510:6:18"},"scope":4889,"src":"15361:800:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4876,"nodeType":"Block","src":"16837:2:18","statements":[]},"documentation":{"id":4867,"nodeType":"StructuredDocumentation","src":"16167:545:18","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":4877,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"16726:20:18","nodeType":"FunctionDefinition","parameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"from","nameLocation":"16764:4:18","nodeType":"VariableDeclaration","scope":4877,"src":"16756:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4868,"name":"address","nodeType":"ElementaryTypeName","src":"16756:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4871,"mutability":"mutable","name":"to","nameLocation":"16786:2:18","nodeType":"VariableDeclaration","scope":4877,"src":"16778:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4870,"name":"address","nodeType":"ElementaryTypeName","src":"16778:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4873,"mutability":"mutable","name":"tokenId","nameLocation":"16806:7:18","nodeType":"VariableDeclaration","scope":4877,"src":"16798:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"16798:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16746:73:18"},"returnParameters":{"id":4875,"nodeType":"ParameterList","parameters":[],"src":"16837:0:18"},"scope":4889,"src":"16717:122:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4887,"nodeType":"Block","src":"17330:2:18","statements":[]},"documentation":{"id":4878,"nodeType":"StructuredDocumentation","src":"16845:361:18","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":4888,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"17220:19:18","nodeType":"FunctionDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4880,"mutability":"mutable","name":"from","nameLocation":"17257:4:18","nodeType":"VariableDeclaration","scope":4888,"src":"17249:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4879,"name":"address","nodeType":"ElementaryTypeName","src":"17249:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4882,"mutability":"mutable","name":"to","nameLocation":"17279:2:18","nodeType":"VariableDeclaration","scope":4888,"src":"17271:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4881,"name":"address","nodeType":"ElementaryTypeName","src":"17271:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4884,"mutability":"mutable","name":"tokenId","nameLocation":"17299:7:18","nodeType":"VariableDeclaration","scope":4888,"src":"17291:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4883,"name":"uint256","nodeType":"ElementaryTypeName","src":"17291:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17239:73:18"},"returnParameters":{"id":4886,"nodeType":"ParameterList","parameters":[],"src":"17330:0:18"},"scope":4889,"src":"17211:121:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4890,"src":"822:16512:18","usedErrors":[]}],"src":"33:17301:18"},"id":18},"contracts/HValue.sol":{"ast":{"absolutePath":"contracts/HValue.sol","exportedSymbols":{"AddressUpgradeable":[2213],"Context":[2776],"ContextUpgradeable":[2255],"ERC1155SupplyUpgradeable":[1753],"ERC1155Upgradeable":[1413],"ERC165Upgradeable":[2299],"HValue":[5432],"HValueStorage":[5493],"IERC1155MetadataURIUpgradeable":[1768],"IERC1155ReceiverUpgradeable":[1454],"IERC1155Upgradeable":[1576],"IERC165Upgradeable":[2311],"IHashPunk":[5451],"Initializable":[168],"Ownable":[2424]},"id":5433,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4891,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:19"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol","id":4892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5433,"sourceUnit":1754,"src":"58:99:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4893,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5433,"sourceUnit":2425,"src":"158:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/HValueStorage.sol","file":"./HValueStorage.sol","id":4894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5433,"sourceUnit":5494,"src":"211:29:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4895,"name":"ERC1155SupplyUpgradeable","nameLocations":["261:24:19"],"nodeType":"IdentifierPath","referencedDeclaration":1753,"src":"261:24:19"},"id":4896,"nodeType":"InheritanceSpecifier","src":"261:24:19"},{"baseName":{"id":4897,"name":"HValueStorage","nameLocations":["287:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":5493,"src":"287:13:19"},"id":4898,"nodeType":"InheritanceSpecifier","src":"287:13:19"}],"canonicalName":"HValue","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5432,"linearizedBaseContracts":[5432,5493,1753,1413,1768,1576,2299,2311,2255,168],"name":"HValue","nameLocation":"251:6:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":4930,"nodeType":"Block","src":"381:185:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4905,"name":"__ERC1155Supply_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"391:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"391:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4907,"nodeType":"ExpressionStatement","src":"391:22:19"},{"expression":{"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4908,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"423:4:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4856616c7565","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"430:8:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_11da4959cfc75c05f1db3e09586851d830186ff71f08c7fcf8eedac77fa3fa25","typeString":"literal_string \"HValue\""},"value":"HValue"},"src":"423:15:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4911,"nodeType":"ExpressionStatement","src":"423:15:19"},{"expression":{"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4912,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"448:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4856","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"457:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b6e556eb571ba76a31e2b9f659c940c4a44116c03529d89788024b6a6bcbdbb3","typeString":"literal_string \"HV\""},"value":"HV"},"src":"448:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4915,"nodeType":"ExpressionStatement","src":"448:13:19"},{"expression":{"arguments":[{"id":4917,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"482:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4916,"name":"setBaseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"471:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"471:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4919,"nodeType":"ExpressionStatement","src":"471:16:19"},{"expression":{"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4920,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"497:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4921,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"505:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"509:6:19","memberName":"sender","nodeType":"MemberAccess","src":"505:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"497:18:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4924,"nodeType":"ExpressionStatement","src":"497:18:19"},{"expression":{"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4925,"name":"currentTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"525:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4926,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"544:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"550:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"544:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"525:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4929,"nodeType":"ExpressionStatement","src":"525:34:19"}]},"functionSelector":"f62d1888","id":4931,"implemented":true,"kind":"function","modifiers":[{"id":4903,"kind":"modifierInvocation","modifierName":{"id":4902,"name":"initializer","nameLocations":["369:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":70,"src":"369:11:19"},"nodeType":"ModifierInvocation","src":"369:11:19"}],"name":"initialize","nameLocation":"317:10:19","nodeType":"FunctionDefinition","parameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"_uri","nameLocation":"351:4:19","nodeType":"VariableDeclaration","scope":4931,"src":"337:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4899,"name":"string","nodeType":"ElementaryTypeName","src":"337:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"327:34:19"},"returnParameters":{"id":4904,"nodeType":"ParameterList","parameters":[],"src":"381:0:19"},"scope":5432,"src":"308:258:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4942,"nodeType":"Block","src":"593:125:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4934,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"624:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"628:6:19","memberName":"sender","nodeType":"MemberAccess","src":"624:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4936,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"638:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"624:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a2063616c6c6572206973206e6f7420746865206f776e6572","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"657:33:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dea929535f31a6a3d4da771c56c977f613aa2b2d875a3332f245e364beb66cd","typeString":"literal_string \"HValue: caller is not the owner\""},"value":"HValue: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dea929535f31a6a3d4da771c56c977f613aa2b2d875a3332f245e364beb66cd","typeString":"literal_string \"HValue: caller is not the owner\""}],"id":4933,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"603:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"603:97:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4940,"nodeType":"ExpressionStatement","src":"603:97:19"},{"id":4941,"nodeType":"PlaceholderStatement","src":"710:1:19"}]},"id":4943,"name":"onlyOwner","nameLocation":"581:9:19","nodeType":"ModifierDefinition","parameters":{"id":4932,"nodeType":"ParameterList","parameters":[],"src":"590:2:19"},"src":"572:146:19","virtual":false,"visibility":"internal"},{"body":{"id":4954,"nodeType":"Block","src":"754:135:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"785:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"789:6:19","memberName":"sender","nodeType":"MemberAccess","src":"785:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4948,"name":"controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"799:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"785:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a2063616c6c6572206973206e6f742074686520636f6e74726f6c6c6572","id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"823:38:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c68bca7fa283e487dffc110655d1b436451e784bf6064e5151d72f6ebe27cd0c","typeString":"literal_string \"HValue: caller is not the controller\""},"value":"HValue: caller is not the controller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c68bca7fa283e487dffc110655d1b436451e784bf6064e5151d72f6ebe27cd0c","typeString":"literal_string \"HValue: caller is not the controller\""}],"id":4945,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"764:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"764:107:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4952,"nodeType":"ExpressionStatement","src":"764:107:19"},{"id":4953,"nodeType":"PlaceholderStatement","src":"881:1:19"}]},"id":4955,"name":"onlyController","nameLocation":"737:14:19","nodeType":"ModifierDefinition","parameters":{"id":4944,"nodeType":"ParameterList","parameters":[],"src":"751:2:19"},"src":"728:161:19","virtual":false,"visibility":"internal"},{"body":{"id":4968,"nodeType":"Block","src":"918:141:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4958,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"949:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"955:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"949:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"currentTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"968:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"333635","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"987:8:19","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"968:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"949:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a206e6f74206e65772079656172","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1009:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a102db2d7672fdad004a63c326088de6266268bad23ec664881a9c9d6d98a5b0","typeString":"literal_string \"HValue: not new year\""},"value":"HValue: not new year"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a102db2d7672fdad004a63c326088de6266268bad23ec664881a9c9d6d98a5b0","typeString":"literal_string \"HValue: not new year\""}],"id":4957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"928:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"928:113:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4966,"nodeType":"ExpressionStatement","src":"928:113:19"},{"id":4967,"nodeType":"PlaceholderStatement","src":"1051:1:19"}]},"id":4969,"name":"onlyNewYear","nameLocation":"904:11:19","nodeType":"ModifierDefinition","parameters":{"id":4956,"nodeType":"ParameterList","parameters":[],"src":"915:2:19"},"src":"895:164:19","virtual":false,"visibility":"internal"},{"body":{"id":5020,"nodeType":"Block","src":"1272:175:19","statements":[{"body":{"id":5018,"nodeType":"Block","src":"1322:119:19","statements":[{"expression":{"arguments":[{"baseExpression":{"id":5000,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"1347:2:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5002,"indexExpression":{"id":5001,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"1350:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1347:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5003,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"1354:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5004,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"1364:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5005,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"1373:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4999,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"1336:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1336:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5007,"nodeType":"ExpressionStatement","src":"1336:42:19"},{"expression":{"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5008,"name":"negtiveValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"1392:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5012,"indexExpression":{"baseExpression":{"id":5009,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"1405:2:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5011,"indexExpression":{"id":5010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"1408:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1405:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1392:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5013,"name":"negtiveValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"1414:13:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5015,"indexExpression":{"id":5014,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"1428:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1414:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1392:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5017,"nodeType":"ExpressionStatement","src":"1392:38:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"1302:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4993,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"1306:2:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1309:6:19","memberName":"length","nodeType":"MemberAccess","src":"1306:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1302:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5019,"initializationExpression":{"assignments":[4989],"declarations":[{"constant":false,"id":4989,"mutability":"mutable","name":"i","nameLocation":"1295:1:19","nodeType":"VariableDeclaration","scope":5019,"src":"1287:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4991,"initialValue":{"hexValue":"30","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1299:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1287:13:19"},"loopExpression":{"expression":{"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1317:3:19","subExpression":{"id":4996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"1317:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4998,"nodeType":"ExpressionStatement","src":"1317:3:19"},"nodeType":"ForStatement","src":"1282:159:19"}]},"functionSelector":"e1012a89","id":5021,"implemented":true,"kind":"function","modifiers":[{"id":4986,"kind":"modifierInvocation","modifierName":{"id":4985,"name":"onlyOwner","nameLocations":["1262:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"1262:9:19"},"nodeType":"ModifierInvocation","src":"1262:9:19"}],"name":"mintBatch","nameLocation":"1074:9:19","nodeType":"FunctionDefinition","parameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4972,"mutability":"mutable","name":"to","nameLocation":"1110:2:19","nodeType":"VariableDeclaration","scope":5021,"src":"1093:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4970,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4971,"nodeType":"ArrayTypeName","src":"1093:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4975,"mutability":"mutable","name":"tokenIds","nameLocation":"1139:8:19","nodeType":"VariableDeclaration","scope":5021,"src":"1122:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4973,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4974,"nodeType":"ArrayTypeName","src":"1122:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4978,"mutability":"mutable","name":"amounts","nameLocation":"1174:7:19","nodeType":"VariableDeclaration","scope":5021,"src":"1157:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4977,"nodeType":"ArrayTypeName","src":"1157:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4981,"mutability":"mutable","name":"negtiveValues","nameLocation":"1208:13:19","nodeType":"VariableDeclaration","scope":5021,"src":"1191:30:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4980,"nodeType":"ArrayTypeName","src":"1191:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4983,"mutability":"mutable","name":"data","nameLocation":"1244:4:19","nodeType":"VariableDeclaration","scope":5021,"src":"1231:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4982,"name":"bytes","nodeType":"ElementaryTypeName","src":"1231:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1083:171:19"},"returnParameters":{"id":4987,"nodeType":"ParameterList","parameters":[],"src":"1272:0:19"},"scope":5432,"src":"1065:382:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5056,"nodeType":"Block","src":"1590:116:19","statements":[{"body":{"id":5054,"nodeType":"Block","src":"1642:58:19","statements":[{"expression":{"arguments":[{"baseExpression":{"id":5047,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"1667:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5049,"indexExpression":{"id":5048,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"1672:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1667:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5050,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"1676:3:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5051,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"1681:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":5046,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"1656:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5053,"nodeType":"ExpressionStatement","src":"1656:33:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"1620:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"1624:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1629:6:19","memberName":"length","nodeType":"MemberAccess","src":"1624:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1620:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5055,"initializationExpression":{"assignments":[5036],"declarations":[{"constant":false,"id":5036,"mutability":"mutable","name":"i","nameLocation":"1613:1:19","nodeType":"VariableDeclaration","scope":5055,"src":"1605:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5038,"initialValue":{"hexValue":"30","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1617:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1605:13:19"},"loopExpression":{"expression":{"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1637:3:19","subExpression":{"id":5043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"1637:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5045,"nodeType":"ExpressionStatement","src":"1637:3:19"},"nodeType":"ForStatement","src":"1600:100:19"}]},"functionSelector":"2a36c108","id":5057,"implemented":true,"kind":"function","modifiers":[{"id":5033,"kind":"modifierInvocation","modifierName":{"id":5032,"name":"onlyOwner","nameLocations":["1580:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"1580:9:19"},"nodeType":"ModifierInvocation","src":"1580:9:19"}],"name":"burnBatch","nameLocation":"1462:9:19","nodeType":"FunctionDefinition","parameters":{"id":5031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5024,"mutability":"mutable","name":"from","nameLocation":"1498:4:19","nodeType":"VariableDeclaration","scope":5057,"src":"1481:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5022,"name":"address","nodeType":"ElementaryTypeName","src":"1481:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5023,"nodeType":"ArrayTypeName","src":"1481:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5027,"mutability":"mutable","name":"ids","nameLocation":"1529:3:19","nodeType":"VariableDeclaration","scope":5057,"src":"1512:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"1512:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5026,"nodeType":"ArrayTypeName","src":"1512:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5030,"mutability":"mutable","name":"amounts","nameLocation":"1559:7:19","nodeType":"VariableDeclaration","scope":5057,"src":"1542:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5029,"nodeType":"ArrayTypeName","src":"1542:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1471:101:19"},"returnParameters":{"id":5034,"nodeType":"ParameterList","parameters":[],"src":"1590:0:19"},"scope":5432,"src":"1453:253:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5077,"nodeType":"Block","src":"1852:49:19","statements":[{"expression":{"arguments":[{"id":5071,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"1868:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5072,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"1872:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5073,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"1881:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5074,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"1889:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5070,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"1862:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5076,"nodeType":"ExpressionStatement","src":"1862:32:19"}]},"functionSelector":"731133e9","id":5078,"implemented":true,"kind":"function","modifiers":[{"id":5068,"kind":"modifierInvocation","modifierName":{"id":5067,"name":"onlyController","nameLocations":["1837:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":4955,"src":"1837:14:19"},"nodeType":"ModifierInvocation","src":"1837:14:19"}],"name":"mint","nameLocation":"1721:4:19","nodeType":"FunctionDefinition","parameters":{"id":5066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"mutability":"mutable","name":"to","nameLocation":"1743:2:19","nodeType":"VariableDeclaration","scope":5078,"src":"1735:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5058,"name":"address","nodeType":"ElementaryTypeName","src":"1735:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5061,"mutability":"mutable","name":"tokenId","nameLocation":"1763:7:19","nodeType":"VariableDeclaration","scope":5078,"src":"1755:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1755:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5063,"mutability":"mutable","name":"amount","nameLocation":"1788:6:19","nodeType":"VariableDeclaration","scope":5078,"src":"1780:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1780:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5065,"mutability":"mutable","name":"data","nameLocation":"1817:4:19","nodeType":"VariableDeclaration","scope":5078,"src":"1804:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5064,"name":"bytes","nodeType":"ElementaryTypeName","src":"1804:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1725:102:19"},"returnParameters":{"id":5069,"nodeType":"ParameterList","parameters":[],"src":"1852:0:19"},"scope":5432,"src":"1712:189:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5095,"nodeType":"Block","src":"2022:45:19","statements":[{"expression":{"arguments":[{"id":5090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"2038:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5091,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"2044:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5092,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"2053:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5089,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"2032:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2032:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5094,"nodeType":"ExpressionStatement","src":"2032:28:19"}]},"functionSelector":"f5298aca","id":5096,"implemented":true,"kind":"function","modifiers":[{"id":5087,"kind":"modifierInvocation","modifierName":{"id":5086,"name":"onlyController","nameLocations":["2007:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":4955,"src":"2007:14:19"},"nodeType":"ModifierInvocation","src":"2007:14:19"}],"name":"burn","nameLocation":"1916:4:19","nodeType":"FunctionDefinition","parameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"from","nameLocation":"1938:4:19","nodeType":"VariableDeclaration","scope":5096,"src":"1930:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5079,"name":"address","nodeType":"ElementaryTypeName","src":"1930:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5082,"mutability":"mutable","name":"tokenId","nameLocation":"1960:7:19","nodeType":"VariableDeclaration","scope":5096,"src":"1952:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"1952:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5084,"mutability":"mutable","name":"amount","nameLocation":"1985:6:19","nodeType":"VariableDeclaration","scope":5096,"src":"1977:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"1977:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1920:77:19"},"returnParameters":{"id":5088,"nodeType":"ParameterList","parameters":[],"src":"2022:0:19"},"scope":5432,"src":"1907:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5136,"nodeType":"Block","src":"2137:271:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5102,"name":"exchangeTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"2155:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5105,"indexExpression":{"expression":{"id":5103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2169:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2173:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2169:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2155:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5106,"name":"exchangeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"2184:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2155:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6578636565642065786368616e6765206c696d6974","id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2199:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_11556822b0dbb84e42a57d7995abf090c129f85f99798a55739c0b2df8acb3f1","typeString":"literal_string \"exceed exchange limit\""},"value":"exceed exchange limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11556822b0dbb84e42a57d7995abf090c129f85f99798a55739c0b2df8acb3f1","typeString":"literal_string \"exceed exchange limit\""}],"id":5101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2147:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5110,"nodeType":"ExpressionStatement","src":"2147:76:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":5113,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2251:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2255:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2251:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5115,"name":"voucher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"2263:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5112,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2241:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"2275:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2241:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a206e6f7420656e6f75676820766f7563686572","id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2283:28:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6495068f22747f4702ada372c895e8589607dd29d4c382d701a9201403183e08","typeString":"literal_string \"HValue: not enough voucher\""},"value":"HValue: not enough voucher"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6495068f22747f4702ada372c895e8589607dd29d4c382d701a9201403183e08","typeString":"literal_string \"HValue: not enough voucher\""}],"id":5111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2233:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:79:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5121,"nodeType":"ExpressionStatement","src":"2233:79:19"},{"expression":{"arguments":[{"expression":{"id":5123,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2328:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2332:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2328:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5125,"name":"voucher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"2340:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5126,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"2349:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5122,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"2322:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2322:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5128,"nodeType":"ExpressionStatement","src":"2322:34:19"},{"expression":{"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5129,"name":"exchangeTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"2366:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5132,"indexExpression":{"expression":{"id":5130,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2380:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2384:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2380:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2366:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5133,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"2395:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2366:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5135,"nodeType":"ExpressionStatement","src":"2366:35:19"}]},"functionSelector":"9642903f","id":5137,"implemented":true,"kind":"function","modifiers":[],"name":"exchangeHoliday","nameLocation":"2082:15:19","nodeType":"FunctionDefinition","parameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"amount","nameLocation":"2115:6:19","nodeType":"VariableDeclaration","scope":5137,"src":"2107:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5097,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2097:30:19"},"returnParameters":{"id":5100,"nodeType":"ParameterList","parameters":[],"src":"2137:0:19"},"scope":5432,"src":"2073:335:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5191,"nodeType":"Block","src":"2462:397:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5145,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"2510:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5143,"name":"hashPunk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"2493:8:19","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$5451","typeString":"contract IHashPunk"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2502:7:19","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":5441,"src":"2493:16:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5147,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2522:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2526:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2522:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2493:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a206e6f742070756e6b206f776e6572","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2546:24:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_716d8e8655960bf2154053439ce31facdc46548c3a16249c94ec73f924c8ba9c","typeString":"literal_string \"HValue: not punk owner\""},"value":"HValue: not punk owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_716d8e8655960bf2154053439ce31facdc46548c3a16249c94ec73f924c8ba9c","typeString":"literal_string \"HValue: not punk owner\""}],"id":5142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2472:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2472:108:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5152,"nodeType":"ExpressionStatement","src":"2472:108:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5154,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"2611:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5155,"name":"luckyStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"2622:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2611:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5157,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"2636:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5158,"name":"luckyEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"2647:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2636:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2611:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4856616c75653a206e6f74206c75636b792070756e6b","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2669:24:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_aec0b404f50382a0e834a5f06508507c26b41f9bce791ef403d53b5948e659cd","typeString":"literal_string \"HValue: not lucky punk\""},"value":"HValue: not lucky punk"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aec0b404f50382a0e834a5f06508507c26b41f9bce791ef403d53b5948e659cd","typeString":"literal_string \"HValue: not lucky punk\""}],"id":5153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2590:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:113:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5163,"nodeType":"ExpressionStatement","src":"2590:113:19"},{"expression":{"arguments":[{"expression":{"id":5165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2719:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2723:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2719:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5167,"name":"Hpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"2731:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3730","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2739:2:19","typeDescriptions":{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},"value":"70"},{"hexValue":"","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2743:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":5164,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"2713:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5171,"nodeType":"ExpressionStatement","src":"2713:33:19"},{"expression":{"arguments":[{"expression":{"id":5173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2762:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2766:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2762:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5175,"name":"voucher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"2774:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2783:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5172,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"2756:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2756:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5178,"nodeType":"ExpressionStatement","src":"2756:29:19"},{"expression":{"arguments":[{"expression":{"id":5182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2817:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2821:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2817:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5186,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2837:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_HValue_$5432","typeString":"contract HValue"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HValue_$5432","typeString":"contract HValue"}],"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2829:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5184,"name":"address","nodeType":"ElementaryTypeName","src":"2829:7:19","typeDescriptions":{}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2829:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"2844:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5179,"name":"hashPunk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"2795:8:19","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$5451","typeString":"contract IHashPunk"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:12:19","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"2795:21:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2795:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5190,"nodeType":"ExpressionStatement","src":"2795:57:19"}]},"functionSelector":"a5afb7e0","id":5192,"implemented":true,"kind":"function","modifiers":[],"name":"exchangeHValue","nameLocation":"2423:14:19","nodeType":"FunctionDefinition","parameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5139,"mutability":"mutable","name":"tokenId","nameLocation":"2446:7:19","nodeType":"VariableDeclaration","scope":5192,"src":"2438:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5138,"name":"uint256","nodeType":"ElementaryTypeName","src":"2438:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2437:17:19"},"returnParameters":{"id":5141,"nodeType":"ParameterList","parameters":[],"src":"2462:0:19"},"scope":5432,"src":"2414:445:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5204,"nodeType":"Block","src":"2913:46:19","statements":[{"expression":{"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5197,"name":"exchangeTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"2923:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5200,"indexExpression":{"expression":{"id":5198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2937:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2941:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2937:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2923:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2951:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2923:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5203,"nodeType":"ExpressionStatement","src":"2923:29:19"}]},"functionSelector":"f96b7bf9","id":5205,"implemented":true,"kind":"function","modifiers":[{"id":5195,"kind":"modifierInvocation","modifierName":{"id":5194,"name":"onlyNewYear","nameLocations":["2902:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4969,"src":"2902:11:19"},"nodeType":"ModifierInvocation","src":"2902:11:19"}],"name":"resetExchangeTimes","nameLocation":"2874:18:19","nodeType":"FunctionDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[],"src":"2892:2:19"},"returnParameters":{"id":5196,"nodeType":"ParameterList","parameters":[],"src":"2913:0:19"},"scope":5432,"src":"2865:94:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5215,"nodeType":"Block","src":"3014:51:19","statements":[{"expression":{"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5210,"name":"currentTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"3024:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5211,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3043:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3049:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"3043:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3024:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5214,"nodeType":"ExpressionStatement","src":"3024:34:19"}]},"functionSelector":"6be55bb4","id":5216,"implemented":true,"kind":"function","modifiers":[{"id":5208,"kind":"modifierInvocation","modifierName":{"id":5207,"name":"onlyOwner","nameLocations":["3005:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"3005:9:19"},"nodeType":"ModifierInvocation","src":"3005:9:19"}],"name":"resetCurrentTimeStamp","nameLocation":"2974:21:19","nodeType":"FunctionDefinition","parameters":{"id":5206,"nodeType":"ParameterList","parameters":[],"src":"2995:2:19"},"returnParameters":{"id":5209,"nodeType":"ParameterList","parameters":[],"src":"3014:0:19"},"scope":5432,"src":"2965:100:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5228,"nodeType":"Block","src":"3130:37:19","statements":[{"expression":{"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5224,"name":"hashPunk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"3140:8:19","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$5451","typeString":"contract IHashPunk"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5225,"name":"_hashPunk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"3151:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$5451","typeString":"contract IHashPunk"}},"src":"3140:20:19","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$5451","typeString":"contract IHashPunk"}},"id":5227,"nodeType":"ExpressionStatement","src":"3140:20:19"}]},"functionSelector":"887be052","id":5229,"implemented":true,"kind":"function","modifiers":[{"id":5222,"kind":"modifierInvocation","modifierName":{"id":5221,"name":"onlyOwner","nameLocations":["3120:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"3120:9:19"},"nodeType":"ModifierInvocation","src":"3120:9:19"}],"name":"setHashPunk","nameLocation":"3080:11:19","nodeType":"FunctionDefinition","parameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5219,"mutability":"mutable","name":"_hashPunk","nameLocation":"3102:9:19","nodeType":"VariableDeclaration","scope":5229,"src":"3092:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$5451","typeString":"contract IHashPunk"},"typeName":{"id":5218,"nodeType":"UserDefinedTypeName","pathNode":{"id":5217,"name":"IHashPunk","nameLocations":["3092:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":5451,"src":"3092:9:19"},"referencedDeclaration":5451,"src":"3092:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$5451","typeString":"contract IHashPunk"}},"visibility":"internal"}],"src":"3091:21:19"},"returnParameters":{"id":5223,"nodeType":"ParameterList","parameters":[],"src":"3130:0:19"},"scope":5432,"src":"3071:96:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5240,"nodeType":"Block","src":"3237:42:19","statements":[{"expression":{"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5236,"name":"baseMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"3247:15:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5237,"name":"baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"3265:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3247:25:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5239,"nodeType":"ExpressionStatement","src":"3247:25:19"}]},"functionSelector":"a0bcfc7f","id":5241,"implemented":true,"kind":"function","modifiers":[{"id":5234,"kind":"modifierInvocation","modifierName":{"id":5233,"name":"onlyOwner","nameLocations":["3227:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"3227:9:19"},"nodeType":"ModifierInvocation","src":"3227:9:19"}],"name":"setBaseUri","nameLocation":"3186:10:19","nodeType":"FunctionDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5231,"mutability":"mutable","name":"baseUri","nameLocation":"3211:7:19","nodeType":"VariableDeclaration","scope":5241,"src":"3197:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5230,"name":"string","nodeType":"ElementaryTypeName","src":"3197:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3196:23:19"},"returnParameters":{"id":5235,"nodeType":"ParameterList","parameters":[],"src":"3237:0:19"},"scope":5432,"src":"3177:102:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5252,"nodeType":"Block","src":"3346:41:19","statements":[{"expression":{"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5248,"name":"controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"3356:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5249,"name":"_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"3369:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3356:24:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5251,"nodeType":"ExpressionStatement","src":"3356:24:19"}]},"functionSelector":"92eefe9b","id":5253,"implemented":true,"kind":"function","modifiers":[{"id":5246,"kind":"modifierInvocation","modifierName":{"id":5245,"name":"onlyOwner","nameLocations":["3336:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"3336:9:19"},"nodeType":"ModifierInvocation","src":"3336:9:19"}],"name":"setController","nameLocation":"3294:13:19","nodeType":"FunctionDefinition","parameters":{"id":5244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5243,"mutability":"mutable","name":"_controller","nameLocation":"3316:11:19","nodeType":"VariableDeclaration","scope":5253,"src":"3308:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5242,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3307:21:19"},"returnParameters":{"id":5247,"nodeType":"ParameterList","parameters":[],"src":"3346:0:19"},"scope":5432,"src":"3285:102:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[273],"body":{"id":5272,"nodeType":"Block","src":"3472:85:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":5265,"name":"baseMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"3513:15:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[{"id":5267,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"3540:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5266,"name":"_uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"3530:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3530:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":5263,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3496:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3500:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"3496:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5261,"name":"string","nodeType":"ElementaryTypeName","src":"3489:6:19","typeDescriptions":{}}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3489:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5260,"id":5271,"nodeType":"Return","src":"3482:68:19"}]},"functionSelector":"0e89341c","id":5273,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"3406:3:19","nodeType":"FunctionDefinition","overrides":{"id":5257,"nodeType":"OverrideSpecifier","overrides":[],"src":"3439:8:19"},"parameters":{"id":5256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5255,"mutability":"mutable","name":"tokenId","nameLocation":"3418:7:19","nodeType":"VariableDeclaration","scope":5273,"src":"3410:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5254,"name":"uint256","nodeType":"ElementaryTypeName","src":"3410:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3409:17:19"},"returnParameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5273,"src":"3457:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5258,"name":"string","nodeType":"ElementaryTypeName","src":"3457:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3456:15:19"},"scope":5432,"src":"3397:160:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5319,"nodeType":"Block","src":"3625:212:19","statements":[{"assignments":[5283],"declarations":[{"constant":false,"id":5283,"mutability":"mutable","name":"res","nameLocation":"3652:3:19","nodeType":"VariableDeclaration","scope":5319,"src":"3635:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5281,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5282,"nodeType":"ArrayTypeName","src":"3635:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5293,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5287,"name":"luckyEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"3672:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5288,"name":"luckyStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"3683:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3672:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3696:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3672:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3658:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5284,"name":"address","nodeType":"ElementaryTypeName","src":"3662:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5285,"nodeType":"ArrayTypeName","src":"3662:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3658:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3635:63:19"},{"body":{"id":5315,"nodeType":"Block","src":"3754:57:19","statements":[{"expression":{"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5304,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"3768:3:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5308,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"3772:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3776:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3772:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3768:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5311,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"3798:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5309,"name":"hashPunk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"3781:8:19","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$5451","typeString":"contract IHashPunk"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3790:7:19","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":5441,"src":"3781:16:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3781:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3768:32:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5314,"nodeType":"ExpressionStatement","src":"3768:32:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"3734:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5299,"name":"luckyEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"3739:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3734:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5316,"initializationExpression":{"assignments":[5295],"declarations":[{"constant":false,"id":5295,"mutability":"mutable","name":"i","nameLocation":"3718:1:19","nodeType":"VariableDeclaration","scope":5316,"src":"3713:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5294,"name":"uint","nodeType":"ElementaryTypeName","src":"3713:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5297,"initialValue":{"id":5296,"name":"luckyStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"3722:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3713:19:19"},"loopExpression":{"expression":{"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3749:3:19","subExpression":{"id":5301,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"3749:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5303,"nodeType":"ExpressionStatement","src":"3749:3:19"},"nodeType":"ForStatement","src":"3708:103:19"},{"expression":{"id":5317,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"3827:3:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5278,"id":5318,"nodeType":"Return","src":"3820:10:19"}]},"functionSelector":"f11b1fdd","id":5320,"implemented":true,"kind":"function","modifiers":[],"name":"rareAddress","nameLocation":"3572:11:19","nodeType":"FunctionDefinition","parameters":{"id":5274,"nodeType":"ParameterList","parameters":[],"src":"3583:2:19"},"returnParameters":{"id":5278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5320,"src":"3607:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5275,"name":"address","nodeType":"ElementaryTypeName","src":"3607:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5276,"nodeType":"ArrayTypeName","src":"3607:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3606:18:19"},"scope":5432,"src":"3563:274:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5335,"nodeType":"Block","src":"3903:68:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5327,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"3920:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5328,"name":"luckyStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"3931:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3920:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"3945:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5331,"name":"luckyEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"3956:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3945:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3920:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5326,"id":5334,"nodeType":"Return","src":"3913:51:19"}]},"functionSelector":"1fe09da3","id":5336,"implemented":true,"kind":"function","modifiers":[],"name":"isRare","nameLocation":"3852:6:19","nodeType":"FunctionDefinition","parameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5322,"mutability":"mutable","name":"tokenId","nameLocation":"3867:7:19","nodeType":"VariableDeclaration","scope":5336,"src":"3859:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3858:17:19"},"returnParameters":{"id":5326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5336,"src":"3897:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5324,"name":"bool","nodeType":"ElementaryTypeName","src":"3897:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3896:6:19"},"scope":5432,"src":"3843:128:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5430,"nodeType":"Block","src":"4046:487:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5343,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"4060:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4066:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4060:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5349,"nodeType":"IfStatement","src":"4056:48:19","trueBody":{"id":5348,"nodeType":"Block","src":"4069:35:19","statements":[{"expression":{"hexValue":"30","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4090:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":5342,"id":5347,"nodeType":"Return","src":"4083:10:19"}]}},{"assignments":[5351],"declarations":[{"constant":false,"id":5351,"mutability":"mutable","name":"j","nameLocation":"4121:1:19","nodeType":"VariableDeclaration","scope":5430,"src":"4113:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5350,"name":"uint256","nodeType":"ElementaryTypeName","src":"4113:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5353,"initialValue":{"id":5352,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"4125:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4113:14:19"},{"assignments":[5355],"declarations":[{"constant":false,"id":5355,"mutability":"mutable","name":"len","nameLocation":"4145:3:19","nodeType":"VariableDeclaration","scope":5430,"src":"4137:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5354,"name":"uint256","nodeType":"ElementaryTypeName","src":"4137:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5356,"nodeType":"VariableDeclarationStatement","src":"4137:11:19"},{"body":{"id":5367,"nodeType":"Block","src":"4173:51:19","statements":[{"expression":{"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4187:5:19","subExpression":{"id":5360,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"4187:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5362,"nodeType":"ExpressionStatement","src":"4187:5:19"},{"expression":{"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5363,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"4206:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4211:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4206:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5366,"nodeType":"ExpressionStatement","src":"4206:7:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5357,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"4165:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4170:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4165:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5368,"nodeType":"WhileStatement","src":"4158:66:19"},{"assignments":[5370],"declarations":[{"constant":false,"id":5370,"mutability":"mutable","name":"bStr","nameLocation":"4246:4:19","nodeType":"VariableDeclaration","scope":5430,"src":"4233:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5369,"name":"bytes","nodeType":"ElementaryTypeName","src":"4233:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5375,"initialValue":{"arguments":[{"id":5373,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"4263:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4253:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5371,"name":"bytes","nodeType":"ElementaryTypeName","src":"4257:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4233:34:19"},{"assignments":[5377],"declarations":[{"constant":false,"id":5377,"mutability":"mutable","name":"k","nameLocation":"4285:1:19","nodeType":"VariableDeclaration","scope":5430,"src":"4277:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5376,"name":"uint256","nodeType":"ElementaryTypeName","src":"4277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5379,"initialValue":{"id":5378,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"4289:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4277:15:19"},{"body":{"id":5423,"nodeType":"Block","src":"4318:180:19","statements":[{"expression":{"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5383,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"4332:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5384,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"4336:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4340:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4336:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4332:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5388,"nodeType":"ExpressionStatement","src":"4332:9:19"},{"assignments":[5390],"declarations":[{"constant":false,"id":5390,"mutability":"mutable","name":"temp","nameLocation":"4361:4:19","nodeType":"VariableDeclaration","scope":5423,"src":"4355:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5389,"name":"uint8","nodeType":"ElementaryTypeName","src":"4355:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5405,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":5391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4369:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5394,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"4380:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5395,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"4386:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4391:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4386:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4385:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4397:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4385:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4380:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5392,"name":"uint8","nodeType":"ElementaryTypeName","src":"4374:5:19","typeDescriptions":{}}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4369:31:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4368:33:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4355:46:19"},{"assignments":[5407],"declarations":[{"constant":false,"id":5407,"mutability":"mutable","name":"b1","nameLocation":"4422:2:19","nodeType":"VariableDeclaration","scope":5423,"src":"4415:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5406,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4415:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5412,"initialValue":{"arguments":[{"id":5410,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"4434:4:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4427:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5408,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4427:6:19","typeDescriptions":{}}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4427:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"4415:24:19"},{"expression":{"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5413,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"4453:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5415,"indexExpression":{"id":5414,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"4458:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4453:7:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5416,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"4463:2:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4453:12:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5418,"nodeType":"ExpressionStatement","src":"4453:12:19"},{"expression":{"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5419,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"4479:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4485:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4479:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5422,"nodeType":"ExpressionStatement","src":"4479:8:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5380,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"4309:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4315:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4309:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5424,"nodeType":"WhileStatement","src":"4302:196:19"},{"expression":{"arguments":[{"id":5427,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"4521:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4514:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5425,"name":"string","nodeType":"ElementaryTypeName","src":"4514:6:19","typeDescriptions":{}}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5342,"id":5429,"nodeType":"Return","src":"4507:19:19"}]},"id":5431,"implemented":true,"kind":"function","modifiers":[],"name":"_uint2str","nameLocation":"3986:9:19","nodeType":"FunctionDefinition","parameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5338,"mutability":"mutable","name":"_i","nameLocation":"4004:2:19","nodeType":"VariableDeclaration","scope":5431,"src":"3996:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5337,"name":"uint256","nodeType":"ElementaryTypeName","src":"3996:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:12:19"},"returnParameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5431,"src":"4031:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5340,"name":"string","nodeType":"ElementaryTypeName","src":"4031:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4030:15:19"},"scope":5432,"src":"3977:556:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5433,"src":"242:4293:19","usedErrors":[]}],"src":"32:4504:19"},"id":19},"contracts/HValueStorage.sol":{"ast":{"absolutePath":"contracts/HValueStorage.sol","exportedSymbols":{"HValueStorage":[5493],"IHashPunk":[5451]},"id":5494,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5434,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IHashPunk","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5451,"linearizedBaseContracts":[5451],"name":"IHashPunk","nameLocation":"68:9:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6352211e","id":5441,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"93:7:20","nodeType":"FunctionDefinition","parameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"tokenId","nameLocation":"109:7:20","nodeType":"VariableDeclaration","scope":5441,"src":"101:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"101:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100:17:20"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"owner","nameLocation":"149:5:20","nodeType":"VariableDeclaration","scope":5441,"src":"141:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5438,"name":"address","nodeType":"ElementaryTypeName","src":"141:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"140:15:20"},"scope":5451,"src":"84:72:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":5450,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"171:12:20","nodeType":"FunctionDefinition","parameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"from","nameLocation":"201:4:20","nodeType":"VariableDeclaration","scope":5450,"src":"193:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5442,"name":"address","nodeType":"ElementaryTypeName","src":"193:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5445,"mutability":"mutable","name":"to","nameLocation":"223:2:20","nodeType":"VariableDeclaration","scope":5450,"src":"215:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5444,"name":"address","nodeType":"ElementaryTypeName","src":"215:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5447,"mutability":"mutable","name":"tokenId","nameLocation":"243:7:20","nodeType":"VariableDeclaration","scope":5450,"src":"235:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5446,"name":"uint256","nodeType":"ElementaryTypeName","src":"235:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"183:73:20"},"returnParameters":{"id":5449,"nodeType":"ParameterList","parameters":[],"src":"265:0:20"},"scope":5451,"src":"162:104:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5494,"src":"58:210:20","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"HValueStorage","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5493,"linearizedBaseContracts":[5493],"name":"HValueStorage","nameLocation":"279:13:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":5453,"mutability":"mutable","name":"name","nameLocation":"325:4:20","nodeType":"VariableDeclaration","scope":5493,"src":"299:30:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5452,"name":"string","nodeType":"ElementaryTypeName","src":"299:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":5455,"mutability":"mutable","name":"symbol","nameLocation":"361:6:20","nodeType":"VariableDeclaration","scope":5493,"src":"335:32:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5454,"name":"string","nodeType":"ElementaryTypeName","src":"335:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":5457,"mutability":"mutable","name":"owner","nameLocation":"399:5:20","nodeType":"VariableDeclaration","scope":5493,"src":"373:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5456,"name":"address","nodeType":"ElementaryTypeName","src":"373:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f77c4791","id":5459,"mutability":"mutable","name":"controller","nameLocation":"436:10:20","nodeType":"VariableDeclaration","scope":5493,"src":"410:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5458,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9ba138c8","id":5462,"mutability":"mutable","name":"hashPunk","nameLocation":"478:8:20","nodeType":"VariableDeclaration","scope":5493,"src":"452:34:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$5451","typeString":"contract IHashPunk"},"typeName":{"id":5461,"nodeType":"UserDefinedTypeName","pathNode":{"id":5460,"name":"IHashPunk","nameLocations":["452:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":5451,"src":"452:9:20"},"referencedDeclaration":5451,"src":"452:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IHashPunk_$5451","typeString":"contract IHashPunk"}},"visibility":"public"},{"constant":false,"functionSelector":"340a9a1c","id":5464,"mutability":"mutable","name":"currentTimeStamp","nameLocation":"518:16:20","nodeType":"VariableDeclaration","scope":5493,"src":"492:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"492:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5b2bd79e","id":5466,"mutability":"mutable","name":"baseMetadataURI","nameLocation":"566:15:20","nodeType":"VariableDeclaration","scope":5493,"src":"540:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5465,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"444b7aaf","id":5469,"mutability":"mutable","name":"passId","nameLocation":"613:6:20","nodeType":"VariableDeclaration","scope":5493,"src":"587:46:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5467,"name":"uint256","nodeType":"ElementaryTypeName","src":"587:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"632:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"83d18f7a","id":5472,"mutability":"mutable","name":"Hpoint","nameLocation":"665:6:20","nodeType":"VariableDeclaration","scope":5493,"src":"639:46:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5470,"name":"uint256","nodeType":"ElementaryTypeName","src":"639:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"684:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":false,"functionSelector":"cdda418c","id":5475,"mutability":"mutable","name":"voucher","nameLocation":"717:7:20","nodeType":"VariableDeclaration","scope":5493,"src":"691:46:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5473,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"736:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":false,"functionSelector":"0e471525","id":5478,"mutability":"mutable","name":"luckyStart","nameLocation":"769:10:20","nodeType":"VariableDeclaration","scope":5493,"src":"743:46:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5476,"name":"uint256","nodeType":"ElementaryTypeName","src":"743:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"788:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"f7e056ee","id":5481,"mutability":"mutable","name":"luckyEnd","nameLocation":"821:8:20","nodeType":"VariableDeclaration","scope":5493,"src":"795:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5479,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"840:3:20","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"public"},{"constant":false,"functionSelector":"d717b05e","id":5484,"mutability":"mutable","name":"exchangeLimit","nameLocation":"875:13:20","nodeType":"VariableDeclaration","scope":5493,"src":"849:46:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"894:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":false,"functionSelector":"8b0bb069","id":5488,"mutability":"mutable","name":"exchangeTimes","nameLocation":"937:13:20","nodeType":"VariableDeclaration","scope":5493,"src":"902:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":5487,"keyType":{"id":5485,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"902:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":5486,"name":"uint256","nodeType":"ElementaryTypeName","src":"921:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"4c25e11f","id":5492,"mutability":"mutable","name":"negtiveValue","nameLocation":"991:12:20","nodeType":"VariableDeclaration","scope":5493,"src":"956:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":5491,"keyType":{"id":5489,"name":"address","nodeType":"ElementaryTypeName","src":"964:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"956:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":5490,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"}],"scope":5494,"src":"270:736:20","usedErrors":[]}],"src":"32:974:20"},"id":20},"contracts/HashPunk.sol":{"ast":{"absolutePath":"contracts/HashPunk.sol","exportedSymbols":{"Address":[2754],"AddressUpgradeable":[2213],"ContextUpgradeable":[2255],"ERC165Upgradeable":[2299],"ERC721rUpgradeable":[4889],"HashPunk":[5938],"HashPunkStorage":[6022],"IERC165Upgradeable":[2311],"IERC721MetadataUpgradeable":[1929],"IERC721ReceiverUpgradeable":[1786],"IERC721Upgradeable":[1902],"IHValue":[5990],"Initializable":[168],"Math":[3816],"Strings":[2951]},"id":5939,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5495,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:21"},{"absolutePath":"contracts/ERC721rUpgradeable.sol","file":"./ERC721rUpgradeable.sol","id":5496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5939,"sourceUnit":4890,"src":"57:34:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/HashPunkStorage.sol","file":"./HashPunkStorage.sol","id":5497,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5939,"sourceUnit":6023,"src":"92:31:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5498,"name":"ERC721rUpgradeable","nameLocations":["146:18:21"],"nodeType":"IdentifierPath","referencedDeclaration":4889,"src":"146:18:21"},"id":5499,"nodeType":"InheritanceSpecifier","src":"146:18:21"},{"baseName":{"id":5500,"name":"HashPunkStorage","nameLocations":["166:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":6022,"src":"166:15:21"},"id":5501,"nodeType":"InheritanceSpecifier","src":"166:15:21"}],"canonicalName":"HashPunk","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5938,"linearizedBaseContracts":[5938,6022,4889,1929,1902,2299,2311,2255,168],"name":"HashPunk","nameLocation":"134:8:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":5543,"nodeType":"Block","src":"339:206:21","statements":[{"expression":{"arguments":[{"hexValue":"4861736850756e6b","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"364:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac0d6ed64137f6afa90a7b9bbb0d58a2fa6368ce863dd7a803d62c2d0eeee843","typeString":"literal_string \"HashPunk\""},"value":"HashPunk"},{"hexValue":"4850","id":5516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"376:4:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3b26fd170457b532f6b1a50a94e6c19413ca9d8e71b5b17acf8cafc843385d7","typeString":"literal_string \"HP\""},"value":"HP"},{"hexValue":"33303030","id":5517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"382:4:21","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ac0d6ed64137f6afa90a7b9bbb0d58a2fa6368ce863dd7a803d62c2d0eeee843","typeString":"literal_string \"HashPunk\""},{"typeIdentifier":"t_stringliteral_a3b26fd170457b532f6b1a50a94e6c19413ca9d8e71b5b17acf8cafc843385d7","typeString":"literal_string \"HP\""},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"id":5514,"name":"__ERC721r_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"349:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,string memory,uint256)"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"349:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5519,"nodeType":"ExpressionStatement","src":"349:38:21"},{"expression":{"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5520,"name":"passIdBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"397:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5521,"name":"_passIdBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"410:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"397:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5523,"nodeType":"ExpressionStatement","src":"397:24:21"},{"expression":{"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5524,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"431:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5525,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"438:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"431:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5527,"nodeType":"ExpressionStatement","src":"431:12:21"},{"expression":{"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5528,"name":"hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"453:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5530,"name":"_hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"470:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5529,"name":"IHValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"462:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHValue_$5990_$","typeString":"type(contract IHValue)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"462:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"src":"453:25:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"id":5533,"nodeType":"ExpressionStatement","src":"453:25:21"},{"expression":{"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5534,"name":"baseMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"488:15:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5535,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"506:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"488:22:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5537,"nodeType":"ExpressionStatement","src":"488:22:21"},{"expression":{"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5538,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"520:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"528:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"532:6:21","memberName":"sender","nodeType":"MemberAccess","src":"528:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"520:18:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5542,"nodeType":"ExpressionStatement","src":"520:18:21"}]},"functionSelector":"1e214f06","id":5544,"implemented":true,"kind":"function","modifiers":[{"id":5512,"kind":"modifierInvocation","modifierName":{"id":5511,"name":"initializer","nameLocations":["327:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":70,"src":"327:11:21"},"nodeType":"ModifierInvocation","src":"327:11:21"}],"name":"initialize","nameLocation":"198:10:21","nodeType":"FunctionDefinition","parameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"_uri","nameLocation":"232:4:21","nodeType":"VariableDeclaration","scope":5544,"src":"218:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5502,"name":"string","nodeType":"ElementaryTypeName","src":"218:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5505,"mutability":"mutable","name":"_hValue","nameLocation":"254:7:21","nodeType":"VariableDeclaration","scope":5544,"src":"246:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5504,"name":"address","nodeType":"ElementaryTypeName","src":"246:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5507,"mutability":"mutable","name":"_base","nameLocation":"279:5:21","nodeType":"VariableDeclaration","scope":5544,"src":"271:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5506,"name":"uint256","nodeType":"ElementaryTypeName","src":"271:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5509,"mutability":"mutable","name":"_passIdBase","nameLocation":"302:11:21","nodeType":"VariableDeclaration","scope":5544,"src":"294:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5508,"name":"uint256","nodeType":"ElementaryTypeName","src":"294:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"208:111:21"},"returnParameters":{"id":5513,"nodeType":"ParameterList","parameters":[],"src":"339:0:21"},"scope":5938,"src":"189:356:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5555,"nodeType":"Block","src":"572:127:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5547,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"603:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"607:6:21","memberName":"sender","nodeType":"MemberAccess","src":"603:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"617:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"603:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4861736850756e6b3a2063616c6c6572206973206e6f7420746865206f776e6572","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"636:35:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_71947446ca525a6f47b4c26e39d45a716107b5eb5547cf11856e8d61c0fa00ba","typeString":"literal_string \"HashPunk: caller is not the owner\""},"value":"HashPunk: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71947446ca525a6f47b4c26e39d45a716107b5eb5547cf11856e8d61c0fa00ba","typeString":"literal_string \"HashPunk: caller is not the owner\""}],"id":5546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"582:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"582:99:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5553,"nodeType":"ExpressionStatement","src":"582:99:21"},{"id":5554,"nodeType":"PlaceholderStatement","src":"691:1:21"}]},"id":5556,"name":"onlyOwner","nameLocation":"560:9:21","nodeType":"ModifierDefinition","parameters":{"id":5545,"nodeType":"ParameterList","parameters":[],"src":"569:2:21"},"src":"551:148:21","virtual":false,"visibility":"internal"},{"body":{"id":5718,"nodeType":"Block","src":"754:963:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5564,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"772:2:21","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"775:6:21","memberName":"origin","nodeType":"MemberAccess","src":"772:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5566,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"785:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"789:6:21","memberName":"sender","nodeType":"MemberAccess","src":"785:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"772:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"797:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":5563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"764:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"764:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5571,"nodeType":"ExpressionStatement","src":"764:36:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5573,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"818:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5574,"name":"passId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"824:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"818:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"834:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5577,"name":"Hpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"840:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"834:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"818:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964206964","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"848:12:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526","typeString":"literal_string \"invalid id\""},"value":"invalid id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526","typeString":"literal_string \"invalid id\""}],"id":5572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"810:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"810:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5582,"nodeType":"ExpressionStatement","src":"810:51:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5583,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"875:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5584,"name":"passId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"881:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"875:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5629,"nodeType":"IfStatement","src":"871:329:21","trueBody":{"id":5628,"nodeType":"Block","src":"889:311:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":5589,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"928:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"932:6:21","memberName":"sender","nodeType":"MemberAccess","src":"928:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5591,"name":"passId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"940:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5587,"name":"hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"911:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"918:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":5949,"src":"911:16:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"911:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5593,"name":"passIdBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"951:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5594,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"964:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"951:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"911:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e74205061737320436172642062616c616e6365","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"972:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc7e415b4d71800746fd56cd2e9f99a70019c07d161e9e43d2fe64c358808e78","typeString":"literal_string \"insufficient Pass Card balance\""},"value":"insufficient Pass Card balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc7e415b4d71800746fd56cd2e9f99a70019c07d161e9e43d2fe64c358808e78","typeString":"literal_string \"insufficient Pass Card balance\""}],"id":5586,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"903:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:102:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5599,"nodeType":"ExpressionStatement","src":"903:102:21"},{"expression":{"arguments":[{"expression":{"id":5603,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1031:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1035:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1031:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5605,"name":"passId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"1043:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"passIdBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"1051:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5607,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"1064:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1051:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5600,"name":"hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"1019:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:4:21","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":5971,"src":"1019:11:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1019:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5610,"nodeType":"ExpressionStatement","src":"1019:52:21"},{"expression":{"arguments":[{"expression":{"id":5612,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1097:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1101:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1097:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5614,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"1109:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5611,"name":"_mintRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1085:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,uint256) returns (uint256[] memory)"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1085:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5616,"nodeType":"ExpressionStatement","src":"1085:31:21"},{"expression":{"arguments":[{"expression":{"id":5620,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1142:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1146:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1142:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5622,"name":"voucher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"1154:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1163:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1166:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":5617,"name":"hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"1130:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1137:4:21","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":5982,"src":"1130:11:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory) external"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1130:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5626,"nodeType":"ExpressionStatement","src":"1130:39:21"},{"functionReturnParameters":5562,"id":5627,"nodeType":"Return","src":"1183:7:21"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":5633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1234:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1238:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1234:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5635,"name":"Hpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"1246:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5631,"name":"hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"1217:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1224:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":5949,"src":"1217:16:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1217:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"expression":{"id":5639,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1276:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1280:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1276:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5637,"name":"hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"1256:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1263:12:21","memberName":"negtiveValue","nodeType":"MemberAccess","referencedDeclaration":5989,"src":"1256:19:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1256:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1217:70:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5643,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"1291:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5644,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"1298:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1291:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1217:87:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e74204856616c75652062616c616e6365","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1306:29:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8dab769bb3e1b4a60276b85ee01ccc68a7073052ca1cb5124502172cc6982bf4","typeString":"literal_string \"insufficient HValue balance\""},"value":"insufficient HValue balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8dab769bb3e1b4a60276b85ee01ccc68a7073052ca1cb5124502172cc6982bf4","typeString":"literal_string \"insufficient HValue balance\""}],"id":5630,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1209:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1209:127:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5649,"nodeType":"ExpressionStatement","src":"1209:127:21"},{"expression":{"arguments":[{"expression":{"id":5653,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1358:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1362:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1358:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5655,"name":"Hpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"1370:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5656,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"1378:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5657,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"1385:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1378:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5650,"name":"hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"1346:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1353:4:21","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":5971,"src":"1346:11:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1346:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5660,"nodeType":"ExpressionStatement","src":"1346:46:21"},{"assignments":[5665],"declarations":[{"constant":false,"id":5665,"mutability":"mutable","name":"tokenIds","nameLocation":"1416:8:21","nodeType":"VariableDeclaration","scope":5718,"src":"1402:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5663,"name":"uint","nodeType":"ElementaryTypeName","src":"1402:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5664,"nodeType":"ArrayTypeName","src":"1402:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5671,"initialValue":{"arguments":[{"expression":{"id":5667,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1439:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1443:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1439:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5669,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"1451:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5666,"name":"_mintRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1427:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,uint256) returns (uint256[] memory)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1427:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1402:56:21"},{"body":{"id":5706,"nodeType":"Block","src":"1510:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5683,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"1527:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5685,"indexExpression":{"id":5684,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"1536:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1527:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5686,"name":"luckyStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"1540:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1527:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5688,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"1554:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5690,"indexExpression":{"id":5689,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"1563:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1554:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5691,"name":"luckyEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"1567:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1554:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1527:48:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5705,"nodeType":"IfStatement","src":"1524:128:21","trueBody":{"id":5704,"nodeType":"Block","src":"1577:75:21","statements":[{"expression":{"arguments":[{"baseExpression":{"id":5699,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"1625:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5701,"indexExpression":{"id":5700,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"1634:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1625:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":5694,"name":"userToRareIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"1594:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":5697,"indexExpression":{"expression":{"id":5695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1608:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1608:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1594:25:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:4:21","memberName":"push","nodeType":"MemberAccess","src":"1594:30:21","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1594:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5703,"nodeType":"ExpressionStatement","src":"1594:43:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5676,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"1484:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5677,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"1488:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1497:6:21","memberName":"length","nodeType":"MemberAccess","src":"1488:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1484:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5707,"initializationExpression":{"assignments":[5673],"declarations":[{"constant":false,"id":5673,"mutability":"mutable","name":"i","nameLocation":"1477:1:21","nodeType":"VariableDeclaration","scope":5707,"src":"1472:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5672,"name":"uint","nodeType":"ElementaryTypeName","src":"1472:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5675,"initialValue":{"hexValue":"30","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1481:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1472:10:21"},"loopExpression":{"expression":{"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1505:3:21","subExpression":{"id":5680,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"1505:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5682,"nodeType":"ExpressionStatement","src":"1505:3:21"},"nodeType":"ForStatement","src":"1468:194:21"},{"expression":{"arguments":[{"expression":{"id":5711,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1683:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1687:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1683:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5713,"name":"voucher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"1695:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1704:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":5708,"name":"hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"1671:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:4:21","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":5982,"src":"1671:11:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory) external"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1671:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5717,"nodeType":"ExpressionStatement","src":"1671:39:21"}]},"functionSelector":"1b2ef1ca","id":5719,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"714:4:21","nodeType":"FunctionDefinition","parameters":{"id":5561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"id","nameLocation":"727:2:21","nodeType":"VariableDeclaration","scope":5719,"src":"719:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"719:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5560,"mutability":"mutable","name":"amount","nameLocation":"739:6:21","nodeType":"VariableDeclaration","scope":5719,"src":"731:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5559,"name":"uint256","nodeType":"ElementaryTypeName","src":"731:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"718:28:21"},"returnParameters":{"id":5562,"nodeType":"ParameterList","parameters":[],"src":"754:0:21"},"scope":5938,"src":"705:1012:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5731,"nodeType":"Block","src":"1836:42:21","statements":[{"expression":{"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5727,"name":"baseMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"1846:15:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5728,"name":"baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"1864:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1846:25:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5730,"nodeType":"ExpressionStatement","src":"1846:25:21"}]},"documentation":{"id":5720,"nodeType":"StructuredDocumentation","src":"1723:46:21","text":" Sets a new baseURI for NFT."},"functionSelector":"a0bcfc7f","id":5732,"implemented":true,"kind":"function","modifiers":[{"id":5725,"kind":"modifierInvocation","modifierName":{"id":5724,"name":"onlyOwner","nameLocations":["1826:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":5556,"src":"1826:9:21"},"nodeType":"ModifierInvocation","src":"1826:9:21"}],"name":"setBaseUri","nameLocation":"1783:10:21","nodeType":"FunctionDefinition","parameters":{"id":5723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5722,"mutability":"mutable","name":"baseUri","nameLocation":"1808:7:21","nodeType":"VariableDeclaration","scope":5732,"src":"1794:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5721,"name":"string","nodeType":"ElementaryTypeName","src":"1794:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1793:23:21"},"returnParameters":{"id":5726,"nodeType":"ParameterList","parameters":[],"src":"1836:0:21"},"scope":5938,"src":"1774:104:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4070],"body":{"id":5752,"nodeType":"Block","src":"2076:85:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":5745,"name":"baseMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"2117:15:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[{"id":5747,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"2144:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5746,"name":"_uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"2134:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2134:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":5743,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2100:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2104:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2100:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2100:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2093:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5741,"name":"string","nodeType":"ElementaryTypeName","src":"2093:6:21","typeDescriptions":{}}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2093:61:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5740,"id":5751,"nodeType":"Return","src":"2086:68:21"}]},"documentation":{"id":5733,"nodeType":"StructuredDocumentation","src":"1884:55:21","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":5753,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1953:8:21","nodeType":"FunctionDefinition","overrides":{"id":5737,"nodeType":"OverrideSpecifier","overrides":[],"src":"2031:8:21"},"parameters":{"id":5736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5735,"mutability":"mutable","name":"tokenId","nameLocation":"1970:7:21","nodeType":"VariableDeclaration","scope":5753,"src":"1962:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1962:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1961:17:21"},"returnParameters":{"id":5740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5753,"src":"2057:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5738,"name":"string","nodeType":"ElementaryTypeName","src":"2057:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2056:15:21"},"scope":5938,"src":"1944:217:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":5764,"nodeType":"Block","src":"2228:41:21","statements":[{"expression":{"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5760,"name":"passIdBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"2238:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5761,"name":"_passIdBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"2251:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5763,"nodeType":"ExpressionStatement","src":"2238:24:21"}]},"functionSelector":"89be0ad1","id":5765,"implemented":true,"kind":"function","modifiers":[{"id":5758,"kind":"modifierInvocation","modifierName":{"id":5757,"name":"onlyOwner","nameLocations":["2218:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":5556,"src":"2218:9:21"},"nodeType":"ModifierInvocation","src":"2218:9:21"}],"name":"setPassIdBase","nameLocation":"2176:13:21","nodeType":"FunctionDefinition","parameters":{"id":5756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5755,"mutability":"mutable","name":"_passIdBase","nameLocation":"2198:11:21","nodeType":"VariableDeclaration","scope":5765,"src":"2190:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2189:21:21"},"returnParameters":{"id":5759,"nodeType":"ParameterList","parameters":[],"src":"2228:0:21"},"scope":5938,"src":"2167:102:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5776,"nodeType":"Block","src":"2324:29:21","statements":[{"expression":{"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5772,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"2334:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5773,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"2341:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2334:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5775,"nodeType":"ExpressionStatement","src":"2334:12:21"}]},"functionSelector":"38e80f68","id":5777,"implemented":true,"kind":"function","modifiers":[{"id":5770,"kind":"modifierInvocation","modifierName":{"id":5769,"name":"onlyOwner","nameLocations":["2314:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":5556,"src":"2314:9:21"},"nodeType":"ModifierInvocation","src":"2314:9:21"}],"name":"setBase","nameLocation":"2284:7:21","nodeType":"FunctionDefinition","parameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"_base","nameLocation":"2300:5:21","nodeType":"VariableDeclaration","scope":5777,"src":"2292:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2291:15:21"},"returnParameters":{"id":5771,"nodeType":"ParameterList","parameters":[],"src":"2324:0:21"},"scope":5938,"src":"2275:78:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5789,"nodeType":"Block","src":"2412:33:21","statements":[{"expression":{"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5785,"name":"hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"2422:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5786,"name":"_hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"2431:7:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"src":"2422:16:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"id":5788,"nodeType":"ExpressionStatement","src":"2422:16:21"}]},"functionSelector":"0178f6b9","id":5790,"implemented":true,"kind":"function","modifiers":[{"id":5783,"kind":"modifierInvocation","modifierName":{"id":5782,"name":"onlyOwner","nameLocations":["2402:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":5556,"src":"2402:9:21"},"nodeType":"ModifierInvocation","src":"2402:9:21"}],"name":"setHValue","nameLocation":"2368:9:21","nodeType":"FunctionDefinition","parameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5780,"mutability":"mutable","name":"_hValue","nameLocation":"2386:7:21","nodeType":"VariableDeclaration","scope":5790,"src":"2378:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"},"typeName":{"id":5779,"nodeType":"UserDefinedTypeName","pathNode":{"id":5778,"name":"IHValue","nameLocations":["2378:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":5990,"src":"2378:7:21"},"referencedDeclaration":5990,"src":"2378:7:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"visibility":"internal"}],"src":"2377:17:21"},"returnParameters":{"id":5784,"nodeType":"ParameterList","parameters":[],"src":"2412:0:21"},"scope":5938,"src":"2359:86:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5884,"nodeType":"Block","src":"2520:487:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5797,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"2534:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2540:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2534:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5803,"nodeType":"IfStatement","src":"2530:48:21","trueBody":{"id":5802,"nodeType":"Block","src":"2543:35:21","statements":[{"expression":{"hexValue":"30","id":5800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2564:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":5796,"id":5801,"nodeType":"Return","src":"2557:10:21"}]}},{"assignments":[5805],"declarations":[{"constant":false,"id":5805,"mutability":"mutable","name":"j","nameLocation":"2595:1:21","nodeType":"VariableDeclaration","scope":5884,"src":"2587:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5804,"name":"uint256","nodeType":"ElementaryTypeName","src":"2587:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5807,"initialValue":{"id":5806,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"2599:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2587:14:21"},{"assignments":[5809],"declarations":[{"constant":false,"id":5809,"mutability":"mutable","name":"len","nameLocation":"2619:3:21","nodeType":"VariableDeclaration","scope":5884,"src":"2611:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5808,"name":"uint256","nodeType":"ElementaryTypeName","src":"2611:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5810,"nodeType":"VariableDeclarationStatement","src":"2611:11:21"},{"body":{"id":5821,"nodeType":"Block","src":"2647:51:21","statements":[{"expression":{"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2661:5:21","subExpression":{"id":5814,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"2661:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5816,"nodeType":"ExpressionStatement","src":"2661:5:21"},{"expression":{"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5817,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"2680:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2685:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2680:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5820,"nodeType":"ExpressionStatement","src":"2680:7:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5811,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"2639:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2644:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2639:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5822,"nodeType":"WhileStatement","src":"2632:66:21"},{"assignments":[5824],"declarations":[{"constant":false,"id":5824,"mutability":"mutable","name":"bStr","nameLocation":"2720:4:21","nodeType":"VariableDeclaration","scope":5884,"src":"2707:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5823,"name":"bytes","nodeType":"ElementaryTypeName","src":"2707:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5829,"initialValue":{"arguments":[{"id":5827,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"2737:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2727:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5825,"name":"bytes","nodeType":"ElementaryTypeName","src":"2731:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2727:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2707:34:21"},{"assignments":[5831],"declarations":[{"constant":false,"id":5831,"mutability":"mutable","name":"k","nameLocation":"2759:1:21","nodeType":"VariableDeclaration","scope":5884,"src":"2751:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5830,"name":"uint256","nodeType":"ElementaryTypeName","src":"2751:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5833,"initialValue":{"id":5832,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"2763:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2751:15:21"},{"body":{"id":5877,"nodeType":"Block","src":"2792:180:21","statements":[{"expression":{"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5837,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"2806:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5838,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"2810:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2814:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2810:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2806:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5842,"nodeType":"ExpressionStatement","src":"2806:9:21"},{"assignments":[5844],"declarations":[{"constant":false,"id":5844,"mutability":"mutable","name":"temp","nameLocation":"2835:4:21","nodeType":"VariableDeclaration","scope":5877,"src":"2829:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5843,"name":"uint8","nodeType":"ElementaryTypeName","src":"2829:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5859,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2843:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5848,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"2854:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"2860:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2865:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2860:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2859:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":5853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2871:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2859:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2854:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2848:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5846,"name":"uint8","nodeType":"ElementaryTypeName","src":"2848:5:21","typeDescriptions":{}}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2843:31:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2842:33:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"2829:46:21"},{"assignments":[5861],"declarations":[{"constant":false,"id":5861,"mutability":"mutable","name":"b1","nameLocation":"2896:2:21","nodeType":"VariableDeclaration","scope":5877,"src":"2889:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5860,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2889:6:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5866,"initialValue":{"arguments":[{"id":5864,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"2908:4:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2901:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5862,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2901:6:21","typeDescriptions":{}}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"2889:24:21"},{"expression":{"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5867,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5824,"src":"2927:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5869,"indexExpression":{"id":5868,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"2932:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2927:7:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5870,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"2937:2:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2927:12:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5872,"nodeType":"ExpressionStatement","src":"2927:12:21"},{"expression":{"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5873,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"2953:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2959:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2953:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5876,"nodeType":"ExpressionStatement","src":"2953:8:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"2783:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2789:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2783:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5878,"nodeType":"WhileStatement","src":"2776:196:21"},{"expression":{"arguments":[{"id":5881,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5824,"src":"2995:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2988:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5879,"name":"string","nodeType":"ElementaryTypeName","src":"2988:6:21","typeDescriptions":{}}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2988:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5796,"id":5883,"nodeType":"Return","src":"2981:19:21"}]},"id":5885,"implemented":true,"kind":"function","modifiers":[],"name":"_uint2str","nameLocation":"2460:9:21","nodeType":"FunctionDefinition","parameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"_i","nameLocation":"2478:2:21","nodeType":"VariableDeclaration","scope":5885,"src":"2470:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5791,"name":"uint256","nodeType":"ElementaryTypeName","src":"2470:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2469:12:21"},"returnParameters":{"id":5796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5885,"src":"2505:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5794,"name":"string","nodeType":"ElementaryTypeName","src":"2505:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2504:15:21"},"scope":5938,"src":"2451:556:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[4342],"body":{"id":5936,"nodeType":"Block","src":"3113:336:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":5897,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"3139:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5896,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"3131:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3131:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":5899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3149:46:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""},"value":"ERC721: operator query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""}],"id":5895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3123:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3123:73:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5901,"nodeType":"ExpressionStatement","src":"3123:73:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5902,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3209:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3213:6:21","memberName":"sender","nodeType":"MemberAccess","src":"3209:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":5906,"name":"hValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"3231:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}],"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3223:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5904,"name":"address","nodeType":"ElementaryTypeName","src":"3223:7:21","typeDescriptions":{}}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3209:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5912,"nodeType":"IfStatement","src":"3206:70:21","trueBody":{"id":5911,"nodeType":"Block","src":"3240:36:21","statements":[{"expression":{"hexValue":"74727565","id":5909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3261:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5894,"id":5910,"nodeType":"Return","src":"3254:11:21"}]}},{"assignments":[5914],"declarations":[{"constant":false,"id":5914,"mutability":"mutable","name":"owner","nameLocation":"3293:5:21","nodeType":"VariableDeclaration","scope":5936,"src":"3285:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5913,"name":"address","nodeType":"ElementaryTypeName","src":"3285:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5919,"initialValue":{"arguments":[{"id":5917,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"3328:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5915,"name":"ERC721rUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"3301:18:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721rUpgradeable_$4889_$","typeString":"type(contract ERC721rUpgradeable)"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3320:7:21","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"3301:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3301:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3285:51:21"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5920,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"3354:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5921,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"3365:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3354:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5924,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"3386:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5923,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"3374:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3374:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5926,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"3398:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3374:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3354:51:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":5930,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"3426:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5931,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"3433:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5929,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"3409:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3409:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3354:87:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3353:89:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5894,"id":5935,"nodeType":"Return","src":"3346:96:21"}]},"id":5937,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"3022:18:21","nodeType":"FunctionDefinition","overrides":{"id":5891,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:21"},"parameters":{"id":5890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"spender","nameLocation":"3049:7:21","nodeType":"VariableDeclaration","scope":5937,"src":"3041:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5886,"name":"address","nodeType":"ElementaryTypeName","src":"3041:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5889,"mutability":"mutable","name":"tokenId","nameLocation":"3066:7:21","nodeType":"VariableDeclaration","scope":5937,"src":"3058:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5888,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3040:34:21"},"returnParameters":{"id":5894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5937,"src":"3107:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5892,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:21"},"scope":5938,"src":"3013:436:21","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5939,"src":"125:3326:21","usedErrors":[]}],"src":"32:3420:21"},"id":21},"contracts/HashPunkStorage.sol":{"ast":{"absolutePath":"contracts/HashPunkStorage.sol","exportedSymbols":{"HashPunkStorage":[6022],"IHValue":[5990]},"id":6023,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5940,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IHValue","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5990,"linearizedBaseContracts":[5990],"name":"IHValue","nameLocation":"68:7:22","nodeType":"ContractDefinition","nodes":[{"functionSelector":"00fdd58e","id":5949,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"92:9:22","nodeType":"FunctionDefinition","parameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5942,"mutability":"mutable","name":"account","nameLocation":"110:7:22","nodeType":"VariableDeclaration","scope":5949,"src":"102:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5941,"name":"address","nodeType":"ElementaryTypeName","src":"102:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5944,"mutability":"mutable","name":"id","nameLocation":"127:2:22","nodeType":"VariableDeclaration","scope":5949,"src":"119:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5943,"name":"uint256","nodeType":"ElementaryTypeName","src":"119:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101:29:22"},"returnParameters":{"id":5948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5949,"src":"178:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5946,"name":"uint256","nodeType":"ElementaryTypeName","src":"178:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"177:9:22"},"scope":5990,"src":"83:104:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f242432a","id":5962,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"202:16:22","nodeType":"FunctionDefinition","parameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"from","nameLocation":"236:4:22","nodeType":"VariableDeclaration","scope":5962,"src":"228:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5950,"name":"address","nodeType":"ElementaryTypeName","src":"228:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5953,"mutability":"mutable","name":"to","nameLocation":"258:2:22","nodeType":"VariableDeclaration","scope":5962,"src":"250:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5952,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5955,"mutability":"mutable","name":"id","nameLocation":"278:2:22","nodeType":"VariableDeclaration","scope":5962,"src":"270:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5954,"name":"uint256","nodeType":"ElementaryTypeName","src":"270:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5957,"mutability":"mutable","name":"amount","nameLocation":"298:6:22","nodeType":"VariableDeclaration","scope":5962,"src":"290:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5956,"name":"uint256","nodeType":"ElementaryTypeName","src":"290:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5959,"mutability":"mutable","name":"data","nameLocation":"329:4:22","nodeType":"VariableDeclaration","scope":5962,"src":"314:19:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5958,"name":"bytes","nodeType":"ElementaryTypeName","src":"314:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"218:121:22"},"returnParameters":{"id":5961,"nodeType":"ParameterList","parameters":[],"src":"348:0:22"},"scope":5990,"src":"193:156:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f5298aca","id":5971,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"364:4:22","nodeType":"FunctionDefinition","parameters":{"id":5969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5964,"mutability":"mutable","name":"from","nameLocation":"386:4:22","nodeType":"VariableDeclaration","scope":5971,"src":"378:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5963,"name":"address","nodeType":"ElementaryTypeName","src":"378:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5966,"mutability":"mutable","name":"tokenId","nameLocation":"408:7:22","nodeType":"VariableDeclaration","scope":5971,"src":"400:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5965,"name":"uint256","nodeType":"ElementaryTypeName","src":"400:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5968,"mutability":"mutable","name":"amount","nameLocation":"433:6:22","nodeType":"VariableDeclaration","scope":5971,"src":"425:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5967,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"368:77:22"},"returnParameters":{"id":5970,"nodeType":"ParameterList","parameters":[],"src":"454:0:22"},"scope":5990,"src":"355:100:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"731133e9","id":5982,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"470:4:22","nodeType":"FunctionDefinition","parameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5973,"mutability":"mutable","name":"to","nameLocation":"492:2:22","nodeType":"VariableDeclaration","scope":5982,"src":"484:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5972,"name":"address","nodeType":"ElementaryTypeName","src":"484:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5975,"mutability":"mutable","name":"tokenId","nameLocation":"512:7:22","nodeType":"VariableDeclaration","scope":5982,"src":"504:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5974,"name":"uint256","nodeType":"ElementaryTypeName","src":"504:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5977,"mutability":"mutable","name":"amount","nameLocation":"537:6:22","nodeType":"VariableDeclaration","scope":5982,"src":"529:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5976,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5979,"mutability":"mutable","name":"data","nameLocation":"566:4:22","nodeType":"VariableDeclaration","scope":5982,"src":"553:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5978,"name":"bytes","nodeType":"ElementaryTypeName","src":"553:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"474:102:22"},"returnParameters":{"id":5981,"nodeType":"ParameterList","parameters":[],"src":"585:0:22"},"scope":5990,"src":"461:125:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4c25e11f","id":5989,"implemented":false,"kind":"function","modifiers":[],"name":"negtiveValue","nameLocation":"601:12:22","nodeType":"FunctionDefinition","parameters":{"id":5985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"_address","nameLocation":"622:8:22","nodeType":"VariableDeclaration","scope":5989,"src":"614:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5983,"name":"address","nodeType":"ElementaryTypeName","src":"614:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"613:18:22"},"returnParameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5989,"src":"655:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5986,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:9:22"},"scope":5990,"src":"592:72:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6023,"src":"58:608:22","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"HashPunkStorage","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6022,"linearizedBaseContracts":[6022],"name":"HashPunkStorage","nameLocation":"677:15:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"444b7aaf","id":5993,"mutability":"constant","name":"passId","nameLocation":"723:6:22","nodeType":"VariableDeclaration","scope":6022,"src":"699:35:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5991,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":5992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"733:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"83d18f7a","id":5996,"mutability":"constant","name":"Hpoint","nameLocation":"764:6:22","nodeType":"VariableDeclaration","scope":6022,"src":"740:35:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5994,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":5995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"774:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":true,"functionSelector":"cdda418c","id":5999,"mutability":"constant","name":"voucher","nameLocation":"805:7:22","nodeType":"VariableDeclaration","scope":6022,"src":"781:35:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5997,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"815:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":false,"functionSelector":"80893c17","id":6001,"mutability":"mutable","name":"passIdBase","nameLocation":"846:10:22","nodeType":"VariableDeclaration","scope":6022,"src":"822:34:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6000,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5001f3b5","id":6003,"mutability":"mutable","name":"base","nameLocation":"886:4:22","nodeType":"VariableDeclaration","scope":6022,"src":"862:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6002,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9332c9a5","id":6006,"mutability":"mutable","name":"hValue","nameLocation":"920:6:22","nodeType":"VariableDeclaration","scope":6022,"src":"896:30:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"},"typeName":{"id":6005,"nodeType":"UserDefinedTypeName","pathNode":{"id":6004,"name":"IHValue","nameLocations":["896:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":5990,"src":"896:7:22"},"referencedDeclaration":5990,"src":"896:7:22","typeDescriptions":{"typeIdentifier":"t_contract$_IHValue_$5990","typeString":"contract IHValue"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":6008,"mutability":"mutable","name":"owner","nameLocation":"956:5:22","nodeType":"VariableDeclaration","scope":6022,"src":"932:29:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6007,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"5b2bd79e","id":6010,"mutability":"mutable","name":"baseMetadataURI","nameLocation":"991:15:22","nodeType":"VariableDeclaration","scope":6022,"src":"967:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6009,"name":"string","nodeType":"ElementaryTypeName","src":"967:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"0e471525","id":6013,"mutability":"mutable","name":"luckyStart","nameLocation":"1036:10:22","nodeType":"VariableDeclaration","scope":6022,"src":"1012:44:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1055:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"f7e056ee","id":6016,"mutability":"mutable","name":"luckyEnd","nameLocation":"1086:8:22","nodeType":"VariableDeclaration","scope":6022,"src":"1062:46:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1062:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1105:3:22","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"public"},{"constant":false,"functionSelector":"a8a86457","id":6021,"mutability":"mutable","name":"userToRareIds","nameLocation":"1148:13:22","nodeType":"VariableDeclaration","scope":6022,"src":"1114:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":6020,"keyType":{"id":6017,"name":"address","nodeType":"ElementaryTypeName","src":"1122:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1114:26:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueType":{"baseType":{"id":6018,"name":"uint","nodeType":"ElementaryTypeName","src":"1133:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6019,"nodeType":"ArrayTypeName","src":"1133:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"}],"scope":6023,"src":"668:496:22","usedErrors":[]}],"src":"32:1132:22"},"id":22}},"contracts":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ERC1155Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._","kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1386 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE18 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF31 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x258 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x221 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x221 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x67 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x1005 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x327 JUMPI POP PUSH2 0x327 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D8 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x401 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x479 JUMPI PUSH2 0x44C DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x425 JUMPI PUSH2 0x425 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x43F JUMPI PUSH2 0x43F PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45E JUMPI PUSH2 0x45E PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x472 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x407 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x48C CALLER DUP4 DUP4 PUSH2 0x6B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4AC JUMPI POP PUSH2 0x4AC DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x795 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57E JUMPI PUSH2 0x57E PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x62C SWAP1 DUP5 SWAP1 PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x640 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x561 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x697 SWAP3 SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6AD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8C3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x7C7 DUP6 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D4 DUP6 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x858 SWAP1 DUP5 SWAP1 PUSH2 0x1161 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8B8 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA72 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x907 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x942 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x93F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9EE JUMPI PUSH2 0x94E PUSH2 0x121D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x987 JUMPI POP PUSH2 0x962 PUSH2 0x1239 JUMP JUMPDEST DUP1 PUSH2 0x96D JUMPI POP PUSH2 0x989 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA61 JUMPI PUSH2 0xA61 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAB6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x130B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAF1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAEE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAFD JUMPI PUSH2 0x94E PUSH2 0x121D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB65 DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA9 DUP2 PUSH2 0xB73 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBEF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBD3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBC9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC5E JUMPI PUSH2 0xC5E PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xC22 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xCA7 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB4 DUP3 DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCEF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCD8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD25 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8F DUP7 PUSH2 0xB2D JUMP JUMPDEST SWAP5 POP PUSH2 0xD9D PUSH1 0x20 DUP8 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC6 DUP10 DUP4 DUP11 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE8 DUP10 DUP4 DUP11 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE0B DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE64 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE71 DUP3 DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xEA7 DUP7 PUSH2 0xB2D JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED9 DUP6 DUP3 DUP7 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF13 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEF7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4D DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF89 DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP2 POP PUSH2 0xF97 PUSH1 0x20 DUP5 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC1 DUP7 PUSH2 0xB2D JUMP JUMPDEST SWAP5 POP PUSH2 0xFCF PUSH1 0x20 DUP8 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0B DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1019 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1039 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10CB JUMPI PUSH2 0x10CB PUSH2 0x10A3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x221 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1187 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEE3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1199 DUP2 DUP6 PUSH2 0xEE3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11CE SWAP1 DUP4 ADD DUP7 PUSH2 0xEE3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11E0 DUP2 DUP7 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11F4 DUP2 DUP6 PUSH2 0xBC9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBA9 DUP2 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1247 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1277 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x128F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12A9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12B8 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC38 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1345 SWAP1 DUP4 ADD DUP5 PUSH2 0xBC9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT GT 0xDB 0x1F SHR 0xD7 0xEB COINBASE PUSH17 0x349F69B8B4FB95F6734D52F1583609DD10 0xD4 DUP15 SWAP1 0xD5 PUSH22 0x264736F6C6343000811003300000000000000000000 ","sourceMap":"682:17320:1:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1251":{"entryPoint":null,"id":1251,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1407":{"entryPoint":2599,"id":1407,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1232":{"entryPoint":null,"id":1232,"parameterSlots":6,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1379":{"entryPoint":2243,"id":1379,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1314":{"entryPoint":2674,"id":1314,"parameterSlots":6,"returnSlots":0},"@_msgSender_2240":{"entryPoint":null,"id":2240,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_730":{"entryPoint":1237,"id":730,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_595":{"entryPoint":1941,"id":595,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1213":{"entryPoint":1717,"id":1213,"parameterSlots":3,"returnSlots":0},"@balanceOfBatch_365":{"entryPoint":855,"id":365,"parameterSlots":2,"returnSlots":1},"@balanceOf_301":{"entryPoint":396,"id":301,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_400":{"entryPoint":null,"id":400,"parameterSlots":2,"returnSlots":1},"@isContract_1947":{"entryPoint":null,"id":1947,"parameterSlots":1,"returnSlots":1},"@safeBatchTransferFrom_478":{"entryPoint":779,"id":478,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_438":{"entryPoint":1168,"id":438,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_382":{"entryPoint":1153,"id":382,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2293":{"entryPoint":null,"id":2293,"parameterSlots":1,"returnSlots":1},"@supportsInterface_261":{"entryPoint":551,"id":261,"parameterSlots":1,"returnSlots":1},"@uri_273":{"entryPoint":631,"id":273,"parameterSlots":1,"returnSlots":1},"abi_decode_address":{"entryPoint":2861,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":3209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":3322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3949,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":3438,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":4000,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3889,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2889,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3608,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":2956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4608,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":3811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4514,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4875,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4468,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3087,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4803,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4159,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4306,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4375,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":3173,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4449,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4101,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3128,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":4281,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4259,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4237,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3106,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":4637,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":4665,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_bytes4":{"entryPoint":2931,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15860:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:23","statements":[{"nodeType":"YulAssignment","src":"73:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:23"},"nodeType":"YulFunctionCall","src":"82:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:23"}]},{"body":{"nodeType":"YulBlock","src":"165:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:23"},"nodeType":"YulFunctionCall","src":"167:12:23"},"nodeType":"YulExpressionStatement","src":"167:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:23"},"nodeType":"YulFunctionCall","src":"146:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:23"},"nodeType":"YulFunctionCall","src":"142:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:23"},"nodeType":"YulFunctionCall","src":"131:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:23"},"nodeType":"YulFunctionCall","src":"121:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:23"},"nodeType":"YulFunctionCall","src":"114:50:23"},"nodeType":"YulIf","src":"111:70:23"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:23","type":""}],"src":"14:173:23"},{"body":{"nodeType":"YulBlock","src":"279:167:23","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:23"},"nodeType":"YulFunctionCall","src":"327:12:23"},"nodeType":"YulExpressionStatement","src":"327:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:23"},"nodeType":"YulFunctionCall","src":"296:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:23"},"nodeType":"YulFunctionCall","src":"292:32:23"},"nodeType":"YulIf","src":"289:52:23"},{"nodeType":"YulAssignment","src":"350:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:23"},"nodeType":"YulFunctionCall","src":"360:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:23"}]},{"nodeType":"YulAssignment","src":"398:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:23"},"nodeType":"YulFunctionCall","src":"421:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:23"},"nodeType":"YulFunctionCall","src":"408:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:23","type":""}],"src":"192:254:23"},{"body":{"nodeType":"YulBlock","src":"552:76:23","statements":[{"nodeType":"YulAssignment","src":"562:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"585:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:23"},"nodeType":"YulFunctionCall","src":"570:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"562:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"615:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:23"},"nodeType":"YulFunctionCall","src":"597:25:23"},"nodeType":"YulExpressionStatement","src":"597:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"521:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"532:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"543:4:23","type":""}],"src":"451:177:23"},{"body":{"nodeType":"YulBlock","src":"677:87:23","statements":[{"body":{"nodeType":"YulBlock","src":"742:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"751:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"754:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"744:6:23"},"nodeType":"YulFunctionCall","src":"744:12:23"},"nodeType":"YulExpressionStatement","src":"744:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"700:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"711:5:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"722:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"727:10:23","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"718:3:23"},"nodeType":"YulFunctionCall","src":"718:20:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"707:3:23"},"nodeType":"YulFunctionCall","src":"707:32:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"697:2:23"},"nodeType":"YulFunctionCall","src":"697:43:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"690:6:23"},"nodeType":"YulFunctionCall","src":"690:51:23"},"nodeType":"YulIf","src":"687:71:23"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"666:5:23","type":""}],"src":"633:131:23"},{"body":{"nodeType":"YulBlock","src":"838:176:23","statements":[{"body":{"nodeType":"YulBlock","src":"884:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"893:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"896:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"886:6:23"},"nodeType":"YulFunctionCall","src":"886:12:23"},"nodeType":"YulExpressionStatement","src":"886:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"859:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"855:3:23"},"nodeType":"YulFunctionCall","src":"855:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"880:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"851:3:23"},"nodeType":"YulFunctionCall","src":"851:32:23"},"nodeType":"YulIf","src":"848:52:23"},{"nodeType":"YulVariableDeclaration","src":"909:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"935:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"922:12:23"},"nodeType":"YulFunctionCall","src":"922:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"913:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:23"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"954:23:23"},"nodeType":"YulFunctionCall","src":"954:30:23"},"nodeType":"YulExpressionStatement","src":"954:30:23"},{"nodeType":"YulAssignment","src":"993:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"1003:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"993:6:23"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"804:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"815:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"827:6:23","type":""}],"src":"769:245:23"},{"body":{"nodeType":"YulBlock","src":"1114:92:23","statements":[{"nodeType":"YulAssignment","src":"1124:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1136:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1147:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1132:3:23"},"nodeType":"YulFunctionCall","src":"1132:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1124:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1184:6:23"},"nodeType":"YulFunctionCall","src":"1184:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1177:6:23"},"nodeType":"YulFunctionCall","src":"1177:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1159:6:23"},"nodeType":"YulFunctionCall","src":"1159:41:23"},"nodeType":"YulExpressionStatement","src":"1159:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1083:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1094:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1105:4:23","type":""}],"src":"1019:187:23"},{"body":{"nodeType":"YulBlock","src":"1281:110:23","statements":[{"body":{"nodeType":"YulBlock","src":"1327:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1336:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1339:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1329:6:23"},"nodeType":"YulFunctionCall","src":"1329:12:23"},"nodeType":"YulExpressionStatement","src":"1329:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1311:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1298:3:23"},"nodeType":"YulFunctionCall","src":"1298:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1323:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1294:3:23"},"nodeType":"YulFunctionCall","src":"1294:32:23"},"nodeType":"YulIf","src":"1291:52:23"},{"nodeType":"YulAssignment","src":"1352:33:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1375:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1362:12:23"},"nodeType":"YulFunctionCall","src":"1362:23:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1352:6:23"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1247:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1258:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1270:6:23","type":""}],"src":"1211:180:23"},{"body":{"nodeType":"YulBlock","src":"1446:373:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1456:26:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1476:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1470:5:23"},"nodeType":"YulFunctionCall","src":"1470:12:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1460:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1498:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"1503:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1491:6:23"},"nodeType":"YulFunctionCall","src":"1491:19:23"},"nodeType":"YulExpressionStatement","src":"1491:19:23"},{"nodeType":"YulVariableDeclaration","src":"1519:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1528:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1523:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1590:110:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1604:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1614:4:23","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1608:2:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1646:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"1651:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1642:3:23"},"nodeType":"YulFunctionCall","src":"1642:11:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1655:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1638:3:23"},"nodeType":"YulFunctionCall","src":"1638:20:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1674:5:23"},{"name":"i","nodeType":"YulIdentifier","src":"1681:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1670:3:23"},"nodeType":"YulFunctionCall","src":"1670:13:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1685:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1666:3:23"},"nodeType":"YulFunctionCall","src":"1666:22:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1660:5:23"},"nodeType":"YulFunctionCall","src":"1660:29:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1631:6:23"},"nodeType":"YulFunctionCall","src":"1631:59:23"},"nodeType":"YulExpressionStatement","src":"1631:59:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1549:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"1552:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1546:2:23"},"nodeType":"YulFunctionCall","src":"1546:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1560:21:23","statements":[{"nodeType":"YulAssignment","src":"1562:17:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1571:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"1574:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1567:3:23"},"nodeType":"YulFunctionCall","src":"1567:12:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1562:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"1542:3:23","statements":[]},"src":"1538:162:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1724:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"1729:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1720:3:23"},"nodeType":"YulFunctionCall","src":"1720:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"1738:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1716:3:23"},"nodeType":"YulFunctionCall","src":"1716:27:23"},{"kind":"number","nodeType":"YulLiteral","src":"1745:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1709:6:23"},"nodeType":"YulFunctionCall","src":"1709:38:23"},"nodeType":"YulExpressionStatement","src":"1709:38:23"},{"nodeType":"YulAssignment","src":"1756:57:23","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1771:3:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1784:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1792:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1780:3:23"},"nodeType":"YulFunctionCall","src":"1780:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1801:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1797:3:23"},"nodeType":"YulFunctionCall","src":"1797:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1776:3:23"},"nodeType":"YulFunctionCall","src":"1776:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1767:3:23"},"nodeType":"YulFunctionCall","src":"1767:39:23"},{"kind":"number","nodeType":"YulLiteral","src":"1808:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1763:3:23"},"nodeType":"YulFunctionCall","src":"1763:50:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1756:3:23"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1423:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1430:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1438:3:23","type":""}],"src":"1396:423:23"},{"body":{"nodeType":"YulBlock","src":"1945:99:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1962:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1973:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1955:6:23"},"nodeType":"YulFunctionCall","src":"1955:21:23"},"nodeType":"YulExpressionStatement","src":"1955:21:23"},{"nodeType":"YulAssignment","src":"1985:53:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2011:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2023:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2034:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2019:3:23"},"nodeType":"YulFunctionCall","src":"2019:18:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1993:17:23"},"nodeType":"YulFunctionCall","src":"1993:45:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1985:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1914:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1925:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1936:4:23","type":""}],"src":"1824:220:23"},{"body":{"nodeType":"YulBlock","src":"2081:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2098:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2105:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2110:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2101:3:23"},"nodeType":"YulFunctionCall","src":"2101:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2091:6:23"},"nodeType":"YulFunctionCall","src":"2091:31:23"},"nodeType":"YulExpressionStatement","src":"2091:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2138:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2141:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2131:6:23"},"nodeType":"YulFunctionCall","src":"2131:15:23"},"nodeType":"YulExpressionStatement","src":"2131:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2162:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2165:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2155:6:23"},"nodeType":"YulFunctionCall","src":"2155:15:23"},"nodeType":"YulExpressionStatement","src":"2155:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2049:127:23"},{"body":{"nodeType":"YulBlock","src":"2228:202:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2238:58:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2260:6:23"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2276:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"2282:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2272:3:23"},"nodeType":"YulFunctionCall","src":"2272:13:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2287:3:23"},"nodeType":"YulFunctionCall","src":"2287:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2268:3:23"},"nodeType":"YulFunctionCall","src":"2268:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2256:3:23"},"nodeType":"YulFunctionCall","src":"2256:40:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2242:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2371:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2373:16:23"},"nodeType":"YulFunctionCall","src":"2373:18:23"},"nodeType":"YulExpressionStatement","src":"2373:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2314:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2326:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2311:2:23"},"nodeType":"YulFunctionCall","src":"2311:34:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2350:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2362:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2347:2:23"},"nodeType":"YulFunctionCall","src":"2347:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2308:2:23"},"nodeType":"YulFunctionCall","src":"2308:62:23"},"nodeType":"YulIf","src":"2305:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2409:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2413:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2402:6:23"},"nodeType":"YulFunctionCall","src":"2402:22:23"},"nodeType":"YulExpressionStatement","src":"2402:22:23"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2210:6:23","type":""},{"name":"size","nodeType":"YulTypedName","src":"2218:4:23","type":""}],"src":"2181:249:23"},{"body":{"nodeType":"YulBlock","src":"2504:114:23","statements":[{"body":{"nodeType":"YulBlock","src":"2548:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2550:16:23"},"nodeType":"YulFunctionCall","src":"2550:18:23"},"nodeType":"YulExpressionStatement","src":"2550:18:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2520:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2528:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2517:2:23"},"nodeType":"YulFunctionCall","src":"2517:30:23"},"nodeType":"YulIf","src":"2514:56:23"},{"nodeType":"YulAssignment","src":"2579:33:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2595:1:23","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2598:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2591:3:23"},"nodeType":"YulFunctionCall","src":"2591:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"2607:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2587:3:23"},"nodeType":"YulFunctionCall","src":"2587:25:23"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2579:4:23"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2484:6:23","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2495:4:23","type":""}],"src":"2435:183:23"},{"body":{"nodeType":"YulBlock","src":"2687:660:23","statements":[{"body":{"nodeType":"YulBlock","src":"2736:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2745:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2748:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2738:6:23"},"nodeType":"YulFunctionCall","src":"2738:12:23"},"nodeType":"YulExpressionStatement","src":"2738:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2715:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2723:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2711:3:23"},"nodeType":"YulFunctionCall","src":"2711:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"2730:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2707:3:23"},"nodeType":"YulFunctionCall","src":"2707:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2700:6:23"},"nodeType":"YulFunctionCall","src":"2700:35:23"},"nodeType":"YulIf","src":"2697:55:23"},{"nodeType":"YulVariableDeclaration","src":"2761:30:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2784:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2771:12:23"},"nodeType":"YulFunctionCall","src":"2771:20:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2765:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2800:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2810:4:23","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2804:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2823:53:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2873:2:23"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"2833:39:23"},"nodeType":"YulFunctionCall","src":"2833:43:23"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2827:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2885:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2905:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2899:5:23"},"nodeType":"YulFunctionCall","src":"2899:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2889:6:23","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2937:6:23"},{"name":"_3","nodeType":"YulIdentifier","src":"2945:2:23"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2917:19:23"},"nodeType":"YulFunctionCall","src":"2917:31:23"},"nodeType":"YulExpressionStatement","src":"2917:31:23"},{"nodeType":"YulVariableDeclaration","src":"2957:17:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2968:6:23"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2961:3:23","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2990:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2998:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2983:6:23"},"nodeType":"YulFunctionCall","src":"2983:18:23"},"nodeType":"YulExpressionStatement","src":"2983:18:23"},{"nodeType":"YulAssignment","src":"3010:22:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3021:6:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3029:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3017:3:23"},"nodeType":"YulFunctionCall","src":"3017:15:23"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3010:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"3041:46:23","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3063:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3075:1:23","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3078:2:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3071:3:23"},"nodeType":"YulFunctionCall","src":"3071:10:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3059:3:23"},"nodeType":"YulFunctionCall","src":"3059:23:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3084:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3055:3:23"},"nodeType":"YulFunctionCall","src":"3055:32:23"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3045:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3115:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3124:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3127:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3117:6:23"},"nodeType":"YulFunctionCall","src":"3117:12:23"},"nodeType":"YulExpressionStatement","src":"3117:12:23"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3102:6:23"},{"name":"end","nodeType":"YulIdentifier","src":"3110:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3099:2:23"},"nodeType":"YulFunctionCall","src":"3099:15:23"},"nodeType":"YulIf","src":"3096:35:23"},{"nodeType":"YulVariableDeclaration","src":"3140:26:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3163:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3151:3:23"},"nodeType":"YulFunctionCall","src":"3151:15:23"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3144:3:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3231:86:23","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3252:3:23"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3270:3:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3257:12:23"},"nodeType":"YulFunctionCall","src":"3257:17:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3245:6:23"},"nodeType":"YulFunctionCall","src":"3245:30:23"},"nodeType":"YulExpressionStatement","src":"3245:30:23"},{"nodeType":"YulAssignment","src":"3288:19:23","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3299:3:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3304:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3295:3:23"},"nodeType":"YulFunctionCall","src":"3295:12:23"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3288:3:23"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3186:3:23"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3191:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3183:2:23"},"nodeType":"YulFunctionCall","src":"3183:15:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3199:23:23","statements":[{"nodeType":"YulAssignment","src":"3201:19:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3212:3:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3217:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3208:3:23"},"nodeType":"YulFunctionCall","src":"3208:12:23"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3201:3:23"}]}]},"pre":{"nodeType":"YulBlock","src":"3179:3:23","statements":[]},"src":"3175:142:23"},{"nodeType":"YulAssignment","src":"3326:15:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3335:6:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3326:5:23"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2661:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"2669:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2677:5:23","type":""}],"src":"2623:724:23"},{"body":{"nodeType":"YulBlock","src":"3404:503:23","statements":[{"body":{"nodeType":"YulBlock","src":"3453:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3462:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3465:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3455:6:23"},"nodeType":"YulFunctionCall","src":"3455:12:23"},"nodeType":"YulExpressionStatement","src":"3455:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3432:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3440:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3428:3:23"},"nodeType":"YulFunctionCall","src":"3428:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"3447:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3424:3:23"},"nodeType":"YulFunctionCall","src":"3424:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3417:6:23"},"nodeType":"YulFunctionCall","src":"3417:35:23"},"nodeType":"YulIf","src":"3414:55:23"},{"nodeType":"YulVariableDeclaration","src":"3478:30:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3501:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3488:12:23"},"nodeType":"YulFunctionCall","src":"3488:20:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3482:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3547:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3549:16:23"},"nodeType":"YulFunctionCall","src":"3549:18:23"},"nodeType":"YulExpressionStatement","src":"3549:18:23"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3523:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"3527:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3520:2:23"},"nodeType":"YulFunctionCall","src":"3520:26:23"},"nodeType":"YulIf","src":"3517:52:23"},{"nodeType":"YulVariableDeclaration","src":"3578:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3598:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3592:5:23"},"nodeType":"YulFunctionCall","src":"3592:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3582:6:23","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3630:6:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3650:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"3654:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3646:3:23"},"nodeType":"YulFunctionCall","src":"3646:13:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3665:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3661:3:23"},"nodeType":"YulFunctionCall","src":"3661:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3642:3:23"},"nodeType":"YulFunctionCall","src":"3642:27:23"},{"kind":"number","nodeType":"YulLiteral","src":"3671:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3638:3:23"},"nodeType":"YulFunctionCall","src":"3638:38:23"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3610:19:23"},"nodeType":"YulFunctionCall","src":"3610:67:23"},"nodeType":"YulExpressionStatement","src":"3610:67:23"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3693:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"3701:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3686:6:23"},"nodeType":"YulFunctionCall","src":"3686:18:23"},"nodeType":"YulExpressionStatement","src":"3686:18:23"},{"body":{"nodeType":"YulBlock","src":"3752:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3761:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3764:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3754:6:23"},"nodeType":"YulFunctionCall","src":"3754:12:23"},"nodeType":"YulExpressionStatement","src":"3754:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3727:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"3735:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3723:3:23"},"nodeType":"YulFunctionCall","src":"3723:15:23"},{"kind":"number","nodeType":"YulLiteral","src":"3740:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3719:3:23"},"nodeType":"YulFunctionCall","src":"3719:26:23"},{"name":"end","nodeType":"YulIdentifier","src":"3747:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3716:2:23"},"nodeType":"YulFunctionCall","src":"3716:35:23"},"nodeType":"YulIf","src":"3713:55:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3794:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3802:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:23"},"nodeType":"YulFunctionCall","src":"3790:17:23"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3813:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3821:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3809:3:23"},"nodeType":"YulFunctionCall","src":"3809:17:23"},{"name":"_1","nodeType":"YulIdentifier","src":"3828:2:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3777:12:23"},"nodeType":"YulFunctionCall","src":"3777:54:23"},"nodeType":"YulExpressionStatement","src":"3777:54:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3855:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"3863:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3851:3:23"},"nodeType":"YulFunctionCall","src":"3851:15:23"},{"kind":"number","nodeType":"YulLiteral","src":"3868:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3847:3:23"},"nodeType":"YulFunctionCall","src":"3847:26:23"},{"kind":"number","nodeType":"YulLiteral","src":"3875:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3840:6:23"},"nodeType":"YulFunctionCall","src":"3840:37:23"},"nodeType":"YulExpressionStatement","src":"3840:37:23"},{"nodeType":"YulAssignment","src":"3886:15:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3895:6:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3886:5:23"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3378:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"3386:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3394:5:23","type":""}],"src":"3352:555:23"},{"body":{"nodeType":"YulBlock","src":"4109:746:23","statements":[{"body":{"nodeType":"YulBlock","src":"4156:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4165:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4168:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4158:6:23"},"nodeType":"YulFunctionCall","src":"4158:12:23"},"nodeType":"YulExpressionStatement","src":"4158:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4130:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4139:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4126:3:23"},"nodeType":"YulFunctionCall","src":"4126:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4151:3:23","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4122:3:23"},"nodeType":"YulFunctionCall","src":"4122:33:23"},"nodeType":"YulIf","src":"4119:53:23"},{"nodeType":"YulAssignment","src":"4181:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4210:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4191:18:23"},"nodeType":"YulFunctionCall","src":"4191:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4181:6:23"}]},{"nodeType":"YulAssignment","src":"4229:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4262:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4273:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4258:3:23"},"nodeType":"YulFunctionCall","src":"4258:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4239:18:23"},"nodeType":"YulFunctionCall","src":"4239:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4229:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"4286:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4317:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4328:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4313:3:23"},"nodeType":"YulFunctionCall","src":"4313:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4300:12:23"},"nodeType":"YulFunctionCall","src":"4300:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4290:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4341:28:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4351:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4345:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4396:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4405:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4408:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4398:6:23"},"nodeType":"YulFunctionCall","src":"4398:12:23"},"nodeType":"YulExpressionStatement","src":"4398:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4384:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"4392:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4381:2:23"},"nodeType":"YulFunctionCall","src":"4381:14:23"},"nodeType":"YulIf","src":"4378:34:23"},{"nodeType":"YulAssignment","src":"4421:71:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4464:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4475:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4460:3:23"},"nodeType":"YulFunctionCall","src":"4460:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4484:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4431:28:23"},"nodeType":"YulFunctionCall","src":"4431:61:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4421:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"4501:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4534:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4545:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4530:3:23"},"nodeType":"YulFunctionCall","src":"4530:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4517:12:23"},"nodeType":"YulFunctionCall","src":"4517:32:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4505:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4578:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4587:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4590:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4580:6:23"},"nodeType":"YulFunctionCall","src":"4580:12:23"},"nodeType":"YulExpressionStatement","src":"4580:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4564:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"4574:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4561:2:23"},"nodeType":"YulFunctionCall","src":"4561:16:23"},"nodeType":"YulIf","src":"4558:36:23"},{"nodeType":"YulAssignment","src":"4603:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4646:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4657:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:23"},"nodeType":"YulFunctionCall","src":"4642:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4668:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4613:28:23"},"nodeType":"YulFunctionCall","src":"4613:63:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4603:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"4685:49:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4718:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4729:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4714:3:23"},"nodeType":"YulFunctionCall","src":"4714:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4701:12:23"},"nodeType":"YulFunctionCall","src":"4701:33:23"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4689:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4763:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4772:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4775:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4765:6:23"},"nodeType":"YulFunctionCall","src":"4765:12:23"},"nodeType":"YulExpressionStatement","src":"4765:12:23"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4749:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"4759:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4746:2:23"},"nodeType":"YulFunctionCall","src":"4746:16:23"},"nodeType":"YulIf","src":"4743:36:23"},{"nodeType":"YulAssignment","src":"4788:61:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4819:9:23"},{"name":"offset_2","nodeType":"YulIdentifier","src":"4830:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4815:3:23"},"nodeType":"YulFunctionCall","src":"4815:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4841:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4798:16:23"},"nodeType":"YulFunctionCall","src":"4798:51:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4788:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4043:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4054:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4066:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4074:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4082:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4090:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4098:6:23","type":""}],"src":"3912:943:23"},{"body":{"nodeType":"YulBlock","src":"4997:1071:23","statements":[{"body":{"nodeType":"YulBlock","src":"5043:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5052:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5055:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5045:6:23"},"nodeType":"YulFunctionCall","src":"5045:12:23"},"nodeType":"YulExpressionStatement","src":"5045:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5018:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"5027:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5014:3:23"},"nodeType":"YulFunctionCall","src":"5014:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"5039:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5010:3:23"},"nodeType":"YulFunctionCall","src":"5010:32:23"},"nodeType":"YulIf","src":"5007:52:23"},{"nodeType":"YulVariableDeclaration","src":"5068:37:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5095:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5082:12:23"},"nodeType":"YulFunctionCall","src":"5082:23:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5072:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5114:28:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5124:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5118:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5169:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5178:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5181:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5171:6:23"},"nodeType":"YulFunctionCall","src":"5171:12:23"},"nodeType":"YulExpressionStatement","src":"5171:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5157:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"5165:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5154:2:23"},"nodeType":"YulFunctionCall","src":"5154:14:23"},"nodeType":"YulIf","src":"5151:34:23"},{"nodeType":"YulVariableDeclaration","src":"5194:32:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:23"},"nodeType":"YulFunctionCall","src":"5204:22:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5198:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5274:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5283:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5286:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5276:6:23"},"nodeType":"YulFunctionCall","src":"5276:12:23"},"nodeType":"YulExpressionStatement","src":"5276:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5253:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"5257:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5249:3:23"},"nodeType":"YulFunctionCall","src":"5249:13:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5264:7:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5245:3:23"},"nodeType":"YulFunctionCall","src":"5245:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5238:6:23"},"nodeType":"YulFunctionCall","src":"5238:35:23"},"nodeType":"YulIf","src":"5235:55:23"},{"nodeType":"YulVariableDeclaration","src":"5299:26:23","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5322:2:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5309:12:23"},"nodeType":"YulFunctionCall","src":"5309:16:23"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5303:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5334:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5344:4:23","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5338:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5357:53:23","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5407:2:23"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"5367:39:23"},"nodeType":"YulFunctionCall","src":"5367:43:23"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"5361:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5419:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5439:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5433:5:23"},"nodeType":"YulFunctionCall","src":"5433:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5423:6:23","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5471:6:23"},{"name":"_5","nodeType":"YulIdentifier","src":"5479:2:23"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5451:19:23"},"nodeType":"YulFunctionCall","src":"5451:31:23"},"nodeType":"YulExpressionStatement","src":"5451:31:23"},{"nodeType":"YulVariableDeclaration","src":"5491:17:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5502:6:23"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5495:3:23","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5524:6:23"},{"name":"_3","nodeType":"YulIdentifier","src":"5532:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5517:6:23"},"nodeType":"YulFunctionCall","src":"5517:18:23"},"nodeType":"YulExpressionStatement","src":"5517:18:23"},{"nodeType":"YulAssignment","src":"5544:22:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5555:6:23"},{"name":"_4","nodeType":"YulIdentifier","src":"5563:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5551:3:23"},"nodeType":"YulFunctionCall","src":"5551:15:23"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5544:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"5575:42:23","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5597:2:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5605:1:23","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"5608:2:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5601:3:23"},"nodeType":"YulFunctionCall","src":"5601:10:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5593:3:23"},"nodeType":"YulFunctionCall","src":"5593:19:23"},{"name":"_4","nodeType":"YulIdentifier","src":"5614:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5589:3:23"},"nodeType":"YulFunctionCall","src":"5589:28:23"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5579:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5649:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5658:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5661:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5651:6:23"},"nodeType":"YulFunctionCall","src":"5651:12:23"},"nodeType":"YulExpressionStatement","src":"5651:12:23"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5632:6:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5640:7:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5629:2:23"},"nodeType":"YulFunctionCall","src":"5629:19:23"},"nodeType":"YulIf","src":"5626:39:23"},{"nodeType":"YulVariableDeclaration","src":"5674:22:23","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5689:2:23"},{"name":"_4","nodeType":"YulIdentifier","src":"5693:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5685:3:23"},"nodeType":"YulFunctionCall","src":"5685:11:23"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5678:3:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5761:92:23","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5782:3:23"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5806:3:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5787:18:23"},"nodeType":"YulFunctionCall","src":"5787:23:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5775:6:23"},"nodeType":"YulFunctionCall","src":"5775:36:23"},"nodeType":"YulExpressionStatement","src":"5775:36:23"},{"nodeType":"YulAssignment","src":"5824:19:23","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5835:3:23"},{"name":"_4","nodeType":"YulIdentifier","src":"5840:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5831:3:23"},"nodeType":"YulFunctionCall","src":"5831:12:23"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5824:3:23"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5716:3:23"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5721:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5713:2:23"},"nodeType":"YulFunctionCall","src":"5713:15:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5729:23:23","statements":[{"nodeType":"YulAssignment","src":"5731:19:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5742:3:23"},{"name":"_4","nodeType":"YulIdentifier","src":"5747:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5738:3:23"},"nodeType":"YulFunctionCall","src":"5738:12:23"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5731:3:23"}]}]},"pre":{"nodeType":"YulBlock","src":"5709:3:23","statements":[]},"src":"5705:148:23"},{"nodeType":"YulAssignment","src":"5862:16:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5872:6:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5862:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"5887:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5920:9:23"},{"name":"_4","nodeType":"YulIdentifier","src":"5931:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5916:3:23"},"nodeType":"YulFunctionCall","src":"5916:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5903:12:23"},"nodeType":"YulFunctionCall","src":"5903:32:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5891:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5964:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5973:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5976:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5966:6:23"},"nodeType":"YulFunctionCall","src":"5966:12:23"},"nodeType":"YulExpressionStatement","src":"5966:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5950:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"5960:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5947:2:23"},"nodeType":"YulFunctionCall","src":"5947:16:23"},"nodeType":"YulIf","src":"5944:36:23"},{"nodeType":"YulAssignment","src":"5989:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6032:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6043:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6028:3:23"},"nodeType":"YulFunctionCall","src":"6028:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6054:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5999:28:23"},"nodeType":"YulFunctionCall","src":"5999:63:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5989:6:23"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4955:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4966:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4978:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4986:6:23","type":""}],"src":"4860:1208:23"},{"body":{"nodeType":"YulBlock","src":"6134:374:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6144:26:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6164:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6158:5:23"},"nodeType":"YulFunctionCall","src":"6158:12:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6148:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6186:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"6191:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6179:6:23"},"nodeType":"YulFunctionCall","src":"6179:19:23"},"nodeType":"YulExpressionStatement","src":"6179:19:23"},{"nodeType":"YulVariableDeclaration","src":"6207:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"6217:4:23","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6211:2:23","type":""}]},{"nodeType":"YulAssignment","src":"6230:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6241:3:23"},{"name":"_1","nodeType":"YulIdentifier","src":"6246:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6237:3:23"},"nodeType":"YulFunctionCall","src":"6237:12:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6230:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"6258:28:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6276:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"6283:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6272:3:23"},"nodeType":"YulFunctionCall","src":"6272:14:23"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6262:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6295:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"6304:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6299:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6363:120:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6384:3:23"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6395:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6389:5:23"},"nodeType":"YulFunctionCall","src":"6389:13:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6377:6:23"},"nodeType":"YulFunctionCall","src":"6377:26:23"},"nodeType":"YulExpressionStatement","src":"6377:26:23"},{"nodeType":"YulAssignment","src":"6416:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6427:3:23"},{"name":"_1","nodeType":"YulIdentifier","src":"6432:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6423:3:23"},"nodeType":"YulFunctionCall","src":"6423:12:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6416:3:23"}]},{"nodeType":"YulAssignment","src":"6448:25:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6462:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"6470:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6458:3:23"},"nodeType":"YulFunctionCall","src":"6458:15:23"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6448:6:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6325:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"6328:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6322:2:23"},"nodeType":"YulFunctionCall","src":"6322:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6336:18:23","statements":[{"nodeType":"YulAssignment","src":"6338:14:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6347:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"6350:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6343:3:23"},"nodeType":"YulFunctionCall","src":"6343:9:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6338:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"6318:3:23","statements":[]},"src":"6314:169:23"},{"nodeType":"YulAssignment","src":"6492:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"6499:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6492:3:23"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6111:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6118:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6126:3:23","type":""}],"src":"6073:435:23"},{"body":{"nodeType":"YulBlock","src":"6664:110:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6681:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6692:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6674:6:23"},"nodeType":"YulFunctionCall","src":"6674:21:23"},"nodeType":"YulExpressionStatement","src":"6674:21:23"},{"nodeType":"YulAssignment","src":"6704:64:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6741:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6753:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6764:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6749:3:23"},"nodeType":"YulFunctionCall","src":"6749:18:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6712:28:23"},"nodeType":"YulFunctionCall","src":"6712:56:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6704:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6633:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6644:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6655:4:23","type":""}],"src":"6513:261:23"},{"body":{"nodeType":"YulBlock","src":"6863:263:23","statements":[{"body":{"nodeType":"YulBlock","src":"6909:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6918:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6921:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6911:6:23"},"nodeType":"YulFunctionCall","src":"6911:12:23"},"nodeType":"YulExpressionStatement","src":"6911:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6884:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"6893:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6880:3:23"},"nodeType":"YulFunctionCall","src":"6880:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"6905:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6876:3:23"},"nodeType":"YulFunctionCall","src":"6876:32:23"},"nodeType":"YulIf","src":"6873:52:23"},{"nodeType":"YulAssignment","src":"6934:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6963:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6944:18:23"},"nodeType":"YulFunctionCall","src":"6944:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6934:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"6982:45:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7012:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7023:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7008:3:23"},"nodeType":"YulFunctionCall","src":"7008:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6995:12:23"},"nodeType":"YulFunctionCall","src":"6995:32:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6986:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"7080:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7089:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7092:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7082:6:23"},"nodeType":"YulFunctionCall","src":"7082:12:23"},"nodeType":"YulExpressionStatement","src":"7082:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7049:5:23"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7070:5:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7063:6:23"},"nodeType":"YulFunctionCall","src":"7063:13:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7056:6:23"},"nodeType":"YulFunctionCall","src":"7056:21:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7046:2:23"},"nodeType":"YulFunctionCall","src":"7046:32:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7039:6:23"},"nodeType":"YulFunctionCall","src":"7039:40:23"},"nodeType":"YulIf","src":"7036:60:23"},{"nodeType":"YulAssignment","src":"7105:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"7115:5:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7105:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6821:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6832:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6844:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6852:6:23","type":""}],"src":"6779:347:23"},{"body":{"nodeType":"YulBlock","src":"7218:173:23","statements":[{"body":{"nodeType":"YulBlock","src":"7264:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7273:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7276:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7266:6:23"},"nodeType":"YulFunctionCall","src":"7266:12:23"},"nodeType":"YulExpressionStatement","src":"7266:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7239:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"7248:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7235:3:23"},"nodeType":"YulFunctionCall","src":"7235:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"7260:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7231:3:23"},"nodeType":"YulFunctionCall","src":"7231:32:23"},"nodeType":"YulIf","src":"7228:52:23"},{"nodeType":"YulAssignment","src":"7289:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7318:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7299:18:23"},"nodeType":"YulFunctionCall","src":"7299:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7289:6:23"}]},{"nodeType":"YulAssignment","src":"7337:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7370:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7381:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7366:3:23"},"nodeType":"YulFunctionCall","src":"7366:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7347:18:23"},"nodeType":"YulFunctionCall","src":"7347:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7337:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7176:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7187:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7199:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7207:6:23","type":""}],"src":"7131:260:23"},{"body":{"nodeType":"YulBlock","src":"7543:459:23","statements":[{"body":{"nodeType":"YulBlock","src":"7590:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7599:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7602:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7592:6:23"},"nodeType":"YulFunctionCall","src":"7592:12:23"},"nodeType":"YulExpressionStatement","src":"7592:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7564:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"7573:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7560:3:23"},"nodeType":"YulFunctionCall","src":"7560:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"7585:3:23","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7556:3:23"},"nodeType":"YulFunctionCall","src":"7556:33:23"},"nodeType":"YulIf","src":"7553:53:23"},{"nodeType":"YulAssignment","src":"7615:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7644:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7625:18:23"},"nodeType":"YulFunctionCall","src":"7625:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7615:6:23"}]},{"nodeType":"YulAssignment","src":"7663:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7696:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7707:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7692:3:23"},"nodeType":"YulFunctionCall","src":"7692:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7673:18:23"},"nodeType":"YulFunctionCall","src":"7673:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7663:6:23"}]},{"nodeType":"YulAssignment","src":"7720:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7747:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7758:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:23"},"nodeType":"YulFunctionCall","src":"7743:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7730:12:23"},"nodeType":"YulFunctionCall","src":"7730:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7720:6:23"}]},{"nodeType":"YulAssignment","src":"7771:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7798:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7809:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7794:3:23"},"nodeType":"YulFunctionCall","src":"7794:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7781:12:23"},"nodeType":"YulFunctionCall","src":"7781:32:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7771:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"7822:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7853:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7864:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7849:3:23"},"nodeType":"YulFunctionCall","src":"7849:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7836:12:23"},"nodeType":"YulFunctionCall","src":"7836:33:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7826:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7921:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7924:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7914:6:23"},"nodeType":"YulFunctionCall","src":"7914:12:23"},"nodeType":"YulExpressionStatement","src":"7914:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7884:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"7892:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7881:2:23"},"nodeType":"YulFunctionCall","src":"7881:30:23"},"nodeType":"YulIf","src":"7878:50:23"},{"nodeType":"YulAssignment","src":"7937:59:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7968:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"7979:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7964:3:23"},"nodeType":"YulFunctionCall","src":"7964:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7988:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7947:16:23"},"nodeType":"YulFunctionCall","src":"7947:49:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7937:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7477:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7488:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7500:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7508:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7516:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7524:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7532:6:23","type":""}],"src":"7396:606:23"},{"body":{"nodeType":"YulBlock","src":"8181:232:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8198:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8209:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8191:6:23"},"nodeType":"YulFunctionCall","src":"8191:21:23"},"nodeType":"YulExpressionStatement","src":"8191:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8232:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8243:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8228:3:23"},"nodeType":"YulFunctionCall","src":"8228:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"8248:2:23","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8221:6:23"},"nodeType":"YulFunctionCall","src":"8221:30:23"},"nodeType":"YulExpressionStatement","src":"8221:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8271:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8282:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8267:3:23"},"nodeType":"YulFunctionCall","src":"8267:18:23"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"8287:34:23","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8260:6:23"},"nodeType":"YulFunctionCall","src":"8260:62:23"},"nodeType":"YulExpressionStatement","src":"8260:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8342:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8353:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8338:3:23"},"nodeType":"YulFunctionCall","src":"8338:18:23"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8358:12:23","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8331:6:23"},"nodeType":"YulFunctionCall","src":"8331:40:23"},"nodeType":"YulExpressionStatement","src":"8331:40:23"},{"nodeType":"YulAssignment","src":"8380:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8392:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8403:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8388:3:23"},"nodeType":"YulFunctionCall","src":"8388:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8380:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8158:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8172:4:23","type":""}],"src":"8007:406:23"},{"body":{"nodeType":"YulBlock","src":"8473:325:23","statements":[{"nodeType":"YulAssignment","src":"8483:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8497:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8500:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8493:3:23"},"nodeType":"YulFunctionCall","src":"8493:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8483:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"8514:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8544:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"8550:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8540:3:23"},"nodeType":"YulFunctionCall","src":"8540:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8518:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"8591:31:23","statements":[{"nodeType":"YulAssignment","src":"8593:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8607:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8615:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8603:3:23"},"nodeType":"YulFunctionCall","src":"8603:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8593:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8571:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8564:6:23"},"nodeType":"YulFunctionCall","src":"8564:26:23"},"nodeType":"YulIf","src":"8561:61:23"},{"body":{"nodeType":"YulBlock","src":"8681:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8702:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8709:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8714:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8705:3:23"},"nodeType":"YulFunctionCall","src":"8705:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8695:6:23"},"nodeType":"YulFunctionCall","src":"8695:31:23"},"nodeType":"YulExpressionStatement","src":"8695:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8746:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8749:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8739:6:23"},"nodeType":"YulFunctionCall","src":"8739:15:23"},"nodeType":"YulExpressionStatement","src":"8739:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8774:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8777:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8767:6:23"},"nodeType":"YulFunctionCall","src":"8767:15:23"},"nodeType":"YulExpressionStatement","src":"8767:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8637:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8660:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8668:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8657:2:23"},"nodeType":"YulFunctionCall","src":"8657:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8634:2:23"},"nodeType":"YulFunctionCall","src":"8634:38:23"},"nodeType":"YulIf","src":"8631:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8453:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8462:6:23","type":""}],"src":"8418:380:23"},{"body":{"nodeType":"YulBlock","src":"8977:236:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8994:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9005:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8987:6:23"},"nodeType":"YulFunctionCall","src":"8987:21:23"},"nodeType":"YulExpressionStatement","src":"8987:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9028:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9039:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9024:3:23"},"nodeType":"YulFunctionCall","src":"9024:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"9044:2:23","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9017:6:23"},"nodeType":"YulFunctionCall","src":"9017:30:23"},"nodeType":"YulExpressionStatement","src":"9017:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9067:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9078:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9063:3:23"},"nodeType":"YulFunctionCall","src":"9063:18:23"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"9083:34:23","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9056:6:23"},"nodeType":"YulFunctionCall","src":"9056:62:23"},"nodeType":"YulExpressionStatement","src":"9056:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9138:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9149:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9134:3:23"},"nodeType":"YulFunctionCall","src":"9134:18:23"},{"hexValue":"6572206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"9154:16:23","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9127:6:23"},"nodeType":"YulFunctionCall","src":"9127:44:23"},"nodeType":"YulExpressionStatement","src":"9127:44:23"},{"nodeType":"YulAssignment","src":"9180:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9192:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9203:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9188:3:23"},"nodeType":"YulFunctionCall","src":"9188:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9180:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8954:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8968:4:23","type":""}],"src":"8803:410:23"},{"body":{"nodeType":"YulBlock","src":"9392:231:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9409:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9420:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9402:6:23"},"nodeType":"YulFunctionCall","src":"9402:21:23"},"nodeType":"YulExpressionStatement","src":"9402:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9454:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:23"},"nodeType":"YulFunctionCall","src":"9439:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"9459:2:23","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:23"},"nodeType":"YulFunctionCall","src":"9432:30:23"},"nodeType":"YulExpressionStatement","src":"9432:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9482:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9493:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9478:3:23"},"nodeType":"YulFunctionCall","src":"9478:18:23"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"9498:34:23","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9471:6:23"},"nodeType":"YulFunctionCall","src":"9471:62:23"},"nodeType":"YulExpressionStatement","src":"9471:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9553:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9564:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9549:3:23"},"nodeType":"YulFunctionCall","src":"9549:18:23"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"9569:11:23","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9542:6:23"},"nodeType":"YulFunctionCall","src":"9542:39:23"},"nodeType":"YulExpressionStatement","src":"9542:39:23"},{"nodeType":"YulAssignment","src":"9590:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9602:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9613:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9598:3:23"},"nodeType":"YulFunctionCall","src":"9598:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9590:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9369:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9383:4:23","type":""}],"src":"9218:405:23"},{"body":{"nodeType":"YulBlock","src":"9660:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9677:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9684:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9689:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9680:3:23"},"nodeType":"YulFunctionCall","src":"9680:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9670:6:23"},"nodeType":"YulFunctionCall","src":"9670:31:23"},"nodeType":"YulExpressionStatement","src":"9670:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9717:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9720:4:23","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9710:6:23"},"nodeType":"YulFunctionCall","src":"9710:15:23"},"nodeType":"YulExpressionStatement","src":"9710:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9741:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9744:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9734:6:23"},"nodeType":"YulFunctionCall","src":"9734:15:23"},"nodeType":"YulExpressionStatement","src":"9734:15:23"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9628:127:23"},{"body":{"nodeType":"YulBlock","src":"9792:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9809:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9816:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9821:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9812:3:23"},"nodeType":"YulFunctionCall","src":"9812:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9802:6:23"},"nodeType":"YulFunctionCall","src":"9802:31:23"},"nodeType":"YulExpressionStatement","src":"9802:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9849:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9852:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9842:6:23"},"nodeType":"YulFunctionCall","src":"9842:15:23"},"nodeType":"YulExpressionStatement","src":"9842:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9873:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9876:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9866:6:23"},"nodeType":"YulFunctionCall","src":"9866:15:23"},"nodeType":"YulExpressionStatement","src":"9866:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9760:127:23"},{"body":{"nodeType":"YulBlock","src":"9939:88:23","statements":[{"body":{"nodeType":"YulBlock","src":"9970:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9972:16:23"},"nodeType":"YulFunctionCall","src":"9972:18:23"},"nodeType":"YulExpressionStatement","src":"9972:18:23"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9955:5:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9966:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9962:3:23"},"nodeType":"YulFunctionCall","src":"9962:6:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9952:2:23"},"nodeType":"YulFunctionCall","src":"9952:17:23"},"nodeType":"YulIf","src":"9949:43:23"},{"nodeType":"YulAssignment","src":"10001:20:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10012:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"10019:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10008:3:23"},"nodeType":"YulFunctionCall","src":"10008:13:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10001:3:23"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9921:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9931:3:23","type":""}],"src":"9892:135:23"},{"body":{"nodeType":"YulBlock","src":"10206:230:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10223:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10234:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10216:6:23"},"nodeType":"YulFunctionCall","src":"10216:21:23"},"nodeType":"YulExpressionStatement","src":"10216:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10257:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10268:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10253:3:23"},"nodeType":"YulFunctionCall","src":"10253:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"10273:2:23","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10246:6:23"},"nodeType":"YulFunctionCall","src":"10246:30:23"},"nodeType":"YulExpressionStatement","src":"10246:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10296:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10307:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10292:3:23"},"nodeType":"YulFunctionCall","src":"10292:18:23"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"10312:34:23","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10285:6:23"},"nodeType":"YulFunctionCall","src":"10285:62:23"},"nodeType":"YulExpressionStatement","src":"10285:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10367:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10378:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10363:3:23"},"nodeType":"YulFunctionCall","src":"10363:18:23"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"10383:10:23","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10356:6:23"},"nodeType":"YulFunctionCall","src":"10356:38:23"},"nodeType":"YulExpressionStatement","src":"10356:38:23"},{"nodeType":"YulAssignment","src":"10403:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10415:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10426:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10411:3:23"},"nodeType":"YulFunctionCall","src":"10411:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10403:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10183:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10197:4:23","type":""}],"src":"10032:404:23"},{"body":{"nodeType":"YulBlock","src":"10615:227:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10632:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10643:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10625:6:23"},"nodeType":"YulFunctionCall","src":"10625:21:23"},"nodeType":"YulExpressionStatement","src":"10625:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10666:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10677:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10662:3:23"},"nodeType":"YulFunctionCall","src":"10662:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"10682:2:23","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10655:6:23"},"nodeType":"YulFunctionCall","src":"10655:30:23"},"nodeType":"YulExpressionStatement","src":"10655:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10705:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10716:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10701:3:23"},"nodeType":"YulFunctionCall","src":"10701:18:23"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10721:34:23","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10694:6:23"},"nodeType":"YulFunctionCall","src":"10694:62:23"},"nodeType":"YulExpressionStatement","src":"10694:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10776:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10787:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10772:3:23"},"nodeType":"YulFunctionCall","src":"10772:18:23"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10792:7:23","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10765:6:23"},"nodeType":"YulFunctionCall","src":"10765:35:23"},"nodeType":"YulExpressionStatement","src":"10765:35:23"},{"nodeType":"YulAssignment","src":"10809:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10821:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10832:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10817:3:23"},"nodeType":"YulFunctionCall","src":"10817:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10809:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10592:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10606:4:23","type":""}],"src":"10441:401:23"},{"body":{"nodeType":"YulBlock","src":"11021:232:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11038:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11049:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11031:6:23"},"nodeType":"YulFunctionCall","src":"11031:21:23"},"nodeType":"YulExpressionStatement","src":"11031:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11072:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11083:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11068:3:23"},"nodeType":"YulFunctionCall","src":"11068:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"11088:2:23","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11061:6:23"},"nodeType":"YulFunctionCall","src":"11061:30:23"},"nodeType":"YulExpressionStatement","src":"11061:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11111:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11122:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11107:3:23"},"nodeType":"YulFunctionCall","src":"11107:18:23"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"11127:34:23","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:23"},"nodeType":"YulFunctionCall","src":"11100:62:23"},"nodeType":"YulExpressionStatement","src":"11100:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11182:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11193:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11178:3:23"},"nodeType":"YulFunctionCall","src":"11178:18:23"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"11198:12:23","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11171:6:23"},"nodeType":"YulFunctionCall","src":"11171:40:23"},"nodeType":"YulExpressionStatement","src":"11171:40:23"},{"nodeType":"YulAssignment","src":"11220:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11232:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11243:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11228:3:23"},"nodeType":"YulFunctionCall","src":"11228:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11220:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10998:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11012:4:23","type":""}],"src":"10847:406:23"},{"body":{"nodeType":"YulBlock","src":"11306:77:23","statements":[{"nodeType":"YulAssignment","src":"11316:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11327:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"11330:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11323:3:23"},"nodeType":"YulFunctionCall","src":"11323:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11316:3:23"}]},{"body":{"nodeType":"YulBlock","src":"11355:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11357:16:23"},"nodeType":"YulFunctionCall","src":"11357:18:23"},"nodeType":"YulExpressionStatement","src":"11357:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11347:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"11350:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11344:2:23"},"nodeType":"YulFunctionCall","src":"11344:10:23"},"nodeType":"YulIf","src":"11341:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11289:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"11292:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11298:3:23","type":""}],"src":"11258:125:23"},{"body":{"nodeType":"YulBlock","src":"11617:236:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11634:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11645:2:23","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11627:6:23"},"nodeType":"YulFunctionCall","src":"11627:21:23"},"nodeType":"YulExpressionStatement","src":"11627:21:23"},{"nodeType":"YulVariableDeclaration","src":"11657:70:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11700:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11712:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11723:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11708:3:23"},"nodeType":"YulFunctionCall","src":"11708:18:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11671:28:23"},"nodeType":"YulFunctionCall","src":"11671:56:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"11661:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11747:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11758:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11743:3:23"},"nodeType":"YulFunctionCall","src":"11743:18:23"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"11767:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"11775:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11763:3:23"},"nodeType":"YulFunctionCall","src":"11763:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11736:6:23"},"nodeType":"YulFunctionCall","src":"11736:50:23"},"nodeType":"YulExpressionStatement","src":"11736:50:23"},{"nodeType":"YulAssignment","src":"11795:52:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11832:6:23"},{"name":"tail_1","nodeType":"YulIdentifier","src":"11840:6:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11803:28:23"},"nodeType":"YulFunctionCall","src":"11803:44:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11795:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11578:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11589:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11597:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11608:4:23","type":""}],"src":"11388:465:23"},{"body":{"nodeType":"YulBlock","src":"12032:231:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12049:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12060:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12042:6:23"},"nodeType":"YulFunctionCall","src":"12042:21:23"},"nodeType":"YulExpressionStatement","src":"12042:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12094:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:23"},"nodeType":"YulFunctionCall","src":"12079:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"12099:2:23","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12072:6:23"},"nodeType":"YulFunctionCall","src":"12072:30:23"},"nodeType":"YulExpressionStatement","src":"12072:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12122:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12133:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12118:3:23"},"nodeType":"YulFunctionCall","src":"12118:18:23"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"12138:34:23","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12111:6:23"},"nodeType":"YulFunctionCall","src":"12111:62:23"},"nodeType":"YulExpressionStatement","src":"12111:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12193:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12204:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12189:3:23"},"nodeType":"YulFunctionCall","src":"12189:18:23"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"12209:11:23","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12182:6:23"},"nodeType":"YulFunctionCall","src":"12182:39:23"},"nodeType":"YulExpressionStatement","src":"12182:39:23"},{"nodeType":"YulAssignment","src":"12230:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12242:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12253:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12238:3:23"},"nodeType":"YulFunctionCall","src":"12238:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12230:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12009:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12023:4:23","type":""}],"src":"11858:405:23"},{"body":{"nodeType":"YulBlock","src":"12397:119:23","statements":[{"nodeType":"YulAssignment","src":"12407:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12419:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12430:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12415:3:23"},"nodeType":"YulFunctionCall","src":"12415:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12407:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12449:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"12460:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12442:6:23"},"nodeType":"YulFunctionCall","src":"12442:25:23"},"nodeType":"YulExpressionStatement","src":"12442:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12487:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12498:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12483:3:23"},"nodeType":"YulFunctionCall","src":"12483:18:23"},{"name":"value1","nodeType":"YulIdentifier","src":"12503:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12476:6:23"},"nodeType":"YulFunctionCall","src":"12476:34:23"},"nodeType":"YulExpressionStatement","src":"12476:34:23"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12358:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12369:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12377:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12388:4:23","type":""}],"src":"12268:248:23"},{"body":{"nodeType":"YulBlock","src":"12852:496:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12862:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12880:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12885:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12876:3:23"},"nodeType":"YulFunctionCall","src":"12876:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"12889:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12872:3:23"},"nodeType":"YulFunctionCall","src":"12872:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12866:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12907:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12922:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"12930:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12918:3:23"},"nodeType":"YulFunctionCall","src":"12918:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12900:6:23"},"nodeType":"YulFunctionCall","src":"12900:34:23"},"nodeType":"YulExpressionStatement","src":"12900:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12954:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12965:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12950:3:23"},"nodeType":"YulFunctionCall","src":"12950:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12974:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"12982:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12970:3:23"},"nodeType":"YulFunctionCall","src":"12970:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12943:6:23"},"nodeType":"YulFunctionCall","src":"12943:43:23"},"nodeType":"YulExpressionStatement","src":"12943:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13006:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13017:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13002:3:23"},"nodeType":"YulFunctionCall","src":"13002:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"13022:3:23","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12995:6:23"},"nodeType":"YulFunctionCall","src":"12995:31:23"},"nodeType":"YulExpressionStatement","src":"12995:31:23"},{"nodeType":"YulVariableDeclaration","src":"13035:71:23","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13078:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13090:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13101:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13086:3:23"},"nodeType":"YulFunctionCall","src":"13086:19:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"13049:28:23"},"nodeType":"YulFunctionCall","src":"13049:57:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13039:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13126:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13137:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13122:3:23"},"nodeType":"YulFunctionCall","src":"13122:18:23"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13146:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13154:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13142:3:23"},"nodeType":"YulFunctionCall","src":"13142:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13115:6:23"},"nodeType":"YulFunctionCall","src":"13115:50:23"},"nodeType":"YulExpressionStatement","src":"13115:50:23"},{"nodeType":"YulVariableDeclaration","src":"13174:58:23","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13217:6:23"},{"name":"tail_1","nodeType":"YulIdentifier","src":"13225:6:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"13188:28:23"},"nodeType":"YulFunctionCall","src":"13188:44:23"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"13178:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13252:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13263:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13248:3:23"},"nodeType":"YulFunctionCall","src":"13248:19:23"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13273:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13281:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13269:3:23"},"nodeType":"YulFunctionCall","src":"13269:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13241:6:23"},"nodeType":"YulFunctionCall","src":"13241:51:23"},"nodeType":"YulExpressionStatement","src":"13241:51:23"},{"nodeType":"YulAssignment","src":"13301:41:23","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"13327:6:23"},{"name":"tail_2","nodeType":"YulIdentifier","src":"13335:6:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13309:17:23"},"nodeType":"YulFunctionCall","src":"13309:33:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13301:4:23"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12789:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12800:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12808:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12816:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12824:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12832:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12843:4:23","type":""}],"src":"12521:827:23"},{"body":{"nodeType":"YulBlock","src":"13433:169:23","statements":[{"body":{"nodeType":"YulBlock","src":"13479:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13488:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13491:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13481:6:23"},"nodeType":"YulFunctionCall","src":"13481:12:23"},"nodeType":"YulExpressionStatement","src":"13481:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13454:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13463:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13450:3:23"},"nodeType":"YulFunctionCall","src":"13450:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"13475:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13446:3:23"},"nodeType":"YulFunctionCall","src":"13446:32:23"},"nodeType":"YulIf","src":"13443:52:23"},{"nodeType":"YulVariableDeclaration","src":"13504:29:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13523:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13517:5:23"},"nodeType":"YulFunctionCall","src":"13517:16:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13508:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13566:5:23"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"13542:23:23"},"nodeType":"YulFunctionCall","src":"13542:30:23"},"nodeType":"YulExpressionStatement","src":"13542:30:23"},{"nodeType":"YulAssignment","src":"13581:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"13591:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13581:6:23"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13399:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13410:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13422:6:23","type":""}],"src":"13353:249:23"},{"body":{"nodeType":"YulBlock","src":"13650:136:23","statements":[{"body":{"nodeType":"YulBlock","src":"13695:85:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13724:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13727:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13730:1:23","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13709:14:23"},"nodeType":"YulFunctionCall","src":"13709:23:23"},"nodeType":"YulExpressionStatement","src":"13709:23:23"},{"nodeType":"YulAssignment","src":"13745:25:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13756:3:23","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13767:1:23","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13761:5:23"},"nodeType":"YulFunctionCall","src":"13761:8:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13752:3:23"},"nodeType":"YulFunctionCall","src":"13752:18:23"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"13745:3:23"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13666:14:23"},"nodeType":"YulFunctionCall","src":"13666:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"13684:1:23","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13663:2:23"},"nodeType":"YulFunctionCall","src":"13663:23:23"},"nodeType":"YulIf","src":"13660:120:23"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"13642:3:23","type":""}],"src":"13607:179:23"},{"body":{"nodeType":"YulBlock","src":"13838:624:23","statements":[{"body":{"nodeType":"YulBlock","src":"13878:9:23","statements":[{"nodeType":"YulLeave","src":"13880:5:23"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13854:14:23"},"nodeType":"YulFunctionCall","src":"13854:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"13872:4:23","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13851:2:23"},"nodeType":"YulFunctionCall","src":"13851:26:23"},"nodeType":"YulIf","src":"13848:39:23"},{"nodeType":"YulVariableDeclaration","src":"13896:21:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13914:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13908:5:23"},"nodeType":"YulFunctionCall","src":"13908:9:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"13900:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13926:16:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13940:1:23","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13936:3:23"},"nodeType":"YulFunctionCall","src":"13936:6:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13930:2:23","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13966:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"13972:1:23","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13979:14:23"},"nodeType":"YulFunctionCall","src":"13979:16:23"},{"name":"_1","nodeType":"YulIdentifier","src":"13997:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13975:3:23"},"nodeType":"YulFunctionCall","src":"13975:25:23"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13951:14:23"},"nodeType":"YulFunctionCall","src":"13951:50:23"},"nodeType":"YulExpressionStatement","src":"13951:50:23"},{"nodeType":"YulVariableDeclaration","src":"14010:25:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14030:4:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14024:5:23"},"nodeType":"YulFunctionCall","src":"14024:11:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14014:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14044:26:23","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14054:14:23"},"nodeType":"YulFunctionCall","src":"14054:16:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"14048:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14079:28:23","value":{"kind":"number","nodeType":"YulLiteral","src":"14089:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"14083:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"14165:9:23","statements":[{"nodeType":"YulLeave","src":"14167:5:23"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14125:6:23"},{"name":"_3","nodeType":"YulIdentifier","src":"14133:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14122:2:23"},"nodeType":"YulFunctionCall","src":"14122:14:23"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14145:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14153:4:23","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14141:3:23"},"nodeType":"YulFunctionCall","src":"14141:17:23"},{"name":"_2","nodeType":"YulIdentifier","src":"14160:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14138:2:23"},"nodeType":"YulFunctionCall","src":"14138:25:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14119:2:23"},"nodeType":"YulFunctionCall","src":"14119:45:23"},"nodeType":"YulIf","src":"14116:58:23"},{"nodeType":"YulVariableDeclaration","src":"14183:28:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14198:4:23"},{"name":"offset","nodeType":"YulIdentifier","src":"14204:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14194:3:23"},"nodeType":"YulFunctionCall","src":"14194:17:23"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"14187:3:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14220:24:23","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"14240:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14234:5:23"},"nodeType":"YulFunctionCall","src":"14234:10:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14224:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"14271:9:23","statements":[{"nodeType":"YulLeave","src":"14273:5:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14259:6:23"},{"name":"_3","nodeType":"YulIdentifier","src":"14267:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14256:2:23"},"nodeType":"YulFunctionCall","src":"14256:14:23"},"nodeType":"YulIf","src":"14253:27:23"},{"body":{"nodeType":"YulBlock","src":"14362:9:23","statements":[{"nodeType":"YulLeave","src":"14364:5:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"14303:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"14308:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14299:3:23"},"nodeType":"YulFunctionCall","src":"14299:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"14317:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14295:3:23"},"nodeType":"YulFunctionCall","src":"14295:27:23"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14332:4:23"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14338:14:23"},"nodeType":"YulFunctionCall","src":"14338:16:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14328:3:23"},"nodeType":"YulFunctionCall","src":"14328:27:23"},{"name":"_1","nodeType":"YulIdentifier","src":"14357:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14324:3:23"},"nodeType":"YulFunctionCall","src":"14324:36:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14292:2:23"},"nodeType":"YulFunctionCall","src":"14292:69:23"},"nodeType":"YulIf","src":"14289:82:23"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14400:4:23"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14414:6:23"},{"name":"length","nodeType":"YulIdentifier","src":"14422:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14410:3:23"},"nodeType":"YulFunctionCall","src":"14410:19:23"},{"kind":"number","nodeType":"YulLiteral","src":"14431:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14406:3:23"},"nodeType":"YulFunctionCall","src":"14406:30:23"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"14380:19:23"},"nodeType":"YulFunctionCall","src":"14380:57:23"},"nodeType":"YulExpressionStatement","src":"14380:57:23"},{"nodeType":"YulAssignment","src":"14446:10:23","value":{"name":"msg","nodeType":"YulIdentifier","src":"14453:3:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14446:3:23"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13830:3:23","type":""}],"src":"13791:671:23"},{"body":{"nodeType":"YulBlock","src":"14641:242:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14658:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14669:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14651:6:23"},"nodeType":"YulFunctionCall","src":"14651:21:23"},"nodeType":"YulExpressionStatement","src":"14651:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14692:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14703:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14688:3:23"},"nodeType":"YulFunctionCall","src":"14688:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"14708:2:23","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14681:6:23"},"nodeType":"YulFunctionCall","src":"14681:30:23"},"nodeType":"YulExpressionStatement","src":"14681:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14731:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14742:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14727:3:23"},"nodeType":"YulFunctionCall","src":"14727:18:23"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535","kind":"string","nodeType":"YulLiteral","src":"14747:34:23","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14720:6:23"},"nodeType":"YulFunctionCall","src":"14720:62:23"},"nodeType":"YulExpressionStatement","src":"14720:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14802:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14813:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14798:3:23"},"nodeType":"YulFunctionCall","src":"14798:18:23"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"14818:22:23","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14791:6:23"},"nodeType":"YulFunctionCall","src":"14791:50:23"},"nodeType":"YulExpressionStatement","src":"14791:50:23"},{"nodeType":"YulAssignment","src":"14850:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14862:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14873:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14858:3:23"},"nodeType":"YulFunctionCall","src":"14858:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14850:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14618:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14632:4:23","type":""}],"src":"14467:416:23"},{"body":{"nodeType":"YulBlock","src":"15062:230:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15079:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15090:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15072:6:23"},"nodeType":"YulFunctionCall","src":"15072:21:23"},"nodeType":"YulExpressionStatement","src":"15072:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15113:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15124:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15109:3:23"},"nodeType":"YulFunctionCall","src":"15109:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"15129:2:23","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15102:6:23"},"nodeType":"YulFunctionCall","src":"15102:30:23"},"nodeType":"YulExpressionStatement","src":"15102:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15152:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15163:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15148:3:23"},"nodeType":"YulFunctionCall","src":"15148:18:23"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"15168:34:23","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15141:6:23"},"nodeType":"YulFunctionCall","src":"15141:62:23"},"nodeType":"YulExpressionStatement","src":"15141:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15223:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15234:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15219:3:23"},"nodeType":"YulFunctionCall","src":"15219:18:23"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"15239:10:23","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15212:6:23"},"nodeType":"YulFunctionCall","src":"15212:38:23"},"nodeType":"YulExpressionStatement","src":"15212:38:23"},{"nodeType":"YulAssignment","src":"15259:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15271:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15282:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15267:3:23"},"nodeType":"YulFunctionCall","src":"15267:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15259:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15039:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15053:4:23","type":""}],"src":"14888:404:23"},{"body":{"nodeType":"YulBlock","src":"15528:330:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15538:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15556:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15561:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15552:3:23"},"nodeType":"YulFunctionCall","src":"15552:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"15565:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15548:3:23"},"nodeType":"YulFunctionCall","src":"15548:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15542:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15583:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15598:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"15606:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15594:3:23"},"nodeType":"YulFunctionCall","src":"15594:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15576:6:23"},"nodeType":"YulFunctionCall","src":"15576:34:23"},"nodeType":"YulExpressionStatement","src":"15576:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15630:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15641:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15626:3:23"},"nodeType":"YulFunctionCall","src":"15626:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15650:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"15658:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15646:3:23"},"nodeType":"YulFunctionCall","src":"15646:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15619:6:23"},"nodeType":"YulFunctionCall","src":"15619:43:23"},"nodeType":"YulExpressionStatement","src":"15619:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15682:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15693:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15678:3:23"},"nodeType":"YulFunctionCall","src":"15678:18:23"},{"name":"value2","nodeType":"YulIdentifier","src":"15698:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15671:6:23"},"nodeType":"YulFunctionCall","src":"15671:34:23"},"nodeType":"YulExpressionStatement","src":"15671:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15725:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15736:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15721:3:23"},"nodeType":"YulFunctionCall","src":"15721:18:23"},{"name":"value3","nodeType":"YulIdentifier","src":"15741:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15714:6:23"},"nodeType":"YulFunctionCall","src":"15714:34:23"},"nodeType":"YulExpressionStatement","src":"15714:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15768:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15779:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15764:3:23"},"nodeType":"YulFunctionCall","src":"15764:19:23"},{"kind":"number","nodeType":"YulLiteral","src":"15785:3:23","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15757:6:23"},"nodeType":"YulFunctionCall","src":"15757:32:23"},"nodeType":"YulExpressionStatement","src":"15757:32:23"},{"nodeType":"YulAssignment","src":"15798:54:23","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15824:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15836:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15847:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15832:3:23"},"nodeType":"YulFunctionCall","src":"15832:19:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"15806:17:23"},"nodeType":"YulFunctionCall","src":"15806:46:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15798:4:23"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15465:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15476:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15484:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15492:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15500:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15508:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15519:4:23","type":""}],"src":"15297:561:23"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610b49565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610b8c565b610227565b60405190151581526020016100a9565b6100e86100e3366004610bb0565b610277565b6040516100a99190610c0f565b610108610103366004610d6e565b61030b565b005b61011d610118366004610e18565b610357565b6040516100a99190610f1e565b610108610138366004610f31565b610481565b6100c561014b366004610f6d565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b610108610187366004610fa0565b610490565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060008181526065602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025857506001600160e01b031982166303a24d0760e21b145b8061022157506301ffc9a760e01b6001600160e01b0319831614610221565b60606067805461028690611005565b80601f01602080910402602001604051908101604052809291908181526020018280546102b290611005565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103275750610327853361014b565b6103435760405162461bcd60e51b81526004016101f39061103f565b61035085858585856104d5565b5050505050565b606081518351146103bc5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103d8576103d8610c22565b604051908082528060200260200182016040528015610401578160200160208202803683370190505b50905060005b84518110156104795761044c8582815181106104255761042561108d565b602002602001015185838151811061043f5761043f61108d565b602002602001015161018c565b82828151811061045e5761045e61108d565b6020908102919091010152610472816110b9565b9050610407565b509392505050565b61048c3383836106b5565b5050565b6001600160a01b0385163314806104ac57506104ac853361014b565b6104c85760405162461bcd60e51b81526004016101f39061103f565b6103508585858585610795565b81518351146105375760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b03841661055d5760405162461bcd60e51b81526004016101f3906110d2565b3360005b845181101561064757600085828151811061057e5761057e61108d565b60200260200101519050600085838151811061059c5761059c61108d565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156105ed5760405162461bcd60e51b81526004016101f390611117565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061062c908490611161565b9250508190555050505080610640906110b9565b9050610561565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610697929190611174565b60405180910390a46106ad8187878787876108c3565b505050505050565b816001600160a01b0316836001600160a01b0316036107285760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107bb5760405162461bcd60e51b81526004016101f3906110d2565b3360006107c785610a27565b905060006107d485610a27565b905060008681526065602090815260408083206001600160a01b038c168452909152902054858110156108195760405162461bcd60e51b81526004016101f390611117565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610858908490611161565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46108b8848a8a8a8a8a610a72565b505050505050505050565b6001600160a01b0384163b156106ad5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061090790899089908890889088906004016111a2565b6020604051808303816000875af1925050508015610942575060408051601f3d908101601f1916820190925261093f91810190611200565b60015b6109ee5761094e61121d565b806308c379a0036109875750610962611239565b8061096d5750610989565b8060405162461bcd60e51b81526004016101f39190610c0f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610a1e5760405162461bcd60e51b81526004016101f3906112c3565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a6157610a6161108d565b602090810291909101015292915050565b6001600160a01b0384163b156106ad5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ab6908990899088908890889060040161130b565b6020604051808303816000875af1925050508015610af1575060408051601f3d908101601f19168201909252610aee91810190611200565b60015b610afd5761094e61121d565b6001600160e01b0319811663f23a6e6160e01b14610a1e5760405162461bcd60e51b81526004016101f3906112c3565b80356001600160a01b0381168114610b4457600080fd5b919050565b60008060408385031215610b5c57600080fd5b610b6583610b2d565b946020939093013593505050565b6001600160e01b031981168114610b8957600080fd5b50565b600060208284031215610b9e57600080fd5b8135610ba981610b73565b9392505050565b600060208284031215610bc257600080fd5b5035919050565b6000815180845260005b81811015610bef57602081850181015186830182015201610bd3565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ba96020830184610bc9565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610c5e57610c5e610c22565b6040525050565b600067ffffffffffffffff821115610c7f57610c7f610c22565b5060051b60200190565b600082601f830112610c9a57600080fd5b81356020610ca782610c65565b604051610cb48282610c38565b83815260059390931b8501820192828101915086841115610cd457600080fd5b8286015b84811015610cef5780358352918301918301610cd8565b509695505050505050565b600082601f830112610d0b57600080fd5b813567ffffffffffffffff811115610d2557610d25610c22565b604051610d3c601f8301601f191660200182610c38565b818152846020838601011115610d5157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d8657600080fd5b610d8f86610b2d565b9450610d9d60208701610b2d565b9350604086013567ffffffffffffffff80821115610dba57600080fd5b610dc689838a01610c89565b94506060880135915080821115610ddc57600080fd5b610de889838a01610c89565b93506080880135915080821115610dfe57600080fd5b50610e0b88828901610cfa565b9150509295509295909350565b60008060408385031215610e2b57600080fd5b823567ffffffffffffffff80821115610e4357600080fd5b818501915085601f830112610e5757600080fd5b81356020610e6482610c65565b604051610e718282610c38565b83815260059390931b8501820192828101915089841115610e9157600080fd5b948201945b83861015610eb657610ea786610b2d565b82529482019490820190610e96565b96505086013592505080821115610ecc57600080fd5b50610ed985828601610c89565b9150509250929050565b600081518084526020808501945080840160005b83811015610f1357815187529582019590820190600101610ef7565b509495945050505050565b602081526000610ba96020830184610ee3565b60008060408385031215610f4457600080fd5b610f4d83610b2d565b915060208301358015158114610f6257600080fd5b809150509250929050565b60008060408385031215610f8057600080fd5b610f8983610b2d565b9150610f9760208401610b2d565b90509250929050565b600080600080600060a08688031215610fb857600080fd5b610fc186610b2d565b9450610fcf60208701610b2d565b93506040860135925060608601359150608086013567ffffffffffffffff811115610ff957600080fd5b610e0b88828901610cfa565b600181811c9082168061101957607f821691505b60208210810361103957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110cb576110cb6110a3565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b80820180821115610221576102216110a3565b6040815260006111876040830185610ee3565b82810360208401526111998185610ee3565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111ce90830186610ee3565b82810360608401526111e08186610ee3565b905082810360808401526111f48185610bc9565b98975050505050505050565b60006020828403121561121257600080fd5b8151610ba981610b73565b600060033d11156112365760046000803e5060005160e01c5b90565b600060443d10156112475790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561127757505050505090565b828501915081518181111561128f5750505050505090565b843d87010160208285010111156112a95750505050505090565b6112b860208286010187610c38565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061134590830184610bc9565b97965050505050505056fea26469706673582212204511db1f1cd7eb4170349f69b8b4fb95f6734d52f1583609dd10d48e90d5750264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE18 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF31 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x258 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x221 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x221 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x67 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x1005 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x327 JUMPI POP PUSH2 0x327 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D8 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x401 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x479 JUMPI PUSH2 0x44C DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x425 JUMPI PUSH2 0x425 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x43F JUMPI PUSH2 0x43F PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45E JUMPI PUSH2 0x45E PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x472 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x407 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x48C CALLER DUP4 DUP4 PUSH2 0x6B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4AC JUMPI POP PUSH2 0x4AC DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x795 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57E JUMPI PUSH2 0x57E PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x62C SWAP1 DUP5 SWAP1 PUSH2 0x1161 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x640 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x561 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x697 SWAP3 SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6AD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8C3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x7C7 DUP6 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D4 DUP6 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x858 SWAP1 DUP5 SWAP1 PUSH2 0x1161 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8B8 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA72 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x907 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x942 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x93F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9EE JUMPI PUSH2 0x94E PUSH2 0x121D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x987 JUMPI POP PUSH2 0x962 PUSH2 0x1239 JUMP JUMPDEST DUP1 PUSH2 0x96D JUMPI POP PUSH2 0x989 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA61 JUMPI PUSH2 0xA61 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAB6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x130B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAF1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAEE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAFD JUMPI PUSH2 0x94E PUSH2 0x121D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB65 DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA9 DUP2 PUSH2 0xB73 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBEF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBD3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBC9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC5E JUMPI PUSH2 0xC5E PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xC22 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xCA7 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB4 DUP3 DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCEF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCD8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD25 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8F DUP7 PUSH2 0xB2D JUMP JUMPDEST SWAP5 POP PUSH2 0xD9D PUSH1 0x20 DUP8 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC6 DUP10 DUP4 DUP11 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE8 DUP10 DUP4 DUP11 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE0B DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE64 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE71 DUP3 DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xEA7 DUP7 PUSH2 0xB2D JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED9 DUP6 DUP3 DUP7 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF13 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEF7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4D DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF89 DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP2 POP PUSH2 0xF97 PUSH1 0x20 DUP5 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC1 DUP7 PUSH2 0xB2D JUMP JUMPDEST SWAP5 POP PUSH2 0xFCF PUSH1 0x20 DUP8 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0B DUP9 DUP3 DUP10 ADD PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1019 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1039 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10CB JUMPI PUSH2 0x10CB PUSH2 0x10A3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x221 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1187 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEE3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1199 DUP2 DUP6 PUSH2 0xEE3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11CE SWAP1 DUP4 ADD DUP7 PUSH2 0xEE3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11E0 DUP2 DUP7 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11F4 DUP2 DUP6 PUSH2 0xBC9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBA9 DUP2 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1247 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1277 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x128F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12A9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12B8 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC38 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1345 SWAP1 DUP4 ADD DUP5 PUSH2 0xBC9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT GT 0xDB 0x1F SHR 0xD7 0xEB COINBASE PUSH17 0x349F69B8B4FB95F6734D52F1583609DD10 0xD4 DUP15 SWAP1 0xD5 PUSH22 0x264736F6C6343000811003300000000000000000000 ","sourceMap":"682:17320:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2593:227;;;;;;:::i;:::-;;:::i;:::-;;;597:25:23;;;585:2;570:18;2593:227:1;;;;;;;;1600:349;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:23;;1177:22;1159:41;;1147:2;1132:18;1600:349:1;1019:187:23;2348:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4472:426::-;;;;;;:::i;:::-;;:::i;:::-;;2977:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3553:153::-;;;;;;:::i;:::-;;:::i;3773:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3895:27:1;;;3872:4;3895:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3773:166;4006:394;;;;;;:::i;:::-;;:::i;2593:227::-;2679:7;-1:-1:-1;;;;;2706:21:1;;2698:76;;;;-1:-1:-1;;;2698:76:1;;8209:2:23;2698:76:1;;;8191:21:23;8248:2;8228:18;;;8221:30;8287:34;8267:18;;;8260:62;-1:-1:-1;;;8338:18:23;;;8331:40;8388:19;;2698:76:1;;;;;;;;;-1:-1:-1;2791:13:1;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2791:22:1;;;;;;;;;;2593:227;;;;;:::o;1600:349::-;1724:4;-1:-1:-1;;;;;;1759:52:1;;-1:-1:-1;;;1759:52:1;;:131;;-1:-1:-1;;;;;;;1827:63:1;;-1:-1:-1;;;1827:63:1;1759:131;:183;;;-1:-1:-1;;;;;;;;;;1168:51:11;;;1906:36:1;1060:166:11;2348:103:1;2408:13;2440:4;2433:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2348:103;;;:::o;4472:426::-;-1:-1:-1;;;;;4697:20:1;;929:10:10;4697:20:1;;:60;;-1:-1:-1;4721:36:1;4738:4;929:10:10;3773:166:1;:::i;4721:36::-;4676:153;;;;-1:-1:-1;;;4676:153:1;;;;;;;:::i;:::-;4839:52;4862:4;4868:2;4872:3;4877:7;4886:4;4839:22;:52::i;:::-;4472:426;;;;;:::o;2977:508::-;3128:16;3187:3;:10;3168:8;:15;:29;3160:83;;;;-1:-1:-1;;;3160:83:1;;9420:2:23;3160:83:1;;;9402:21:23;9459:2;9439:18;;;9432:30;9498:34;9478:18;;;9471:62;-1:-1:-1;;;9549:18:23;;;9542:39;9598:19;;3160:83:1;9218:405:23;3160:83:1;3254:30;3301:8;:15;3287:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3287:30:1;;3254:63;;3333:9;3328:120;3352:8;:15;3348:1;:19;3328:120;;;3407:30;3417:8;3426:1;3417:11;;;;;;;;:::i;:::-;;;;;;;3430:3;3434:1;3430:6;;;;;;;;:::i;:::-;;;;;;;3407:9;:30::i;:::-;3388:13;3402:1;3388:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3369:3;;;:::i;:::-;;;3328:120;;;-1:-1:-1;3465:13:1;2977:508;-1:-1:-1;;;2977:508:1:o;3553:153::-;3647:52;929:10:10;3680:8:1;3690;3647:18;:52::i;:::-;3553:153;;:::o;4006:394::-;-1:-1:-1;;;;;4206:20:1;;929:10:10;4206:20:1;;:60;;-1:-1:-1;4230:36:1;4247:4;929:10:10;3773:166:1;:::i;4230:36::-;4185:153;;;;-1:-1:-1;;;4185:153:1;;;;;;;:::i;:::-;4348:45;4366:4;4372:2;4376;4380:6;4388:4;4348:17;:45::i;6641:1115::-;6861:7;:14;6847:3;:10;:28;6839:81;;;;-1:-1:-1;;;6839:81:1;;10234:2:23;6839:81:1;;;10216:21:23;10273:2;10253:18;;;10246:30;10312:34;10292:18;;;10285:62;-1:-1:-1;;;10363:18:23;;;10356:38;10411:19;;6839:81:1;10032:404:23;6839:81:1;-1:-1:-1;;;;;6938:16:1;;6930:66;;;;-1:-1:-1;;;6930:66:1;;;;;;;:::i;:::-;929:10:10;7007:16:1;7120:411;7144:3;:10;7140:1;:14;7120:411;;;7175:10;7188:3;7192:1;7188:6;;;;;;;;:::i;:::-;;;;;;;7175:19;;7208:14;7225:7;7233:1;7225:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7250:19;7272:13;;;:9;:13;;;;;;-1:-1:-1;;;;;7272:19:1;;;;;;;;;;;;7225:10;;-1:-1:-1;7313:21:1;;;;7305:76;;;;-1:-1:-1;;;7305:76:1;;;;;;;:::i;:::-;7423:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7423:19:1;;;;;;;;;;7445:20;;;7423:42;;7493:17;;;;;;;:27;;7445:20;;7423:13;7493:27;;7445:20;;7493:27;:::i;:::-;;;;;;;;7161:370;;;7156:3;;;;:::i;:::-;;;7120:411;;;;7576:2;-1:-1:-1;;;;;7546:47:1;7570:4;-1:-1:-1;;;;;7546:47:1;7560:8;-1:-1:-1;;;;;7546:47:1;;7580:3;7585:7;7546:47;;;;;;;:::i;:::-;;;;;;;;7674:75;7710:8;7720:4;7726:2;7730:3;7735:7;7744:4;7674:35;:75::i;:::-;6829:927;6641:1115;;;;;:::o;13318:323::-;13468:8;-1:-1:-1;;;;;13459:17:1;:5;-1:-1:-1;;;;;13459:17:1;;13451:71;;;;-1:-1:-1;;;13451:71:1;;12060:2:23;13451:71:1;;;12042:21:23;12099:2;12079:18;;;12072:30;12138:34;12118:18;;;12111:62;-1:-1:-1;;;12189:18:23;;;12182:39;12238:19;;13451:71:1;11858:405:23;13451:71:1;-1:-1:-1;;;;;13532:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13532:46:1;;;;;;;;;;13593:41;;1159::23;;;13593::1;;1132:18:23;13593:41:1;;;;;;;13318:323;;;:::o;5348:947::-;-1:-1:-1;;;;;5529:16:1;;5521:66;;;;-1:-1:-1;;;5521:66:1;;;;;;;:::i;:::-;929:10:10;5598:16:1;5662:21;5680:2;5662:17;:21::i;:::-;5639:44;;5693:24;5720:25;5738:6;5720:17;:25::i;:::-;5693:52;;5827:19;5849:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5849:19:1;;;;;;;;;;5886:21;;;;5878:76;;;;-1:-1:-1;;;5878:76:1;;;;;;;:::i;:::-;5988:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5988:19:1;;;;;;;;;;6010:20;;;5988:42;;6050:17;;;;;;;:27;;6010:20;;5988:13;6050:27;;6010:20;;6050:27;:::i;:::-;;;;-1:-1:-1;;6093:46:1;;;12442:25:23;;;12498:2;12483:18;;12476:34;;;-1:-1:-1;;;;;6093:46:1;;;;;;;;;;;;;;12415:18:23;6093:46:1;;;;;;;6220:68;6251:8;6261:4;6267:2;6271;6275:6;6283:4;6220:30;:68::i;:::-;5511:784;;;;5348:947;;;;;:::o;16696:814::-;-1:-1:-1;;;;;16928:13:1;;1476:19:9;:23;16924:580:1;;16963:90;;-1:-1:-1;;;16963:90:1;;-1:-1:-1;;;;;16963:54:1;;;;;:90;;17018:8;;17028:4;;17034:3;;17039:7;;17048:4;;16963:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16963:90:1;;;;;;;;-1:-1:-1;;16963:90:1;;;;;;;;;;;;:::i;:::-;;;16959:535;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;17370:6;17363:14;;-1:-1:-1;;;17363:14:1;;;;;;;;:::i;16959:535::-;;;17417:62;;-1:-1:-1;;;17417:62:1;;14669:2:23;17417:62:1;;;14651:21:23;14708:2;14688:18;;;14681:30;14747:34;14727:18;;;14720:62;-1:-1:-1;;;14798:18:23;;;14791:50;14858:19;;17417:62:1;14467:416:23;16959:535:1;-1:-1:-1;;;;;;17132:71:1;;-1:-1:-1;;;17132:71:1;17128:168;;17227:50;;-1:-1:-1;;;17227:50:1;;;;;;;:::i;17128:168::-;17054:256;16696:814;;;;;;:::o;17516:193::-;17635:16;;;17649:1;17635:16;;;;;;;;;17582;;17610:22;;17635:16;;;;;;;;;;;;-1:-1:-1;17635:16:1;17610:41;;17672:7;17661:5;17667:1;17661:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17697:5;17516:193;-1:-1:-1;;17516:193:1:o;15943:747::-;-1:-1:-1;;;;;16150:13:1;;1476:19:9;:23;16146:538:1;;16185:83;;-1:-1:-1;;;16185:83:1;;-1:-1:-1;;;;;16185:49:1;;;;;:83;;16235:8;;16245:4;;16251:2;;16255:6;;16263:4;;16185:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16185:83:1;;;;;;;;-1:-1:-1;;16185:83:1;;;;;;;;;;;;:::i;:::-;;;16181:493;;;;:::i;:::-;-1:-1:-1;;;;;;16317:66:1;;-1:-1:-1;;;16317:66:1;16313:163;;16407:50;;-1:-1:-1;;;16407:50:1;;;;;;;:::i;14:173:23:-;82:20;;-1:-1:-1;;;;;131:31:23;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:23:o;633:131::-;-1:-1:-1;;;;;;707:32:23;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:23:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:23;;1211:180;-1:-1:-1;1211:180:23:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:249;2291:2;2272:13;;-1:-1:-1;;2268:27:23;2256:40;;2326:18;2311:34;;2347:22;;;2308:62;2305:88;;;2373:18;;:::i;:::-;2409:2;2402:22;-1:-1:-1;;2181:249:23:o;2435:183::-;2495:4;2528:18;2520:6;2517:30;2514:56;;;2550:18;;:::i;:::-;-1:-1:-1;2595:1:23;2591:14;2607:4;2587:25;;2435:183::o;2623:724::-;2677:5;2730:3;2723:4;2715:6;2711:17;2707:27;2697:55;;2748:1;2745;2738:12;2697:55;2784:6;2771:20;2810:4;2833:43;2873:2;2833:43;:::i;:::-;2905:2;2899:9;2917:31;2945:2;2937:6;2917:31;:::i;:::-;2983:18;;;3075:1;3071:10;;;;3059:23;;3055:32;;;3017:15;;;;-1:-1:-1;3099:15:23;;;3096:35;;;3127:1;3124;3117:12;3096:35;3163:2;3155:6;3151:15;3175:142;3191:6;3186:3;3183:15;3175:142;;;3257:17;;3245:30;;3295:12;;;;3208;;3175:142;;;-1:-1:-1;3335:6:23;2623:724;-1:-1:-1;;;;;;2623:724:23:o;3352:555::-;3394:5;3447:3;3440:4;3432:6;3428:17;3424:27;3414:55;;3465:1;3462;3455:12;3414:55;3501:6;3488:20;3527:18;3523:2;3520:26;3517:52;;;3549:18;;:::i;:::-;3598:2;3592:9;3610:67;3665:2;3646:13;;-1:-1:-1;;3642:27:23;3671:4;3638:38;3592:9;3610:67;:::i;:::-;3701:2;3693:6;3686:18;3747:3;3740:4;3735:2;3727:6;3723:15;3719:26;3716:35;3713:55;;;3764:1;3761;3754:12;3713:55;3828:2;3821:4;3813:6;3809:17;3802:4;3794:6;3790:17;3777:54;3875:1;3851:15;;;3868:4;3847:26;3840:37;;;;3855:6;3352:555;-1:-1:-1;;;3352:555:23:o;3912:943::-;4066:6;4074;4082;4090;4098;4151:3;4139:9;4130:7;4126:23;4122:33;4119:53;;;4168:1;4165;4158:12;4119:53;4191:29;4210:9;4191:29;:::i;:::-;4181:39;;4239:38;4273:2;4262:9;4258:18;4239:38;:::i;:::-;4229:48;;4328:2;4317:9;4313:18;4300:32;4351:18;4392:2;4384:6;4381:14;4378:34;;;4408:1;4405;4398:12;4378:34;4431:61;4484:7;4475:6;4464:9;4460:22;4431:61;:::i;:::-;4421:71;;4545:2;4534:9;4530:18;4517:32;4501:48;;4574:2;4564:8;4561:16;4558:36;;;4590:1;4587;4580:12;4558:36;4613:63;4668:7;4657:8;4646:9;4642:24;4613:63;:::i;:::-;4603:73;;4729:3;4718:9;4714:19;4701:33;4685:49;;4759:2;4749:8;4746:16;4743:36;;;4775:1;4772;4765:12;4743:36;;4798:51;4841:7;4830:8;4819:9;4815:24;4798:51;:::i;:::-;4788:61;;;3912:943;;;;;;;;:::o;4860:1208::-;4978:6;4986;5039:2;5027:9;5018:7;5014:23;5010:32;5007:52;;;5055:1;5052;5045:12;5007:52;5095:9;5082:23;5124:18;5165:2;5157:6;5154:14;5151:34;;;5181:1;5178;5171:12;5151:34;5219:6;5208:9;5204:22;5194:32;;5264:7;5257:4;5253:2;5249:13;5245:27;5235:55;;5286:1;5283;5276:12;5235:55;5322:2;5309:16;5344:4;5367:43;5407:2;5367:43;:::i;:::-;5439:2;5433:9;5451:31;5479:2;5471:6;5451:31;:::i;:::-;5517:18;;;5605:1;5601:10;;;;5593:19;;5589:28;;;5551:15;;;;-1:-1:-1;5629:19:23;;;5626:39;;;5661:1;5658;5651:12;5626:39;5685:11;;;;5705:148;5721:6;5716:3;5713:15;5705:148;;;5787:23;5806:3;5787:23;:::i;:::-;5775:36;;5738:12;;;;5831;;;;5705:148;;;5872:6;-1:-1:-1;;5916:18:23;;5903:32;;-1:-1:-1;;5947:16:23;;;5944:36;;;5976:1;5973;5966:12;5944:36;;5999:63;6054:7;6043:8;6032:9;6028:24;5999:63;:::i;:::-;5989:73;;;4860:1208;;;;;:::o;6073:435::-;6126:3;6164:5;6158:12;6191:6;6186:3;6179:19;6217:4;6246:2;6241:3;6237:12;6230:19;;6283:2;6276:5;6272:14;6304:1;6314:169;6328:6;6325:1;6322:13;6314:169;;;6389:13;;6377:26;;6423:12;;;;6458:15;;;;6350:1;6343:9;6314:169;;;-1:-1:-1;6499:3:23;;6073:435;-1:-1:-1;;;;;6073:435:23:o;6513:261::-;6692:2;6681:9;6674:21;6655:4;6712:56;6764:2;6753:9;6749:18;6741:6;6712:56;:::i;6779:347::-;6844:6;6852;6905:2;6893:9;6884:7;6880:23;6876:32;6873:52;;;6921:1;6918;6911:12;6873:52;6944:29;6963:9;6944:29;:::i;:::-;6934:39;;7023:2;7012:9;7008:18;6995:32;7070:5;7063:13;7056:21;7049:5;7046:32;7036:60;;7092:1;7089;7082:12;7036:60;7115:5;7105:15;;;6779:347;;;;;:::o;7131:260::-;7199:6;7207;7260:2;7248:9;7239:7;7235:23;7231:32;7228:52;;;7276:1;7273;7266:12;7228:52;7299:29;7318:9;7299:29;:::i;:::-;7289:39;;7347:38;7381:2;7370:9;7366:18;7347:38;:::i;:::-;7337:48;;7131:260;;;;;:::o;7396:606::-;7500:6;7508;7516;7524;7532;7585:3;7573:9;7564:7;7560:23;7556:33;7553:53;;;7602:1;7599;7592:12;7553:53;7625:29;7644:9;7625:29;:::i;:::-;7615:39;;7673:38;7707:2;7696:9;7692:18;7673:38;:::i;:::-;7663:48;;7758:2;7747:9;7743:18;7730:32;7720:42;;7809:2;7798:9;7794:18;7781:32;7771:42;;7864:3;7853:9;7849:19;7836:33;7892:18;7884:6;7881:30;7878:50;;;7924:1;7921;7914:12;7878:50;7947:49;7988:7;7979:6;7968:9;7964:22;7947:49;:::i;8418:380::-;8497:1;8493:12;;;;8540;;;8561:61;;8615:4;8607:6;8603:17;8593:27;;8561:61;8668:2;8660:6;8657:14;8637:18;8634:38;8631:161;;8714:10;8709:3;8705:20;8702:1;8695:31;8749:4;8746:1;8739:15;8777:4;8774:1;8767:15;8631:161;;8418:380;;;:::o;8803:410::-;9005:2;8987:21;;;9044:2;9024:18;;;9017:30;9083:34;9078:2;9063:18;;9056:62;-1:-1:-1;;;9149:2:23;9134:18;;9127:44;9203:3;9188:19;;8803:410::o;9628:127::-;9689:10;9684:3;9680:20;9677:1;9670:31;9720:4;9717:1;9710:15;9744:4;9741:1;9734:15;9760:127;9821:10;9816:3;9812:20;9809:1;9802:31;9852:4;9849:1;9842:15;9876:4;9873:1;9866:15;9892:135;9931:3;9952:17;;;9949:43;;9972:18;;:::i;:::-;-1:-1:-1;10019:1:23;10008:13;;9892:135::o;10441:401::-;10643:2;10625:21;;;10682:2;10662:18;;;10655:30;10721:34;10716:2;10701:18;;10694:62;-1:-1:-1;;;10787:2:23;10772:18;;10765:35;10832:3;10817:19;;10441:401::o;10847:406::-;11049:2;11031:21;;;11088:2;11068:18;;;11061:30;11127:34;11122:2;11107:18;;11100:62;-1:-1:-1;;;11193:2:23;11178:18;;11171:40;11243:3;11228:19;;10847:406::o;11258:125::-;11323:9;;;11344:10;;;11341:36;;;11357:18;;:::i;11388:465::-;11645:2;11634:9;11627:21;11608:4;11671:56;11723:2;11712:9;11708:18;11700:6;11671:56;:::i;:::-;11775:9;11767:6;11763:22;11758:2;11747:9;11743:18;11736:50;11803:44;11840:6;11832;11803:44;:::i;:::-;11795:52;11388:465;-1:-1:-1;;;;;11388:465:23:o;12521:827::-;-1:-1:-1;;;;;12918:15:23;;;12900:34;;12970:15;;12965:2;12950:18;;12943:43;12880:3;13017:2;13002:18;;12995:31;;;12843:4;;13049:57;;13086:19;;13078:6;13049:57;:::i;:::-;13154:9;13146:6;13142:22;13137:2;13126:9;13122:18;13115:50;13188:44;13225:6;13217;13188:44;:::i;:::-;13174:58;;13281:9;13273:6;13269:22;13263:3;13252:9;13248:19;13241:51;13309:33;13335:6;13327;13309:33;:::i;:::-;13301:41;12521:827;-1:-1:-1;;;;;;;;12521:827:23:o;13353:249::-;13422:6;13475:2;13463:9;13454:7;13450:23;13446:32;13443:52;;;13491:1;13488;13481:12;13443:52;13523:9;13517:16;13542:30;13566:5;13542:30;:::i;13607:179::-;13642:3;13684:1;13666:16;13663:23;13660:120;;;13730:1;13727;13724;13709:23;-1:-1:-1;13767:1:23;13761:8;13756:3;13752:18;13660:120;13607:179;:::o;13791:671::-;13830:3;13872:4;13854:16;13851:26;13848:39;;;13791:671;:::o;13848:39::-;13914:2;13908:9;-1:-1:-1;;13979:16:23;13975:25;;13972:1;13908:9;13951:50;14030:4;14024:11;14054:16;14089:18;14160:2;14153:4;14145:6;14141:17;14138:25;14133:2;14125:6;14122:14;14119:45;14116:58;;;14167:5;;;;;13791:671;:::o;14116:58::-;14204:6;14198:4;14194:17;14183:28;;14240:3;14234:10;14267:2;14259:6;14256:14;14253:27;;;14273:5;;;;;;13791:671;:::o;14253:27::-;14357:2;14338:16;14332:4;14328:27;14324:36;14317:4;14308:6;14303:3;14299:16;14295:27;14292:69;14289:82;;;14364:5;;;;;;13791:671;:::o;14289:82::-;14380:57;14431:4;14422:6;14414;14410:19;14406:30;14400:4;14380:57;:::i;:::-;-1:-1:-1;14453:3:23;;13791:671;-1:-1:-1;;;;;13791:671:23:o;14888:404::-;15090:2;15072:21;;;15129:2;15109:18;;;15102:30;15168:34;15163:2;15148:18;;15141:62;-1:-1:-1;;;15234:2:23;15219:18;;15212:38;15282:3;15267:19;;14888:404::o;15297:561::-;-1:-1:-1;;;;;15594:15:23;;;15576:34;;15646:15;;15641:2;15626:18;;15619:43;15693:2;15678:18;;15671:34;;;15736:2;15721:18;;15714:34;;;15556:3;15779;15764:19;;15757:32;;;15519:4;;15806:46;;15832:19;;15824:6;15806:46;:::i;:::-;15798:54;15297:561;-1:-1:-1;;;;;;;15297:561:23:o"},"gasEstimates":{"creation":{"codeDepositCost":"999600","executionCost":"1041","totalCost":"1000641"},"external":{"balanceOf(address,uint256)":"2680","balanceOfBatch(address[],uint256[])":"infinite","isApprovedForAll(address,address)":"infinite","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26705","supportsInterface(bytes4)":"555","uri(uint256)":"infinite"},"internal":{"__ERC1155_init(string memory)":"infinite","__ERC1155_init_unchained(string memory)":"infinite","_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_asSingletonArray(uint256)":"infinite","_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_burn(address,uint256,uint256)":"infinite","_burnBatch(address,uint256[] memory,uint256[] memory)":"infinite","_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)":"infinite","_mint(address,uint256,uint256,bytes memory)":"infinite","_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_safeTransferFrom(address,address,uint256,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_setURI(string memory)":"infinite"}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":\"ERC1155Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155Upgradeable.sol\\\";\\nimport \\\"./IERC1155ReceiverUpgradeable.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURIUpgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {\\n    using AddressUpgradeable for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\\n        __ERC1155_init_unchained(uri_);\\n    }\\n\\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155Upgradeable).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(\\n        address from,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[47] private __gap;\\n}\\n\",\"keccak256\":\"0x6de308cde403f95519bf4b25123cbfe9126f2e0212564bb2ad3c23ac99f1a9cb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2254,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":2298,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":197,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"_balances","offset":0,"slot":"101","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":203,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"_operatorApprovals","offset":0,"slot":"102","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":205,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"_uri","offset":0,"slot":"103","type":"t_string_storage"},{"astId":1412,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable","label":"__gap","offset":0,"slot":"104","type":"t_array(t_uint256)47_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol":{"IERC1155ReceiverUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"_Available since v3.1._","kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":\"IERC1155ReceiverUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol":{"IERC1155Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":\"IERC1155Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol":{"ERC1155SupplyUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.","kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"exists(uint256)":{"details":"Indicates whether any token exist with a given id, or not."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"totalSupply(uint256)":{"details":"Total amount of tokens in with a given id."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","exists(uint256)":"4f558e79","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","totalSupply(uint256)":"bd85b039","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":\"ERC1155SupplyUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155Upgradeable.sol\\\";\\nimport \\\"./IERC1155ReceiverUpgradeable.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURIUpgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {\\n    using AddressUpgradeable for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\\n        __ERC1155_init_unchained(uri_);\\n    }\\n\\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155Upgradeable).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(\\n        address from,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[47] private __gap;\\n}\\n\",\"keccak256\":\"0x6de308cde403f95519bf4b25123cbfe9126f2e0212564bb2ad3c23ac99f1a9cb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1155Upgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\\n *\\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\\n * clearly identified. Note: While a totalSupply of 1 might mean the\\n * corresponding is an NFT, there is no guarantees that no other token with the\\n * same id are not going to be minted.\\n */\\nabstract contract ERC1155SupplyUpgradeable is Initializable, ERC1155Upgradeable {\\n    function __ERC1155Supply_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1155Supply_init_unchained() internal onlyInitializing {\\n    }\\n    mapping(uint256 => uint256) private _totalSupply;\\n\\n    /**\\n     * @dev Total amount of tokens in with a given id.\\n     */\\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\\n        return _totalSupply[id];\\n    }\\n\\n    /**\\n     * @dev Indicates whether any token exist with a given id, or not.\\n     */\\n    function exists(uint256 id) public view virtual returns (bool) {\\n        return ERC1155SupplyUpgradeable.totalSupply(id) > 0;\\n    }\\n\\n    /**\\n     * @dev See {ERC1155-_beforeTokenTransfer}.\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        if (from == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                _totalSupply[ids[i]] += amounts[i];\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                uint256 id = ids[i];\\n                uint256 amount = amounts[i];\\n                uint256 supply = _totalSupply[id];\\n                require(supply >= amount, \\\"ERC1155: burn amount exceeds totalSupply\\\");\\n                unchecked {\\n                    _totalSupply[id] = supply - amount;\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xf7bdbcbb9fcf42997f280db8c02070e9c561406e6971ff680c6c43f92065ac9e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2254,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":2298,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":197,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_balances","offset":0,"slot":"101","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":203,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_operatorApprovals","offset":0,"slot":"102","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":205,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_uri","offset":0,"slot":"103","type":"t_string_storage"},{"astId":1412,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"__gap","offset":0,"slot":"104","type":"t_array(t_uint256)47_storage"},{"astId":1601,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"_totalSupply","offset":0,"slot":"151","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1752,"contract":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:ERC1155SupplyUpgradeable","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol":{"IERC1155MetadataURIUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._","kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"uri(uint256)":{"details":"Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":\"IERC1155MetadataURIUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol":{"IERC721ReceiverUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":\"IERC721ReceiverUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721ReceiverUpgradeable {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"IERC721Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol":{"IERC721MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":\"IERC721MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Upgradeable.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721MetadataUpgradeable is IERC721Upgradeable {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eae6293f20f60487b38e04fe85a3ddce718a1e806544baafb89b2fc191a6381164736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xE6 0x29 EXTCODEHASH KECCAK256 0xF6 DIV DUP8 0xB3 DUP15 DIV INVALID DUP6 LOG3 0xDD 0xCE PUSH18 0x8A1E806544BAAFB89B2FC191A6381164736F PUSH13 0x63430008110033000000000000 ","sourceMap":"194:8087:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8087:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eae6293f20f60487b38e04fe85a3ddce718a1e806544baafb89b2fc191a6381164736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xE6 0x29 EXTCODEHASH KECCAK256 0xF6 DIV DUP8 0xB3 DUP15 DIV INVALID DUP6 LOG3 0xDD 0xCE PUSH18 0x8A1E806544BAAFB89B2FC191A6381164736F PUSH13 0x63430008110033000000000000 ","sourceMap":"194:8087:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2254,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2298,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2319,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200adb4f3f7178b8e511d8b1d15f94e47a2d1598d2d1f9b4ba38d5ef126a52024e64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xDB 0x4F EXTCODEHASH PUSH18 0x78B8E511D8B1D15F94E47A2D1598D2D1F9B4 0xBA CODESIZE 0xD5 0xEF SLT PUSH11 0x52024E64736F6C63430008 GT STOP CALLER ","sourceMap":"194:8964:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200adb4f3f7178b8e511d8b1d15f94e47a2d1598d2d1f9b4ba38d5ef126a52024e64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xDB 0x4F EXTCODEHASH PUSH18 0x78B8E511D8B1D15F94E47A2D1598D2D1F9B4 0xBA CODESIZE 0xD5 0xEF SLT PUSH11 0x52024E64736F6C63430008 GT STOP CALLER ","sourceMap":"194:8964:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202480e6c580649581670d8f3ab7e1a31eac5b397935413b6cfa52683b904c60b664736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 DUP1 0xE6 0xC5 DUP1 PUSH5 0x9581670D8F GASPRICE 0xB7 0xE1 LOG3 0x1E 0xAC JUMPDEST CODECOPY PUSH26 0x35413B6CFA52683B904C60B664736F6C63430008110033000000 ","sourceMap":"188:2065:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;188:2065:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202480e6c580649581670d8f3ab7e1a31eac5b397935413b6cfa52683b904c60b664736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 DUP1 0xE6 0xC5 DUP1 PUSH5 0x9581670D8F GASPRICE 0xB7 0xE1 LOG3 0x1E 0xAC JUMPDEST CODECOPY PUSH26 0x35413B6CFA52683B904C60B664736F6C63430008110033000000 ","sourceMap":"188:2065:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220535276f603c63551ea15da16fbe8483a3d8a0a26bb6b21d2e7c005f08420f23664736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 MSTORE PUSH23 0xF603C63551EA15DA16FBE8483A3D8A0A26BB6B21D2E7C0 SDIV CREATE DUP5 KECCAK256 CALLCODE CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"202:12302:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12302:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220535276f603c63551ea15da16fbe8483a3d8a0a26bb6b21d2e7c005f08420f23664736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 MSTORE PUSH23 0xF603C63551EA15DA16FBE8483A3D8A0A26BB6B21D2E7C0 SDIV CREATE DUP5 KECCAK256 CALLCODE CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"202:12302:17:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ERC721rUpgradeable.sol":{"ERC721rUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension. This does random batch minting.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506111fe806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063b88d4fde11610066578063b88d4fde1461020a578063c87b56dd1461021d578063d5abeb0114610230578063e985e9c51461023857600080fd5b80636352211e146101b357806370a08231146101dc57806395d89b41146101ef578063a22cb465146101f757600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806318160ddd1461017757806323b872dd1461018d57806342842e0e146101a057600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610d8f565b61024b565b60405190151581526020015b60405180910390f35b61012a61029d565b6040516101199190610dfc565b61014a610145366004610e0f565b61032f565b6040516001600160a01b039091168152602001610119565b610175610170366004610e44565b6103c9565b005b61017f6104dc565b604051908152602001610119565b61017561019b366004610e6e565b6104f3565b6101756101ae366004610e6e565b610524565b61014a6101c1366004610e0f565b6000908152606a60205260409020546001600160a01b031690565b61017f6101ea366004610eaa565b61053f565b61012a6105c6565b610175610205366004610ec5565b6105d5565b610175610218366004610f17565b6105e4565b61012a61022b366004610e0f565b61061c565b60695461017f565b61010d610246366004610ff3565b610704565b60006001600160e01b031982166380ac58cd60e01b148061027c57506001600160e01b03198216635b5e139f60e01b145b8061029757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546102ac90611026565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890611026565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b6000818152606a60205260408120546001600160a01b03166103ad5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606c60205260409020546001600160a01b031690565b6000818152606a60205260409020546001600160a01b0390811690831681900361043f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103a4565b336001600160a01b038216148061045b575061045b8133610704565b6104cd5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103a4565b6104d78383610732565b505050565b60006068546069546104ee9190611076565b905090565b6104fd3382610799565b6105195760405162461bcd60e51b81526004016103a490611089565b6104d783838361086d565b6104d7838383604051806020016040528060008152506105e4565b60006001600160a01b0382166105aa5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103a4565b506001600160a01b03166000908152606b602052604090205490565b6060606680546102ac90611026565b6105e0338383610a09565b5050565b6105ee3383610799565b61060a5760405162461bcd60e51b81526004016103a490611089565b61061684848484610ad7565b50505050565b6000818152606a60205260409020546060906001600160a01b031661069b5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103a4565b60006106b260408051602081019091526000815290565b905060008151116106d257604051806020016040528060008152506106fd565b806106dc84610b0a565b6040516020016106ed9291906110da565b6040516020818303038152906040525b9392505050565b6001600160a01b039182166000908152606d6020908152604080832093909416825291909152205460ff1690565b6000818152606c6020908152604080832080546001600160a01b0319166001600160a01b03878116918217909255606a909352818420549151859492909116917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a45050565b6000818152606a60205260408120546001600160a01b03166108125760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103a4565b6000828152606a60205260409020546001600160a01b039081169084168114806108555750836001600160a01b031661084a8461032f565b6001600160a01b0316145b8061086557506108658185610704565b949350505050565b6000818152606a60205260409020546001600160a01b038481169116146108e45760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103a4565b6001600160a01b0382166109465760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a4565b610951600082610732565b6001600160a01b0383166000908152606b6020526040812080546001929061097a908490611076565b90915550506001600160a01b0382166000908152606b602052604081208054600192906109a8908490611109565b90915550506000818152606a602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610a6a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a4565b6001600160a01b038381166000818152606d6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ae284848461086d565b610aee84848484610b9d565b6106165760405162461bcd60e51b81526004016103a49061111c565b60606000610b1783610c9e565b600101905060008167ffffffffffffffff811115610b3757610b37610f01565b6040519080825280601f01601f191660200182016040528015610b61576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610b6b57509392505050565b60006001600160a01b0384163b15610c9357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610be190339089908890889060040161116e565b6020604051808303816000875af1925050508015610c1c575060408051601f3d908101601f19168201909252610c19918101906111ab565b60015b610c79573d808015610c4a576040519150601f19603f3d011682016040523d82523d6000602084013e610c4f565b606091505b508051600003610c715760405162461bcd60e51b81526004016103a49061111c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610865565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610cdd5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610d09576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610d2757662386f26fc10000830492506010015b6305f5e1008310610d3f576305f5e100830492506008015b6127108310610d5357612710830492506004015b60648310610d65576064830492506002015b600a83106102975760010192915050565b6001600160e01b031981168114610d8c57600080fd5b50565b600060208284031215610da157600080fd5b81356106fd81610d76565b60005b83811015610dc7578181015183820152602001610daf565b50506000910152565b60008151808452610de8816020860160208601610dac565b601f01601f19169290920160200192915050565b6020815260006106fd6020830184610dd0565b600060208284031215610e2157600080fd5b5035919050565b80356001600160a01b0381168114610e3f57600080fd5b919050565b60008060408385031215610e5757600080fd5b610e6083610e28565b946020939093013593505050565b600080600060608486031215610e8357600080fd5b610e8c84610e28565b9250610e9a60208501610e28565b9150604084013590509250925092565b600060208284031215610ebc57600080fd5b6106fd82610e28565b60008060408385031215610ed857600080fd5b610ee183610e28565b915060208301358015158114610ef657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f2d57600080fd5b610f3685610e28565b9350610f4460208601610e28565b925060408501359150606085013567ffffffffffffffff80821115610f6857600080fd5b818701915087601f830112610f7c57600080fd5b813581811115610f8e57610f8e610f01565b604051601f8201601f19908116603f01168101908382118183101715610fb657610fb6610f01565b816040528281528a6020848701011115610fcf57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561100657600080fd5b61100f83610e28565b915061101d60208401610e28565b90509250929050565b600181811c9082168061103a57607f821691505b60208210810361105a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561029757610297611060565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600083516110ec818460208801610dac565b835190830190611100818360208801610dac565b01949350505050565b8082018082111561029757610297611060565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111a190830184610dd0565b9695505050505050565b6000602082840312156111bd57600080fd5b81516106fd81610d7656fea264697066735822122049a5ed43249e9e15c9b91ecd94671e88a1bb2fd1a7a2cb722a993be51388071864736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11FE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x137 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH2 0x12A PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC5 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0xF17 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH2 0x17F JUMP JUMPDEST PUSH2 0x10D PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x27C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0x1026 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0x1026 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND DUP2 SWAP1 SUB PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x45B JUMPI POP PUSH2 0x45B DUP2 CALLER PUSH2 0x704 JUMP JUMPDEST PUSH2 0x4CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x4D7 DUP4 DUP4 PUSH2 0x732 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x68 SLOAD PUSH1 0x69 SLOAD PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4FD CALLER DUP3 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x4D7 DUP4 DUP4 DUP4 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x4D7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x5E0 CALLER DUP4 DUP4 PUSH2 0xA09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5EE CALLER DUP4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x616 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAD7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6FD JUMP JUMPDEST DUP1 PUSH2 0x6DC DUP5 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6ED SWAP3 SWAP2 SWAP1 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x6A SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP2 MLOAD DUP6 SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND DUP2 EQ DUP1 PUSH2 0x855 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84A DUP5 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x865 JUMPI POP PUSH2 0x865 DUP2 DUP6 PUSH2 0x704 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x951 PUSH1 0x0 DUP3 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x97A SWAP1 DUP5 SWAP1 PUSH2 0x1076 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9A8 SWAP1 DUP5 SWAP1 PUSH2 0x1109 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xAE2 DUP5 DUP5 DUP5 PUSH2 0x86D JUMP JUMPDEST PUSH2 0xAEE DUP5 DUP5 DUP5 DUP5 PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xB17 DUP4 PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB37 JUMPI PUSH2 0xB37 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB61 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xB6B JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xBE1 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x116E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC1C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC19 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC79 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x865 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xCDD JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xD09 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD27 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD3F JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD53 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xD65 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x297 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6FD DUP2 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDC7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDAF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDE8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6FD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE60 DUP4 PUSH2 0xE28 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE8C DUP5 PUSH2 0xE28 JUMP JUMPDEST SWAP3 POP PUSH2 0xE9A PUSH1 0x20 DUP6 ADD PUSH2 0xE28 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FD DUP3 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE1 DUP4 PUSH2 0xE28 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF36 DUP6 PUSH2 0xE28 JUMP JUMPDEST SWAP4 POP PUSH2 0xF44 PUSH1 0x20 DUP7 ADD PUSH2 0xE28 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF8E JUMPI PUSH2 0xF8E PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFB6 JUMPI PUSH2 0xFB6 PUSH2 0xF01 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1006 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100F DUP4 PUSH2 0xE28 JUMP JUMPDEST SWAP2 POP PUSH2 0x101D PUSH1 0x20 DUP5 ADD PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x103A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x105A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x297 JUMPI PUSH2 0x297 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x10EC DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xDAC JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1100 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xDAC JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x297 JUMPI PUSH2 0x297 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11A1 SWAP1 DUP4 ADD DUP5 PUSH2 0xDD0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6FD DUP2 PUSH2 0xD76 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xA5 0xED NUMBER 0x24 SWAP15 SWAP15 ISZERO 0xC9 0xB9 0x1E 0xCD SWAP5 PUSH8 0x1E88A1BB2FD1A7A2 0xCB PUSH19 0x2A993BE51388071864736F6C63430008110033 ","sourceMap":"822:16512:18:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_4888":{"entryPoint":null,"id":4888,"parameterSlots":3,"returnSlots":0},"@_approve_4772":{"entryPoint":1842,"id":4772,"parameterSlots":2,"returnSlots":0},"@_baseURI_4079":{"entryPoint":null,"id":4079,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_4877":{"entryPoint":null,"id":4877,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_4866":{"entryPoint":2973,"id":4866,"parameterSlots":4,"returnSlots":1},"@_exists_4301":{"entryPoint":null,"id":4301,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_4342":{"entryPoint":1945,"id":4342,"parameterSlots":2,"returnSlots":1},"@_msgSender_2240":{"entryPoint":null,"id":2240,"parameterSlots":0,"returnSlots":1},"@_safeTransfer_4283":{"entryPoint":2775,"id":4283,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_4804":{"entryPoint":2569,"id":4804,"parameterSlots":3,"returnSlots":0},"@_transfer_4748":{"entryPoint":2157,"id":4748,"parameterSlots":3,"returnSlots":0},"@approve_4122":{"entryPoint":969,"id":4122,"parameterSlots":2,"returnSlots":0},"@balanceOf_3990":{"entryPoint":1343,"id":3990,"parameterSlots":1,"returnSlots":1},"@getApproved_4143":{"entryPoint":815,"id":4143,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_4178":{"entryPoint":1796,"id":4178,"parameterSlots":2,"returnSlots":1},"@isContract_2442":{"entryPoint":null,"id":2442,"parameterSlots":1,"returnSlots":1},"@log10_3653":{"entryPoint":3230,"id":3653,"parameterSlots":1,"returnSlots":1},"@maxSupply_3966":{"entryPoint":null,"id":3966,"parameterSlots":0,"returnSlots":1},"@name_4018":{"entryPoint":669,"id":4018,"parameterSlots":0,"returnSlots":1},"@ownerOf_4008":{"entryPoint":null,"id":4008,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_4224":{"entryPoint":1316,"id":4224,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_4254":{"entryPoint":1508,"id":4254,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_4160":{"entryPoint":1493,"id":4160,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2293":{"entryPoint":null,"id":2293,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3948":{"entryPoint":587,"id":3948,"parameterSlots":1,"returnSlots":1},"@symbol_4028":{"entryPoint":1478,"id":4028,"parameterSlots":0,"returnSlots":1},"@toString_2834":{"entryPoint":2826,"id":2834,"parameterSlots":1,"returnSlots":1},"@tokenURI_4070":{"entryPoint":1564,"id":4070,"parameterSlots":1,"returnSlots":1},"@totalSupply_3958":{"entryPoint":1244,"id":3958,"parameterSlots":0,"returnSlots":1},"@transferFrom_4205":{"entryPoint":1267,"id":4205,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":3624,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4083,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3694,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":3863,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3781,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3652,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3599,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3536,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4314,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4462,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4380,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4233,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4361,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4214,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3500,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4134,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4192,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3841,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":3446,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11416:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:23","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:23"},"nodeType":"YulFunctionCall","src":"125:12:23"},"nodeType":"YulExpressionStatement","src":"125:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:23","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:23"},"nodeType":"YulFunctionCall","src":"99:20:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:23"},"nodeType":"YulFunctionCall","src":"88:32:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:23"},"nodeType":"YulFunctionCall","src":"78:43:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:23"},"nodeType":"YulFunctionCall","src":"71:51:23"},"nodeType":"YulIf","src":"68:71:23"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:23","type":""}],"src":"14:131:23"},{"body":{"nodeType":"YulBlock","src":"219:176:23","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:23"},"nodeType":"YulFunctionCall","src":"267:12:23"},"nodeType":"YulExpressionStatement","src":"267:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:23"},"nodeType":"YulFunctionCall","src":"236:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:23"},"nodeType":"YulFunctionCall","src":"232:32:23"},"nodeType":"YulIf","src":"229:52:23"},{"nodeType":"YulVariableDeclaration","src":"290:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:23"},"nodeType":"YulFunctionCall","src":"303:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:23"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:23"},"nodeType":"YulFunctionCall","src":"335:30:23"},"nodeType":"YulExpressionStatement","src":"335:30:23"},{"nodeType":"YulAssignment","src":"374:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:23"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:23","type":""}],"src":"150:245:23"},{"body":{"nodeType":"YulBlock","src":"495:92:23","statements":[{"nodeType":"YulAssignment","src":"505:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:23"},"nodeType":"YulFunctionCall","src":"513:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:23"},"nodeType":"YulFunctionCall","src":"565:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:23"},"nodeType":"YulFunctionCall","src":"558:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:23"},"nodeType":"YulFunctionCall","src":"540:41:23"},"nodeType":"YulExpressionStatement","src":"540:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:23","type":""}],"src":"400:187:23"},{"body":{"nodeType":"YulBlock","src":"658:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:23"},"nodeType":"YulFunctionCall","src":"758:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:23"},"nodeType":"YulFunctionCall","src":"777:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:23"},"nodeType":"YulFunctionCall","src":"771:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:23"},"nodeType":"YulFunctionCall","src":"751:39:23"},"nodeType":"YulExpressionStatement","src":"751:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:23"},"nodeType":"YulFunctionCall","src":"695:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:23","statements":[{"nodeType":"YulAssignment","src":"711:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:23"},"nodeType":"YulFunctionCall","src":"716:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:23","statements":[]},"src":"687:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:23"},"nodeType":"YulFunctionCall","src":"816:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:23"},"nodeType":"YulFunctionCall","src":"809:27:23"},"nodeType":"YulExpressionStatement","src":"809:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:23","type":""}],"src":"592:250:23"},{"body":{"nodeType":"YulBlock","src":"897:221:23","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:23"},"nodeType":"YulFunctionCall","src":"921:12:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:23"},"nodeType":"YulFunctionCall","src":"942:19:23"},"nodeType":"YulExpressionStatement","src":"942:19:23"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:23"},"nodeType":"YulFunctionCall","src":"1005:16:23"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:23"},"nodeType":"YulFunctionCall","src":"1023:14:23"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:23"},"nodeType":"YulFunctionCall","src":"970:76:23"},"nodeType":"YulExpressionStatement","src":"970:76:23"},{"nodeType":"YulAssignment","src":"1055:57:23","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:23"},"nodeType":"YulFunctionCall","src":"1079:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:23"},"nodeType":"YulFunctionCall","src":"1096:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:23"},"nodeType":"YulFunctionCall","src":"1075:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:23"},"nodeType":"YulFunctionCall","src":"1066:39:23"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:23"},"nodeType":"YulFunctionCall","src":"1062:50:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:23"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:23","type":""}],"src":"847:271:23"},{"body":{"nodeType":"YulBlock","src":"1244:99:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:23"},"nodeType":"YulFunctionCall","src":"1254:21:23"},"nodeType":"YulExpressionStatement","src":"1254:21:23"},{"nodeType":"YulAssignment","src":"1284:53:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:23"},"nodeType":"YulFunctionCall","src":"1318:18:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:23"},"nodeType":"YulFunctionCall","src":"1292:45:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:23","type":""}],"src":"1123:220:23"},{"body":{"nodeType":"YulBlock","src":"1418:110:23","statements":[{"body":{"nodeType":"YulBlock","src":"1464:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:23"},"nodeType":"YulFunctionCall","src":"1466:12:23"},"nodeType":"YulExpressionStatement","src":"1466:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:23"},"nodeType":"YulFunctionCall","src":"1435:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:23"},"nodeType":"YulFunctionCall","src":"1431:32:23"},"nodeType":"YulIf","src":"1428:52:23"},{"nodeType":"YulAssignment","src":"1489:33:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:23"},"nodeType":"YulFunctionCall","src":"1499:23:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:23"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1384:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1395:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1407:6:23","type":""}],"src":"1348:180:23"},{"body":{"nodeType":"YulBlock","src":"1634:102:23","statements":[{"nodeType":"YulAssignment","src":"1644:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:23"},"nodeType":"YulFunctionCall","src":"1652:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1701:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1713:3:23"},"nodeType":"YulFunctionCall","src":"1713:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:23"},"nodeType":"YulFunctionCall","src":"1709:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1697:3:23"},"nodeType":"YulFunctionCall","src":"1697:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:23"},"nodeType":"YulFunctionCall","src":"1679:51:23"},"nodeType":"YulExpressionStatement","src":"1679:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:23","type":""}],"src":"1533:203:23"},{"body":{"nodeType":"YulBlock","src":"1790:124:23","statements":[{"nodeType":"YulAssignment","src":"1800:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1809:12:23"},"nodeType":"YulFunctionCall","src":"1809:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:23"}]},{"body":{"nodeType":"YulBlock","src":"1892:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:23"},"nodeType":"YulFunctionCall","src":"1894:12:23"},"nodeType":"YulExpressionStatement","src":"1894:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1882:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1873:3:23"},"nodeType":"YulFunctionCall","src":"1873:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"1886:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1869:3:23"},"nodeType":"YulFunctionCall","src":"1869:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1858:3:23"},"nodeType":"YulFunctionCall","src":"1858:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1848:2:23"},"nodeType":"YulFunctionCall","src":"1848:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1841:6:23"},"nodeType":"YulFunctionCall","src":"1841:50:23"},"nodeType":"YulIf","src":"1838:70:23"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1780:5:23","type":""}],"src":"1741:173:23"},{"body":{"nodeType":"YulBlock","src":"2006:167:23","statements":[{"body":{"nodeType":"YulBlock","src":"2052:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2054:6:23"},"nodeType":"YulFunctionCall","src":"2054:12:23"},"nodeType":"YulExpressionStatement","src":"2054:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:23"},"nodeType":"YulFunctionCall","src":"2023:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:23"},"nodeType":"YulFunctionCall","src":"2019:32:23"},"nodeType":"YulIf","src":"2016:52:23"},{"nodeType":"YulAssignment","src":"2077:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2087:18:23"},"nodeType":"YulFunctionCall","src":"2087:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2077:6:23"}]},{"nodeType":"YulAssignment","src":"2125:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:23"},"nodeType":"YulFunctionCall","src":"2148:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2135:12:23"},"nodeType":"YulFunctionCall","src":"2135:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2125:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1964:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1975:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1987:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1995:6:23","type":""}],"src":"1919:254:23"},{"body":{"nodeType":"YulBlock","src":"2279:76:23","statements":[{"nodeType":"YulAssignment","src":"2289:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2301:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2312:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2297:3:23"},"nodeType":"YulFunctionCall","src":"2297:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2289:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2331:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"2342:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2324:6:23"},"nodeType":"YulFunctionCall","src":"2324:25:23"},"nodeType":"YulExpressionStatement","src":"2324:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2248:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2259:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2270:4:23","type":""}],"src":"2178:177:23"},{"body":{"nodeType":"YulBlock","src":"2464:224:23","statements":[{"body":{"nodeType":"YulBlock","src":"2510:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2519:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2522:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2512:6:23"},"nodeType":"YulFunctionCall","src":"2512:12:23"},"nodeType":"YulExpressionStatement","src":"2512:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2485:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2494:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2481:3:23"},"nodeType":"YulFunctionCall","src":"2481:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2506:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2477:3:23"},"nodeType":"YulFunctionCall","src":"2477:32:23"},"nodeType":"YulIf","src":"2474:52:23"},{"nodeType":"YulAssignment","src":"2535:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2564:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2545:18:23"},"nodeType":"YulFunctionCall","src":"2545:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2535:6:23"}]},{"nodeType":"YulAssignment","src":"2583:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2616:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2627:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2612:3:23"},"nodeType":"YulFunctionCall","src":"2612:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2593:18:23"},"nodeType":"YulFunctionCall","src":"2593:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2583:6:23"}]},{"nodeType":"YulAssignment","src":"2640:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2667:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2678:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2663:3:23"},"nodeType":"YulFunctionCall","src":"2663:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2650:12:23"},"nodeType":"YulFunctionCall","src":"2650:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2640:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2414:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2425:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2437:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2445:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2453:6:23","type":""}],"src":"2360:328:23"},{"body":{"nodeType":"YulBlock","src":"2763:116:23","statements":[{"body":{"nodeType":"YulBlock","src":"2809:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2818:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2821:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2811:6:23"},"nodeType":"YulFunctionCall","src":"2811:12:23"},"nodeType":"YulExpressionStatement","src":"2811:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2784:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2793:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2780:3:23"},"nodeType":"YulFunctionCall","src":"2780:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2805:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2776:3:23"},"nodeType":"YulFunctionCall","src":"2776:32:23"},"nodeType":"YulIf","src":"2773:52:23"},{"nodeType":"YulAssignment","src":"2834:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2863:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2844:18:23"},"nodeType":"YulFunctionCall","src":"2844:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2834:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2729:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2740:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2752:6:23","type":""}],"src":"2693:186:23"},{"body":{"nodeType":"YulBlock","src":"2968:263:23","statements":[{"body":{"nodeType":"YulBlock","src":"3014:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3023:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3026:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3016:6:23"},"nodeType":"YulFunctionCall","src":"3016:12:23"},"nodeType":"YulExpressionStatement","src":"3016:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2989:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2998:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2985:3:23"},"nodeType":"YulFunctionCall","src":"2985:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"3010:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2981:3:23"},"nodeType":"YulFunctionCall","src":"2981:32:23"},"nodeType":"YulIf","src":"2978:52:23"},{"nodeType":"YulAssignment","src":"3039:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3068:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3049:18:23"},"nodeType":"YulFunctionCall","src":"3049:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3039:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"3087:45:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3117:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3128:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3113:3:23"},"nodeType":"YulFunctionCall","src":"3113:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3100:12:23"},"nodeType":"YulFunctionCall","src":"3100:32:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3185:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3194:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3187:6:23"},"nodeType":"YulFunctionCall","src":"3187:12:23"},"nodeType":"YulExpressionStatement","src":"3187:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3154:5:23"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3175:5:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3168:6:23"},"nodeType":"YulFunctionCall","src":"3168:13:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3161:6:23"},"nodeType":"YulFunctionCall","src":"3161:21:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3151:2:23"},"nodeType":"YulFunctionCall","src":"3151:32:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3144:6:23"},"nodeType":"YulFunctionCall","src":"3144:40:23"},"nodeType":"YulIf","src":"3141:60:23"},{"nodeType":"YulAssignment","src":"3210:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"3220:5:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3210:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2926:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2937:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2949:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2957:6:23","type":""}],"src":"2884:347:23"},{"body":{"nodeType":"YulBlock","src":"3268:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3285:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3297:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3288:3:23"},"nodeType":"YulFunctionCall","src":"3288:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3278:6:23"},"nodeType":"YulFunctionCall","src":"3278:31:23"},"nodeType":"YulExpressionStatement","src":"3278:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3325:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3328:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3318:6:23"},"nodeType":"YulFunctionCall","src":"3318:15:23"},"nodeType":"YulExpressionStatement","src":"3318:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3349:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3352:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3342:6:23"},"nodeType":"YulFunctionCall","src":"3342:15:23"},"nodeType":"YulExpressionStatement","src":"3342:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3236:127:23"},{"body":{"nodeType":"YulBlock","src":"3498:1008:23","statements":[{"body":{"nodeType":"YulBlock","src":"3545:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3554:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3557:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3547:6:23"},"nodeType":"YulFunctionCall","src":"3547:12:23"},"nodeType":"YulExpressionStatement","src":"3547:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3519:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"3528:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3515:3:23"},"nodeType":"YulFunctionCall","src":"3515:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"3540:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3511:3:23"},"nodeType":"YulFunctionCall","src":"3511:33:23"},"nodeType":"YulIf","src":"3508:53:23"},{"nodeType":"YulAssignment","src":"3570:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3580:18:23"},"nodeType":"YulFunctionCall","src":"3580:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3570:6:23"}]},{"nodeType":"YulAssignment","src":"3618:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3651:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3662:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3647:3:23"},"nodeType":"YulFunctionCall","src":"3647:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3628:18:23"},"nodeType":"YulFunctionCall","src":"3628:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3618:6:23"}]},{"nodeType":"YulAssignment","src":"3675:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3702:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3713:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3698:3:23"},"nodeType":"YulFunctionCall","src":"3698:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3685:12:23"},"nodeType":"YulFunctionCall","src":"3685:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3675:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"3726:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3757:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3768:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3753:3:23"},"nodeType":"YulFunctionCall","src":"3753:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3740:12:23"},"nodeType":"YulFunctionCall","src":"3740:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3730:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3781:28:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3791:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3785:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3836:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3845:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3848:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3838:6:23"},"nodeType":"YulFunctionCall","src":"3838:12:23"},"nodeType":"YulExpressionStatement","src":"3838:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3824:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"3832:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3821:2:23"},"nodeType":"YulFunctionCall","src":"3821:14:23"},"nodeType":"YulIf","src":"3818:34:23"},{"nodeType":"YulVariableDeclaration","src":"3861:32:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3875:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"3886:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3871:3:23"},"nodeType":"YulFunctionCall","src":"3871:22:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3865:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3941:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3950:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3953:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3943:6:23"},"nodeType":"YulFunctionCall","src":"3943:12:23"},"nodeType":"YulExpressionStatement","src":"3943:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3920:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"3924:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3916:3:23"},"nodeType":"YulFunctionCall","src":"3916:13:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3931:7:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3912:3:23"},"nodeType":"YulFunctionCall","src":"3912:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3905:6:23"},"nodeType":"YulFunctionCall","src":"3905:35:23"},"nodeType":"YulIf","src":"3902:55:23"},{"nodeType":"YulVariableDeclaration","src":"3966:26:23","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3989:2:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3976:12:23"},"nodeType":"YulFunctionCall","src":"3976:16:23"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3970:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4015:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4017:16:23"},"nodeType":"YulFunctionCall","src":"4017:18:23"},"nodeType":"YulExpressionStatement","src":"4017:18:23"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4007:2:23"},{"name":"_1","nodeType":"YulIdentifier","src":"4011:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4004:2:23"},"nodeType":"YulFunctionCall","src":"4004:10:23"},"nodeType":"YulIf","src":"4001:36:23"},{"nodeType":"YulVariableDeclaration","src":"4046:17:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4060:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4056:3:23"},"nodeType":"YulFunctionCall","src":"4056:7:23"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4050:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4072:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4092:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4086:5:23"},"nodeType":"YulFunctionCall","src":"4086:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4076:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4104:71:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4126:6:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4150:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"4154:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4146:3:23"},"nodeType":"YulFunctionCall","src":"4146:13:23"},{"name":"_4","nodeType":"YulIdentifier","src":"4161:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4142:3:23"},"nodeType":"YulFunctionCall","src":"4142:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"4166:2:23","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4138:3:23"},"nodeType":"YulFunctionCall","src":"4138:31:23"},{"name":"_4","nodeType":"YulIdentifier","src":"4171:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4134:3:23"},"nodeType":"YulFunctionCall","src":"4134:40:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4122:3:23"},"nodeType":"YulFunctionCall","src":"4122:53:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4108:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4234:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4236:16:23"},"nodeType":"YulFunctionCall","src":"4236:18:23"},"nodeType":"YulExpressionStatement","src":"4236:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4193:10:23"},{"name":"_1","nodeType":"YulIdentifier","src":"4205:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4190:2:23"},"nodeType":"YulFunctionCall","src":"4190:18:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4213:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4225:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4210:2:23"},"nodeType":"YulFunctionCall","src":"4210:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4187:2:23"},"nodeType":"YulFunctionCall","src":"4187:46:23"},"nodeType":"YulIf","src":"4184:72:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4272:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4276:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:23"},"nodeType":"YulFunctionCall","src":"4265:22:23"},"nodeType":"YulExpressionStatement","src":"4265:22:23"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4303:6:23"},{"name":"_3","nodeType":"YulIdentifier","src":"4311:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4296:6:23"},"nodeType":"YulFunctionCall","src":"4296:18:23"},"nodeType":"YulExpressionStatement","src":"4296:18:23"},{"body":{"nodeType":"YulBlock","src":"4360:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4369:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4372:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4362:6:23"},"nodeType":"YulFunctionCall","src":"4362:12:23"},"nodeType":"YulExpressionStatement","src":"4362:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4337:2:23"},{"name":"_3","nodeType":"YulIdentifier","src":"4341:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4333:3:23"},"nodeType":"YulFunctionCall","src":"4333:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4329:3:23"},"nodeType":"YulFunctionCall","src":"4329:20:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4351:7:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4326:2:23"},"nodeType":"YulFunctionCall","src":"4326:33:23"},"nodeType":"YulIf","src":"4323:53:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4402:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"4410:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4398:3:23"},"nodeType":"YulFunctionCall","src":"4398:15:23"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4419:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4415:3:23"},"nodeType":"YulFunctionCall","src":"4415:11:23"},{"name":"_3","nodeType":"YulIdentifier","src":"4428:2:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4385:12:23"},"nodeType":"YulFunctionCall","src":"4385:46:23"},"nodeType":"YulExpressionStatement","src":"4385:46:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4455:6:23"},{"name":"_3","nodeType":"YulIdentifier","src":"4463:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4451:3:23"},"nodeType":"YulFunctionCall","src":"4451:15:23"},{"kind":"number","nodeType":"YulLiteral","src":"4468:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4447:3:23"},"nodeType":"YulFunctionCall","src":"4447:24:23"},{"kind":"number","nodeType":"YulLiteral","src":"4473:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4440:6:23"},"nodeType":"YulFunctionCall","src":"4440:35:23"},"nodeType":"YulExpressionStatement","src":"4440:35:23"},{"nodeType":"YulAssignment","src":"4484:16:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4494:6:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4484:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3440:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3451:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3463:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3471:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3479:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3487:6:23","type":""}],"src":"3368:1138:23"},{"body":{"nodeType":"YulBlock","src":"4598:173:23","statements":[{"body":{"nodeType":"YulBlock","src":"4644:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4653:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4656:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4646:6:23"},"nodeType":"YulFunctionCall","src":"4646:12:23"},"nodeType":"YulExpressionStatement","src":"4646:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4619:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4628:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4615:3:23"},"nodeType":"YulFunctionCall","src":"4615:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4640:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4611:3:23"},"nodeType":"YulFunctionCall","src":"4611:32:23"},"nodeType":"YulIf","src":"4608:52:23"},{"nodeType":"YulAssignment","src":"4669:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4698:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4679:18:23"},"nodeType":"YulFunctionCall","src":"4679:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4669:6:23"}]},{"nodeType":"YulAssignment","src":"4717:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4750:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4761:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:23"},"nodeType":"YulFunctionCall","src":"4746:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4727:18:23"},"nodeType":"YulFunctionCall","src":"4727:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4717:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4556:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4567:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4579:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4587:6:23","type":""}],"src":"4511:260:23"},{"body":{"nodeType":"YulBlock","src":"4831:325:23","statements":[{"nodeType":"YulAssignment","src":"4841:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4855:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"4858:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4851:3:23"},"nodeType":"YulFunctionCall","src":"4851:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4841:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"4872:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4902:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"4908:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4898:3:23"},"nodeType":"YulFunctionCall","src":"4898:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4876:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4949:31:23","statements":[{"nodeType":"YulAssignment","src":"4951:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4965:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"4973:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4961:3:23"},"nodeType":"YulFunctionCall","src":"4961:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4951:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4929:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4922:6:23"},"nodeType":"YulFunctionCall","src":"4922:26:23"},"nodeType":"YulIf","src":"4919:61:23"},{"body":{"nodeType":"YulBlock","src":"5039:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5060:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5067:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5072:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5063:3:23"},"nodeType":"YulFunctionCall","src":"5063:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5053:6:23"},"nodeType":"YulFunctionCall","src":"5053:31:23"},"nodeType":"YulExpressionStatement","src":"5053:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5104:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5107:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5097:6:23"},"nodeType":"YulFunctionCall","src":"5097:15:23"},"nodeType":"YulExpressionStatement","src":"5097:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5132:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5135:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5125:6:23"},"nodeType":"YulFunctionCall","src":"5125:15:23"},"nodeType":"YulExpressionStatement","src":"5125:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4995:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5018:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"5026:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5015:2:23"},"nodeType":"YulFunctionCall","src":"5015:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4992:2:23"},"nodeType":"YulFunctionCall","src":"4992:38:23"},"nodeType":"YulIf","src":"4989:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4811:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4820:6:23","type":""}],"src":"4776:380:23"},{"body":{"nodeType":"YulBlock","src":"5335:234:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5352:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5363:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5345:6:23"},"nodeType":"YulFunctionCall","src":"5345:21:23"},"nodeType":"YulExpressionStatement","src":"5345:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5386:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5382:3:23"},"nodeType":"YulFunctionCall","src":"5382:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"5402:2:23","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5375:6:23"},"nodeType":"YulFunctionCall","src":"5375:30:23"},"nodeType":"YulExpressionStatement","src":"5375:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5425:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5436:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5421:3:23"},"nodeType":"YulFunctionCall","src":"5421:18:23"},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"5441:34:23","type":"","value":"ERC721: approved query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5414:6:23"},"nodeType":"YulFunctionCall","src":"5414:62:23"},"nodeType":"YulExpressionStatement","src":"5414:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5496:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5507:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5492:3:23"},"nodeType":"YulFunctionCall","src":"5492:18:23"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"5512:14:23","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5485:6:23"},"nodeType":"YulFunctionCall","src":"5485:42:23"},"nodeType":"YulExpressionStatement","src":"5485:42:23"},{"nodeType":"YulAssignment","src":"5536:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5548:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5559:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5544:3:23"},"nodeType":"YulFunctionCall","src":"5544:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5536:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5312:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5326:4:23","type":""}],"src":"5161:408:23"},{"body":{"nodeType":"YulBlock","src":"5748:223:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5765:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5776:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5758:6:23"},"nodeType":"YulFunctionCall","src":"5758:21:23"},"nodeType":"YulExpressionStatement","src":"5758:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5810:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:23"},"nodeType":"YulFunctionCall","src":"5795:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"5815:2:23","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5788:6:23"},"nodeType":"YulFunctionCall","src":"5788:30:23"},"nodeType":"YulExpressionStatement","src":"5788:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5838:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5849:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5834:3:23"},"nodeType":"YulFunctionCall","src":"5834:18:23"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"5854:34:23","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5827:6:23"},"nodeType":"YulFunctionCall","src":"5827:62:23"},"nodeType":"YulExpressionStatement","src":"5827:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5909:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5920:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5905:3:23"},"nodeType":"YulFunctionCall","src":"5905:18:23"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"5925:3:23","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5898:6:23"},"nodeType":"YulFunctionCall","src":"5898:31:23"},"nodeType":"YulExpressionStatement","src":"5898:31:23"},{"nodeType":"YulAssignment","src":"5938:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5950:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5961:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5946:3:23"},"nodeType":"YulFunctionCall","src":"5946:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5938:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5725:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5739:4:23","type":""}],"src":"5574:397:23"},{"body":{"nodeType":"YulBlock","src":"6150:246:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6167:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6178:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6160:6:23"},"nodeType":"YulFunctionCall","src":"6160:21:23"},"nodeType":"YulExpressionStatement","src":"6160:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6201:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6212:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6197:3:23"},"nodeType":"YulFunctionCall","src":"6197:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"6217:2:23","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6190:6:23"},"nodeType":"YulFunctionCall","src":"6190:30:23"},"nodeType":"YulExpressionStatement","src":"6190:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6240:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6251:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6236:3:23"},"nodeType":"YulFunctionCall","src":"6236:18:23"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77","kind":"string","nodeType":"YulLiteral","src":"6256:34:23","type":"","value":"ERC721: approve caller is not ow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6229:6:23"},"nodeType":"YulFunctionCall","src":"6229:62:23"},"nodeType":"YulExpressionStatement","src":"6229:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6311:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6322:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6307:3:23"},"nodeType":"YulFunctionCall","src":"6307:18:23"},{"hexValue":"6e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"6327:26:23","type":"","value":"ner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6300:6:23"},"nodeType":"YulFunctionCall","src":"6300:54:23"},"nodeType":"YulExpressionStatement","src":"6300:54:23"},{"nodeType":"YulAssignment","src":"6363:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6375:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6386:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6371:3:23"},"nodeType":"YulFunctionCall","src":"6371:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6363:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6127:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6141:4:23","type":""}],"src":"5976:420:23"},{"body":{"nodeType":"YulBlock","src":"6433:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6450:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6457:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6462:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6453:3:23"},"nodeType":"YulFunctionCall","src":"6453:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6443:6:23"},"nodeType":"YulFunctionCall","src":"6443:31:23"},"nodeType":"YulExpressionStatement","src":"6443:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6490:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6493:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6483:6:23"},"nodeType":"YulFunctionCall","src":"6483:15:23"},"nodeType":"YulExpressionStatement","src":"6483:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6514:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6517:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6507:6:23"},"nodeType":"YulFunctionCall","src":"6507:15:23"},"nodeType":"YulExpressionStatement","src":"6507:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6401:127:23"},{"body":{"nodeType":"YulBlock","src":"6582:79:23","statements":[{"nodeType":"YulAssignment","src":"6592:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6604:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"6607:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6600:3:23"},"nodeType":"YulFunctionCall","src":"6600:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6592:4:23"}]},{"body":{"nodeType":"YulBlock","src":"6633:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6635:16:23"},"nodeType":"YulFunctionCall","src":"6635:18:23"},"nodeType":"YulExpressionStatement","src":"6635:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6624:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"6630:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6621:2:23"},"nodeType":"YulFunctionCall","src":"6621:11:23"},"nodeType":"YulIf","src":"6618:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6564:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"6567:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6573:4:23","type":""}],"src":"6533:128:23"},{"body":{"nodeType":"YulBlock","src":"6840:239:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6857:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6868:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6850:6:23"},"nodeType":"YulFunctionCall","src":"6850:21:23"},"nodeType":"YulExpressionStatement","src":"6850:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6891:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6902:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6887:3:23"},"nodeType":"YulFunctionCall","src":"6887:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"6907:2:23","type":"","value":"49"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6880:6:23"},"nodeType":"YulFunctionCall","src":"6880:30:23"},"nodeType":"YulExpressionStatement","src":"6880:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6930:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6941:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6926:3:23"},"nodeType":"YulFunctionCall","src":"6926:18:23"},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f","kind":"string","nodeType":"YulLiteral","src":"6946:34:23","type":"","value":"ERC721: transfer caller is not o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6919:6:23"},"nodeType":"YulFunctionCall","src":"6919:62:23"},"nodeType":"YulExpressionStatement","src":"6919:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7001:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7012:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6997:3:23"},"nodeType":"YulFunctionCall","src":"6997:18:23"},{"hexValue":"776e6572206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"7017:19:23","type":"","value":"wner nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6990:6:23"},"nodeType":"YulFunctionCall","src":"6990:47:23"},"nodeType":"YulExpressionStatement","src":"6990:47:23"},{"nodeType":"YulAssignment","src":"7046:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7058:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7069:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7054:3:23"},"nodeType":"YulFunctionCall","src":"7054:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7046:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6817:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6831:4:23","type":""}],"src":"6666:413:23"},{"body":{"nodeType":"YulBlock","src":"7258:232:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7275:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7286:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7268:6:23"},"nodeType":"YulFunctionCall","src":"7268:21:23"},"nodeType":"YulExpressionStatement","src":"7268:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7309:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7320:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7305:3:23"},"nodeType":"YulFunctionCall","src":"7305:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"7325:2:23","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7298:6:23"},"nodeType":"YulFunctionCall","src":"7298:30:23"},"nodeType":"YulExpressionStatement","src":"7298:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7348:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7359:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7344:3:23"},"nodeType":"YulFunctionCall","src":"7344:18:23"},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65","kind":"string","nodeType":"YulLiteral","src":"7364:34:23","type":"","value":"ERC721: balance query for the ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7337:6:23"},"nodeType":"YulFunctionCall","src":"7337:62:23"},"nodeType":"YulExpressionStatement","src":"7337:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7419:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7430:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7415:3:23"},"nodeType":"YulFunctionCall","src":"7415:18:23"},{"hexValue":"726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"7435:12:23","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7408:6:23"},"nodeType":"YulFunctionCall","src":"7408:40:23"},"nodeType":"YulExpressionStatement","src":"7408:40:23"},{"nodeType":"YulAssignment","src":"7457:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7469:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7480:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7465:3:23"},"nodeType":"YulFunctionCall","src":"7465:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7457:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7235:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7249:4:23","type":""}],"src":"7084:406:23"},{"body":{"nodeType":"YulBlock","src":"7669:237:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7686:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7697:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7679:6:23"},"nodeType":"YulFunctionCall","src":"7679:21:23"},"nodeType":"YulExpressionStatement","src":"7679:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7720:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7731:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7716:3:23"},"nodeType":"YulFunctionCall","src":"7716:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"7736:2:23","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7709:6:23"},"nodeType":"YulFunctionCall","src":"7709:30:23"},"nodeType":"YulExpressionStatement","src":"7709:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7759:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7770:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7755:3:23"},"nodeType":"YulFunctionCall","src":"7755:18:23"},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f","kind":"string","nodeType":"YulLiteral","src":"7775:34:23","type":"","value":"ERC721Metadata: URI query for no"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7748:6:23"},"nodeType":"YulFunctionCall","src":"7748:62:23"},"nodeType":"YulExpressionStatement","src":"7748:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7830:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7841:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7826:3:23"},"nodeType":"YulFunctionCall","src":"7826:18:23"},{"hexValue":"6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"7846:17:23","type":"","value":"nexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7819:6:23"},"nodeType":"YulFunctionCall","src":"7819:45:23"},"nodeType":"YulExpressionStatement","src":"7819:45:23"},{"nodeType":"YulAssignment","src":"7873:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7885:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7896:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7881:3:23"},"nodeType":"YulFunctionCall","src":"7881:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7873:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7646:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7660:4:23","type":""}],"src":"7495:411:23"},{"body":{"nodeType":"YulBlock","src":"8098:309:23","statements":[{"nodeType":"YulVariableDeclaration","src":"8108:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8128:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8122:5:23"},"nodeType":"YulFunctionCall","src":"8122:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8112:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8183:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8191:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8179:3:23"},"nodeType":"YulFunctionCall","src":"8179:17:23"},{"name":"pos","nodeType":"YulIdentifier","src":"8198:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"8203:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8144:34:23"},"nodeType":"YulFunctionCall","src":"8144:66:23"},"nodeType":"YulExpressionStatement","src":"8144:66:23"},{"nodeType":"YulVariableDeclaration","src":"8219:29:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8236:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"8241:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8232:3:23"},"nodeType":"YulFunctionCall","src":"8232:16:23"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"8223:5:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8257:29:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8279:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8273:5:23"},"nodeType":"YulFunctionCall","src":"8273:13:23"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"8261:8:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8334:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8342:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8330:3:23"},"nodeType":"YulFunctionCall","src":"8330:17:23"},{"name":"end_1","nodeType":"YulIdentifier","src":"8349:5:23"},{"name":"length_1","nodeType":"YulIdentifier","src":"8356:8:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8295:34:23"},"nodeType":"YulFunctionCall","src":"8295:70:23"},"nodeType":"YulExpressionStatement","src":"8295:70:23"},{"nodeType":"YulAssignment","src":"8374:27:23","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"8385:5:23"},{"name":"length_1","nodeType":"YulIdentifier","src":"8392:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8381:3:23"},"nodeType":"YulFunctionCall","src":"8381:20:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8374:3:23"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8066:3:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8071:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8079:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8090:3:23","type":""}],"src":"7911:496:23"},{"body":{"nodeType":"YulBlock","src":"8586:234:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8603:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8614:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8596:6:23"},"nodeType":"YulFunctionCall","src":"8596:21:23"},"nodeType":"YulExpressionStatement","src":"8596:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8637:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8648:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8633:3:23"},"nodeType":"YulFunctionCall","src":"8633:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"8653:2:23","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8626:6:23"},"nodeType":"YulFunctionCall","src":"8626:30:23"},"nodeType":"YulExpressionStatement","src":"8626:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8676:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8687:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8672:3:23"},"nodeType":"YulFunctionCall","src":"8672:18:23"},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"8692:34:23","type":"","value":"ERC721: operator query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8665:6:23"},"nodeType":"YulFunctionCall","src":"8665:62:23"},"nodeType":"YulExpressionStatement","src":"8665:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8747:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8758:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8743:3:23"},"nodeType":"YulFunctionCall","src":"8743:18:23"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"8763:14:23","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8736:6:23"},"nodeType":"YulFunctionCall","src":"8736:42:23"},"nodeType":"YulExpressionStatement","src":"8736:42:23"},{"nodeType":"YulAssignment","src":"8787:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8799:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8810:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8795:3:23"},"nodeType":"YulFunctionCall","src":"8795:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8787:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8563:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8577:4:23","type":""}],"src":"8412:408:23"},{"body":{"nodeType":"YulBlock","src":"8999:227:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9016:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9027:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9009:6:23"},"nodeType":"YulFunctionCall","src":"9009:21:23"},"nodeType":"YulExpressionStatement","src":"9009:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9050:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9061:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9046:3:23"},"nodeType":"YulFunctionCall","src":"9046:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"9066:2:23","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9039:6:23"},"nodeType":"YulFunctionCall","src":"9039:30:23"},"nodeType":"YulExpressionStatement","src":"9039:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9089:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9100:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9085:3:23"},"nodeType":"YulFunctionCall","src":"9085:18:23"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"9105:34:23","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9078:6:23"},"nodeType":"YulFunctionCall","src":"9078:62:23"},"nodeType":"YulExpressionStatement","src":"9078:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9160:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9171:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9156:3:23"},"nodeType":"YulFunctionCall","src":"9156:18:23"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"9176:7:23","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9149:6:23"},"nodeType":"YulFunctionCall","src":"9149:35:23"},"nodeType":"YulExpressionStatement","src":"9149:35:23"},{"nodeType":"YulAssignment","src":"9193:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9205:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9216:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9201:3:23"},"nodeType":"YulFunctionCall","src":"9201:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9193:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8976:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8990:4:23","type":""}],"src":"8825:401:23"},{"body":{"nodeType":"YulBlock","src":"9405:226:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9422:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9433:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9415:6:23"},"nodeType":"YulFunctionCall","src":"9415:21:23"},"nodeType":"YulExpressionStatement","src":"9415:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9456:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9467:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9452:3:23"},"nodeType":"YulFunctionCall","src":"9452:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"9472:2:23","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9445:6:23"},"nodeType":"YulFunctionCall","src":"9445:30:23"},"nodeType":"YulExpressionStatement","src":"9445:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9495:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9506:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9491:3:23"},"nodeType":"YulFunctionCall","src":"9491:18:23"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"9511:34:23","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9484:6:23"},"nodeType":"YulFunctionCall","src":"9484:62:23"},"nodeType":"YulExpressionStatement","src":"9484:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9566:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9577:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9562:3:23"},"nodeType":"YulFunctionCall","src":"9562:18:23"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"9582:6:23","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9555:6:23"},"nodeType":"YulFunctionCall","src":"9555:34:23"},"nodeType":"YulExpressionStatement","src":"9555:34:23"},{"nodeType":"YulAssignment","src":"9598:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9610:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9621:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9606:3:23"},"nodeType":"YulFunctionCall","src":"9606:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9598:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9382:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9396:4:23","type":""}],"src":"9231:400:23"},{"body":{"nodeType":"YulBlock","src":"9684:77:23","statements":[{"nodeType":"YulAssignment","src":"9694:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9705:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"9708:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9701:3:23"},"nodeType":"YulFunctionCall","src":"9701:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9694:3:23"}]},{"body":{"nodeType":"YulBlock","src":"9733:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9735:16:23"},"nodeType":"YulFunctionCall","src":"9735:18:23"},"nodeType":"YulExpressionStatement","src":"9735:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9725:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"9728:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9722:2:23"},"nodeType":"YulFunctionCall","src":"9722:10:23"},"nodeType":"YulIf","src":"9719:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9667:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"9670:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9676:3:23","type":""}],"src":"9636:125:23"},{"body":{"nodeType":"YulBlock","src":"9940:175:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9957:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9968:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9950:6:23"},"nodeType":"YulFunctionCall","src":"9950:21:23"},"nodeType":"YulExpressionStatement","src":"9950:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9991:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10002:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9987:3:23"},"nodeType":"YulFunctionCall","src":"9987:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"10007:2:23","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9980:6:23"},"nodeType":"YulFunctionCall","src":"9980:30:23"},"nodeType":"YulExpressionStatement","src":"9980:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10030:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10041:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10026:3:23"},"nodeType":"YulFunctionCall","src":"10026:18:23"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"10046:27:23","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10019:6:23"},"nodeType":"YulFunctionCall","src":"10019:55:23"},"nodeType":"YulExpressionStatement","src":"10019:55:23"},{"nodeType":"YulAssignment","src":"10083:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10095:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10106:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10091:3:23"},"nodeType":"YulFunctionCall","src":"10091:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10083:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9917:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9931:4:23","type":""}],"src":"9766:349:23"},{"body":{"nodeType":"YulBlock","src":"10294:240:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10311:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10322:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10304:6:23"},"nodeType":"YulFunctionCall","src":"10304:21:23"},"nodeType":"YulExpressionStatement","src":"10304:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10345:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10356:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10341:3:23"},"nodeType":"YulFunctionCall","src":"10341:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"10361:2:23","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10334:6:23"},"nodeType":"YulFunctionCall","src":"10334:30:23"},"nodeType":"YulExpressionStatement","src":"10334:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10384:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10395:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10380:3:23"},"nodeType":"YulFunctionCall","src":"10380:18:23"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"10400:34:23","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10373:6:23"},"nodeType":"YulFunctionCall","src":"10373:62:23"},"nodeType":"YulExpressionStatement","src":"10373:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10455:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10466:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10451:3:23"},"nodeType":"YulFunctionCall","src":"10451:18:23"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"10471:20:23","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10444:6:23"},"nodeType":"YulFunctionCall","src":"10444:48:23"},"nodeType":"YulExpressionStatement","src":"10444:48:23"},{"nodeType":"YulAssignment","src":"10501:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10513:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10524:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10509:3:23"},"nodeType":"YulFunctionCall","src":"10509:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10501:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10271:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10285:4:23","type":""}],"src":"10120:414:23"},{"body":{"nodeType":"YulBlock","src":"10571:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10588:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10595:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10600:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10591:3:23"},"nodeType":"YulFunctionCall","src":"10591:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10581:6:23"},"nodeType":"YulFunctionCall","src":"10581:31:23"},"nodeType":"YulExpressionStatement","src":"10581:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10628:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10631:4:23","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10621:6:23"},"nodeType":"YulFunctionCall","src":"10621:15:23"},"nodeType":"YulExpressionStatement","src":"10621:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10652:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10655:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10645:6:23"},"nodeType":"YulFunctionCall","src":"10645:15:23"},"nodeType":"YulExpressionStatement","src":"10645:15:23"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"10539:127:23"},{"body":{"nodeType":"YulBlock","src":"10874:286:23","statements":[{"nodeType":"YulVariableDeclaration","src":"10884:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10902:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10907:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10898:3:23"},"nodeType":"YulFunctionCall","src":"10898:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"10911:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10894:3:23"},"nodeType":"YulFunctionCall","src":"10894:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10888:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10929:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10944:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"10952:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10940:3:23"},"nodeType":"YulFunctionCall","src":"10940:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10922:6:23"},"nodeType":"YulFunctionCall","src":"10922:34:23"},"nodeType":"YulExpressionStatement","src":"10922:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10976:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10987:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10972:3:23"},"nodeType":"YulFunctionCall","src":"10972:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10996:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"11004:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10992:3:23"},"nodeType":"YulFunctionCall","src":"10992:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10965:6:23"},"nodeType":"YulFunctionCall","src":"10965:43:23"},"nodeType":"YulExpressionStatement","src":"10965:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11028:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11039:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11024:3:23"},"nodeType":"YulFunctionCall","src":"11024:18:23"},{"name":"value2","nodeType":"YulIdentifier","src":"11044:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11017:6:23"},"nodeType":"YulFunctionCall","src":"11017:34:23"},"nodeType":"YulExpressionStatement","src":"11017:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11071:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11082:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11067:3:23"},"nodeType":"YulFunctionCall","src":"11067:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"11087:3:23","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11060:6:23"},"nodeType":"YulFunctionCall","src":"11060:31:23"},"nodeType":"YulExpressionStatement","src":"11060:31:23"},{"nodeType":"YulAssignment","src":"11100:54:23","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11126:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11138:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11149:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11134:3:23"},"nodeType":"YulFunctionCall","src":"11134:19:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"11108:17:23"},"nodeType":"YulFunctionCall","src":"11108:46:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11100:4:23"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10819:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10830:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10838:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10846:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10854:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10865:4:23","type":""}],"src":"10671:489:23"},{"body":{"nodeType":"YulBlock","src":"11245:169:23","statements":[{"body":{"nodeType":"YulBlock","src":"11291:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11300:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11303:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11293:6:23"},"nodeType":"YulFunctionCall","src":"11293:12:23"},"nodeType":"YulExpressionStatement","src":"11293:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11266:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"11275:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11262:3:23"},"nodeType":"YulFunctionCall","src":"11262:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"11287:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11258:3:23"},"nodeType":"YulFunctionCall","src":"11258:32:23"},"nodeType":"YulIf","src":"11255:52:23"},{"nodeType":"YulVariableDeclaration","src":"11316:29:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11335:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11329:5:23"},"nodeType":"YulFunctionCall","src":"11329:16:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11320:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11378:5:23"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"11354:23:23"},"nodeType":"YulFunctionCall","src":"11354:30:23"},"nodeType":"YulExpressionStatement","src":"11354:30:23"},{"nodeType":"YulAssignment","src":"11393:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"11403:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11393:6:23"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11211:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11222:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11234:6:23","type":""}],"src":"11165:249:23"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063b88d4fde11610066578063b88d4fde1461020a578063c87b56dd1461021d578063d5abeb0114610230578063e985e9c51461023857600080fd5b80636352211e146101b357806370a08231146101dc57806395d89b41146101ef578063a22cb465146101f757600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806318160ddd1461017757806323b872dd1461018d57806342842e0e146101a057600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610d8f565b61024b565b60405190151581526020015b60405180910390f35b61012a61029d565b6040516101199190610dfc565b61014a610145366004610e0f565b61032f565b6040516001600160a01b039091168152602001610119565b610175610170366004610e44565b6103c9565b005b61017f6104dc565b604051908152602001610119565b61017561019b366004610e6e565b6104f3565b6101756101ae366004610e6e565b610524565b61014a6101c1366004610e0f565b6000908152606a60205260409020546001600160a01b031690565b61017f6101ea366004610eaa565b61053f565b61012a6105c6565b610175610205366004610ec5565b6105d5565b610175610218366004610f17565b6105e4565b61012a61022b366004610e0f565b61061c565b60695461017f565b61010d610246366004610ff3565b610704565b60006001600160e01b031982166380ac58cd60e01b148061027c57506001600160e01b03198216635b5e139f60e01b145b8061029757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546102ac90611026565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890611026565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b6000818152606a60205260408120546001600160a01b03166103ad5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606c60205260409020546001600160a01b031690565b6000818152606a60205260409020546001600160a01b0390811690831681900361043f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103a4565b336001600160a01b038216148061045b575061045b8133610704565b6104cd5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103a4565b6104d78383610732565b505050565b60006068546069546104ee9190611076565b905090565b6104fd3382610799565b6105195760405162461bcd60e51b81526004016103a490611089565b6104d783838361086d565b6104d7838383604051806020016040528060008152506105e4565b60006001600160a01b0382166105aa5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103a4565b506001600160a01b03166000908152606b602052604090205490565b6060606680546102ac90611026565b6105e0338383610a09565b5050565b6105ee3383610799565b61060a5760405162461bcd60e51b81526004016103a490611089565b61061684848484610ad7565b50505050565b6000818152606a60205260409020546060906001600160a01b031661069b5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103a4565b60006106b260408051602081019091526000815290565b905060008151116106d257604051806020016040528060008152506106fd565b806106dc84610b0a565b6040516020016106ed9291906110da565b6040516020818303038152906040525b9392505050565b6001600160a01b039182166000908152606d6020908152604080832093909416825291909152205460ff1690565b6000818152606c6020908152604080832080546001600160a01b0319166001600160a01b03878116918217909255606a909352818420549151859492909116917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a45050565b6000818152606a60205260408120546001600160a01b03166108125760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103a4565b6000828152606a60205260409020546001600160a01b039081169084168114806108555750836001600160a01b031661084a8461032f565b6001600160a01b0316145b8061086557506108658185610704565b949350505050565b6000818152606a60205260409020546001600160a01b038481169116146108e45760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103a4565b6001600160a01b0382166109465760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a4565b610951600082610732565b6001600160a01b0383166000908152606b6020526040812080546001929061097a908490611076565b90915550506001600160a01b0382166000908152606b602052604081208054600192906109a8908490611109565b90915550506000818152606a602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610a6a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a4565b6001600160a01b038381166000818152606d6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ae284848461086d565b610aee84848484610b9d565b6106165760405162461bcd60e51b81526004016103a49061111c565b60606000610b1783610c9e565b600101905060008167ffffffffffffffff811115610b3757610b37610f01565b6040519080825280601f01601f191660200182016040528015610b61576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610b6b57509392505050565b60006001600160a01b0384163b15610c9357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610be190339089908890889060040161116e565b6020604051808303816000875af1925050508015610c1c575060408051601f3d908101601f19168201909252610c19918101906111ab565b60015b610c79573d808015610c4a576040519150601f19603f3d011682016040523d82523d6000602084013e610c4f565b606091505b508051600003610c715760405162461bcd60e51b81526004016103a49061111c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610865565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610cdd5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610d09576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610d2757662386f26fc10000830492506010015b6305f5e1008310610d3f576305f5e100830492506008015b6127108310610d5357612710830492506004015b60648310610d65576064830492506002015b600a83106102975760010192915050565b6001600160e01b031981168114610d8c57600080fd5b50565b600060208284031215610da157600080fd5b81356106fd81610d76565b60005b83811015610dc7578181015183820152602001610daf565b50506000910152565b60008151808452610de8816020860160208601610dac565b601f01601f19169290920160200192915050565b6020815260006106fd6020830184610dd0565b600060208284031215610e2157600080fd5b5035919050565b80356001600160a01b0381168114610e3f57600080fd5b919050565b60008060408385031215610e5757600080fd5b610e6083610e28565b946020939093013593505050565b600080600060608486031215610e8357600080fd5b610e8c84610e28565b9250610e9a60208501610e28565b9150604084013590509250925092565b600060208284031215610ebc57600080fd5b6106fd82610e28565b60008060408385031215610ed857600080fd5b610ee183610e28565b915060208301358015158114610ef657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f2d57600080fd5b610f3685610e28565b9350610f4460208601610e28565b925060408501359150606085013567ffffffffffffffff80821115610f6857600080fd5b818701915087601f830112610f7c57600080fd5b813581811115610f8e57610f8e610f01565b604051601f8201601f19908116603f01168101908382118183101715610fb657610fb6610f01565b816040528281528a6020848701011115610fcf57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561100657600080fd5b61100f83610e28565b915061101d60208401610e28565b90509250929050565b600181811c9082168061103a57607f821691505b60208210810361105a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561029757610297611060565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600083516110ec818460208801610dac565b835190830190611100818360208801610dac565b01949350505050565b8082018082111561029757610297611060565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111a190830184610dd0565b9695505050505050565b6000602082840312156111bd57600080fd5b81516106fd81610d7656fea264697066735822122049a5ed43249e9e15c9b91ecd94671e88a1bb2fd1a7a2cb722a993be51388071864736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x137 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH2 0x12A PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC5 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0xF17 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH2 0x17F JUMP JUMPDEST PUSH2 0x10D PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x27C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0x1026 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0x1026 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND DUP2 SWAP1 SUB PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x45B JUMPI POP PUSH2 0x45B DUP2 CALLER PUSH2 0x704 JUMP JUMPDEST PUSH2 0x4CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x4D7 DUP4 DUP4 PUSH2 0x732 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x68 SLOAD PUSH1 0x69 SLOAD PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4FD CALLER DUP3 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x4D7 DUP4 DUP4 DUP4 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x4D7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x5E0 CALLER DUP4 DUP4 PUSH2 0xA09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5EE CALLER DUP4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x616 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAD7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6FD JUMP JUMPDEST DUP1 PUSH2 0x6DC DUP5 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6ED SWAP3 SWAP2 SWAP1 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x6A SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP2 MLOAD DUP6 SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND DUP2 EQ DUP1 PUSH2 0x855 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84A DUP5 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x865 JUMPI POP PUSH2 0x865 DUP2 DUP6 PUSH2 0x704 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x951 PUSH1 0x0 DUP3 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x97A SWAP1 DUP5 SWAP1 PUSH2 0x1076 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9A8 SWAP1 DUP5 SWAP1 PUSH2 0x1109 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xAE2 DUP5 DUP5 DUP5 PUSH2 0x86D JUMP JUMPDEST PUSH2 0xAEE DUP5 DUP5 DUP5 DUP5 PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xB17 DUP4 PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB37 JUMPI PUSH2 0xB37 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB61 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xB6B JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xBE1 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x116E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC1C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC19 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC79 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x865 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xCDD JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xD09 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD27 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD3F JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD53 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xD65 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x297 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6FD DUP2 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDC7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDAF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDE8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6FD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE60 DUP4 PUSH2 0xE28 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE8C DUP5 PUSH2 0xE28 JUMP JUMPDEST SWAP3 POP PUSH2 0xE9A PUSH1 0x20 DUP6 ADD PUSH2 0xE28 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FD DUP3 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE1 DUP4 PUSH2 0xE28 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF36 DUP6 PUSH2 0xE28 JUMP JUMPDEST SWAP4 POP PUSH2 0xF44 PUSH1 0x20 DUP7 ADD PUSH2 0xE28 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF8E JUMPI PUSH2 0xF8E PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFB6 JUMPI PUSH2 0xFB6 PUSH2 0xF01 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1006 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100F DUP4 PUSH2 0xE28 JUMP JUMPDEST SWAP2 POP PUSH2 0x101D PUSH1 0x20 DUP5 ADD PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x103A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x105A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x297 JUMPI PUSH2 0x297 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x10EC DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xDAC JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1100 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xDAC JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x297 JUMPI PUSH2 0x297 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11A1 SWAP1 DUP4 ADD DUP5 PUSH2 0xDD0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6FD DUP2 PUSH2 0xD76 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xA5 0xED NUMBER 0x24 SWAP15 SWAP15 ISZERO 0xC9 0xB9 0x1E 0xCD SWAP5 PUSH8 0x1E88A1BB2FD1A7A2 0xCB PUSH19 0x2A993BE51388071864736F6C63430008110033 ","sourceMap":"822:16512:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:344;;;;;;:::i;:::-;;:::i;:::-;;;565:14:23;;558:22;540:41;;528:2;513:18;2275:344:18;;;;;;;;3469:98;;;:::i;:::-;;;;;;;:::i;4993:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:23;;;1679:51;;1667:2;1652:18;4993:217:18;1533:203:23;4519:413:18;;;;;;:::i;:::-;;:::i;:::-;;2629:117;;;:::i;:::-;;;2324:25:23;;;2312:2;2297:18;2629:117:18;2178:177:23;5720:330:18;;;;;;:::i;:::-;;:::i;6116:179::-;;;;;;:::i;:::-;;:::i;3170:237::-;;;;;;:::i;:::-;3242:7;3277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;3277:16:18;;3170:237;2908:205;;;;;;:::i;:::-;;:::i;3631:102::-;;;:::i;5277:153::-;;;;;;:::i;:::-;;:::i;6361:320::-;;;;;;:::i;:::-;;:::i;3799:329::-;;;;;;:::i;:::-;;:::i;2756:93::-;2832:10;;2756:93;;5496:162;;;;;;:::i;:::-;;:::i;2275:344::-;2399:4;-1:-1:-1;;;;;;2434:51:18;;-1:-1:-1;;;2434:51:18;;:126;;-1:-1:-1;;;;;;;2501:59:18;;-1:-1:-1;;;2501:59:18;2434:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:11;;;2576:36:18;2415:197;2275:344;-1:-1:-1;;2275:344:18:o;3469:98::-;3523:13;3555:5;3548:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3469:98;:::o;4993:217::-;5069:7;8241:16;;;:7;:16;;;;;;-1:-1:-1;;;;;8241:16:18;5088:73;;;;-1:-1:-1;;;5088:73:18;;5363:2:23;5088:73:18;;;5345:21:23;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:23;;;5485:42;5544:19;;5088:73:18;;;;;;;;;-1:-1:-1;5179:24:18;;;;:15;:24;;;;;;-1:-1:-1;;;;;5179:24:18;;4993:217::o;4519:413::-;4599:13;3277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;3277:16:18;;;;4668:11;;;;;4660:57;;;;-1:-1:-1;;;4660:57:18;;5776:2:23;4660:57:18;;;5758:21:23;5815:2;5795:18;;;5788:30;5854:34;5834:18;;;5827:62;-1:-1:-1;;;5905:18:23;;;5898:31;5946:19;;4660:57:18;5574:397:23;4660:57:18;929:10:10;-1:-1:-1;;;;;4749:21:18;;;;:62;;-1:-1:-1;4774:37:18;4791:5;929:10:10;5496:162:18;:::i;4774:37::-;4728:165;;;;-1:-1:-1;;;4728:165:18;;6178:2:23;4728:165:18;;;6160:21:23;6217:2;6197:18;;;6190:30;6256:34;6236:18;;;6229:62;6327:26;6307:18;;;6300:54;6371:19;;4728:165:18;5976:420:23;4728:165:18;4904:21;4913:2;4917:7;4904:8;:21::i;:::-;4589:343;4519:413;;:::o;2629:117::-;2681:7;2720:19;;2707:10;;:32;;;;:::i;:::-;2700:39;;2629:117;:::o;5720:330::-;5909:41;929:10:10;5942:7:18;5909:18;:41::i;:::-;5901:103;;;;-1:-1:-1;;;5901:103:18;;;;;;;:::i;:::-;6015:28;6025:4;6031:2;6035:7;6015:9;:28::i;6116:179::-;6249:39;6266:4;6272:2;6276:7;6249:39;;;;;;;;;;;;:16;:39::i;2908:205::-;2980:7;-1:-1:-1;;;;;3007:19:18;;2999:74;;;;-1:-1:-1;;;2999:74:18;;7286:2:23;2999:74:18;;;7268:21:23;7325:2;7305:18;;;7298:30;7364:34;7344:18;;;7337:62;-1:-1:-1;;;7415:18:23;;;7408:40;7465:19;;2999:74:18;7084:406:23;2999:74:18;-1:-1:-1;;;;;;3090:16:18;;;;;:9;:16;;;;;;;2908:205::o;3631:102::-;3687:13;3719:7;3712:14;;;;;:::i;5277:153::-;5371:52;929:10:10;5404:8:18;5414;5371:18;:52::i;:::-;5277:153;;:::o;6361:320::-;6530:41;929:10:10;6563:7:18;6530:18;:41::i;:::-;6522:103;;;;-1:-1:-1;;;6522:103:18;;;;;;;:::i;:::-;6635:39;6649:4;6655:2;6659:7;6668:5;6635:13;:39::i;:::-;6361:320;;;;:::o;3799:329::-;8218:4;8241:16;;;:7;:16;;;;;;3872:13;;-1:-1:-1;;;;;8241:16:18;3897:76;;;;-1:-1:-1;;;3897:76:18;;7697:2:23;3897:76:18;;;7679:21:23;7736:2;7716:18;;;7709:30;7775:34;7755:18;;;7748:62;-1:-1:-1;;;7826:18:23;;;7819:45;7881:19;;3897:76:18;7495:411:23;3897:76:18;3984:21;4008:10;4446:9;;;;;;;;;-1:-1:-1;4446:9:18;;;4370:92;4008:10;3984:34;;4059:1;4041:7;4035:21;:25;:86;;;;;;;;;;;;;;;;;4087:7;4096:18;:7;:16;:18::i;:::-;4070:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4035:86;4028:93;3799:329;-1:-1:-1;;;3799:329:18:o;5496:162::-;-1:-1:-1;;;;;5616:25:18;;;5593:4;5616:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5496:162::o;14183:183::-;14257:24;;;;:15;:24;;;;;;;;:29;;-1:-1:-1;;;;;;14257:29:18;-1:-1:-1;;;;;14257:29:18;;;;;;;;;3277:7;:16;;;;;;;14301:58;;14257:24;;3277:16;;;;;14301:58;;;14183:183;;:::o;8436:356::-;8529:4;8241:16;;;:7;:16;;;;;;-1:-1:-1;;;;;8241:16:18;8545:73;;;;-1:-1:-1;;;8545:73:18;;8614:2:23;8545:73:18;;;8596:21:23;8653:2;8633:18;;;8626:30;8692:34;8672:18;;;8665:62;-1:-1:-1;;;8743:18:23;;;8736:42;8795:19;;8545:73:18;8412:408:23;8545:73:18;8628:13;3277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;3277:16:18;;;;8697;;;;;:51;;;8741:7;-1:-1:-1;;;;;8717:31:18;:20;8729:7;8717:11;:20::i;:::-;-1:-1:-1;;;;;8717:31:18;;8697:51;:87;;;;8752:32;8769:5;8776:7;8752:16;:32::i;:::-;8689:96;8436:356;-1:-1:-1;;;;8436:356:18:o;13455:617::-;3242:7;3277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;13582:43:18;;;3277:16;;13582:43;13574:93;;;;-1:-1:-1;;;13574:93:18;;9027:2:23;13574:93:18;;;9009:21:23;9066:2;9046:18;;;9039:30;9105:34;9085:18;;;9078:62;-1:-1:-1;;;9156:18:23;;;9149:35;9201:19;;13574:93:18;8825:401:23;13574:93:18;-1:-1:-1;;;;;13685:16:18;;13677:65;;;;-1:-1:-1;;;13677:65:18;;9433:2:23;13677:65:18;;;9415:21:23;9472:2;9452:18;;;9445:30;9511:34;9491:18;;;9484:62;-1:-1:-1;;;9562:18:23;;;9555:34;9606:19;;13677:65:18;9231:400:23;13677:65:18;13854:29;13871:1;13875:7;13854:8;:29::i;:::-;-1:-1:-1;;;;;13894:15:18;;;;;;:9;:15;;;;;:20;;13913:1;;13894:15;:20;;13913:1;;13894:20;:::i;:::-;;;;-1:-1:-1;;;;;;;13924:13:18;;;;;;:9;:13;;;;;:18;;13941:1;;13924:13;:18;;13941:1;;13924:18;:::i;:::-;;;;-1:-1:-1;;13952:16:18;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;13952:21:18;-1:-1:-1;;;;;13952:21:18;;;;;;;;;13989:27;;13952:16;;13989:27;;;;;;;4589:343;4519:413;;:::o;14501:307::-;14651:8;-1:-1:-1;;;;;14642:17:18;:5;-1:-1:-1;;;;;14642:17:18;;14634:55;;;;-1:-1:-1;;;14634:55:18;;9968:2:23;14634:55:18;;;9950:21:23;10007:2;9987:18;;;9980:30;10046:27;10026:18;;;10019:55;10091:18;;14634:55:18;9766:349:23;14634:55:18;-1:-1:-1;;;;;14699:25:18;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;14699:46:18;;;;;;;;;;14760:41;;540::23;;;14760::18;;513:18:23;14760:41:18;;;;;;;14501:307;;;:::o;7543:::-;7694:28;7704:4;7710:2;7714:7;7694:9;:28::i;:::-;7740:48;7763:4;7769:2;7773:7;7782:5;7740:22;:48::i;:::-;7732:111;;;;-1:-1:-1;;;7732:111:18;;;;;;;:::i;415:696:16:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:16;-1:-1:-1;572:41:16;-1:-1:-1;733:28:16;;;749:2;733:28;788:280;-1:-1:-1;;819:5:16;-1:-1:-1;;;953:2:16;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:16;788:280;1032:21;-1:-1:-1;1088:6:16;415:696;-1:-1:-1;;;415:696:16:o;15361:800:18:-;15511:4;-1:-1:-1;;;;;15531:13:18;;1465:19:14;:23;15527:628:18;;15566:83;;-1:-1:-1;;;15566:83:18;;-1:-1:-1;;;;;15566:47:18;;;;;:83;;929:10:10;;15628:4:18;;15634:7;;15643:5;;15566:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15566:83:18;;;;;;;;-1:-1:-1;;15566:83:18;;;;;;;;;;;;:::i;:::-;;;15562:541;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15827:6;:13;15844:1;15827:18;15823:266;;15869:60;;-1:-1:-1;;;15869:60:18;;;;;;;:::i;15823:266::-;16041:6;16035:13;16026:6;16022:2;16018:15;16011:38;15562:541;-1:-1:-1;;;;;;15699:62:18;-1:-1:-1;;;15699:62:18;;-1:-1:-1;15692:69:18;;15527:628;-1:-1:-1;16140:4:18;15361:800;;;;;;:::o;9889:890:17:-;9942:7;;-1:-1:-1;;;10017:15:17;;10013:99;;-1:-1:-1;;;10052:15:17;;;-1:-1:-1;10095:2:17;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:17;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:17;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:17;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:17;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:17;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:17:o;14:131:23:-;-1:-1:-1;;;;;;88:32:23;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:23;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:23;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:23:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:23;;1348:180;-1:-1:-1;1348:180:23:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:23;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:23:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:23;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;6401:127::-;6462:10;6457:3;6453:20;6450:1;6443:31;6493:4;6490:1;6483:15;6517:4;6514:1;6507:15;6533:128;6600:9;;;6621:11;;;6618:37;;;6635:18;;:::i;6666:413::-;6868:2;6850:21;;;6907:2;6887:18;;;6880:30;6946:34;6941:2;6926:18;;6919:62;-1:-1:-1;;;7012:2:23;6997:18;;6990:47;7069:3;7054:19;;6666:413::o;7911:496::-;8090:3;8128:6;8122:13;8144:66;8203:6;8198:3;8191:4;8183:6;8179:17;8144:66;:::i;:::-;8273:13;;8232:16;;;;8295:70;8273:13;8232:16;8342:4;8330:17;;8295:70;:::i;:::-;8381:20;;7911:496;-1:-1:-1;;;;7911:496:23:o;9636:125::-;9701:9;;;9722:10;;;9719:36;;;9735:18;;:::i;10120:414::-;10322:2;10304:21;;;10361:2;10341:18;;;10334:30;10400:34;10395:2;10380:18;;10373:62;-1:-1:-1;;;10466:2:23;10451:18;;10444:48;10524:3;10509:19;;10120:414::o;10671:489::-;-1:-1:-1;;;;;10940:15:23;;;10922:34;;10992:15;;10987:2;10972:18;;10965:43;11039:2;11024:18;;11017:34;;;11087:3;11082:2;11067:18;;11060:31;;;10865:4;;11108:46;;11134:19;;11126:6;11108:46;:::i;:::-;11100:54;10671:489;-1:-1:-1;;;;;;10671:489:23:o;11165:249::-;11234:6;11287:2;11275:9;11266:7;11262:23;11258:32;11255:52;;;11303:1;11300;11293:12;11255:52;11335:9;11329:16;11354:30;11378:5;11354:30;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"921200","executionCost":"955","totalCost":"922155"},"external":{"approve(address,uint256)":"33390","balanceOf(address)":"2634","getApproved(uint256)":"4760","isApprovedForAll(address,address)":"infinite","maxSupply()":"2358","name()":"infinite","ownerOf(uint256)":"2500","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26772","supportsInterface(bytes4)":"534","symbol()":"infinite","tokenURI(uint256)":"infinite","totalSupply()":"4538","transferFrom(address,address,uint256)":"infinite"},"internal":{"__ERC721r_init(string memory,string memory,uint256)":"infinite","__ERC721r_init_unchained(string memory,string memory,uint256)":"infinite","_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,uint256)":"28431","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"infinite","_isApprovedOrOwner(address,uint256)":"infinite","_mintAtIndex(address,uint256)":"infinite","_mintIdWithoutBalanceUpdate(address,uint256)":"infinite","_mintRandom(address,uint256)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite","getAvailableTokenAtIndex(uint256,uint256)":"infinite","getRandomAvailableTokenId(address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","maxSupply()":"d5abeb01","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension. This does random batch minting.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721rUpgradeable.sol\":\"ERC721rUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721ReceiverUpgradeable {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Upgradeable.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721MetadataUpgradeable is IERC721Upgradeable {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/ERC721rUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension. This does random batch minting.\\n */\\ncontract ERC721rUpgradeable is ContextUpgradeable, ERC165Upgradeable, IERC721Upgradeable, IERC721MetadataUpgradeable {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n    \\n    mapping(uint => uint) private _availableTokens;\\n    uint256 private _numAvailableTokens;\\n    uint256 private _maxSupply;\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    function __ERC721r_init(string memory name_, string memory symbol_, uint maxSupply_) internal onlyInitializing {\\n        __ERC721r_init_unchained(name_, symbol_, maxSupply_);\\n    }\\n\\n    function __ERC721r_init_unchained(string memory name_, string memory symbol_, uint maxSupply_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _maxSupply = maxSupply_;\\n        _numAvailableTokens = maxSupply_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\\n        return\\n            interfaceId == type(IERC721Upgradeable).interfaceId ||\\n            interfaceId == type(IERC721MetadataUpgradeable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n    \\n    function totalSupply() public view virtual returns (uint256) {\\n        return _maxSupply - _numAvailableTokens;\\n    }\\n    \\n    function maxSupply() public view virtual returns (uint256) {\\n        return _maxSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        //require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721rUpgradeable.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721rUpgradeable.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    function _mintIdWithoutBalanceUpdate(address to, uint256 tokenId) private {\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n        \\n        _owners[tokenId] = to;\\n        \\n        emit Transfer(address(0), to, tokenId);\\n        \\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    function _mintRandom(address to, uint _numToMint) internal virtual returns(uint[] memory){\\n        require(_msgSender() == tx.origin, \\\"Contracts cannot mint\\\");\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(_numToMint > 0, \\\"ERC721r: need to mint at least one token\\\");\\n        \\n        // TODO: Probably don't need this as it will underflow and revert automatically in this case\\n        require(_numAvailableTokens >= _numToMint, \\\"ERC721r: minting more tokens than available\\\");\\n        \\n        uint updatedNumAvailableTokens = _numAvailableTokens;\\n        uint[] memory res = new uint[](_numToMint);\\n        for (uint256 i; i < _numToMint; ++i) { // Do this ++ unchecked?\\n            uint256 tokenId = getRandomAvailableTokenId(to, updatedNumAvailableTokens);\\n            res[i] = tokenId;\\n            _mintIdWithoutBalanceUpdate(to, tokenId);\\n            \\n            --updatedNumAvailableTokens;\\n        }\\n        \\n        _numAvailableTokens = updatedNumAvailableTokens;\\n        _balances[to] += _numToMint;\\n        return res;\\n    }\\n        \\n    function getRandomAvailableTokenId(address to, uint updatedNumAvailableTokens)\\n        internal\\n        returns (uint256)\\n    {\\n        uint256 randomNum = uint256(\\n            keccak256(\\n                abi.encode(\\n                    to,\\n                    tx.gasprice,\\n                    block.number,\\n                    block.timestamp,\\n                    block.difficulty,\\n                    blockhash(block.number - 1),\\n                    address(this),\\n                    updatedNumAvailableTokens\\n                )\\n            )\\n        );\\n        uint256 randomIndex = randomNum % updatedNumAvailableTokens;\\n        return getAvailableTokenAtIndex(randomIndex, updatedNumAvailableTokens);\\n    }\\n\\n    // Implements https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle. Code taken from CryptoPhunksV2\\n    function getAvailableTokenAtIndex(uint256 indexToUse, uint updatedNumAvailableTokens)\\n        internal\\n        returns (uint256)\\n    {\\n        uint256 valAtIndex = _availableTokens[indexToUse];\\n        uint256 result;\\n        if (valAtIndex == 0) {\\n            // This means the index itself is still an available token\\n            result = indexToUse;\\n        } else {\\n            // This means the index itself is not an available token, but the val at that index is.\\n            result = valAtIndex;\\n        }\\n\\n        uint256 lastIndex = updatedNumAvailableTokens - 1;\\n        uint256 lastValInArray = _availableTokens[lastIndex];\\n        if (indexToUse != lastIndex) {\\n            // Replace the value at indexToUse, now that it's been used.\\n            // Replace it with the data from the last index in the array, since we are going to decrease the array size afterwards.\\n            if (lastValInArray == 0) {\\n                // This means the index itself is still an available token\\n                _availableTokens[indexToUse] = lastIndex;\\n            } else {\\n                // This means the index itself is not an available token, but the val at that index is.\\n                _availableTokens[indexToUse] = lastValInArray;\\n            }\\n        }\\n        if (lastValInArray != 0) {\\n            // Gas refund courtsey of @dievardump\\n            delete _availableTokens[lastIndex];\\n        }\\n        \\n        return result;\\n    }\\n    \\n    // Not as good as minting a specific tokenId, but will behave the same at the start\\n    // allowing you to explicitly mint some tokens at launch.\\n    function _mintAtIndex(address to, uint index) internal virtual {\\n        require(_msgSender() == tx.origin, \\\"Contracts cannot mint\\\");\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(_numAvailableTokens >= 1, \\\"ERC721r: minting more tokens than available\\\");\\n        \\n        uint tokenId = getAvailableTokenAtIndex(index, _numAvailableTokens);\\n        --_numAvailableTokens;\\n        \\n        _mintIdWithoutBalanceUpdate(to, tokenId);\\n        \\n        _balances[to] += 1;\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721rUpgradeable.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721rUpgradeable.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits a {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721ReceiverUpgradeable.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\",\"keccak256\":\"0x358e921923f1cd2a0a986c13f03949f8e1d087b92fcbd169cb426099428d29e6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2254,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":2298,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":3842,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"_name","offset":0,"slot":"101","type":"t_string_storage"},{"astId":3844,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"_symbol","offset":0,"slot":"102","type":"t_string_storage"},{"astId":3848,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"_availableTokens","offset":0,"slot":"103","type":"t_mapping(t_uint256,t_uint256)"},{"astId":3850,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"_numAvailableTokens","offset":0,"slot":"104","type":"t_uint256"},{"astId":3852,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"_maxSupply","offset":0,"slot":"105","type":"t_uint256"},{"astId":3856,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"_owners","offset":0,"slot":"106","type":"t_mapping(t_uint256,t_address)"},{"astId":3860,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"_balances","offset":0,"slot":"107","type":"t_mapping(t_address,t_uint256)"},{"astId":3864,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"_tokenApprovals","offset":0,"slot":"108","type":"t_mapping(t_uint256,t_address)"},{"astId":3870,"contract":"contracts/ERC721rUpgradeable.sol:ERC721rUpgradeable","label":"_operatorApprovals","offset":0,"slot":"109","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/HValue.sol":{"HValue":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"Hpoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMetadataURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"controller","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"exchangeHValue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"exchangeHoliday","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exchangeLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"exchangeTimes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hashPunk","outputs":[{"internalType":"contract IHashPunk","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isRare","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyEnd","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"negtiveValues","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"negtiveValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"passId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rareAddress","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"resetCurrentTimeStamp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"resetExchangeTimes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseUri","type":"string"}],"name":"setBaseUri","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_controller","type":"address"}],"name":"setController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IHashPunk","name":"_hashPunk","type":"address"}],"name":"setHashPunk","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"voucher","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"exists(uint256)":{"details":"Indicates whether any token exist with a given id, or not."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"totalSupply(uint256)":{"details":"Total amount of tokens in with a given id."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xD0 SSTORE PUSH1 0x2 PUSH1 0xD1 SSTORE PUSH1 0x3 PUSH1 0xD2 SSTORE PUSH1 0x1 PUSH1 0xD3 SSTORE PUSH2 0x1F4 PUSH1 0xD4 SSTORE PUSH1 0x3 PUSH1 0xD5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DDE DUP1 PUSH2 0x3F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xD717B05E GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xF5298ACA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0xF96B7BF9 EQ PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD717B05E EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xE1012A89 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xF11B1FDD EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0BCFC7F GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA0BCFC7F EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xA5AFB7E0 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x9642903F EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x9BA138C8 EQ PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x444B7AAF GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6BE55BB4 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x6BE55BB4 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x887BE052 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x8B0BB069 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x444B7AAF EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x4C25E11F EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0x210 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x1FE09DA3 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x2A36C108 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x340A9A1C EQ PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xE471525 EQ PUSH2 0x29F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x254 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E JUMP JUMPDEST PUSH2 0x292 PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x292 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x27A PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E1 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x22D5 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xCE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x2382 JUMP JUMPDEST PUSH1 0xD7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x33B PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x239F JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x27A PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x292 PUSH2 0x90D JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x2450 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2382 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2382 JUMP JUMPDEST PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH2 0x3DC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x2382 JUMP JUMPDEST PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x292 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH2 0x3DC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x2502 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x27A PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x4F7 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x25E1 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x262E JUMP JUMPDEST PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x525 CALLDATASIZE PUSH1 0x4 PUSH2 0x2696 JUMP JUMPDEST PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0xF73 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH2 0x3DC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x62D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x5F6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x26CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x26CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCF PUSH2 0x6E7 DUP4 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6F8 SWAP3 SWAP2 SWAP1 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD3 SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x5F6 JUMPI POP POP PUSH1 0xD4 SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x792 JUMPI PUSH2 0x780 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x771 JUMPI PUSH2 0x771 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 PUSH2 0x1289 JUMP JUMPDEST DUP1 PUSH2 0x78A DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x753 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x7B4 JUMPI POP PUSH2 0x7B4 DUP6 CALLER PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH2 0x7DD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1428 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x864 JUMPI PUSH2 0x864 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x88D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x905 JUMPI PUSH2 0x8D8 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8B1 JUMPI PUSH2 0x8B1 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8CB JUMPI PUSH2 0x8CB PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x561 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8EA JUMPI PUSH2 0x8EA PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x8FE DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x893 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xCF DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST TIMESTAMP PUSH1 0xCE SSTORE JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2850 JUMP JUMPDEST PUSH2 0x792 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15CD JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xCD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0xD5 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x195E18D9595908195E18DA185B99D9481B1A5B5A5D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST DUP1 PUSH2 0xA8B CALLER PUSH1 0xD2 SLOAD PUSH2 0x561 JUMP JUMPDEST LT ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4856616C75653A206E6F7420656E6F75676820766F7563686572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0xAE6 CALLER PUSH1 0xD2 SLOAD DUP4 PUSH2 0x16B8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB05 SWAP1 DUP5 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xCF PUSH2 0xB43 DUP3 DUP3 PUSH2 0x28ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB43 CALLER DUP4 DUP4 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBF SWAP2 SWAP1 PUSH2 0x29AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x242B30B63AB29D103737BA10383AB7359037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0xD3 SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI POP PUSH1 0xD4 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xC67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4856616C75653A206E6F74206C75636B792070756E6B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0xC85 CALLER PUSH1 0xD1 SLOAD PUSH1 0x46 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15CD JUMP JUMPDEST PUSH2 0xC93 CALLER PUSH1 0xD2 SLOAD PUSH1 0x1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xDC3 JUMPI PUSH2 0xD54 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD44 JUMPI PUSH2 0xD44 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP7 DUP6 PUSH2 0x18B4 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD66 JUMPI PUSH2 0xD66 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xD7 PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD84 JUMPI PUSH2 0xD84 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xDBB SWAP1 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD26 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xD3 SLOAD PUSH1 0xD4 SLOAD PUSH2 0xDDF SWAP2 SWAP1 PUSH2 0x29C9 JUMP JUMPDEST PUSH2 0xDEA SWAP1 PUSH1 0x1 PUSH2 0x2894 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE01 JUMPI PUSH2 0xE01 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE2A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0xD3 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0xD4 SLOAD DUP2 GT PUSH2 0xEEE JUMPI PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEA8 SWAP2 SWAP1 PUSH2 0x29AC JUMP JUMPDEST DUP3 PUSH2 0xEB4 PUSH1 0x1 DUP5 PUSH2 0x29C9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xEC4 JUMPI PUSH2 0xEC4 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0xEE6 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE32 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xF10 JUMPI POP PUSH2 0xF10 DUP6 CALLER PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH2 0x7DD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2850 JUMP JUMPDEST PUSH2 0xF6E DUP4 DUP4 DUP4 PUSH2 0x16B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xF93 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xFAD JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFAD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x1010 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1033 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x103B PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x4856616C7565 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC9 SWAP1 PUSH2 0x1065 SWAP1 DUP3 PUSH2 0x28ED JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x242B PUSH1 0xF1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xCA SWAP1 PUSH2 0x108C SWAP1 DUP3 PUSH2 0x28ED JUMP JUMPDEST POP PUSH2 0x1096 DUP3 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0xCE SSTORE DUP1 ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xCE SLOAD PUSH2 0x1106 SWAP1 PUSH4 0x1E13380 PUSH2 0x2894 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x114C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x242B30B63AB29D103737BA103732BB903CB2B0B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1185 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x11AF JUMPI DUP1 PUSH2 0x1199 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A8 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x29DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x11C9 JUMPI PUSH2 0x11C9 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0x1280 JUMPI PUSH2 0x1209 PUSH1 0x1 DUP3 PUSH2 0x29C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1218 PUSH1 0xA DUP9 PUSH2 0x29DC JUMP JUMPDEST PUSH2 0x1223 SWAP1 PUSH1 0xA PUSH2 0x29FE JUMP JUMPDEST PUSH2 0x122D SWAP1 DUP9 PUSH2 0x29C9 JUMP JUMPDEST PUSH2 0x1238 SWAP1 PUSH1 0x30 PUSH2 0x2A15 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1255 JUMPI PUSH2 0x1255 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1277 PUSH1 0xA DUP10 PUSH2 0x29DC JUMP JUMPDEST SWAP8 POP POP POP PUSH2 0x11F8 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x12D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x12F3 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x13BB JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1313 JUMPI PUSH2 0x1313 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1331 JUMPI PUSH2 0x1331 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x1382 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0x13B3 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12F6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x140C SWAP3 SWAP2 SWAP1 PUSH2 0x2AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x792 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x146F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2B2B JUMP JUMPDEST CALLER PUSH2 0x147E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x149E JUMPI PUSH2 0x149E PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14BC JUMPI PUSH2 0x14BC PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x150D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x154C SWAP1 DUP5 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x1560 SWAP1 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1481 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x15B7 SWAP3 SWAP2 SWAP1 PUSH2 0x2AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDC3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x15F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x15FF DUP6 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x160C DUP6 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH2 0x161D DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x164F SWAP1 DUP5 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x16AF DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1ED7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x16DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x16EA DUP5 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16F7 DUP5 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH2 0x1717 DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x175A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x16AF JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x18DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x18FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST CALLER PUSH2 0x190B DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x19A7 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1929 JUMPI PUSH2 0x1929 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x65 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1947 JUMPI PUSH2 0x1947 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x198F SWAP2 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x199F DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x190E JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x19F8 SWAP3 SWAP2 SWAP1 PUSH2 0x2AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x7DD DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2B2B JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1A41 DUP6 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A4E DUP6 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH2 0x1A5E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1AA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1AE0 SWAP1 DUP5 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1B40 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1ED7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1BB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1C3F JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1C3D JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1BE4 JUMPI PUSH2 0x1BE4 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x97 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1C02 JUMPI PUSH2 0x1C02 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C27 SWAP2 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1C36 SWAP1 POP DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BC9 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDC3 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x16AF JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C6D JUMPI PUSH2 0x1C6D PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C8B JUMPI PUSH2 0x1C8B PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E74206578636565647320746F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x616C537570706C79 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0x1D2A DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1D75 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2BFB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1DB0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1DAD SWAP2 DUP2 ADD SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E5C JUMPI PUSH2 0x1DBC PUSH2 0x2C76 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1DF5 JUMPI POP PUSH2 0x1DD0 PUSH2 0x2C92 JUMP JUMPDEST DUP1 PUSH2 0x1DDB JUMPI POP PUSH2 0x1DF7 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x16AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1EC6 JUMPI PUSH2 0x1EC6 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1F1B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F56 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1F53 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F62 JUMPI PUSH2 0x1DBC PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x16AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1FC8 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1FA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2009 DUP2 PUSH2 0x1FD6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x202B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2013 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x204C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2009 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2034 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2085 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x20C7 JUMPI PUSH2 0x20C7 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x20E7 JUMPI PUSH2 0x20E7 PUSH2 0x208C JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x210F DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211C DUP3 DUP3 PUSH2 0x20A2 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x213C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2160 JUMPI DUP1 CALLDATALOAD PUSH2 0x2153 DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2140 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x217C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2189 DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2196 DUP3 DUP3 PUSH2 0x20A2 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x21B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2160 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x21FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2209 DUP8 DUP4 DUP9 ADD PUSH2 0x20F1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x221F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x222B DUP8 DUP4 DUP9 ADD PUSH2 0x216B JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224E DUP7 DUP3 DUP8 ADD PUSH2 0x216B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2271 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2288 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x20A2 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x229D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2009 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x22F8 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2308 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2330 DUP10 DUP4 DUP11 ADD PUSH2 0x216B JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2352 DUP10 DUP4 DUP11 ADD PUSH2 0x216B JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2375 DUP9 DUP3 DUP10 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2009 DUP2 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x23C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23D5 DUP7 DUP4 DUP8 ADD PUSH2 0x20F1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x23EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F8 DUP6 DUP3 DUP7 ADD PUSH2 0x216B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2432 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2416 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2009 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2402 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2471 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x249A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24A6 DUP8 DUP3 DUP9 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x24EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24FA DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2258 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2520 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x256F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x257B DUP10 DUP4 DUP11 ADD PUSH2 0x20F1 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x259D DUP10 DUP4 DUP11 ADD PUSH2 0x216B JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x25D1 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2535 DUP2 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2622 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x25FD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2651 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2661 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x268A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2375 DUP9 DUP3 DUP10 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x26B6 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x26DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xEEE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x270D DUP2 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x2725 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x273A JUMPI PUSH2 0x2769 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x2769 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2760 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x2747 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x277D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2010 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x4856616C75653A2063616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x27FB JUMPI PUSH2 0x27FB PUSH2 0x27D3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4856616C75653A2063616C6C6572206973206E6F742074686520636F6E74726F PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x363632B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5F6 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xF6E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x28CE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDC3 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28DA JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2906 JUMPI PUSH2 0x2906 PUSH2 0x208C JUMP JUMPDEST PUSH2 0x291A DUP2 PUSH2 0x2914 DUP5 SLOAD PUSH2 0x26CB JUMP JUMPDEST DUP5 PUSH2 0x28A7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x294F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2937 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x297E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x295F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x299C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2009 DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5F6 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x29F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5F6 JUMPI PUSH2 0x5F6 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5F6 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2B10 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2402 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B22 DUP2 DUP6 PUSH2 0x2402 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2C27 SWAP1 DUP4 ADD DUP7 PUSH2 0x2402 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2C39 DUP2 DUP7 PUSH2 0x2402 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2C4D DUP2 DUP6 PUSH2 0x2034 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2009 DUP2 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2C8F JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2CA0 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2CCF JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2CE7 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2D01 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2D10 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x20A2 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2D9D SWAP1 DUP4 ADD DUP5 PUSH2 0x2034 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP8 CREATE SWAP12 0xF6 ADDMOD 0xD4 EQ SDIV PUSH31 0xBBFDD1B5D3FA019C7E38694C57D84DEB1C99DE9B328164736F6C6343000811 STOP CALLER ","sourceMap":"242:4293:19:-:0;;;632:1:20;587:46;;684:1;639:46;;736:1;691:46;;788:1;743:46;;840:3;795:48;;894:1;849:46;;242:4293:19;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Hpoint_5472":{"entryPoint":null,"id":5472,"parameterSlots":0,"returnSlots":0},"@__ERC1155Supply_init_1591":{"entryPoint":6987,"id":1591,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_1251":{"entryPoint":null,"id":1251,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1407":{"entryPoint":7820,"id":1407,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1232":{"entryPoint":null,"id":1232,"parameterSlots":6,"returnSlots":0},"@_beforeTokenTransfer_1747":{"entryPoint":7096,"id":1747,"parameterSlots":6,"returnSlots":0},"@_burnBatch_1181":{"entryPoint":4745,"id":1181,"parameterSlots":3,"returnSlots":0},"@_burn_1058":{"entryPoint":5816,"id":1058,"parameterSlots":3,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1379":{"entryPoint":7473,"id":1379,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1314":{"entryPoint":7895,"id":1314,"parameterSlots":6,"returnSlots":0},"@_mintBatch_953":{"entryPoint":6324,"id":953,"parameterSlots":4,"returnSlots":0},"@_mint_842":{"entryPoint":5581,"id":842,"parameterSlots":4,"returnSlots":0},"@_msgSender_2240":{"entryPoint":null,"id":2240,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_730":{"entryPoint":5160,"id":730,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_595":{"entryPoint":6671,"id":595,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1213":{"entryPoint":6100,"id":1213,"parameterSlots":3,"returnSlots":0},"@_uint2str_5431":{"entryPoint":4446,"id":5431,"parameterSlots":1,"returnSlots":1},"@balanceOfBatch_365":{"entryPoint":2020,"id":365,"parameterSlots":2,"returnSlots":1},"@balanceOf_301":{"entryPoint":1377,"id":301,"parameterSlots":2,"returnSlots":1},"@baseMetadataURI_5466":{"entryPoint":2317,"id":5466,"parameterSlots":0,"returnSlots":0},"@burnBatch_5057":{"entryPoint":1830,"id":5057,"parameterSlots":3,"returnSlots":0},"@burn_5096":{"entryPoint":3897,"id":5096,"parameterSlots":3,"returnSlots":0},"@controller_5459":{"entryPoint":null,"id":5459,"parameterSlots":0,"returnSlots":0},"@currentTimeStamp_5464":{"entryPoint":null,"id":5464,"parameterSlots":0,"returnSlots":0},"@exchangeHValue_5192":{"entryPoint":2898,"id":5192,"parameterSlots":1,"returnSlots":0},"@exchangeHoliday_5137":{"entryPoint":2597,"id":5137,"parameterSlots":1,"returnSlots":0},"@exchangeLimit_5484":{"entryPoint":null,"id":5484,"parameterSlots":0,"returnSlots":0},"@exchangeTimes_5488":{"entryPoint":null,"id":5488,"parameterSlots":0,"returnSlots":0},"@exists_1630":{"entryPoint":null,"id":1630,"parameterSlots":1,"returnSlots":1},"@hashPunk_5462":{"entryPoint":null,"id":5462,"parameterSlots":0,"returnSlots":0},"@initialize_4931":{"entryPoint":3955,"id":4931,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_400":{"entryPoint":null,"id":400,"parameterSlots":2,"returnSlots":1},"@isContract_1947":{"entryPoint":null,"id":1947,"parameterSlots":1,"returnSlots":1},"@isRare_5336":{"entryPoint":1806,"id":5336,"parameterSlots":1,"returnSlots":1},"@luckyEnd_5481":{"entryPoint":null,"id":5481,"parameterSlots":0,"returnSlots":0},"@luckyStart_5478":{"entryPoint":null,"id":5478,"parameterSlots":0,"returnSlots":0},"@mintBatch_5021":{"entryPoint":3321,"id":5021,"parameterSlots":5,"returnSlots":0},"@mint_5078":{"entryPoint":2378,"id":5078,"parameterSlots":4,"returnSlots":0},"@name_5453":{"entryPoint":1612,"id":5453,"parameterSlots":0,"returnSlots":0},"@negtiveValue_5492":{"entryPoint":null,"id":5492,"parameterSlots":0,"returnSlots":0},"@owner_5457":{"entryPoint":null,"id":5457,"parameterSlots":0,"returnSlots":0},"@passId_5469":{"entryPoint":null,"id":5469,"parameterSlots":0,"returnSlots":0},"@rareAddress_5320":{"entryPoint":3531,"id":5320,"parameterSlots":0,"returnSlots":1},"@resetCurrentTimeStamp_5216":{"entryPoint":2330,"id":5216,"parameterSlots":0,"returnSlots":0},"@resetExchangeTimes_5205":{"entryPoint":4341,"id":5205,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_478":{"entryPoint":1944,"id":478,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_438":{"entryPoint":3828,"id":438,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_382":{"entryPoint":2887,"id":382,"parameterSlots":2,"returnSlots":0},"@setBaseUri_5241":{"entryPoint":2829,"id":5241,"parameterSlots":1,"returnSlots":0},"@setController_5253":{"entryPoint":2508,"id":5253,"parameterSlots":1,"returnSlots":0},"@setHashPunk_5229":{"entryPoint":2432,"id":5229,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2293":{"entryPoint":null,"id":2293,"parameterSlots":1,"returnSlots":1},"@supportsInterface_261":{"entryPoint":1532,"id":261,"parameterSlots":1,"returnSlots":1},"@symbol_5455":{"entryPoint":2584,"id":5455,"parameterSlots":0,"returnSlots":0},"@totalSupply_1614":{"entryPoint":null,"id":1614,"parameterSlots":1,"returnSlots":1},"@uri_5273":{"entryPoint":1754,"id":5273,"parameterSlots":1,"returnSlots":1},"@voucher_5475":{"entryPoint":null,"id":5475,"parameterSlots":0,"returnSlots":0},"abi_decode_array_address_dyn":{"entryPoint":8433,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":8555,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":8792,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":8885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9090,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":10668,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9651,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":8917,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":9774,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":9474,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8106,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":9878,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":9296,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9119,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8657,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":9536,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes4":{"entryPoint":8172,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":11353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IHashPunk_$5451":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":9394,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":9218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":8244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9983,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11259,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11619,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9697,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9277,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11005,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IHashPunk_$5451__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11547,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_11556822b0dbb84e42a57d7995abf090c129f85f99798a55739c0b2df8acb3f1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10937,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6495068f22747f4702ada372c895e8589607dd29d4c382d701a9201403183e08__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11051,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_716d8e8655960bf2154053439ce31facdc46548c3a16249c94ec73f924c8ba9c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dea929535f31a6a3d4da771c56c977f613aa2b2d875a3332f245e364beb66cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10118,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11120,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a102db2d7672fdad004a63c326088de6266268bad23ec664881a9c9d6d98a5b0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aec0b404f50382a0e834a5f06508507c26b41f9bce791ef403d53b5948e659cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c68bca7fa283e487dffc110655d1b436451e784bf6064e5151d72f6ebe27cd0c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10320,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10865,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11194,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":8398,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10388,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":10773,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":10716,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10750,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10697,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":10407,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":10477,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8208,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9931,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":8354,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":10217,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10195,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10173,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8332,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":11382,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":11410,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_address":{"entryPoint":8082,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":8150,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:31614:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:86:23","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:23"},"nodeType":"YulFunctionCall","src":"125:12:23"},"nodeType":"YulExpressionStatement","src":"125:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"113:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"104:3:23"},"nodeType":"YulFunctionCall","src":"104:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"117:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:23"},"nodeType":"YulFunctionCall","src":"100:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:23"},"nodeType":"YulFunctionCall","src":"89:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:23"},"nodeType":"YulFunctionCall","src":"79:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:23"},"nodeType":"YulFunctionCall","src":"72:50:23"},"nodeType":"YulIf","src":"69:70:23"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:23","type":""}],"src":"14:131:23"},{"body":{"nodeType":"YulBlock","src":"237:228:23","statements":[{"body":{"nodeType":"YulBlock","src":"283:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"292:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"295:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"285:6:23"},"nodeType":"YulFunctionCall","src":"285:12:23"},"nodeType":"YulExpressionStatement","src":"285:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"258:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"267:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"254:3:23"},"nodeType":"YulFunctionCall","src":"254:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"279:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"250:3:23"},"nodeType":"YulFunctionCall","src":"250:32:23"},"nodeType":"YulIf","src":"247:52:23"},{"nodeType":"YulVariableDeclaration","src":"308:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"321:12:23"},"nodeType":"YulFunctionCall","src":"321:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"312:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"378:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"353:24:23"},"nodeType":"YulFunctionCall","src":"353:31:23"},"nodeType":"YulExpressionStatement","src":"353:31:23"},{"nodeType":"YulAssignment","src":"393:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"403:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"393:6:23"}]},{"nodeType":"YulAssignment","src":"417:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"444:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"455:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"440:3:23"},"nodeType":"YulFunctionCall","src":"440:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"427:12:23"},"nodeType":"YulFunctionCall","src":"427:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"417:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"195:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"206:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"218:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"226:6:23","type":""}],"src":"150:315:23"},{"body":{"nodeType":"YulBlock","src":"571:76:23","statements":[{"nodeType":"YulAssignment","src":"581:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"593:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"604:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"589:3:23"},"nodeType":"YulFunctionCall","src":"589:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"581:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"623:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"634:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"616:6:23"},"nodeType":"YulFunctionCall","src":"616:25:23"},"nodeType":"YulExpressionStatement","src":"616:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"540:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"551:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"562:4:23","type":""}],"src":"470:177:23"},{"body":{"nodeType":"YulBlock","src":"696:87:23","statements":[{"body":{"nodeType":"YulBlock","src":"761:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"770:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"773:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"763:6:23"},"nodeType":"YulFunctionCall","src":"763:12:23"},"nodeType":"YulExpressionStatement","src":"763:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"719:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"730:5:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"741:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"746:10:23","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"737:3:23"},"nodeType":"YulFunctionCall","src":"737:20:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"726:3:23"},"nodeType":"YulFunctionCall","src":"726:32:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"716:2:23"},"nodeType":"YulFunctionCall","src":"716:43:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"709:6:23"},"nodeType":"YulFunctionCall","src":"709:51:23"},"nodeType":"YulIf","src":"706:71:23"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"685:5:23","type":""}],"src":"652:131:23"},{"body":{"nodeType":"YulBlock","src":"857:176:23","statements":[{"body":{"nodeType":"YulBlock","src":"903:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"912:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"915:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"905:6:23"},"nodeType":"YulFunctionCall","src":"905:12:23"},"nodeType":"YulExpressionStatement","src":"905:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"878:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"887:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"874:3:23"},"nodeType":"YulFunctionCall","src":"874:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"899:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"870:3:23"},"nodeType":"YulFunctionCall","src":"870:32:23"},"nodeType":"YulIf","src":"867:52:23"},{"nodeType":"YulVariableDeclaration","src":"928:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"954:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"941:12:23"},"nodeType":"YulFunctionCall","src":"941:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"932:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"997:5:23"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"973:23:23"},"nodeType":"YulFunctionCall","src":"973:30:23"},"nodeType":"YulExpressionStatement","src":"973:30:23"},{"nodeType":"YulAssignment","src":"1012:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"1022:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1012:6:23"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"823:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"834:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"846:6:23","type":""}],"src":"788:245:23"},{"body":{"nodeType":"YulBlock","src":"1133:92:23","statements":[{"nodeType":"YulAssignment","src":"1143:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1155:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1166:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1151:3:23"},"nodeType":"YulFunctionCall","src":"1151:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1143:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1185:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1210:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1203:6:23"},"nodeType":"YulFunctionCall","src":"1203:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1196:6:23"},"nodeType":"YulFunctionCall","src":"1196:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1178:6:23"},"nodeType":"YulFunctionCall","src":"1178:41:23"},"nodeType":"YulExpressionStatement","src":"1178:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1102:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1113:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1124:4:23","type":""}],"src":"1038:187:23"},{"body":{"nodeType":"YulBlock","src":"1296:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1306:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1315:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1310:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1375:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1400:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"1405:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1396:3:23"},"nodeType":"YulFunctionCall","src":"1396:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1419:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"1424:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1415:3:23"},"nodeType":"YulFunctionCall","src":"1415:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:23"},"nodeType":"YulFunctionCall","src":"1409:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1389:6:23"},"nodeType":"YulFunctionCall","src":"1389:39:23"},"nodeType":"YulExpressionStatement","src":"1389:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1336:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"1339:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1333:2:23"},"nodeType":"YulFunctionCall","src":"1333:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1347:19:23","statements":[{"nodeType":"YulAssignment","src":"1349:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1358:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"1361:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1354:3:23"},"nodeType":"YulFunctionCall","src":"1354:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1349:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"1329:3:23","statements":[]},"src":"1325:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1458:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"1463:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1454:3:23"},"nodeType":"YulFunctionCall","src":"1454:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"1472:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1447:6:23"},"nodeType":"YulFunctionCall","src":"1447:27:23"},"nodeType":"YulExpressionStatement","src":"1447:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1274:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1279:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"1284:6:23","type":""}],"src":"1230:250:23"},{"body":{"nodeType":"YulBlock","src":"1535:221:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1545:26:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1565:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1559:5:23"},"nodeType":"YulFunctionCall","src":"1559:12:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1549:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1587:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"1592:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1580:6:23"},"nodeType":"YulFunctionCall","src":"1580:19:23"},"nodeType":"YulExpressionStatement","src":"1580:19:23"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1647:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1654:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1643:3:23"},"nodeType":"YulFunctionCall","src":"1643:16:23"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1665:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"1670:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1661:3:23"},"nodeType":"YulFunctionCall","src":"1661:14:23"},{"name":"length","nodeType":"YulIdentifier","src":"1677:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1608:34:23"},"nodeType":"YulFunctionCall","src":"1608:76:23"},"nodeType":"YulExpressionStatement","src":"1608:76:23"},{"nodeType":"YulAssignment","src":"1693:57:23","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1708:3:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1721:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1729:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:23"},"nodeType":"YulFunctionCall","src":"1717:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1738:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1734:3:23"},"nodeType":"YulFunctionCall","src":"1734:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1713:3:23"},"nodeType":"YulFunctionCall","src":"1713:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1704:3:23"},"nodeType":"YulFunctionCall","src":"1704:39:23"},{"kind":"number","nodeType":"YulLiteral","src":"1745:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1700:3:23"},"nodeType":"YulFunctionCall","src":"1700:50:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1693:3:23"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1512:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1519:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1527:3:23","type":""}],"src":"1485:271:23"},{"body":{"nodeType":"YulBlock","src":"1882:99:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1899:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1910:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1892:6:23"},"nodeType":"YulFunctionCall","src":"1892:21:23"},"nodeType":"YulExpressionStatement","src":"1892:21:23"},{"nodeType":"YulAssignment","src":"1922:53:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1948:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1960:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1971:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1956:3:23"},"nodeType":"YulFunctionCall","src":"1956:18:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1930:17:23"},"nodeType":"YulFunctionCall","src":"1930:45:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1922:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1851:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1862:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1873:4:23","type":""}],"src":"1761:220:23"},{"body":{"nodeType":"YulBlock","src":"2056:110:23","statements":[{"body":{"nodeType":"YulBlock","src":"2102:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2111:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2114:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2104:6:23"},"nodeType":"YulFunctionCall","src":"2104:12:23"},"nodeType":"YulExpressionStatement","src":"2104:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2077:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2086:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2073:3:23"},"nodeType":"YulFunctionCall","src":"2073:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2098:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2069:3:23"},"nodeType":"YulFunctionCall","src":"2069:32:23"},"nodeType":"YulIf","src":"2066:52:23"},{"nodeType":"YulAssignment","src":"2127:33:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2150:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2137:12:23"},"nodeType":"YulFunctionCall","src":"2137:23:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2127:6:23"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2022:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2033:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2045:6:23","type":""}],"src":"1986:180:23"},{"body":{"nodeType":"YulBlock","src":"2203:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2220:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2227:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2232:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2223:3:23"},"nodeType":"YulFunctionCall","src":"2223:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2213:6:23"},"nodeType":"YulFunctionCall","src":"2213:31:23"},"nodeType":"YulExpressionStatement","src":"2213:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2260:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2263:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2253:6:23"},"nodeType":"YulFunctionCall","src":"2253:15:23"},"nodeType":"YulExpressionStatement","src":"2253:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2284:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2287:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2277:6:23"},"nodeType":"YulFunctionCall","src":"2277:15:23"},"nodeType":"YulExpressionStatement","src":"2277:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2171:127:23"},{"body":{"nodeType":"YulBlock","src":"2350:202:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2360:58:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2382:6:23"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2398:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"2404:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2394:3:23"},"nodeType":"YulFunctionCall","src":"2394:13:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2413:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2409:3:23"},"nodeType":"YulFunctionCall","src":"2409:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2390:3:23"},"nodeType":"YulFunctionCall","src":"2390:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2378:3:23"},"nodeType":"YulFunctionCall","src":"2378:40:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2364:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2493:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2495:16:23"},"nodeType":"YulFunctionCall","src":"2495:18:23"},"nodeType":"YulExpressionStatement","src":"2495:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2436:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2448:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2433:2:23"},"nodeType":"YulFunctionCall","src":"2433:34:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2472:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2484:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2469:2:23"},"nodeType":"YulFunctionCall","src":"2469:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2430:2:23"},"nodeType":"YulFunctionCall","src":"2430:62:23"},"nodeType":"YulIf","src":"2427:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2531:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2535:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2524:6:23"},"nodeType":"YulFunctionCall","src":"2524:22:23"},"nodeType":"YulExpressionStatement","src":"2524:22:23"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2332:6:23","type":""},{"name":"size","nodeType":"YulTypedName","src":"2340:4:23","type":""}],"src":"2303:249:23"},{"body":{"nodeType":"YulBlock","src":"2626:114:23","statements":[{"body":{"nodeType":"YulBlock","src":"2670:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2672:16:23"},"nodeType":"YulFunctionCall","src":"2672:18:23"},"nodeType":"YulExpressionStatement","src":"2672:18:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2642:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2650:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2639:2:23"},"nodeType":"YulFunctionCall","src":"2639:30:23"},"nodeType":"YulIf","src":"2636:56:23"},{"nodeType":"YulAssignment","src":"2701:33:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2717:1:23","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2720:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2713:3:23"},"nodeType":"YulFunctionCall","src":"2713:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"2729:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2709:3:23"},"nodeType":"YulFunctionCall","src":"2709:25:23"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2701:4:23"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2606:6:23","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2617:4:23","type":""}],"src":"2557:183:23"},{"body":{"nodeType":"YulBlock","src":"2809:735:23","statements":[{"body":{"nodeType":"YulBlock","src":"2858:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2870:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2860:6:23"},"nodeType":"YulFunctionCall","src":"2860:12:23"},"nodeType":"YulExpressionStatement","src":"2860:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2837:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2845:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2833:3:23"},"nodeType":"YulFunctionCall","src":"2833:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"2852:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2829:3:23"},"nodeType":"YulFunctionCall","src":"2829:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2822:6:23"},"nodeType":"YulFunctionCall","src":"2822:35:23"},"nodeType":"YulIf","src":"2819:55:23"},{"nodeType":"YulVariableDeclaration","src":"2883:30:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2906:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2893:12:23"},"nodeType":"YulFunctionCall","src":"2893:20:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2887:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2922:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2932:4:23","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2926:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2945:53:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2995:2:23"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"2955:39:23"},"nodeType":"YulFunctionCall","src":"2955:43:23"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2949:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3007:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3027:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3021:5:23"},"nodeType":"YulFunctionCall","src":"3021:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3011:6:23","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3059:6:23"},{"name":"_3","nodeType":"YulIdentifier","src":"3067:2:23"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3039:19:23"},"nodeType":"YulFunctionCall","src":"3039:31:23"},"nodeType":"YulExpressionStatement","src":"3039:31:23"},{"nodeType":"YulVariableDeclaration","src":"3079:17:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3090:6:23"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3083:3:23","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3112:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"3120:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3105:6:23"},"nodeType":"YulFunctionCall","src":"3105:18:23"},"nodeType":"YulExpressionStatement","src":"3105:18:23"},{"nodeType":"YulAssignment","src":"3132:22:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3143:6:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3151:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3139:3:23"},"nodeType":"YulFunctionCall","src":"3139:15:23"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3132:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"3163:46:23","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3185:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3197:1:23","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3200:2:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3193:3:23"},"nodeType":"YulFunctionCall","src":"3193:10:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3181:3:23"},"nodeType":"YulFunctionCall","src":"3181:23:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3206:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3177:3:23"},"nodeType":"YulFunctionCall","src":"3177:32:23"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3167:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3237:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3246:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3249:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3239:6:23"},"nodeType":"YulFunctionCall","src":"3239:12:23"},"nodeType":"YulExpressionStatement","src":"3239:12:23"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3224:6:23"},{"name":"end","nodeType":"YulIdentifier","src":"3232:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3221:2:23"},"nodeType":"YulFunctionCall","src":"3221:15:23"},"nodeType":"YulIf","src":"3218:35:23"},{"nodeType":"YulVariableDeclaration","src":"3262:26:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3277:6:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3285:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3273:3:23"},"nodeType":"YulFunctionCall","src":"3273:15:23"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3266:3:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3353:161:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3367:30:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3393:3:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3380:12:23"},"nodeType":"YulFunctionCall","src":"3380:17:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3371:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3435:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3410:24:23"},"nodeType":"YulFunctionCall","src":"3410:31:23"},"nodeType":"YulExpressionStatement","src":"3410:31:23"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3461:3:23"},{"name":"value","nodeType":"YulIdentifier","src":"3466:5:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3454:6:23"},"nodeType":"YulFunctionCall","src":"3454:18:23"},"nodeType":"YulExpressionStatement","src":"3454:18:23"},{"nodeType":"YulAssignment","src":"3485:19:23","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3496:3:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3501:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3492:3:23"},"nodeType":"YulFunctionCall","src":"3492:12:23"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3485:3:23"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3308:3:23"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3313:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3305:2:23"},"nodeType":"YulFunctionCall","src":"3305:15:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3321:23:23","statements":[{"nodeType":"YulAssignment","src":"3323:19:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3334:3:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3339:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3330:3:23"},"nodeType":"YulFunctionCall","src":"3330:12:23"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3323:3:23"}]}]},"pre":{"nodeType":"YulBlock","src":"3301:3:23","statements":[]},"src":"3297:217:23"},{"nodeType":"YulAssignment","src":"3523:15:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3532:6:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3523:5:23"}]}]},"name":"abi_decode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2783:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"2791:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2799:5:23","type":""}],"src":"2745:799:23"},{"body":{"nodeType":"YulBlock","src":"3613:660:23","statements":[{"body":{"nodeType":"YulBlock","src":"3662:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3671:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3674:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3664:6:23"},"nodeType":"YulFunctionCall","src":"3664:12:23"},"nodeType":"YulExpressionStatement","src":"3664:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3641:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3649:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:23"},"nodeType":"YulFunctionCall","src":"3637:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"3656:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3633:3:23"},"nodeType":"YulFunctionCall","src":"3633:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3626:6:23"},"nodeType":"YulFunctionCall","src":"3626:35:23"},"nodeType":"YulIf","src":"3623:55:23"},{"nodeType":"YulVariableDeclaration","src":"3687:30:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3710:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3697:12:23"},"nodeType":"YulFunctionCall","src":"3697:20:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3691:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3726:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3736:4:23","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3730:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3749:53:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3799:2:23"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"3759:39:23"},"nodeType":"YulFunctionCall","src":"3759:43:23"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3753:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3811:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3831:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3825:5:23"},"nodeType":"YulFunctionCall","src":"3825:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3815:6:23","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3863:6:23"},{"name":"_3","nodeType":"YulIdentifier","src":"3871:2:23"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3843:19:23"},"nodeType":"YulFunctionCall","src":"3843:31:23"},"nodeType":"YulExpressionStatement","src":"3843:31:23"},{"nodeType":"YulVariableDeclaration","src":"3883:17:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3894:6:23"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3887:3:23","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3916:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"3924:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3909:6:23"},"nodeType":"YulFunctionCall","src":"3909:18:23"},"nodeType":"YulExpressionStatement","src":"3909:18:23"},{"nodeType":"YulAssignment","src":"3936:22:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3947:6:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3955:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3943:3:23"},"nodeType":"YulFunctionCall","src":"3943:15:23"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3936:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"3967:46:23","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3989:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4001:1:23","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"4004:2:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3997:3:23"},"nodeType":"YulFunctionCall","src":"3997:10:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3985:3:23"},"nodeType":"YulFunctionCall","src":"3985:23:23"},{"name":"_2","nodeType":"YulIdentifier","src":"4010:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3981:3:23"},"nodeType":"YulFunctionCall","src":"3981:32:23"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3971:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4041:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4050:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4053:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4043:6:23"},"nodeType":"YulFunctionCall","src":"4043:12:23"},"nodeType":"YulExpressionStatement","src":"4043:12:23"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4028:6:23"},{"name":"end","nodeType":"YulIdentifier","src":"4036:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4025:2:23"},"nodeType":"YulFunctionCall","src":"4025:15:23"},"nodeType":"YulIf","src":"4022:35:23"},{"nodeType":"YulVariableDeclaration","src":"4066:26:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4081:6:23"},{"name":"_2","nodeType":"YulIdentifier","src":"4089:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4077:3:23"},"nodeType":"YulFunctionCall","src":"4077:15:23"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4070:3:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4157:86:23","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4178:3:23"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4196:3:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4183:12:23"},"nodeType":"YulFunctionCall","src":"4183:17:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4171:6:23"},"nodeType":"YulFunctionCall","src":"4171:30:23"},"nodeType":"YulExpressionStatement","src":"4171:30:23"},{"nodeType":"YulAssignment","src":"4214:19:23","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4225:3:23"},{"name":"_2","nodeType":"YulIdentifier","src":"4230:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4221:3:23"},"nodeType":"YulFunctionCall","src":"4221:12:23"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4214:3:23"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4112:3:23"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4117:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4109:2:23"},"nodeType":"YulFunctionCall","src":"4109:15:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4125:23:23","statements":[{"nodeType":"YulAssignment","src":"4127:19:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4138:3:23"},{"name":"_2","nodeType":"YulIdentifier","src":"4143:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4134:3:23"},"nodeType":"YulFunctionCall","src":"4134:12:23"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4127:3:23"}]}]},"pre":{"nodeType":"YulBlock","src":"4105:3:23","statements":[]},"src":"4101:142:23"},{"nodeType":"YulAssignment","src":"4252:15:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4261:6:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4252:5:23"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3587:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"3595:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3603:5:23","type":""}],"src":"3549:724:23"},{"body":{"nodeType":"YulBlock","src":"4457:642:23","statements":[{"body":{"nodeType":"YulBlock","src":"4503:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4512:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4515:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4505:6:23"},"nodeType":"YulFunctionCall","src":"4505:12:23"},"nodeType":"YulExpressionStatement","src":"4505:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4478:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4487:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4474:3:23"},"nodeType":"YulFunctionCall","src":"4474:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4499:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4470:3:23"},"nodeType":"YulFunctionCall","src":"4470:32:23"},"nodeType":"YulIf","src":"4467:52:23"},{"nodeType":"YulVariableDeclaration","src":"4528:37:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4555:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4542:12:23"},"nodeType":"YulFunctionCall","src":"4542:23:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4532:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4574:28:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4584:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4578:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4629:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4638:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4641:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4631:6:23"},"nodeType":"YulFunctionCall","src":"4631:12:23"},"nodeType":"YulExpressionStatement","src":"4631:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4617:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"4625:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4614:2:23"},"nodeType":"YulFunctionCall","src":"4614:14:23"},"nodeType":"YulIf","src":"4611:34:23"},{"nodeType":"YulAssignment","src":"4654:71:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4697:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4708:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4693:3:23"},"nodeType":"YulFunctionCall","src":"4693:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4717:7:23"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"4664:28:23"},"nodeType":"YulFunctionCall","src":"4664:61:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4654:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"4734:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4767:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4778:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4763:3:23"},"nodeType":"YulFunctionCall","src":"4763:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4750:12:23"},"nodeType":"YulFunctionCall","src":"4750:32:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4738:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4811:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4820:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4823:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4813:6:23"},"nodeType":"YulFunctionCall","src":"4813:12:23"},"nodeType":"YulExpressionStatement","src":"4813:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4797:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"4807:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4794:2:23"},"nodeType":"YulFunctionCall","src":"4794:16:23"},"nodeType":"YulIf","src":"4791:36:23"},{"nodeType":"YulAssignment","src":"4836:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4879:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4890:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4875:3:23"},"nodeType":"YulFunctionCall","src":"4875:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4901:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4846:28:23"},"nodeType":"YulFunctionCall","src":"4846:63:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4836:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"4918:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4951:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4962:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4947:3:23"},"nodeType":"YulFunctionCall","src":"4947:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4934:12:23"},"nodeType":"YulFunctionCall","src":"4934:32:23"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4922:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4995:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5004:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5007:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4997:6:23"},"nodeType":"YulFunctionCall","src":"4997:12:23"},"nodeType":"YulExpressionStatement","src":"4997:12:23"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4981:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"4991:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4978:2:23"},"nodeType":"YulFunctionCall","src":"4978:16:23"},"nodeType":"YulIf","src":"4975:36:23"},{"nodeType":"YulAssignment","src":"5020:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5063:9:23"},{"name":"offset_2","nodeType":"YulIdentifier","src":"5074:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5059:3:23"},"nodeType":"YulFunctionCall","src":"5059:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5085:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5030:28:23"},"nodeType":"YulFunctionCall","src":"5030:63:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5020:6:23"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4446:6:23","type":""}],"src":"4278:821:23"},{"body":{"nodeType":"YulBlock","src":"5178:394:23","statements":[{"body":{"nodeType":"YulBlock","src":"5222:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5224:16:23"},"nodeType":"YulFunctionCall","src":"5224:18:23"},"nodeType":"YulExpressionStatement","src":"5224:18:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5194:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"5202:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5191:2:23"},"nodeType":"YulFunctionCall","src":"5191:30:23"},"nodeType":"YulIf","src":"5188:56:23"},{"nodeType":"YulVariableDeclaration","src":"5253:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5273:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5267:5:23"},"nodeType":"YulFunctionCall","src":"5267:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5257:6:23","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5305:6:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5325:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"5333:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5321:3:23"},"nodeType":"YulFunctionCall","src":"5321:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5342:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5338:3:23"},"nodeType":"YulFunctionCall","src":"5338:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5317:3:23"},"nodeType":"YulFunctionCall","src":"5317:29:23"},{"kind":"number","nodeType":"YulLiteral","src":"5348:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5313:3:23"},"nodeType":"YulFunctionCall","src":"5313:40:23"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5285:19:23"},"nodeType":"YulFunctionCall","src":"5285:69:23"},"nodeType":"YulExpressionStatement","src":"5285:69:23"},{"nodeType":"YulAssignment","src":"5363:15:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5372:6:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5363:5:23"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5394:6:23"},{"name":"length","nodeType":"YulIdentifier","src":"5402:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5387:6:23"},"nodeType":"YulFunctionCall","src":"5387:22:23"},"nodeType":"YulExpressionStatement","src":"5387:22:23"},{"body":{"nodeType":"YulBlock","src":"5447:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5456:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5459:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5449:6:23"},"nodeType":"YulFunctionCall","src":"5449:12:23"},"nodeType":"YulExpressionStatement","src":"5449:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5428:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"5433:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5424:3:23"},"nodeType":"YulFunctionCall","src":"5424:16:23"},{"name":"end","nodeType":"YulIdentifier","src":"5442:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5421:2:23"},"nodeType":"YulFunctionCall","src":"5421:25:23"},"nodeType":"YulIf","src":"5418:45:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5489:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"5497:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:23"},"nodeType":"YulFunctionCall","src":"5485:17:23"},{"name":"src","nodeType":"YulIdentifier","src":"5504:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"5509:6:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"5472:12:23"},"nodeType":"YulFunctionCall","src":"5472:44:23"},"nodeType":"YulExpressionStatement","src":"5472:44:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5540:6:23"},{"name":"length","nodeType":"YulIdentifier","src":"5548:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5536:3:23"},"nodeType":"YulFunctionCall","src":"5536:19:23"},{"kind":"number","nodeType":"YulLiteral","src":"5557:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5532:3:23"},"nodeType":"YulFunctionCall","src":"5532:30:23"},{"kind":"number","nodeType":"YulLiteral","src":"5564:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5525:6:23"},"nodeType":"YulFunctionCall","src":"5525:41:23"},"nodeType":"YulExpressionStatement","src":"5525:41:23"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5147:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"5152:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"5160:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5168:5:23","type":""}],"src":"5104:468:23"},{"body":{"nodeType":"YulBlock","src":"5629:168:23","statements":[{"body":{"nodeType":"YulBlock","src":"5678:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5687:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5690:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5680:6:23"},"nodeType":"YulFunctionCall","src":"5680:12:23"},"nodeType":"YulExpressionStatement","src":"5680:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5657:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"5665:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5653:3:23"},"nodeType":"YulFunctionCall","src":"5653:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"5672:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5649:3:23"},"nodeType":"YulFunctionCall","src":"5649:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5642:6:23"},"nodeType":"YulFunctionCall","src":"5642:35:23"},"nodeType":"YulIf","src":"5639:55:23"},{"nodeType":"YulAssignment","src":"5703:88:23","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5750:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"5758:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5746:3:23"},"nodeType":"YulFunctionCall","src":"5746:17:23"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5778:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5765:12:23"},"nodeType":"YulFunctionCall","src":"5765:20:23"},{"name":"end","nodeType":"YulIdentifier","src":"5787:3:23"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"5712:33:23"},"nodeType":"YulFunctionCall","src":"5712:79:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5703:5:23"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5603:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"5611:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5619:5:23","type":""}],"src":"5577:220:23"},{"body":{"nodeType":"YulBlock","src":"5999:874:23","statements":[{"body":{"nodeType":"YulBlock","src":"6046:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6055:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6058:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6048:6:23"},"nodeType":"YulFunctionCall","src":"6048:12:23"},"nodeType":"YulExpressionStatement","src":"6048:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6020:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"6029:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6016:3:23"},"nodeType":"YulFunctionCall","src":"6016:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"6041:3:23","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6012:3:23"},"nodeType":"YulFunctionCall","src":"6012:33:23"},"nodeType":"YulIf","src":"6009:53:23"},{"nodeType":"YulVariableDeclaration","src":"6071:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6097:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6084:12:23"},"nodeType":"YulFunctionCall","src":"6084:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6075:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6141:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6116:24:23"},"nodeType":"YulFunctionCall","src":"6116:31:23"},"nodeType":"YulExpressionStatement","src":"6116:31:23"},{"nodeType":"YulAssignment","src":"6156:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"6166:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6156:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"6180:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6212:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6223:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6208:3:23"},"nodeType":"YulFunctionCall","src":"6208:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6195:12:23"},"nodeType":"YulFunctionCall","src":"6195:32:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6184:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6261:7:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6236:24:23"},"nodeType":"YulFunctionCall","src":"6236:33:23"},"nodeType":"YulExpressionStatement","src":"6236:33:23"},{"nodeType":"YulAssignment","src":"6278:17:23","value":{"name":"value_1","nodeType":"YulIdentifier","src":"6288:7:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6278:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"6304:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6335:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6346:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6331:3:23"},"nodeType":"YulFunctionCall","src":"6331:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6318:12:23"},"nodeType":"YulFunctionCall","src":"6318:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6308:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6359:28:23","value":{"kind":"number","nodeType":"YulLiteral","src":"6369:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6363:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6414:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6423:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6426:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6416:6:23"},"nodeType":"YulFunctionCall","src":"6416:12:23"},"nodeType":"YulExpressionStatement","src":"6416:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6402:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"6410:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6399:2:23"},"nodeType":"YulFunctionCall","src":"6399:14:23"},"nodeType":"YulIf","src":"6396:34:23"},{"nodeType":"YulAssignment","src":"6439:71:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"6493:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:23"},"nodeType":"YulFunctionCall","src":"6478:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6502:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6449:28:23"},"nodeType":"YulFunctionCall","src":"6449:61:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6439:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"6519:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6552:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6563:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6548:3:23"},"nodeType":"YulFunctionCall","src":"6548:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6535:12:23"},"nodeType":"YulFunctionCall","src":"6535:32:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6523:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6596:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6605:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6608:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6598:6:23"},"nodeType":"YulFunctionCall","src":"6598:12:23"},"nodeType":"YulExpressionStatement","src":"6598:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6582:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"6592:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6579:2:23"},"nodeType":"YulFunctionCall","src":"6579:16:23"},"nodeType":"YulIf","src":"6576:36:23"},{"nodeType":"YulAssignment","src":"6621:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6664:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6675:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6660:3:23"},"nodeType":"YulFunctionCall","src":"6660:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6686:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6631:28:23"},"nodeType":"YulFunctionCall","src":"6631:63:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6621:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"6703:49:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6736:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6747:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6732:3:23"},"nodeType":"YulFunctionCall","src":"6732:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6719:12:23"},"nodeType":"YulFunctionCall","src":"6719:33:23"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"6707:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6781:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6790:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6793:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6783:6:23"},"nodeType":"YulFunctionCall","src":"6783:12:23"},"nodeType":"YulExpressionStatement","src":"6783:12:23"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"6767:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"6777:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6764:2:23"},"nodeType":"YulFunctionCall","src":"6764:16:23"},"nodeType":"YulIf","src":"6761:36:23"},{"nodeType":"YulAssignment","src":"6806:61:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6837:9:23"},{"name":"offset_2","nodeType":"YulIdentifier","src":"6848:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6833:3:23"},"nodeType":"YulFunctionCall","src":"6833:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6859:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6816:16:23"},"nodeType":"YulFunctionCall","src":"6816:51:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6806:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5933:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5944:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5956:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5964:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5972:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5980:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5988:6:23","type":""}],"src":"5802:1071:23"},{"body":{"nodeType":"YulBlock","src":"6948:177:23","statements":[{"body":{"nodeType":"YulBlock","src":"6994:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7003:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7006:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6996:6:23"},"nodeType":"YulFunctionCall","src":"6996:12:23"},"nodeType":"YulExpressionStatement","src":"6996:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6969:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"6978:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6965:3:23"},"nodeType":"YulFunctionCall","src":"6965:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"6990:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6961:3:23"},"nodeType":"YulFunctionCall","src":"6961:32:23"},"nodeType":"YulIf","src":"6958:52:23"},{"nodeType":"YulVariableDeclaration","src":"7019:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7045:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7032:12:23"},"nodeType":"YulFunctionCall","src":"7032:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7023:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7089:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7064:24:23"},"nodeType":"YulFunctionCall","src":"7064:31:23"},"nodeType":"YulExpressionStatement","src":"7064:31:23"},{"nodeType":"YulAssignment","src":"7104:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"7114:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7104:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6914:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6925:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6937:6:23","type":""}],"src":"6878:247:23"},{"body":{"nodeType":"YulBlock","src":"7267:458:23","statements":[{"body":{"nodeType":"YulBlock","src":"7313:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7322:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7325:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7315:6:23"},"nodeType":"YulFunctionCall","src":"7315:12:23"},"nodeType":"YulExpressionStatement","src":"7315:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7288:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"7297:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7284:3:23"},"nodeType":"YulFunctionCall","src":"7284:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"7309:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7280:3:23"},"nodeType":"YulFunctionCall","src":"7280:32:23"},"nodeType":"YulIf","src":"7277:52:23"},{"nodeType":"YulVariableDeclaration","src":"7338:37:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7365:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7352:12:23"},"nodeType":"YulFunctionCall","src":"7352:23:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7342:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7384:28:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7394:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7388:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"7439:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7448:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7451:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7441:6:23"},"nodeType":"YulFunctionCall","src":"7441:12:23"},"nodeType":"YulExpressionStatement","src":"7441:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7427:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"7435:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7424:2:23"},"nodeType":"YulFunctionCall","src":"7424:14:23"},"nodeType":"YulIf","src":"7421:34:23"},{"nodeType":"YulAssignment","src":"7464:71:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7507:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"7518:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7503:3:23"},"nodeType":"YulFunctionCall","src":"7503:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7527:7:23"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"7474:28:23"},"nodeType":"YulFunctionCall","src":"7474:61:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7464:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"7544:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7577:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7588:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7573:3:23"},"nodeType":"YulFunctionCall","src":"7573:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7560:12:23"},"nodeType":"YulFunctionCall","src":"7560:32:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7548:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"7621:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7630:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7633:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7623:6:23"},"nodeType":"YulFunctionCall","src":"7623:12:23"},"nodeType":"YulExpressionStatement","src":"7623:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7607:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"7617:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7604:2:23"},"nodeType":"YulFunctionCall","src":"7604:16:23"},"nodeType":"YulIf","src":"7601:36:23"},{"nodeType":"YulAssignment","src":"7646:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7689:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7700:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7685:3:23"},"nodeType":"YulFunctionCall","src":"7685:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7711:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"7656:28:23"},"nodeType":"YulFunctionCall","src":"7656:63:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7646:6:23"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7225:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7236:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7248:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7256:6:23","type":""}],"src":"7130:595:23"},{"body":{"nodeType":"YulBlock","src":"7791:374:23","statements":[{"nodeType":"YulVariableDeclaration","src":"7801:26:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7821:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7815:5:23"},"nodeType":"YulFunctionCall","src":"7815:12:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7805:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7843:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"7848:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7836:6:23"},"nodeType":"YulFunctionCall","src":"7836:19:23"},"nodeType":"YulExpressionStatement","src":"7836:19:23"},{"nodeType":"YulVariableDeclaration","src":"7864:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7874:4:23","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7868:2:23","type":""}]},{"nodeType":"YulAssignment","src":"7887:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7898:3:23"},{"name":"_1","nodeType":"YulIdentifier","src":"7903:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7894:3:23"},"nodeType":"YulFunctionCall","src":"7894:12:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7887:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"7915:28:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7933:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"7940:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7929:3:23"},"nodeType":"YulFunctionCall","src":"7929:14:23"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7919:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7952:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7961:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7956:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"8020:120:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:23"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8052:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8046:5:23"},"nodeType":"YulFunctionCall","src":"8046:13:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8034:6:23"},"nodeType":"YulFunctionCall","src":"8034:26:23"},"nodeType":"YulExpressionStatement","src":"8034:26:23"},{"nodeType":"YulAssignment","src":"8073:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8084:3:23"},{"name":"_1","nodeType":"YulIdentifier","src":"8089:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8080:3:23"},"nodeType":"YulFunctionCall","src":"8080:12:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8073:3:23"}]},{"nodeType":"YulAssignment","src":"8105:25:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8119:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"8127:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8115:3:23"},"nodeType":"YulFunctionCall","src":"8115:15:23"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8105:6:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7982:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"7985:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7979:2:23"},"nodeType":"YulFunctionCall","src":"7979:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7993:18:23","statements":[{"nodeType":"YulAssignment","src":"7995:14:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8004:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"8007:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8000:3:23"},"nodeType":"YulFunctionCall","src":"8000:9:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7995:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"7975:3:23","statements":[]},"src":"7971:169:23"},{"nodeType":"YulAssignment","src":"8149:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"8156:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8149:3:23"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7768:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7775:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7783:3:23","type":""}],"src":"7730:435:23"},{"body":{"nodeType":"YulBlock","src":"8321:110:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8338:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8349:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8331:6:23"},"nodeType":"YulFunctionCall","src":"8331:21:23"},"nodeType":"YulExpressionStatement","src":"8331:21:23"},{"nodeType":"YulAssignment","src":"8361:64:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8398:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8410:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8421:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8406:3:23"},"nodeType":"YulFunctionCall","src":"8406:18:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"8369:28:23"},"nodeType":"YulFunctionCall","src":"8369:56:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8361:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8290:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8301:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8312:4:23","type":""}],"src":"8170:261:23"},{"body":{"nodeType":"YulBlock","src":"8566:462:23","statements":[{"body":{"nodeType":"YulBlock","src":"8613:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8622:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8625:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8615:6:23"},"nodeType":"YulFunctionCall","src":"8615:12:23"},"nodeType":"YulExpressionStatement","src":"8615:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8587:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"8596:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8583:3:23"},"nodeType":"YulFunctionCall","src":"8583:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"8608:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8579:3:23"},"nodeType":"YulFunctionCall","src":"8579:33:23"},"nodeType":"YulIf","src":"8576:53:23"},{"nodeType":"YulVariableDeclaration","src":"8638:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8664:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8651:12:23"},"nodeType":"YulFunctionCall","src":"8651:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8642:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8708:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8683:24:23"},"nodeType":"YulFunctionCall","src":"8683:31:23"},"nodeType":"YulExpressionStatement","src":"8683:31:23"},{"nodeType":"YulAssignment","src":"8723:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"8733:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8723:6:23"}]},{"nodeType":"YulAssignment","src":"8747:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8774:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8785:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8770:3:23"},"nodeType":"YulFunctionCall","src":"8770:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8757:12:23"},"nodeType":"YulFunctionCall","src":"8757:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8747:6:23"}]},{"nodeType":"YulAssignment","src":"8798:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8825:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8836:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8821:3:23"},"nodeType":"YulFunctionCall","src":"8821:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8808:12:23"},"nodeType":"YulFunctionCall","src":"8808:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8798:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"8849:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8880:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8891:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8876:3:23"},"nodeType":"YulFunctionCall","src":"8876:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8863:12:23"},"nodeType":"YulFunctionCall","src":"8863:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8853:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"8938:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8947:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8950:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8940:6:23"},"nodeType":"YulFunctionCall","src":"8940:12:23"},"nodeType":"YulExpressionStatement","src":"8940:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8910:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8918:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8907:2:23"},"nodeType":"YulFunctionCall","src":"8907:30:23"},"nodeType":"YulIf","src":"8904:50:23"},{"nodeType":"YulAssignment","src":"8963:59:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8994:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"9005:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8990:3:23"},"nodeType":"YulFunctionCall","src":"8990:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9014:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"8973:16:23"},"nodeType":"YulFunctionCall","src":"8973:49:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8963:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8508:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8519:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8531:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8539:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8547:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8555:6:23","type":""}],"src":"8436:592:23"},{"body":{"nodeType":"YulBlock","src":"9121:177:23","statements":[{"body":{"nodeType":"YulBlock","src":"9167:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9176:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9179:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9169:6:23"},"nodeType":"YulFunctionCall","src":"9169:12:23"},"nodeType":"YulExpressionStatement","src":"9169:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9142:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9151:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9138:3:23"},"nodeType":"YulFunctionCall","src":"9138:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"9163:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9134:3:23"},"nodeType":"YulFunctionCall","src":"9134:32:23"},"nodeType":"YulIf","src":"9131:52:23"},{"nodeType":"YulVariableDeclaration","src":"9192:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9218:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9205:12:23"},"nodeType":"YulFunctionCall","src":"9205:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9196:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9262:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9237:24:23"},"nodeType":"YulFunctionCall","src":"9237:31:23"},"nodeType":"YulExpressionStatement","src":"9237:31:23"},{"nodeType":"YulAssignment","src":"9277:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"9287:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9277:6:23"}]}]},"name":"abi_decode_tuple_t_contract$_IHashPunk_$5451","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9087:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9098:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9110:6:23","type":""}],"src":"9033:265:23"},{"body":{"nodeType":"YulBlock","src":"9404:102:23","statements":[{"nodeType":"YulAssignment","src":"9414:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9426:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9437:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9422:3:23"},"nodeType":"YulFunctionCall","src":"9422:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9414:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9456:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9471:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9487:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9492:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9483:3:23"},"nodeType":"YulFunctionCall","src":"9483:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"9496:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9479:3:23"},"nodeType":"YulFunctionCall","src":"9479:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9467:3:23"},"nodeType":"YulFunctionCall","src":"9467:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9449:6:23"},"nodeType":"YulFunctionCall","src":"9449:51:23"},"nodeType":"YulExpressionStatement","src":"9449:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9373:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9384:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9395:4:23","type":""}],"src":"9303:203:23"},{"body":{"nodeType":"YulBlock","src":"9630:102:23","statements":[{"nodeType":"YulAssignment","src":"9640:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9652:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9663:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9648:3:23"},"nodeType":"YulFunctionCall","src":"9648:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9640:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9682:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9697:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9713:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9718:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9709:3:23"},"nodeType":"YulFunctionCall","src":"9709:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"9722:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9705:3:23"},"nodeType":"YulFunctionCall","src":"9705:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9693:3:23"},"nodeType":"YulFunctionCall","src":"9693:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9675:6:23"},"nodeType":"YulFunctionCall","src":"9675:51:23"},"nodeType":"YulExpressionStatement","src":"9675:51:23"}]},"name":"abi_encode_tuple_t_contract$_IHashPunk_$5451__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9599:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9610:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9621:4:23","type":""}],"src":"9511:221:23"},{"body":{"nodeType":"YulBlock","src":"9817:370:23","statements":[{"body":{"nodeType":"YulBlock","src":"9863:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9872:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9875:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9865:6:23"},"nodeType":"YulFunctionCall","src":"9865:12:23"},"nodeType":"YulExpressionStatement","src":"9865:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9838:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9847:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9834:3:23"},"nodeType":"YulFunctionCall","src":"9834:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"9859:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9830:3:23"},"nodeType":"YulFunctionCall","src":"9830:32:23"},"nodeType":"YulIf","src":"9827:52:23"},{"nodeType":"YulVariableDeclaration","src":"9888:37:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9915:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9902:12:23"},"nodeType":"YulFunctionCall","src":"9902:23:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9892:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"9968:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9977:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9980:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9970:6:23"},"nodeType":"YulFunctionCall","src":"9970:12:23"},"nodeType":"YulExpressionStatement","src":"9970:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9940:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"9948:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9937:2:23"},"nodeType":"YulFunctionCall","src":"9937:30:23"},"nodeType":"YulIf","src":"9934:50:23"},{"nodeType":"YulVariableDeclaration","src":"9993:32:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10007:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"10018:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10003:3:23"},"nodeType":"YulFunctionCall","src":"10003:22:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9997:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"10073:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10082:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10085:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10075:6:23"},"nodeType":"YulFunctionCall","src":"10075:12:23"},"nodeType":"YulExpressionStatement","src":"10075:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10052:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"10056:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10048:3:23"},"nodeType":"YulFunctionCall","src":"10048:13:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10063:7:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10044:3:23"},"nodeType":"YulFunctionCall","src":"10044:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10037:6:23"},"nodeType":"YulFunctionCall","src":"10037:35:23"},"nodeType":"YulIf","src":"10034:55:23"},{"nodeType":"YulAssignment","src":"10098:83:23","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10146:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"10150:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10142:3:23"},"nodeType":"YulFunctionCall","src":"10142:11:23"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10168:2:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10155:12:23"},"nodeType":"YulFunctionCall","src":"10155:16:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10173:7:23"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"10108:33:23"},"nodeType":"YulFunctionCall","src":"10108:73:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10098:6:23"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9783:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9794:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9806:6:23","type":""}],"src":"9737:450:23"},{"body":{"nodeType":"YulBlock","src":"10276:332:23","statements":[{"body":{"nodeType":"YulBlock","src":"10322:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10331:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10334:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10324:6:23"},"nodeType":"YulFunctionCall","src":"10324:12:23"},"nodeType":"YulExpressionStatement","src":"10324:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10297:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"10306:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10293:3:23"},"nodeType":"YulFunctionCall","src":"10293:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"10318:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10289:3:23"},"nodeType":"YulFunctionCall","src":"10289:32:23"},"nodeType":"YulIf","src":"10286:52:23"},{"nodeType":"YulVariableDeclaration","src":"10347:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10373:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10360:12:23"},"nodeType":"YulFunctionCall","src":"10360:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10351:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10417:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10392:24:23"},"nodeType":"YulFunctionCall","src":"10392:31:23"},"nodeType":"YulExpressionStatement","src":"10392:31:23"},{"nodeType":"YulAssignment","src":"10432:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"10442:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10432:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"10456:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10488:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10499:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10484:3:23"},"nodeType":"YulFunctionCall","src":"10484:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10471:12:23"},"nodeType":"YulFunctionCall","src":"10471:32:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"10460:7:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"10560:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10569:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10572:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10562:6:23"},"nodeType":"YulFunctionCall","src":"10562:12:23"},"nodeType":"YulExpressionStatement","src":"10562:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10525:7:23"},{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10548:7:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10541:6:23"},"nodeType":"YulFunctionCall","src":"10541:15:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10534:6:23"},"nodeType":"YulFunctionCall","src":"10534:23:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10522:2:23"},"nodeType":"YulFunctionCall","src":"10522:36:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10515:6:23"},"nodeType":"YulFunctionCall","src":"10515:44:23"},"nodeType":"YulIf","src":"10512:64:23"},{"nodeType":"YulAssignment","src":"10585:17:23","value":{"name":"value_1","nodeType":"YulIdentifier","src":"10595:7:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10585:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10234:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10245:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10257:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10265:6:23","type":""}],"src":"10192:416:23"},{"body":{"nodeType":"YulBlock","src":"10860:1000:23","statements":[{"body":{"nodeType":"YulBlock","src":"10907:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10916:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10919:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10909:6:23"},"nodeType":"YulFunctionCall","src":"10909:12:23"},"nodeType":"YulExpressionStatement","src":"10909:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10881:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"10890:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10877:3:23"},"nodeType":"YulFunctionCall","src":"10877:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"10902:3:23","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10873:3:23"},"nodeType":"YulFunctionCall","src":"10873:33:23"},"nodeType":"YulIf","src":"10870:53:23"},{"nodeType":"YulVariableDeclaration","src":"10932:37:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10959:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10946:12:23"},"nodeType":"YulFunctionCall","src":"10946:23:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10936:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10978:28:23","value":{"kind":"number","nodeType":"YulLiteral","src":"10988:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10982:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"11033:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11042:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11045:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11035:6:23"},"nodeType":"YulFunctionCall","src":"11035:12:23"},"nodeType":"YulExpressionStatement","src":"11035:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11021:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"11029:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11018:2:23"},"nodeType":"YulFunctionCall","src":"11018:14:23"},"nodeType":"YulIf","src":"11015:34:23"},{"nodeType":"YulAssignment","src":"11058:71:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11101:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11112:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11097:3:23"},"nodeType":"YulFunctionCall","src":"11097:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11121:7:23"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"11068:28:23"},"nodeType":"YulFunctionCall","src":"11068:61:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11058:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"11138:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11171:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11182:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11167:3:23"},"nodeType":"YulFunctionCall","src":"11167:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11154:12:23"},"nodeType":"YulFunctionCall","src":"11154:32:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"11142:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"11215:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11224:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11227:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11217:6:23"},"nodeType":"YulFunctionCall","src":"11217:12:23"},"nodeType":"YulExpressionStatement","src":"11217:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"11201:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"11211:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11198:2:23"},"nodeType":"YulFunctionCall","src":"11198:16:23"},"nodeType":"YulIf","src":"11195:36:23"},{"nodeType":"YulAssignment","src":"11240:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11283:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"11294:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11279:3:23"},"nodeType":"YulFunctionCall","src":"11279:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11305:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11250:28:23"},"nodeType":"YulFunctionCall","src":"11250:63:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11240:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"11322:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11355:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11366:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11351:3:23"},"nodeType":"YulFunctionCall","src":"11351:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11338:12:23"},"nodeType":"YulFunctionCall","src":"11338:32:23"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"11326:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"11399:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11408:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11411:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11401:6:23"},"nodeType":"YulFunctionCall","src":"11401:12:23"},"nodeType":"YulExpressionStatement","src":"11401:12:23"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"11385:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"11395:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11382:2:23"},"nodeType":"YulFunctionCall","src":"11382:16:23"},"nodeType":"YulIf","src":"11379:36:23"},{"nodeType":"YulAssignment","src":"11424:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11467:9:23"},{"name":"offset_2","nodeType":"YulIdentifier","src":"11478:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11463:3:23"},"nodeType":"YulFunctionCall","src":"11463:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11489:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11434:28:23"},"nodeType":"YulFunctionCall","src":"11434:63:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11424:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"11506:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11539:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11550:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11535:3:23"},"nodeType":"YulFunctionCall","src":"11535:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11522:12:23"},"nodeType":"YulFunctionCall","src":"11522:32:23"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"11510:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"11583:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11592:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11595:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11585:6:23"},"nodeType":"YulFunctionCall","src":"11585:12:23"},"nodeType":"YulExpressionStatement","src":"11585:12:23"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"11569:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"11579:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11566:2:23"},"nodeType":"YulFunctionCall","src":"11566:16:23"},"nodeType":"YulIf","src":"11563:36:23"},{"nodeType":"YulAssignment","src":"11608:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11651:9:23"},{"name":"offset_3","nodeType":"YulIdentifier","src":"11662:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11647:3:23"},"nodeType":"YulFunctionCall","src":"11647:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11673:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11618:28:23"},"nodeType":"YulFunctionCall","src":"11618:63:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11608:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"11690:49:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11723:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11734:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11719:3:23"},"nodeType":"YulFunctionCall","src":"11719:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11706:12:23"},"nodeType":"YulFunctionCall","src":"11706:33:23"},"variables":[{"name":"offset_4","nodeType":"YulTypedName","src":"11694:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"11768:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11777:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11780:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11770:6:23"},"nodeType":"YulFunctionCall","src":"11770:12:23"},"nodeType":"YulExpressionStatement","src":"11770:12:23"}]},"condition":{"arguments":[{"name":"offset_4","nodeType":"YulIdentifier","src":"11754:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"11764:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11751:2:23"},"nodeType":"YulFunctionCall","src":"11751:16:23"},"nodeType":"YulIf","src":"11748:36:23"},{"nodeType":"YulAssignment","src":"11793:61:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11824:9:23"},{"name":"offset_4","nodeType":"YulIdentifier","src":"11835:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11820:3:23"},"nodeType":"YulFunctionCall","src":"11820:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11846:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"11803:16:23"},"nodeType":"YulFunctionCall","src":"11803:51:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11793:6:23"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10794:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10805:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10817:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10825:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10833:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10841:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10849:6:23","type":""}],"src":"10613:1247:23"},{"body":{"nodeType":"YulBlock","src":"11952:301:23","statements":[{"body":{"nodeType":"YulBlock","src":"11998:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12007:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12010:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12000:6:23"},"nodeType":"YulFunctionCall","src":"12000:12:23"},"nodeType":"YulExpressionStatement","src":"12000:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11973:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"11982:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11969:3:23"},"nodeType":"YulFunctionCall","src":"11969:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"11994:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11965:3:23"},"nodeType":"YulFunctionCall","src":"11965:32:23"},"nodeType":"YulIf","src":"11962:52:23"},{"nodeType":"YulVariableDeclaration","src":"12023:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12049:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12036:12:23"},"nodeType":"YulFunctionCall","src":"12036:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12027:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12093:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12068:24:23"},"nodeType":"YulFunctionCall","src":"12068:31:23"},"nodeType":"YulExpressionStatement","src":"12068:31:23"},{"nodeType":"YulAssignment","src":"12108:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"12118:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12108:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"12132:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12164:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12175:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12160:3:23"},"nodeType":"YulFunctionCall","src":"12160:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12147:12:23"},"nodeType":"YulFunctionCall","src":"12147:32:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"12136:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"12213:7:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12188:24:23"},"nodeType":"YulFunctionCall","src":"12188:33:23"},"nodeType":"YulExpressionStatement","src":"12188:33:23"},{"nodeType":"YulAssignment","src":"12230:17:23","value":{"name":"value_1","nodeType":"YulIdentifier","src":"12240:7:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12230:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11910:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11921:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11933:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11941:6:23","type":""}],"src":"11865:388:23"},{"body":{"nodeType":"YulBlock","src":"12409:507:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12419:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12429:2:23","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12423:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12440:32:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12458:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"12469:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12454:3:23"},"nodeType":"YulFunctionCall","src":"12454:18:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"12444:6:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12488:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"12499:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12481:6:23"},"nodeType":"YulFunctionCall","src":"12481:21:23"},"nodeType":"YulExpressionStatement","src":"12481:21:23"},{"nodeType":"YulVariableDeclaration","src":"12511:17:23","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"12522:6:23"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"12515:3:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12537:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12557:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12551:5:23"},"nodeType":"YulFunctionCall","src":"12551:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12541:6:23","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"12580:6:23"},{"name":"length","nodeType":"YulIdentifier","src":"12588:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12573:6:23"},"nodeType":"YulFunctionCall","src":"12573:22:23"},"nodeType":"YulExpressionStatement","src":"12573:22:23"},{"nodeType":"YulAssignment","src":"12604:25:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12615:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12626:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12611:3:23"},"nodeType":"YulFunctionCall","src":"12611:18:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12604:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"12638:29:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12656:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"12664:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12652:3:23"},"nodeType":"YulFunctionCall","src":"12652:15:23"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"12642:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12676:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12685:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12680:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"12744:146:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12765:3:23"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12780:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12774:5:23"},"nodeType":"YulFunctionCall","src":"12774:13:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12797:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12802:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12793:3:23"},"nodeType":"YulFunctionCall","src":"12793:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"12806:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12789:3:23"},"nodeType":"YulFunctionCall","src":"12789:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12770:3:23"},"nodeType":"YulFunctionCall","src":"12770:39:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12758:6:23"},"nodeType":"YulFunctionCall","src":"12758:52:23"},"nodeType":"YulExpressionStatement","src":"12758:52:23"},{"nodeType":"YulAssignment","src":"12823:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12834:3:23"},{"name":"_1","nodeType":"YulIdentifier","src":"12839:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12830:3:23"},"nodeType":"YulFunctionCall","src":"12830:12:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12823:3:23"}]},{"nodeType":"YulAssignment","src":"12855:25:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12869:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"12877:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12865:3:23"},"nodeType":"YulFunctionCall","src":"12865:15:23"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12855:6:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12706:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"12709:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12703:2:23"},"nodeType":"YulFunctionCall","src":"12703:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12717:18:23","statements":[{"nodeType":"YulAssignment","src":"12719:14:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12728:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"12731:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12724:3:23"},"nodeType":"YulFunctionCall","src":"12724:9:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12719:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"12699:3:23","statements":[]},"src":"12695:195:23"},{"nodeType":"YulAssignment","src":"12899:11:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"12907:3:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12899:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12378:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12389:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12400:4:23","type":""}],"src":"12258:658:23"},{"body":{"nodeType":"YulBlock","src":"13068:587:23","statements":[{"body":{"nodeType":"YulBlock","src":"13115:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13124:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13127:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13117:6:23"},"nodeType":"YulFunctionCall","src":"13117:12:23"},"nodeType":"YulExpressionStatement","src":"13117:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13089:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13098:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13085:3:23"},"nodeType":"YulFunctionCall","src":"13085:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"13110:3:23","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13081:3:23"},"nodeType":"YulFunctionCall","src":"13081:33:23"},"nodeType":"YulIf","src":"13078:53:23"},{"nodeType":"YulVariableDeclaration","src":"13140:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13166:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13153:12:23"},"nodeType":"YulFunctionCall","src":"13153:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13144:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13210:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13185:24:23"},"nodeType":"YulFunctionCall","src":"13185:31:23"},"nodeType":"YulExpressionStatement","src":"13185:31:23"},{"nodeType":"YulAssignment","src":"13225:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"13235:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13225:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"13249:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13281:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13292:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13277:3:23"},"nodeType":"YulFunctionCall","src":"13277:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13264:12:23"},"nodeType":"YulFunctionCall","src":"13264:32:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"13253:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"13330:7:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13305:24:23"},"nodeType":"YulFunctionCall","src":"13305:33:23"},"nodeType":"YulExpressionStatement","src":"13305:33:23"},{"nodeType":"YulAssignment","src":"13347:17:23","value":{"name":"value_1","nodeType":"YulIdentifier","src":"13357:7:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13347:6:23"}]},{"nodeType":"YulAssignment","src":"13373:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13400:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13411:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13396:3:23"},"nodeType":"YulFunctionCall","src":"13396:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13383:12:23"},"nodeType":"YulFunctionCall","src":"13383:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13373:6:23"}]},{"nodeType":"YulAssignment","src":"13424:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13451:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13462:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13447:3:23"},"nodeType":"YulFunctionCall","src":"13447:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13434:12:23"},"nodeType":"YulFunctionCall","src":"13434:32:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13424:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"13475:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13506:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13517:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13502:3:23"},"nodeType":"YulFunctionCall","src":"13502:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13489:12:23"},"nodeType":"YulFunctionCall","src":"13489:33:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13479:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"13565:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13574:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13577:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13567:6:23"},"nodeType":"YulFunctionCall","src":"13567:12:23"},"nodeType":"YulExpressionStatement","src":"13567:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13537:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"13545:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13534:2:23"},"nodeType":"YulFunctionCall","src":"13534:30:23"},"nodeType":"YulIf","src":"13531:50:23"},{"nodeType":"YulAssignment","src":"13590:59:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13621:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"13632:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13617:3:23"},"nodeType":"YulFunctionCall","src":"13617:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13641:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"13600:16:23"},"nodeType":"YulFunctionCall","src":"13600:49:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13590:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13002:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13013:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13025:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13033:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13041:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13049:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13057:6:23","type":""}],"src":"12921:734:23"},{"body":{"nodeType":"YulBlock","src":"13764:279:23","statements":[{"body":{"nodeType":"YulBlock","src":"13810:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13819:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13822:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13812:6:23"},"nodeType":"YulFunctionCall","src":"13812:12:23"},"nodeType":"YulExpressionStatement","src":"13812:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13785:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13794:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13781:3:23"},"nodeType":"YulFunctionCall","src":"13781:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"13806:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13777:3:23"},"nodeType":"YulFunctionCall","src":"13777:32:23"},"nodeType":"YulIf","src":"13774:52:23"},{"nodeType":"YulVariableDeclaration","src":"13835:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13861:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13848:12:23"},"nodeType":"YulFunctionCall","src":"13848:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13839:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13905:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13880:24:23"},"nodeType":"YulFunctionCall","src":"13880:31:23"},"nodeType":"YulExpressionStatement","src":"13880:31:23"},{"nodeType":"YulAssignment","src":"13920:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"13930:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13920:6:23"}]},{"nodeType":"YulAssignment","src":"13944:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13971:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13982:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13967:3:23"},"nodeType":"YulFunctionCall","src":"13967:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13954:12:23"},"nodeType":"YulFunctionCall","src":"13954:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13944:6:23"}]},{"nodeType":"YulAssignment","src":"13995:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14022:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14033:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14018:3:23"},"nodeType":"YulFunctionCall","src":"14018:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14005:12:23"},"nodeType":"YulFunctionCall","src":"14005:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13995:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13714:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13725:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13737:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13745:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13753:6:23","type":""}],"src":"13660:383:23"},{"body":{"nodeType":"YulBlock","src":"14222:232:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14239:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14250:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14232:6:23"},"nodeType":"YulFunctionCall","src":"14232:21:23"},"nodeType":"YulExpressionStatement","src":"14232:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14273:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14284:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14269:3:23"},"nodeType":"YulFunctionCall","src":"14269:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"14289:2:23","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14262:6:23"},"nodeType":"YulFunctionCall","src":"14262:30:23"},"nodeType":"YulExpressionStatement","src":"14262:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14312:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14323:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14308:3:23"},"nodeType":"YulFunctionCall","src":"14308:18:23"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"14328:34:23","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14301:6:23"},"nodeType":"YulFunctionCall","src":"14301:62:23"},"nodeType":"YulExpressionStatement","src":"14301:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14383:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14394:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14379:3:23"},"nodeType":"YulFunctionCall","src":"14379:18:23"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"14399:12:23","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14372:6:23"},"nodeType":"YulFunctionCall","src":"14372:40:23"},"nodeType":"YulExpressionStatement","src":"14372:40:23"},{"nodeType":"YulAssignment","src":"14421:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14433:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14444:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14429:3:23"},"nodeType":"YulFunctionCall","src":"14429:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14421:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14199:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14213:4:23","type":""}],"src":"14048:406:23"},{"body":{"nodeType":"YulBlock","src":"14514:325:23","statements":[{"nodeType":"YulAssignment","src":"14524:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14538:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"14541:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14534:3:23"},"nodeType":"YulFunctionCall","src":"14534:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14524:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"14555:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14585:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"14591:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14581:3:23"},"nodeType":"YulFunctionCall","src":"14581:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14559:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"14632:31:23","statements":[{"nodeType":"YulAssignment","src":"14634:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14648:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14656:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14644:3:23"},"nodeType":"YulFunctionCall","src":"14644:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14634:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14612:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14605:6:23"},"nodeType":"YulFunctionCall","src":"14605:26:23"},"nodeType":"YulIf","src":"14602:61:23"},{"body":{"nodeType":"YulBlock","src":"14722:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14743:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14750:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14755:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14746:3:23"},"nodeType":"YulFunctionCall","src":"14746:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14736:6:23"},"nodeType":"YulFunctionCall","src":"14736:31:23"},"nodeType":"YulExpressionStatement","src":"14736:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14787:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14790:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14780:6:23"},"nodeType":"YulFunctionCall","src":"14780:15:23"},"nodeType":"YulExpressionStatement","src":"14780:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14815:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14818:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14808:6:23"},"nodeType":"YulFunctionCall","src":"14808:15:23"},"nodeType":"YulExpressionStatement","src":"14808:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14678:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14701:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14709:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14698:2:23"},"nodeType":"YulFunctionCall","src":"14698:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14675:2:23"},"nodeType":"YulFunctionCall","src":"14675:38:23"},"nodeType":"YulIf","src":"14672:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14494:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14503:6:23","type":""}],"src":"14459:380:23"},{"body":{"nodeType":"YulBlock","src":"14900:65:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14917:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"14920:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14910:6:23"},"nodeType":"YulFunctionCall","src":"14910:14:23"},"nodeType":"YulExpressionStatement","src":"14910:14:23"},{"nodeType":"YulAssignment","src":"14933:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14951:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14954:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14941:9:23"},"nodeType":"YulFunctionCall","src":"14941:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14933:4:23"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14883:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14891:4:23","type":""}],"src":"14844:121:23"},{"body":{"nodeType":"YulBlock","src":"15154:836:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15164:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"15175:1:23","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"15168:3:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15185:30:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15208:6:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"15202:5:23"},"nodeType":"YulFunctionCall","src":"15202:13:23"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"15189:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15224:50:23","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"15264:9:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"15238:25:23"},"nodeType":"YulFunctionCall","src":"15238:36:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15228:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15283:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"15293:1:23","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15287:2:23","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15344:126:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15365:3:23"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"15374:9:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15389:3:23","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15385:3:23"},"nodeType":"YulFunctionCall","src":"15385:8:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15370:3:23"},"nodeType":"YulFunctionCall","src":"15370:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15358:6:23"},"nodeType":"YulFunctionCall","src":"15358:37:23"},"nodeType":"YulExpressionStatement","src":"15358:37:23"},{"nodeType":"YulAssignment","src":"15408:52:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15419:3:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15428:6:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15450:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15443:6:23"},"nodeType":"YulFunctionCall","src":"15443:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15436:6:23"},"nodeType":"YulFunctionCall","src":"15436:22:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15424:3:23"},"nodeType":"YulFunctionCall","src":"15424:35:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15415:3:23"},"nodeType":"YulFunctionCall","src":"15415:45:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15408:3:23"}]}]},"nodeType":"YulCase","src":"15337:133:23","value":{"kind":"number","nodeType":"YulLiteral","src":"15342:1:23","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"15486:349:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15507:1:23","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"15510:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15500:6:23"},"nodeType":"YulFunctionCall","src":"15500:17:23"},"nodeType":"YulExpressionStatement","src":"15500:17:23"},{"nodeType":"YulVariableDeclaration","src":"15530:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"15540:4:23","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15534:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15557:31:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15582:1:23","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"15585:2:23"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"15572:9:23"},"nodeType":"YulFunctionCall","src":"15572:16:23"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"15561:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15601:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"15610:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15605:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"15678:111:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15707:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"15712:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15703:3:23"},"nodeType":"YulFunctionCall","src":"15703:11:23"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"15722:7:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"15716:5:23"},"nodeType":"YulFunctionCall","src":"15716:14:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15696:6:23"},"nodeType":"YulFunctionCall","src":"15696:35:23"},"nodeType":"YulExpressionStatement","src":"15696:35:23"},{"nodeType":"YulAssignment","src":"15748:27:23","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"15763:7:23"},{"name":"_1","nodeType":"YulIdentifier","src":"15772:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15759:3:23"},"nodeType":"YulFunctionCall","src":"15759:16:23"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"15748:7:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15635:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"15638:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15632:2:23"},"nodeType":"YulFunctionCall","src":"15632:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15646:19:23","statements":[{"nodeType":"YulAssignment","src":"15648:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15657:1:23"},{"name":"_2","nodeType":"YulIdentifier","src":"15660:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15653:3:23"},"nodeType":"YulFunctionCall","src":"15653:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15648:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"15628:3:23","statements":[]},"src":"15624:165:23"},{"nodeType":"YulAssignment","src":"15802:23:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15813:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"15818:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15809:3:23"},"nodeType":"YulFunctionCall","src":"15809:16:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15802:3:23"}]}]},"nodeType":"YulCase","src":"15479:356:23","value":{"kind":"number","nodeType":"YulLiteral","src":"15484:1:23","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"15314:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"15325:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15310:3:23"},"nodeType":"YulFunctionCall","src":"15310:18:23"},"nodeType":"YulSwitch","src":"15303:532:23"},{"nodeType":"YulVariableDeclaration","src":"15844:29:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15866:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15860:5:23"},"nodeType":"YulFunctionCall","src":"15860:13:23"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"15848:8:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15921:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"15929:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15917:3:23"},"nodeType":"YulFunctionCall","src":"15917:17:23"},{"name":"ret","nodeType":"YulIdentifier","src":"15936:3:23"},{"name":"length_1","nodeType":"YulIdentifier","src":"15941:8:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15882:34:23"},"nodeType":"YulFunctionCall","src":"15882:68:23"},"nodeType":"YulExpressionStatement","src":"15882:68:23"},{"nodeType":"YulAssignment","src":"15959:25:23","value":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"15970:3:23"},{"name":"length_1","nodeType":"YulIdentifier","src":"15975:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15966:3:23"},"nodeType":"YulFunctionCall","src":"15966:18:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15959:3:23"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15122:3:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15127:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15135:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15146:3:23","type":""}],"src":"14970:1020:23"},{"body":{"nodeType":"YulBlock","src":"16169:181:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16186:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16197:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16179:6:23"},"nodeType":"YulFunctionCall","src":"16179:21:23"},"nodeType":"YulExpressionStatement","src":"16179:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16220:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16231:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16216:3:23"},"nodeType":"YulFunctionCall","src":"16216:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"16236:2:23","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16209:6:23"},"nodeType":"YulFunctionCall","src":"16209:30:23"},"nodeType":"YulExpressionStatement","src":"16209:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16259:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16270:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16255:3:23"},"nodeType":"YulFunctionCall","src":"16255:18:23"},{"hexValue":"4856616c75653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"16275:33:23","type":"","value":"HValue: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16248:6:23"},"nodeType":"YulFunctionCall","src":"16248:61:23"},"nodeType":"YulExpressionStatement","src":"16248:61:23"},{"nodeType":"YulAssignment","src":"16318:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16330:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16341:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16326:3:23"},"nodeType":"YulFunctionCall","src":"16326:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16318:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dea929535f31a6a3d4da771c56c977f613aa2b2d875a3332f245e364beb66cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16146:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16160:4:23","type":""}],"src":"15995:355:23"},{"body":{"nodeType":"YulBlock","src":"16387:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16404:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16411:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"16416:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16407:3:23"},"nodeType":"YulFunctionCall","src":"16407:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16397:6:23"},"nodeType":"YulFunctionCall","src":"16397:31:23"},"nodeType":"YulExpressionStatement","src":"16397:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16444:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16447:4:23","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16437:6:23"},"nodeType":"YulFunctionCall","src":"16437:15:23"},"nodeType":"YulExpressionStatement","src":"16437:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16468:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16471:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16461:6:23"},"nodeType":"YulFunctionCall","src":"16461:15:23"},"nodeType":"YulExpressionStatement","src":"16461:15:23"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"16355:127:23"},{"body":{"nodeType":"YulBlock","src":"16519:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16536:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16543:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"16548:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16539:3:23"},"nodeType":"YulFunctionCall","src":"16539:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16529:6:23"},"nodeType":"YulFunctionCall","src":"16529:31:23"},"nodeType":"YulExpressionStatement","src":"16529:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16576:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16579:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16569:6:23"},"nodeType":"YulFunctionCall","src":"16569:15:23"},"nodeType":"YulExpressionStatement","src":"16569:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16600:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16603:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16593:6:23"},"nodeType":"YulFunctionCall","src":"16593:15:23"},"nodeType":"YulExpressionStatement","src":"16593:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16487:127:23"},{"body":{"nodeType":"YulBlock","src":"16666:88:23","statements":[{"body":{"nodeType":"YulBlock","src":"16697:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16699:16:23"},"nodeType":"YulFunctionCall","src":"16699:18:23"},"nodeType":"YulExpressionStatement","src":"16699:18:23"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16682:5:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16693:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16689:3:23"},"nodeType":"YulFunctionCall","src":"16689:6:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16679:2:23"},"nodeType":"YulFunctionCall","src":"16679:17:23"},"nodeType":"YulIf","src":"16676:43:23"},{"nodeType":"YulAssignment","src":"16728:20:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16739:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"16746:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16735:3:23"},"nodeType":"YulFunctionCall","src":"16735:13:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16728:3:23"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16648:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16658:3:23","type":""}],"src":"16619:135:23"},{"body":{"nodeType":"YulBlock","src":"16933:236:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16950:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16961:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16943:6:23"},"nodeType":"YulFunctionCall","src":"16943:21:23"},"nodeType":"YulExpressionStatement","src":"16943:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16984:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16995:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16980:3:23"},"nodeType":"YulFunctionCall","src":"16980:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"17000:2:23","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16973:6:23"},"nodeType":"YulFunctionCall","src":"16973:30:23"},"nodeType":"YulExpressionStatement","src":"16973:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17023:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17034:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17019:3:23"},"nodeType":"YulFunctionCall","src":"17019:18:23"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"17039:34:23","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17012:6:23"},"nodeType":"YulFunctionCall","src":"17012:62:23"},"nodeType":"YulExpressionStatement","src":"17012:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17094:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17105:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17090:3:23"},"nodeType":"YulFunctionCall","src":"17090:18:23"},{"hexValue":"6572206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"17110:16:23","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17083:6:23"},"nodeType":"YulFunctionCall","src":"17083:44:23"},"nodeType":"YulExpressionStatement","src":"17083:44:23"},{"nodeType":"YulAssignment","src":"17136:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17148:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17159:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17144:3:23"},"nodeType":"YulFunctionCall","src":"17144:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17136:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16910:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16924:4:23","type":""}],"src":"16759:410:23"},{"body":{"nodeType":"YulBlock","src":"17348:231:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17365:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17376:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17358:6:23"},"nodeType":"YulFunctionCall","src":"17358:21:23"},"nodeType":"YulExpressionStatement","src":"17358:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17399:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17410:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17395:3:23"},"nodeType":"YulFunctionCall","src":"17395:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"17415:2:23","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17388:6:23"},"nodeType":"YulFunctionCall","src":"17388:30:23"},"nodeType":"YulExpressionStatement","src":"17388:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17438:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17449:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17434:3:23"},"nodeType":"YulFunctionCall","src":"17434:18:23"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"17454:34:23","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17427:6:23"},"nodeType":"YulFunctionCall","src":"17427:62:23"},"nodeType":"YulExpressionStatement","src":"17427:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17509:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17520:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17505:3:23"},"nodeType":"YulFunctionCall","src":"17505:18:23"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"17525:11:23","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17498:6:23"},"nodeType":"YulFunctionCall","src":"17498:39:23"},"nodeType":"YulExpressionStatement","src":"17498:39:23"},{"nodeType":"YulAssignment","src":"17546:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17558:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17569:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17554:3:23"},"nodeType":"YulFunctionCall","src":"17554:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17546:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17325:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17339:4:23","type":""}],"src":"17174:405:23"},{"body":{"nodeType":"YulBlock","src":"17758:226:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17775:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17786:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17768:6:23"},"nodeType":"YulFunctionCall","src":"17768:21:23"},"nodeType":"YulExpressionStatement","src":"17768:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17809:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17820:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17805:3:23"},"nodeType":"YulFunctionCall","src":"17805:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"17825:2:23","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17798:6:23"},"nodeType":"YulFunctionCall","src":"17798:30:23"},"nodeType":"YulExpressionStatement","src":"17798:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17848:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17859:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17844:3:23"},"nodeType":"YulFunctionCall","src":"17844:18:23"},{"hexValue":"4856616c75653a2063616c6c6572206973206e6f742074686520636f6e74726f","kind":"string","nodeType":"YulLiteral","src":"17864:34:23","type":"","value":"HValue: caller is not the contro"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17837:6:23"},"nodeType":"YulFunctionCall","src":"17837:62:23"},"nodeType":"YulExpressionStatement","src":"17837:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17919:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17930:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17915:3:23"},"nodeType":"YulFunctionCall","src":"17915:18:23"},{"hexValue":"6c6c6572","kind":"string","nodeType":"YulLiteral","src":"17935:6:23","type":"","value":"ller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17908:6:23"},"nodeType":"YulFunctionCall","src":"17908:34:23"},"nodeType":"YulExpressionStatement","src":"17908:34:23"},{"nodeType":"YulAssignment","src":"17951:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17963:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17974:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17959:3:23"},"nodeType":"YulFunctionCall","src":"17959:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17951:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c68bca7fa283e487dffc110655d1b436451e784bf6064e5151d72f6ebe27cd0c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17735:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17749:4:23","type":""}],"src":"17584:400:23"},{"body":{"nodeType":"YulBlock","src":"18163:171:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18180:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18191:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18173:6:23"},"nodeType":"YulFunctionCall","src":"18173:21:23"},"nodeType":"YulExpressionStatement","src":"18173:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18214:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18225:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18210:3:23"},"nodeType":"YulFunctionCall","src":"18210:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"18230:2:23","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18203:6:23"},"nodeType":"YulFunctionCall","src":"18203:30:23"},"nodeType":"YulExpressionStatement","src":"18203:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18253:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18264:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18249:3:23"},"nodeType":"YulFunctionCall","src":"18249:18:23"},{"hexValue":"6578636565642065786368616e6765206c696d6974","kind":"string","nodeType":"YulLiteral","src":"18269:23:23","type":"","value":"exceed exchange limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18242:6:23"},"nodeType":"YulFunctionCall","src":"18242:51:23"},"nodeType":"YulExpressionStatement","src":"18242:51:23"},{"nodeType":"YulAssignment","src":"18302:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18314:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18325:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18310:3:23"},"nodeType":"YulFunctionCall","src":"18310:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18302:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_11556822b0dbb84e42a57d7995abf090c129f85f99798a55739c0b2df8acb3f1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18140:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18154:4:23","type":""}],"src":"17989:345:23"},{"body":{"nodeType":"YulBlock","src":"18513:176:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18530:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18541:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18523:6:23"},"nodeType":"YulFunctionCall","src":"18523:21:23"},"nodeType":"YulExpressionStatement","src":"18523:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18564:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18575:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18560:3:23"},"nodeType":"YulFunctionCall","src":"18560:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"18580:2:23","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:23"},"nodeType":"YulFunctionCall","src":"18553:30:23"},"nodeType":"YulExpressionStatement","src":"18553:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18603:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18614:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18599:3:23"},"nodeType":"YulFunctionCall","src":"18599:18:23"},{"hexValue":"4856616c75653a206e6f7420656e6f75676820766f7563686572","kind":"string","nodeType":"YulLiteral","src":"18619:28:23","type":"","value":"HValue: not enough voucher"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18592:6:23"},"nodeType":"YulFunctionCall","src":"18592:56:23"},"nodeType":"YulExpressionStatement","src":"18592:56:23"},{"nodeType":"YulAssignment","src":"18657:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18669:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18680:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18665:3:23"},"nodeType":"YulFunctionCall","src":"18665:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18657:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_6495068f22747f4702ada372c895e8589607dd29d4c382d701a9201403183e08__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18490:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18504:4:23","type":""}],"src":"18339:350:23"},{"body":{"nodeType":"YulBlock","src":"18742:77:23","statements":[{"nodeType":"YulAssignment","src":"18752:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18763:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"18766:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18759:3:23"},"nodeType":"YulFunctionCall","src":"18759:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18752:3:23"}]},{"body":{"nodeType":"YulBlock","src":"18791:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18793:16:23"},"nodeType":"YulFunctionCall","src":"18793:18:23"},"nodeType":"YulExpressionStatement","src":"18793:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18783:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"18786:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18780:2:23"},"nodeType":"YulFunctionCall","src":"18780:10:23"},"nodeType":"YulIf","src":"18777:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18725:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"18728:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18734:3:23","type":""}],"src":"18694:125:23"},{"body":{"nodeType":"YulBlock","src":"18905:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"18938:425:23","statements":[{"nodeType":"YulVariableDeclaration","src":"18952:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"18962:1:23","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18956:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"18983:2:23"},{"name":"array","nodeType":"YulIdentifier","src":"18987:5:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18976:6:23"},"nodeType":"YulFunctionCall","src":"18976:17:23"},"nodeType":"YulExpressionStatement","src":"18976:17:23"},{"nodeType":"YulVariableDeclaration","src":"19006:31:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"19028:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"19032:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"19018:9:23"},"nodeType":"YulFunctionCall","src":"19018:19:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"19010:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19050:57:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19073:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19083:1:23","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19090:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"19102:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19086:3:23"},"nodeType":"YulFunctionCall","src":"19086:19:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19079:3:23"},"nodeType":"YulFunctionCall","src":"19079:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19069:3:23"},"nodeType":"YulFunctionCall","src":"19069:38:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"19054:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"19144:23:23","statements":[{"nodeType":"YulAssignment","src":"19146:19:23","value":{"name":"data","nodeType":"YulIdentifier","src":"19161:4:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"19146:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19126:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"19138:4:23","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19123:2:23"},"nodeType":"YulFunctionCall","src":"19123:20:23"},"nodeType":"YulIf","src":"19120:47:23"},{"nodeType":"YulVariableDeclaration","src":"19180:41:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19194:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19204:1:23","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"19211:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"19216:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19207:3:23"},"nodeType":"YulFunctionCall","src":"19207:12:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19200:3:23"},"nodeType":"YulFunctionCall","src":"19200:20:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19190:3:23"},"nodeType":"YulFunctionCall","src":"19190:31:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"19184:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19234:24:23","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"19247:11:23"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"19238:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"19332:21:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19341:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"19348:2:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19334:6:23"},"nodeType":"YulFunctionCall","src":"19334:17:23"},"nodeType":"YulExpressionStatement","src":"19334:17:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19282:5:23"},{"name":"_2","nodeType":"YulIdentifier","src":"19289:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19279:2:23"},"nodeType":"YulFunctionCall","src":"19279:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19293:26:23","statements":[{"nodeType":"YulAssignment","src":"19295:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19308:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"19315:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19304:3:23"},"nodeType":"YulFunctionCall","src":"19304:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"19295:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"19275:3:23","statements":[]},"src":"19271:82:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18921:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18926:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18918:2:23"},"nodeType":"YulFunctionCall","src":"18918:11:23"},"nodeType":"YulIf","src":"18915:448:23"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"18877:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"18884:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"18889:10:23","type":""}],"src":"18824:545:23"},{"body":{"nodeType":"YulBlock","src":"19459:81:23","statements":[{"nodeType":"YulAssignment","src":"19469:65:23","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19484:4:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19502:1:23","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"19505:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19498:3:23"},"nodeType":"YulFunctionCall","src":"19498:11:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19515:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19511:3:23"},"nodeType":"YulFunctionCall","src":"19511:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19494:3:23"},"nodeType":"YulFunctionCall","src":"19494:24:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19490:3:23"},"nodeType":"YulFunctionCall","src":"19490:29:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19480:3:23"},"nodeType":"YulFunctionCall","src":"19480:40:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19526:1:23","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"19529:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19522:3:23"},"nodeType":"YulFunctionCall","src":"19522:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19477:2:23"},"nodeType":"YulFunctionCall","src":"19477:57:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"19469:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19436:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"19442:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"19450:4:23","type":""}],"src":"19374:166:23"},{"body":{"nodeType":"YulBlock","src":"19641:1256:23","statements":[{"nodeType":"YulVariableDeclaration","src":"19651:24:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19671:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19665:5:23"},"nodeType":"YulFunctionCall","src":"19665:10:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"19655:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"19718:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19720:16:23"},"nodeType":"YulFunctionCall","src":"19720:18:23"},"nodeType":"YulExpressionStatement","src":"19720:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19690:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"19698:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19687:2:23"},"nodeType":"YulFunctionCall","src":"19687:30:23"},"nodeType":"YulIf","src":"19684:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19793:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19831:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19825:5:23"},"nodeType":"YulFunctionCall","src":"19825:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"19799:25:23"},"nodeType":"YulFunctionCall","src":"19799:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"19839:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"19749:43:23"},"nodeType":"YulFunctionCall","src":"19749:97:23"},"nodeType":"YulExpressionStatement","src":"19749:97:23"},{"nodeType":"YulVariableDeclaration","src":"19855:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"19872:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"19859:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19882:23:23","value":{"kind":"number","nodeType":"YulLiteral","src":"19901:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"19886:11:23","type":""}]},{"nodeType":"YulAssignment","src":"19914:24:23","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"19927:11:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19914:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"19984:656:23","statements":[{"nodeType":"YulVariableDeclaration","src":"19998:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20017:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20029:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20025:3:23"},"nodeType":"YulFunctionCall","src":"20025:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20013:3:23"},"nodeType":"YulFunctionCall","src":"20013:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"20002:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20046:49:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20090:4:23"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"20060:29:23"},"nodeType":"YulFunctionCall","src":"20060:35:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"20050:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20108:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"20117:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20112:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"20195:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20220:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20238:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20243:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20234:3:23"},"nodeType":"YulFunctionCall","src":"20234:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20228:5:23"},"nodeType":"YulFunctionCall","src":"20228:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20213:6:23"},"nodeType":"YulFunctionCall","src":"20213:42:23"},"nodeType":"YulExpressionStatement","src":"20213:42:23"},{"nodeType":"YulAssignment","src":"20272:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20286:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"20294:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20282:3:23"},"nodeType":"YulFunctionCall","src":"20282:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20272:6:23"}]},{"nodeType":"YulAssignment","src":"20313:40:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20330:9:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"20341:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20326:3:23"},"nodeType":"YulFunctionCall","src":"20326:27:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20313:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20142:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"20145:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20139:2:23"},"nodeType":"YulFunctionCall","src":"20139:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20154:28:23","statements":[{"nodeType":"YulAssignment","src":"20156:24:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20165:1:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"20168:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20161:3:23"},"nodeType":"YulFunctionCall","src":"20161:19:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20156:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"20135:3:23","statements":[]},"src":"20131:236:23"},{"body":{"nodeType":"YulBlock","src":"20415:166:23","statements":[{"nodeType":"YulVariableDeclaration","src":"20433:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20460:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20465:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20456:3:23"},"nodeType":"YulFunctionCall","src":"20456:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20450:5:23"},"nodeType":"YulFunctionCall","src":"20450:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"20437:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20500:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"20512:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20539:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"20542:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20535:3:23"},"nodeType":"YulFunctionCall","src":"20535:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"20551:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20531:3:23"},"nodeType":"YulFunctionCall","src":"20531:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20561:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20557:3:23"},"nodeType":"YulFunctionCall","src":"20557:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20527:3:23"},"nodeType":"YulFunctionCall","src":"20527:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20523:3:23"},"nodeType":"YulFunctionCall","src":"20523:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20508:3:23"},"nodeType":"YulFunctionCall","src":"20508:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20493:6:23"},"nodeType":"YulFunctionCall","src":"20493:74:23"},"nodeType":"YulExpressionStatement","src":"20493:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"20386:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"20395:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20383:2:23"},"nodeType":"YulFunctionCall","src":"20383:19:23"},"nodeType":"YulIf","src":"20380:201:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20601:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20615:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"20618:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20611:3:23"},"nodeType":"YulFunctionCall","src":"20611:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"20627:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20607:3:23"},"nodeType":"YulFunctionCall","src":"20607:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20594:6:23"},"nodeType":"YulFunctionCall","src":"20594:36:23"},"nodeType":"YulExpressionStatement","src":"20594:36:23"}]},"nodeType":"YulCase","src":"19977:663:23","value":{"kind":"number","nodeType":"YulLiteral","src":"19982:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"20657:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"20671:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"20684:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20675:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"20720:67:23","statements":[{"nodeType":"YulAssignment","src":"20738:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20757:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20762:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20753:3:23"},"nodeType":"YulFunctionCall","src":"20753:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20747:5:23"},"nodeType":"YulFunctionCall","src":"20747:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20738:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"20701:6:23"},"nodeType":"YulIf","src":"20698:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20807:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20866:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"20873:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"20813:52:23"},"nodeType":"YulFunctionCall","src":"20813:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20800:6:23"},"nodeType":"YulFunctionCall","src":"20800:81:23"},"nodeType":"YulExpressionStatement","src":"20800:81:23"}]},"nodeType":"YulCase","src":"20649:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19957:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"19965:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19954:2:23"},"nodeType":"YulFunctionCall","src":"19954:14:23"},"nodeType":"YulSwitch","src":"19947:944:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19626:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"19632:3:23","type":""}],"src":"19545:1352:23"},{"body":{"nodeType":"YulBlock","src":"20983:170:23","statements":[{"body":{"nodeType":"YulBlock","src":"21029:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21038:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21041:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21031:6:23"},"nodeType":"YulFunctionCall","src":"21031:12:23"},"nodeType":"YulExpressionStatement","src":"21031:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21004:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"21013:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21000:3:23"},"nodeType":"YulFunctionCall","src":"21000:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"21025:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20996:3:23"},"nodeType":"YulFunctionCall","src":"20996:32:23"},"nodeType":"YulIf","src":"20993:52:23"},{"nodeType":"YulVariableDeclaration","src":"21054:29:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21073:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21067:5:23"},"nodeType":"YulFunctionCall","src":"21067:16:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"21058:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21117:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"21092:24:23"},"nodeType":"YulFunctionCall","src":"21092:31:23"},"nodeType":"YulExpressionStatement","src":"21092:31:23"},{"nodeType":"YulAssignment","src":"21132:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"21142:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21132:6:23"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20949:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20960:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20972:6:23","type":""}],"src":"20902:251:23"},{"body":{"nodeType":"YulBlock","src":"21332:172:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21349:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21360:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21342:6:23"},"nodeType":"YulFunctionCall","src":"21342:21:23"},"nodeType":"YulExpressionStatement","src":"21342:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21383:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21394:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21379:3:23"},"nodeType":"YulFunctionCall","src":"21379:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"21399:2:23","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21372:6:23"},"nodeType":"YulFunctionCall","src":"21372:30:23"},"nodeType":"YulExpressionStatement","src":"21372:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21422:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21433:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21418:3:23"},"nodeType":"YulFunctionCall","src":"21418:18:23"},{"hexValue":"4856616c75653a206e6f742070756e6b206f776e6572","kind":"string","nodeType":"YulLiteral","src":"21438:24:23","type":"","value":"HValue: not punk owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21411:6:23"},"nodeType":"YulFunctionCall","src":"21411:52:23"},"nodeType":"YulExpressionStatement","src":"21411:52:23"},{"nodeType":"YulAssignment","src":"21472:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21484:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21495:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21480:3:23"},"nodeType":"YulFunctionCall","src":"21480:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21472:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_716d8e8655960bf2154053439ce31facdc46548c3a16249c94ec73f924c8ba9c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21309:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21323:4:23","type":""}],"src":"21158:346:23"},{"body":{"nodeType":"YulBlock","src":"21683:172:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21700:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21711:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21693:6:23"},"nodeType":"YulFunctionCall","src":"21693:21:23"},"nodeType":"YulExpressionStatement","src":"21693:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21734:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21745:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21730:3:23"},"nodeType":"YulFunctionCall","src":"21730:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"21750:2:23","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21723:6:23"},"nodeType":"YulFunctionCall","src":"21723:30:23"},"nodeType":"YulExpressionStatement","src":"21723:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21773:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21784:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21769:3:23"},"nodeType":"YulFunctionCall","src":"21769:18:23"},{"hexValue":"4856616c75653a206e6f74206c75636b792070756e6b","kind":"string","nodeType":"YulLiteral","src":"21789:24:23","type":"","value":"HValue: not lucky punk"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21762:6:23"},"nodeType":"YulFunctionCall","src":"21762:52:23"},"nodeType":"YulExpressionStatement","src":"21762:52:23"},{"nodeType":"YulAssignment","src":"21823:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21835:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21846:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21831:3:23"},"nodeType":"YulFunctionCall","src":"21831:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21823:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_aec0b404f50382a0e834a5f06508507c26b41f9bce791ef403d53b5948e659cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21660:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21674:4:23","type":""}],"src":"21509:346:23"},{"body":{"nodeType":"YulBlock","src":"22017:218:23","statements":[{"nodeType":"YulAssignment","src":"22027:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22039:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22050:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22035:3:23"},"nodeType":"YulFunctionCall","src":"22035:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22027:4:23"}]},{"nodeType":"YulVariableDeclaration","src":"22062:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22080:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"22085:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22076:3:23"},"nodeType":"YulFunctionCall","src":"22076:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"22089:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22072:3:23"},"nodeType":"YulFunctionCall","src":"22072:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22066:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22107:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22122:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"22130:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22118:3:23"},"nodeType":"YulFunctionCall","src":"22118:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22100:6:23"},"nodeType":"YulFunctionCall","src":"22100:34:23"},"nodeType":"YulExpressionStatement","src":"22100:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22154:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22165:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22150:3:23"},"nodeType":"YulFunctionCall","src":"22150:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22174:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"22182:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22170:3:23"},"nodeType":"YulFunctionCall","src":"22170:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22143:6:23"},"nodeType":"YulFunctionCall","src":"22143:43:23"},"nodeType":"YulExpressionStatement","src":"22143:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22206:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22217:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22202:3:23"},"nodeType":"YulFunctionCall","src":"22202:18:23"},{"name":"value2","nodeType":"YulIdentifier","src":"22222:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22195:6:23"},"nodeType":"YulFunctionCall","src":"22195:34:23"},"nodeType":"YulExpressionStatement","src":"22195:34:23"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21970:9:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21981:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21989:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21997:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22008:4:23","type":""}],"src":"21860:375:23"},{"body":{"nodeType":"YulBlock","src":"22289:79:23","statements":[{"nodeType":"YulAssignment","src":"22299:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22311:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"22314:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22307:3:23"},"nodeType":"YulFunctionCall","src":"22307:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"22299:4:23"}]},{"body":{"nodeType":"YulBlock","src":"22340:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22342:16:23"},"nodeType":"YulFunctionCall","src":"22342:18:23"},"nodeType":"YulExpressionStatement","src":"22342:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"22331:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"22337:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22328:2:23"},"nodeType":"YulFunctionCall","src":"22328:11:23"},"nodeType":"YulIf","src":"22325:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22271:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"22274:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"22280:4:23","type":""}],"src":"22240:128:23"},{"body":{"nodeType":"YulBlock","src":"22547:236:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22564:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22575:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22557:6:23"},"nodeType":"YulFunctionCall","src":"22557:21:23"},"nodeType":"YulExpressionStatement","src":"22557:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22598:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22609:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22594:3:23"},"nodeType":"YulFunctionCall","src":"22594:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"22614:2:23","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22587:6:23"},"nodeType":"YulFunctionCall","src":"22587:30:23"},"nodeType":"YulExpressionStatement","src":"22587:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22637:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22648:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22633:3:23"},"nodeType":"YulFunctionCall","src":"22633:18:23"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"22653:34:23","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22626:6:23"},"nodeType":"YulFunctionCall","src":"22626:62:23"},"nodeType":"YulExpressionStatement","src":"22626:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22708:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22719:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22704:3:23"},"nodeType":"YulFunctionCall","src":"22704:18:23"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"22724:16:23","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22697:6:23"},"nodeType":"YulFunctionCall","src":"22697:44:23"},"nodeType":"YulExpressionStatement","src":"22697:44:23"},{"nodeType":"YulAssignment","src":"22750:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22762:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22773:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22758:3:23"},"nodeType":"YulFunctionCall","src":"22758:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22750:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22524:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22538:4:23","type":""}],"src":"22373:410:23"},{"body":{"nodeType":"YulBlock","src":"22895:87:23","statements":[{"nodeType":"YulAssignment","src":"22905:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22917:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22928:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22913:3:23"},"nodeType":"YulFunctionCall","src":"22913:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22905:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22947:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22962:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"22970:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22958:3:23"},"nodeType":"YulFunctionCall","src":"22958:17:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22940:6:23"},"nodeType":"YulFunctionCall","src":"22940:36:23"},"nodeType":"YulExpressionStatement","src":"22940:36:23"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22864:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22875:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22886:4:23","type":""}],"src":"22788:194:23"},{"body":{"nodeType":"YulBlock","src":"23161:170:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23178:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23189:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23171:6:23"},"nodeType":"YulFunctionCall","src":"23171:21:23"},"nodeType":"YulExpressionStatement","src":"23171:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23212:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23223:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23208:3:23"},"nodeType":"YulFunctionCall","src":"23208:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"23228:2:23","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23201:6:23"},"nodeType":"YulFunctionCall","src":"23201:30:23"},"nodeType":"YulExpressionStatement","src":"23201:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23251:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23262:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23247:3:23"},"nodeType":"YulFunctionCall","src":"23247:18:23"},{"hexValue":"4856616c75653a206e6f74206e65772079656172","kind":"string","nodeType":"YulLiteral","src":"23267:22:23","type":"","value":"HValue: not new year"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23240:6:23"},"nodeType":"YulFunctionCall","src":"23240:50:23"},"nodeType":"YulExpressionStatement","src":"23240:50:23"},{"nodeType":"YulAssignment","src":"23299:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23311:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23322:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23307:3:23"},"nodeType":"YulFunctionCall","src":"23307:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23299:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_a102db2d7672fdad004a63c326088de6266268bad23ec664881a9c9d6d98a5b0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23138:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23152:4:23","type":""}],"src":"22987:344:23"},{"body":{"nodeType":"YulBlock","src":"23382:171:23","statements":[{"body":{"nodeType":"YulBlock","src":"23413:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23434:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23441:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"23446:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23437:3:23"},"nodeType":"YulFunctionCall","src":"23437:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23427:6:23"},"nodeType":"YulFunctionCall","src":"23427:31:23"},"nodeType":"YulExpressionStatement","src":"23427:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23478:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23481:4:23","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23471:6:23"},"nodeType":"YulFunctionCall","src":"23471:15:23"},"nodeType":"YulExpressionStatement","src":"23471:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23506:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23509:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23499:6:23"},"nodeType":"YulFunctionCall","src":"23499:15:23"},"nodeType":"YulExpressionStatement","src":"23499:15:23"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23402:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23395:6:23"},"nodeType":"YulFunctionCall","src":"23395:9:23"},"nodeType":"YulIf","src":"23392:132:23"},{"nodeType":"YulAssignment","src":"23533:14:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23542:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"23545:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23538:3:23"},"nodeType":"YulFunctionCall","src":"23538:9:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"23533:1:23"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23367:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"23370:1:23","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"23376:1:23","type":""}],"src":"23336:217:23"},{"body":{"nodeType":"YulBlock","src":"23610:116:23","statements":[{"nodeType":"YulAssignment","src":"23620:20:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23635:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"23638:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23631:3:23"},"nodeType":"YulFunctionCall","src":"23631:9:23"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"23620:7:23"}]},{"body":{"nodeType":"YulBlock","src":"23698:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23700:16:23"},"nodeType":"YulFunctionCall","src":"23700:18:23"},"nodeType":"YulExpressionStatement","src":"23700:18:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23669:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23662:6:23"},"nodeType":"YulFunctionCall","src":"23662:9:23"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23676:1:23"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"23683:7:23"},{"name":"x","nodeType":"YulIdentifier","src":"23692:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23679:3:23"},"nodeType":"YulFunctionCall","src":"23679:15:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23673:2:23"},"nodeType":"YulFunctionCall","src":"23673:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"23659:2:23"},"nodeType":"YulFunctionCall","src":"23659:37:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23652:6:23"},"nodeType":"YulFunctionCall","src":"23652:45:23"},"nodeType":"YulIf","src":"23649:71:23"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23589:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"23592:1:23","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"23598:7:23","type":""}],"src":"23558:168:23"},{"body":{"nodeType":"YulBlock","src":"23777:102:23","statements":[{"nodeType":"YulAssignment","src":"23787:38:23","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23802:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"23805:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23798:3:23"},"nodeType":"YulFunctionCall","src":"23798:12:23"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23816:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"23819:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23812:3:23"},"nodeType":"YulFunctionCall","src":"23812:12:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23794:3:23"},"nodeType":"YulFunctionCall","src":"23794:31:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23787:3:23"}]},{"body":{"nodeType":"YulBlock","src":"23851:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23853:16:23"},"nodeType":"YulFunctionCall","src":"23853:18:23"},"nodeType":"YulExpressionStatement","src":"23853:18:23"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"23840:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"23845:4:23","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23837:2:23"},"nodeType":"YulFunctionCall","src":"23837:13:23"},"nodeType":"YulIf","src":"23834:39:23"}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23760:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"23763:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23769:3:23","type":""}],"src":"23731:148:23"},{"body":{"nodeType":"YulBlock","src":"24058:225:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24075:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24086:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24068:6:23"},"nodeType":"YulFunctionCall","src":"24068:21:23"},"nodeType":"YulExpressionStatement","src":"24068:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24109:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24120:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24105:3:23"},"nodeType":"YulFunctionCall","src":"24105:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"24125:2:23","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24098:6:23"},"nodeType":"YulFunctionCall","src":"24098:30:23"},"nodeType":"YulExpressionStatement","src":"24098:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24148:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24159:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24144:3:23"},"nodeType":"YulFunctionCall","src":"24144:18:23"},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"24164:34:23","type":"","value":"ERC1155: burn from the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24137:6:23"},"nodeType":"YulFunctionCall","src":"24137:62:23"},"nodeType":"YulExpressionStatement","src":"24137:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24219:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24230:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24215:3:23"},"nodeType":"YulFunctionCall","src":"24215:18:23"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"24235:5:23","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24208:6:23"},"nodeType":"YulFunctionCall","src":"24208:33:23"},"nodeType":"YulExpressionStatement","src":"24208:33:23"},{"nodeType":"YulAssignment","src":"24250:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24262:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24273:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24258:3:23"},"nodeType":"YulFunctionCall","src":"24258:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24250:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24035:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24049:4:23","type":""}],"src":"23884:399:23"},{"body":{"nodeType":"YulBlock","src":"24462:230:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24479:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24490:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24472:6:23"},"nodeType":"YulFunctionCall","src":"24472:21:23"},"nodeType":"YulExpressionStatement","src":"24472:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24513:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24524:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24509:3:23"},"nodeType":"YulFunctionCall","src":"24509:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"24529:2:23","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24502:6:23"},"nodeType":"YulFunctionCall","src":"24502:30:23"},"nodeType":"YulExpressionStatement","src":"24502:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24552:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24563:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24548:3:23"},"nodeType":"YulFunctionCall","src":"24548:18:23"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"24568:34:23","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24541:6:23"},"nodeType":"YulFunctionCall","src":"24541:62:23"},"nodeType":"YulExpressionStatement","src":"24541:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24623:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24634:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24619:3:23"},"nodeType":"YulFunctionCall","src":"24619:18:23"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"24639:10:23","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24612:6:23"},"nodeType":"YulFunctionCall","src":"24612:38:23"},"nodeType":"YulExpressionStatement","src":"24612:38:23"},{"nodeType":"YulAssignment","src":"24659:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24671:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24682:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24667:3:23"},"nodeType":"YulFunctionCall","src":"24667:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24659:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24439:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24453:4:23","type":""}],"src":"24288:404:23"},{"body":{"nodeType":"YulBlock","src":"24871:226:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24888:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24899:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24881:6:23"},"nodeType":"YulFunctionCall","src":"24881:21:23"},"nodeType":"YulExpressionStatement","src":"24881:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24922:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24933:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24918:3:23"},"nodeType":"YulFunctionCall","src":"24918:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"24938:2:23","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24911:6:23"},"nodeType":"YulFunctionCall","src":"24911:30:23"},"nodeType":"YulExpressionStatement","src":"24911:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24961:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24972:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24957:3:23"},"nodeType":"YulFunctionCall","src":"24957:18:23"},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c","kind":"string","nodeType":"YulLiteral","src":"24977:34:23","type":"","value":"ERC1155: burn amount exceeds bal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24950:6:23"},"nodeType":"YulFunctionCall","src":"24950:62:23"},"nodeType":"YulExpressionStatement","src":"24950:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25032:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25043:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25028:3:23"},"nodeType":"YulFunctionCall","src":"25028:18:23"},{"hexValue":"616e6365","kind":"string","nodeType":"YulLiteral","src":"25048:6:23","type":"","value":"ance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25021:6:23"},"nodeType":"YulFunctionCall","src":"25021:34:23"},"nodeType":"YulExpressionStatement","src":"25021:34:23"},{"nodeType":"YulAssignment","src":"25064:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25076:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25087:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25072:3:23"},"nodeType":"YulFunctionCall","src":"25072:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25064:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24848:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24862:4:23","type":""}],"src":"24697:400:23"},{"body":{"nodeType":"YulBlock","src":"25331:236:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25348:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25359:2:23","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25341:6:23"},"nodeType":"YulFunctionCall","src":"25341:21:23"},"nodeType":"YulExpressionStatement","src":"25341:21:23"},{"nodeType":"YulVariableDeclaration","src":"25371:70:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25414:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25426:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25437:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25422:3:23"},"nodeType":"YulFunctionCall","src":"25422:18:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"25385:28:23"},"nodeType":"YulFunctionCall","src":"25385:56:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"25375:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25461:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25472:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25457:3:23"},"nodeType":"YulFunctionCall","src":"25457:18:23"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"25481:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"25489:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25477:3:23"},"nodeType":"YulFunctionCall","src":"25477:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25450:6:23"},"nodeType":"YulFunctionCall","src":"25450:50:23"},"nodeType":"YulExpressionStatement","src":"25450:50:23"},{"nodeType":"YulAssignment","src":"25509:52:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25546:6:23"},{"name":"tail_1","nodeType":"YulIdentifier","src":"25554:6:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"25517:28:23"},"nodeType":"YulFunctionCall","src":"25517:44:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25509:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25292:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25303:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25311:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25322:4:23","type":""}],"src":"25102:465:23"},{"body":{"nodeType":"YulBlock","src":"25746:227:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25763:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25774:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25756:6:23"},"nodeType":"YulFunctionCall","src":"25756:21:23"},"nodeType":"YulExpressionStatement","src":"25756:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25797:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25808:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25793:3:23"},"nodeType":"YulFunctionCall","src":"25793:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"25813:2:23","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25786:6:23"},"nodeType":"YulFunctionCall","src":"25786:30:23"},"nodeType":"YulExpressionStatement","src":"25786:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25836:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25847:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25832:3:23"},"nodeType":"YulFunctionCall","src":"25832:18:23"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"25852:34:23","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25825:6:23"},"nodeType":"YulFunctionCall","src":"25825:62:23"},"nodeType":"YulExpressionStatement","src":"25825:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25907:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25918:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25903:3:23"},"nodeType":"YulFunctionCall","src":"25903:18:23"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"25923:7:23","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25896:6:23"},"nodeType":"YulFunctionCall","src":"25896:35:23"},"nodeType":"YulExpressionStatement","src":"25896:35:23"},{"nodeType":"YulAssignment","src":"25940:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25952:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25963:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25948:3:23"},"nodeType":"YulFunctionCall","src":"25948:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25940:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25723:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25737:4:23","type":""}],"src":"25572:401:23"},{"body":{"nodeType":"YulBlock","src":"26152:232:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26169:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26180:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26162:6:23"},"nodeType":"YulFunctionCall","src":"26162:21:23"},"nodeType":"YulExpressionStatement","src":"26162:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26203:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26214:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26199:3:23"},"nodeType":"YulFunctionCall","src":"26199:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"26219:2:23","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26192:6:23"},"nodeType":"YulFunctionCall","src":"26192:30:23"},"nodeType":"YulExpressionStatement","src":"26192:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26242:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26253:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26238:3:23"},"nodeType":"YulFunctionCall","src":"26238:18:23"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"26258:34:23","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26231:6:23"},"nodeType":"YulFunctionCall","src":"26231:62:23"},"nodeType":"YulExpressionStatement","src":"26231:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26313:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26324:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26309:3:23"},"nodeType":"YulFunctionCall","src":"26309:18:23"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"26329:12:23","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26302:6:23"},"nodeType":"YulFunctionCall","src":"26302:40:23"},"nodeType":"YulExpressionStatement","src":"26302:40:23"},{"nodeType":"YulAssignment","src":"26351:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26363:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26374:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26359:3:23"},"nodeType":"YulFunctionCall","src":"26359:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26351:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26129:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26143:4:23","type":""}],"src":"25978:406:23"},{"body":{"nodeType":"YulBlock","src":"26563:223:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26580:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26591:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26573:6:23"},"nodeType":"YulFunctionCall","src":"26573:21:23"},"nodeType":"YulExpressionStatement","src":"26573:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26614:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26625:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26610:3:23"},"nodeType":"YulFunctionCall","src":"26610:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"26630:2:23","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26603:6:23"},"nodeType":"YulFunctionCall","src":"26603:30:23"},"nodeType":"YulExpressionStatement","src":"26603:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26653:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26664:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26649:3:23"},"nodeType":"YulFunctionCall","src":"26649:18:23"},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"26669:34:23","type":"","value":"ERC1155: mint to the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26642:6:23"},"nodeType":"YulFunctionCall","src":"26642:62:23"},"nodeType":"YulExpressionStatement","src":"26642:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26724:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26735:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26720:3:23"},"nodeType":"YulFunctionCall","src":"26720:18:23"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"26740:3:23","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26713:6:23"},"nodeType":"YulFunctionCall","src":"26713:31:23"},"nodeType":"YulExpressionStatement","src":"26713:31:23"},{"nodeType":"YulAssignment","src":"26753:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26765:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26776:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26761:3:23"},"nodeType":"YulFunctionCall","src":"26761:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26753:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26540:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26554:4:23","type":""}],"src":"26389:397:23"},{"body":{"nodeType":"YulBlock","src":"26920:119:23","statements":[{"nodeType":"YulAssignment","src":"26930:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26942:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26953:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26938:3:23"},"nodeType":"YulFunctionCall","src":"26938:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26930:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26972:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"26983:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26965:6:23"},"nodeType":"YulFunctionCall","src":"26965:25:23"},"nodeType":"YulExpressionStatement","src":"26965:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27010:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27021:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27006:3:23"},"nodeType":"YulFunctionCall","src":"27006:18:23"},{"name":"value1","nodeType":"YulIdentifier","src":"27026:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26999:6:23"},"nodeType":"YulFunctionCall","src":"26999:34:23"},"nodeType":"YulExpressionStatement","src":"26999:34:23"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26881:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26892:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26900:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26911:4:23","type":""}],"src":"26791:248:23"},{"body":{"nodeType":"YulBlock","src":"27218:231:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27235:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27246:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27228:6:23"},"nodeType":"YulFunctionCall","src":"27228:21:23"},"nodeType":"YulExpressionStatement","src":"27228:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27269:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27280:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27265:3:23"},"nodeType":"YulFunctionCall","src":"27265:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"27285:2:23","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27258:6:23"},"nodeType":"YulFunctionCall","src":"27258:30:23"},"nodeType":"YulExpressionStatement","src":"27258:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27308:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27319:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27304:3:23"},"nodeType":"YulFunctionCall","src":"27304:18:23"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"27324:34:23","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27297:6:23"},"nodeType":"YulFunctionCall","src":"27297:62:23"},"nodeType":"YulExpressionStatement","src":"27297:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27379:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27390:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27375:3:23"},"nodeType":"YulFunctionCall","src":"27375:18:23"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"27395:11:23","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27368:6:23"},"nodeType":"YulFunctionCall","src":"27368:39:23"},"nodeType":"YulExpressionStatement","src":"27368:39:23"},{"nodeType":"YulAssignment","src":"27416:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27428:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27439:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27424:3:23"},"nodeType":"YulFunctionCall","src":"27424:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27416:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27195:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27209:4:23","type":""}],"src":"27044:405:23"},{"body":{"nodeType":"YulBlock","src":"27628:233:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27645:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27656:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27638:6:23"},"nodeType":"YulFunctionCall","src":"27638:21:23"},"nodeType":"YulExpressionStatement","src":"27638:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27679:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27690:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27675:3:23"},"nodeType":"YulFunctionCall","src":"27675:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"27695:2:23","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27668:6:23"},"nodeType":"YulFunctionCall","src":"27668:30:23"},"nodeType":"YulExpressionStatement","src":"27668:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27718:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27729:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27714:3:23"},"nodeType":"YulFunctionCall","src":"27714:18:23"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"27734:34:23","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27707:6:23"},"nodeType":"YulFunctionCall","src":"27707:62:23"},"nodeType":"YulExpressionStatement","src":"27707:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27789:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27800:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27785:3:23"},"nodeType":"YulFunctionCall","src":"27785:18:23"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"27805:13:23","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27778:6:23"},"nodeType":"YulFunctionCall","src":"27778:41:23"},"nodeType":"YulExpressionStatement","src":"27778:41:23"},{"nodeType":"YulAssignment","src":"27828:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27840:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27851:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27836:3:23"},"nodeType":"YulFunctionCall","src":"27836:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27828:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27605:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27619:4:23","type":""}],"src":"27454:407:23"},{"body":{"nodeType":"YulBlock","src":"28040:230:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28057:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28068:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28050:6:23"},"nodeType":"YulFunctionCall","src":"28050:21:23"},"nodeType":"YulExpressionStatement","src":"28050:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28091:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28102:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28087:3:23"},"nodeType":"YulFunctionCall","src":"28087:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"28107:2:23","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28080:6:23"},"nodeType":"YulFunctionCall","src":"28080:30:23"},"nodeType":"YulExpressionStatement","src":"28080:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28130:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28141:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28126:3:23"},"nodeType":"YulFunctionCall","src":"28126:18:23"},{"hexValue":"455243313135353a206275726e20616d6f756e74206578636565647320746f74","kind":"string","nodeType":"YulLiteral","src":"28146:34:23","type":"","value":"ERC1155: burn amount exceeds tot"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28119:6:23"},"nodeType":"YulFunctionCall","src":"28119:62:23"},"nodeType":"YulExpressionStatement","src":"28119:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28201:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28212:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28197:3:23"},"nodeType":"YulFunctionCall","src":"28197:18:23"},{"hexValue":"616c537570706c79","kind":"string","nodeType":"YulLiteral","src":"28217:10:23","type":"","value":"alSupply"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28190:6:23"},"nodeType":"YulFunctionCall","src":"28190:38:23"},"nodeType":"YulExpressionStatement","src":"28190:38:23"},{"nodeType":"YulAssignment","src":"28237:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28249:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28260:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28245:3:23"},"nodeType":"YulFunctionCall","src":"28245:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28237:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28017:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28031:4:23","type":""}],"src":"27866:404:23"},{"body":{"nodeType":"YulBlock","src":"28606:496:23","statements":[{"nodeType":"YulVariableDeclaration","src":"28616:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28634:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"28639:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28630:3:23"},"nodeType":"YulFunctionCall","src":"28630:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"28643:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28626:3:23"},"nodeType":"YulFunctionCall","src":"28626:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"28620:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28661:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28676:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"28684:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28672:3:23"},"nodeType":"YulFunctionCall","src":"28672:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28654:6:23"},"nodeType":"YulFunctionCall","src":"28654:34:23"},"nodeType":"YulExpressionStatement","src":"28654:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28708:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28719:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28704:3:23"},"nodeType":"YulFunctionCall","src":"28704:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28728:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"28736:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28724:3:23"},"nodeType":"YulFunctionCall","src":"28724:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28697:6:23"},"nodeType":"YulFunctionCall","src":"28697:43:23"},"nodeType":"YulExpressionStatement","src":"28697:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28760:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28771:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28756:3:23"},"nodeType":"YulFunctionCall","src":"28756:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"28776:3:23","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28749:6:23"},"nodeType":"YulFunctionCall","src":"28749:31:23"},"nodeType":"YulExpressionStatement","src":"28749:31:23"},{"nodeType":"YulVariableDeclaration","src":"28789:71:23","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28832:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28844:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28855:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28840:3:23"},"nodeType":"YulFunctionCall","src":"28840:19:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"28803:28:23"},"nodeType":"YulFunctionCall","src":"28803:57:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"28793:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28880:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28891:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28876:3:23"},"nodeType":"YulFunctionCall","src":"28876:18:23"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"28900:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"28908:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28896:3:23"},"nodeType":"YulFunctionCall","src":"28896:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28869:6:23"},"nodeType":"YulFunctionCall","src":"28869:50:23"},"nodeType":"YulExpressionStatement","src":"28869:50:23"},{"nodeType":"YulVariableDeclaration","src":"28928:58:23","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"28971:6:23"},{"name":"tail_1","nodeType":"YulIdentifier","src":"28979:6:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"28942:28:23"},"nodeType":"YulFunctionCall","src":"28942:44:23"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"28932:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29006:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"29017:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29002:3:23"},"nodeType":"YulFunctionCall","src":"29002:19:23"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"29027:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"29035:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29023:3:23"},"nodeType":"YulFunctionCall","src":"29023:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28995:6:23"},"nodeType":"YulFunctionCall","src":"28995:51:23"},"nodeType":"YulExpressionStatement","src":"28995:51:23"},{"nodeType":"YulAssignment","src":"29055:41:23","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"29081:6:23"},{"name":"tail_2","nodeType":"YulIdentifier","src":"29089:6:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"29063:17:23"},"nodeType":"YulFunctionCall","src":"29063:33:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29055:4:23"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28543:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"28554:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28562:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28570:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28578:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28586:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28597:4:23","type":""}],"src":"28275:827:23"},{"body":{"nodeType":"YulBlock","src":"29187:169:23","statements":[{"body":{"nodeType":"YulBlock","src":"29233:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29242:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29245:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29235:6:23"},"nodeType":"YulFunctionCall","src":"29235:12:23"},"nodeType":"YulExpressionStatement","src":"29235:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"29208:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"29217:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29204:3:23"},"nodeType":"YulFunctionCall","src":"29204:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"29229:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"29200:3:23"},"nodeType":"YulFunctionCall","src":"29200:32:23"},"nodeType":"YulIf","src":"29197:52:23"},{"nodeType":"YulVariableDeclaration","src":"29258:29:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29277:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29271:5:23"},"nodeType":"YulFunctionCall","src":"29271:16:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"29262:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29320:5:23"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"29296:23:23"},"nodeType":"YulFunctionCall","src":"29296:30:23"},"nodeType":"YulExpressionStatement","src":"29296:30:23"},{"nodeType":"YulAssignment","src":"29335:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"29345:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"29335:6:23"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29153:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"29164:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"29176:6:23","type":""}],"src":"29107:249:23"},{"body":{"nodeType":"YulBlock","src":"29404:136:23","statements":[{"body":{"nodeType":"YulBlock","src":"29449:85:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29478:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29481:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29484:1:23","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"29463:14:23"},"nodeType":"YulFunctionCall","src":"29463:23:23"},"nodeType":"YulExpressionStatement","src":"29463:23:23"},{"nodeType":"YulAssignment","src":"29499:25:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29510:3:23","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29521:1:23","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29515:5:23"},"nodeType":"YulFunctionCall","src":"29515:8:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"29506:3:23"},"nodeType":"YulFunctionCall","src":"29506:18:23"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"29499:3:23"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29420:14:23"},"nodeType":"YulFunctionCall","src":"29420:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"29438:1:23","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29417:2:23"},"nodeType":"YulFunctionCall","src":"29417:23:23"},"nodeType":"YulIf","src":"29414:120:23"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"29396:3:23","type":""}],"src":"29361:179:23"},{"body":{"nodeType":"YulBlock","src":"29592:624:23","statements":[{"body":{"nodeType":"YulBlock","src":"29632:9:23","statements":[{"nodeType":"YulLeave","src":"29634:5:23"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29608:14:23"},"nodeType":"YulFunctionCall","src":"29608:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"29626:4:23","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29605:2:23"},"nodeType":"YulFunctionCall","src":"29605:26:23"},"nodeType":"YulIf","src":"29602:39:23"},{"nodeType":"YulVariableDeclaration","src":"29650:21:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29668:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29662:5:23"},"nodeType":"YulFunctionCall","src":"29662:9:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"29654:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29680:16:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29694:1:23","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29690:3:23"},"nodeType":"YulFunctionCall","src":"29690:6:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"29684:2:23","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29720:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"29726:1:23","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29733:14:23"},"nodeType":"YulFunctionCall","src":"29733:16:23"},{"name":"_1","nodeType":"YulIdentifier","src":"29751:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29729:3:23"},"nodeType":"YulFunctionCall","src":"29729:25:23"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"29705:14:23"},"nodeType":"YulFunctionCall","src":"29705:50:23"},"nodeType":"YulExpressionStatement","src":"29705:50:23"},{"nodeType":"YulVariableDeclaration","src":"29764:25:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29784:4:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29778:5:23"},"nodeType":"YulFunctionCall","src":"29778:11:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29768:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29798:26:23","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"29808:14:23"},"nodeType":"YulFunctionCall","src":"29808:16:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"29802:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29833:28:23","value":{"kind":"number","nodeType":"YulLiteral","src":"29843:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"29837:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"29919:9:23","statements":[{"nodeType":"YulLeave","src":"29921:5:23"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29879:6:23"},{"name":"_3","nodeType":"YulIdentifier","src":"29887:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29876:2:23"},"nodeType":"YulFunctionCall","src":"29876:14:23"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29899:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"29907:4:23","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29895:3:23"},"nodeType":"YulFunctionCall","src":"29895:17:23"},{"name":"_2","nodeType":"YulIdentifier","src":"29914:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29892:2:23"},"nodeType":"YulFunctionCall","src":"29892:25:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"29873:2:23"},"nodeType":"YulFunctionCall","src":"29873:45:23"},"nodeType":"YulIf","src":"29870:58:23"},{"nodeType":"YulVariableDeclaration","src":"29937:28:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29952:4:23"},{"name":"offset","nodeType":"YulIdentifier","src":"29958:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29948:3:23"},"nodeType":"YulFunctionCall","src":"29948:17:23"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"29941:3:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29974:24:23","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"29994:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29988:5:23"},"nodeType":"YulFunctionCall","src":"29988:10:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29978:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"30025:9:23","statements":[{"nodeType":"YulLeave","src":"30027:5:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30013:6:23"},{"name":"_3","nodeType":"YulIdentifier","src":"30021:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30010:2:23"},"nodeType":"YulFunctionCall","src":"30010:14:23"},"nodeType":"YulIf","src":"30007:27:23"},{"body":{"nodeType":"YulBlock","src":"30116:9:23","statements":[{"nodeType":"YulLeave","src":"30118:5:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"30057:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"30062:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30053:3:23"},"nodeType":"YulFunctionCall","src":"30053:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"30071:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30049:3:23"},"nodeType":"YulFunctionCall","src":"30049:27:23"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30086:4:23"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"30092:14:23"},"nodeType":"YulFunctionCall","src":"30092:16:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30082:3:23"},"nodeType":"YulFunctionCall","src":"30082:27:23"},{"name":"_1","nodeType":"YulIdentifier","src":"30111:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30078:3:23"},"nodeType":"YulFunctionCall","src":"30078:36:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30046:2:23"},"nodeType":"YulFunctionCall","src":"30046:69:23"},"nodeType":"YulIf","src":"30043:82:23"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30154:4:23"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30168:6:23"},{"name":"length","nodeType":"YulIdentifier","src":"30176:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30164:3:23"},"nodeType":"YulFunctionCall","src":"30164:19:23"},{"kind":"number","nodeType":"YulLiteral","src":"30185:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30160:3:23"},"nodeType":"YulFunctionCall","src":"30160:30:23"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"30134:19:23"},"nodeType":"YulFunctionCall","src":"30134:57:23"},"nodeType":"YulExpressionStatement","src":"30134:57:23"},{"nodeType":"YulAssignment","src":"30200:10:23","value":{"name":"msg","nodeType":"YulIdentifier","src":"30207:3:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30200:3:23"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29584:3:23","type":""}],"src":"29545:671:23"},{"body":{"nodeType":"YulBlock","src":"30395:242:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30412:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30423:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30405:6:23"},"nodeType":"YulFunctionCall","src":"30405:21:23"},"nodeType":"YulExpressionStatement","src":"30405:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30446:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30457:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30442:3:23"},"nodeType":"YulFunctionCall","src":"30442:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"30462:2:23","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30435:6:23"},"nodeType":"YulFunctionCall","src":"30435:30:23"},"nodeType":"YulExpressionStatement","src":"30435:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30485:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30496:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30481:3:23"},"nodeType":"YulFunctionCall","src":"30481:18:23"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535","kind":"string","nodeType":"YulLiteral","src":"30501:34:23","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30474:6:23"},"nodeType":"YulFunctionCall","src":"30474:62:23"},"nodeType":"YulExpressionStatement","src":"30474:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30556:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30567:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30552:3:23"},"nodeType":"YulFunctionCall","src":"30552:18:23"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"30572:22:23","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30545:6:23"},"nodeType":"YulFunctionCall","src":"30545:50:23"},"nodeType":"YulExpressionStatement","src":"30545:50:23"},{"nodeType":"YulAssignment","src":"30604:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30616:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30627:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30612:3:23"},"nodeType":"YulFunctionCall","src":"30612:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30604:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30372:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30386:4:23","type":""}],"src":"30221:416:23"},{"body":{"nodeType":"YulBlock","src":"30816:230:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30833:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30844:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30826:6:23"},"nodeType":"YulFunctionCall","src":"30826:21:23"},"nodeType":"YulExpressionStatement","src":"30826:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30867:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30878:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30863:3:23"},"nodeType":"YulFunctionCall","src":"30863:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"30883:2:23","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30856:6:23"},"nodeType":"YulFunctionCall","src":"30856:30:23"},"nodeType":"YulExpressionStatement","src":"30856:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30906:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30917:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30902:3:23"},"nodeType":"YulFunctionCall","src":"30902:18:23"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"30922:34:23","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30895:6:23"},"nodeType":"YulFunctionCall","src":"30895:62:23"},"nodeType":"YulExpressionStatement","src":"30895:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30977:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30988:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30973:3:23"},"nodeType":"YulFunctionCall","src":"30973:18:23"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"30993:10:23","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30966:6:23"},"nodeType":"YulFunctionCall","src":"30966:38:23"},"nodeType":"YulExpressionStatement","src":"30966:38:23"},{"nodeType":"YulAssignment","src":"31013:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31025:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31036:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31021:3:23"},"nodeType":"YulFunctionCall","src":"31021:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31013:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30793:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30807:4:23","type":""}],"src":"30642:404:23"},{"body":{"nodeType":"YulBlock","src":"31282:330:23","statements":[{"nodeType":"YulVariableDeclaration","src":"31292:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31310:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"31315:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"31306:3:23"},"nodeType":"YulFunctionCall","src":"31306:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"31319:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31302:3:23"},"nodeType":"YulFunctionCall","src":"31302:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"31296:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31337:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31352:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"31360:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31348:3:23"},"nodeType":"YulFunctionCall","src":"31348:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31330:6:23"},"nodeType":"YulFunctionCall","src":"31330:34:23"},"nodeType":"YulExpressionStatement","src":"31330:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31384:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31395:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31380:3:23"},"nodeType":"YulFunctionCall","src":"31380:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31404:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"31412:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31400:3:23"},"nodeType":"YulFunctionCall","src":"31400:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31373:6:23"},"nodeType":"YulFunctionCall","src":"31373:43:23"},"nodeType":"YulExpressionStatement","src":"31373:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31436:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31447:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31432:3:23"},"nodeType":"YulFunctionCall","src":"31432:18:23"},{"name":"value2","nodeType":"YulIdentifier","src":"31452:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31425:6:23"},"nodeType":"YulFunctionCall","src":"31425:34:23"},"nodeType":"YulExpressionStatement","src":"31425:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31479:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31490:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31475:3:23"},"nodeType":"YulFunctionCall","src":"31475:18:23"},{"name":"value3","nodeType":"YulIdentifier","src":"31495:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31468:6:23"},"nodeType":"YulFunctionCall","src":"31468:34:23"},"nodeType":"YulExpressionStatement","src":"31468:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31522:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31533:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31518:3:23"},"nodeType":"YulFunctionCall","src":"31518:19:23"},{"kind":"number","nodeType":"YulLiteral","src":"31539:3:23","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31511:6:23"},"nodeType":"YulFunctionCall","src":"31511:32:23"},"nodeType":"YulExpressionStatement","src":"31511:32:23"},{"nodeType":"YulAssignment","src":"31552:54:23","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"31578:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31590:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31601:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31586:3:23"},"nodeType":"YulFunctionCall","src":"31586:19:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"31560:17:23"},"nodeType":"YulFunctionCall","src":"31560:46:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31552:4:23"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31219:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"31230:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31238:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31246:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31254:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31262:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31273:4:23","type":""}],"src":"31051:561:23"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_contract$_IHashPunk_$5451(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IHashPunk_$5451__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_2), dataEnd)\n        let offset_3 := calldataload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_3), dataEnd)\n        let offset_4 := calldataload(add(headStart, 128))\n        if gt(offset_4, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_4), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        end := add(ret, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_7dea929535f31a6a3d4da771c56c977f613aa2b2d875a3332f245e364beb66cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"HValue: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c68bca7fa283e487dffc110655d1b436451e784bf6064e5151d72f6ebe27cd0c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"HValue: caller is not the contro\")\n        mstore(add(headStart, 96), \"ller\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_11556822b0dbb84e42a57d7995abf090c129f85f99798a55739c0b2df8acb3f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"exceed exchange limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6495068f22747f4702ada372c895e8589607dd29d4c382d701a9201403183e08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"HValue: not enough voucher\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_716d8e8655960bf2154053439ce31facdc46548c3a16249c94ec73f924c8ba9c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"HValue: not punk owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aec0b404f50382a0e834a5f06508507c26b41f9bce791ef403d53b5948e659cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"HValue: not lucky punk\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_a102db2d7672fdad004a63c326088de6266268bad23ec664881a9c9d6d98a5b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"HValue: not new year\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds tot\")\n        mstore(add(headStart, 96), \"alSupply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061023c5760003560e01c80638da5cb5b1161013b578063d717b05e116100b8578063f5298aca1161007c578063f5298aca14610517578063f62d18881461052a578063f77c47911461053d578063f7e056ee14610550578063f96b7bf91461055957600080fd5b8063d717b05e14610497578063e1012a89146104a0578063e985e9c5146104b3578063f11b1fdd146104ef578063f242432a1461050457600080fd5b8063a0bcfc7f116100ff578063a0bcfc7f14610435578063a22cb46514610448578063a5afb7e01461045b578063bd85b0391461046e578063cdda418c1461048e57600080fd5b80638da5cb5b146103c957806392eefe9b146103f457806395d89b41146104075780639642903f1461040f5780639ba138c81461042257600080fd5b8063444b7aaf116101c95780636be55bb41161018d5780636be55bb414610372578063731133e91461037a57806383d18f7a1461038d578063887be052146103965780638b0bb069146103a957600080fd5b8063444b7aaf146102ff5780634c25e11f146103085780634e1273f4146103285780634f558e79146103485780635b2bd79e1461036a57600080fd5b80630e89341c116102105780630e89341c146102a85780631fe09da3146102bb5780632a36c108146102ce5780632eb2c2d6146102e3578063340a9a1c146102f657600080fd5b8062fdd58e1461024157806301ffc9a71461026757806306fdde031461028a5780630e4715251461029f575b600080fd5b61025461024f366004611faa565b610561565b6040519081526020015b60405180910390f35b61027a610275366004611fec565b6105fc565b604051901515815260200161025e565b61029261064c565b60405161025e9190612060565b61025460d35481565b6102926102b6366004612073565b6106da565b61027a6102c9366004612073565b61070e565b6102e16102dc3660046121d1565b610726565b005b6102e16102f13660046122d5565b610798565b61025460ce5481565b61025460d05481565b610254610316366004612382565b60d76020526000908152604090205481565b61033b61033636600461239f565b6107e4565b60405161025e919061243d565b61027a610356366004612073565b600090815260976020526040902054151590565b61029261090d565b6102e161091a565b6102e1610388366004612450565b61094a565b61025460d15481565b6102e16103a4366004612382565b610980565b6102546103b7366004612382565b60d66020526000908152604090205481565b60cb546103dc906001600160a01b031681565b6040516001600160a01b03909116815260200161025e565b6102e1610402366004612382565b6109cc565b610292610a18565b6102e161041d366004612073565b610a25565b60cd546103dc906001600160a01b031681565b6102e16104433660046124b2565b610b0d565b6102e1610456366004612502565b610b47565b6102e1610469366004612073565b610b52565b61025461047c366004612073565b60009081526097602052604090205490565b61025460d25481565b61025460d55481565b6102e16104ae366004612540565b610cf9565b61027a6104c13660046125b3565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6104f7610dcb565b60405161025e91906125e1565b6102e161051236600461262e565b610ef4565b6102e1610525366004612696565b610f39565b6102e16105383660046124b2565b610f73565b60cc546103dc906001600160a01b031681565b61025460d45481565b6102e16110f5565b60006001600160a01b0383166105d15760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060008181526065602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061062d57506001600160e01b031982166303a24d0760e21b145b806105f657506301ffc9a760e01b6001600160e01b03198316146105f6565b60c98054610659906126cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610685906126cb565b80156106d25780601f106106a7576101008083540402835291602001916106d2565b820191906000526020600020905b8154815290600101906020018083116106b557829003601f168201915b505050505081565b606060cf6106e78361115e565b6040516020016106f89291906126ff565b6040516020818303038152906040529050919050565b600060d35482101580156105f657505060d454101590565b60cb546001600160a01b031633146107505760405162461bcd60e51b81526004016105c890612786565b60005b835181101561079257610780848281518110610771576107716127bd565b60200260200101518484611289565b8061078a816127e9565b915050610753565b50505050565b6001600160a01b0385163314806107b457506107b485336104c1565b6107d05760405162461bcd60e51b81526004016105c890612802565b6107dd8585858585611428565b5050505050565b606081518351146108495760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016105c8565b600083516001600160401b038111156108645761086461208c565b60405190808252806020026020018201604052801561088d578160200160208202803683370190505b50905060005b8451811015610905576108d88582815181106108b1576108b16127bd565b60200260200101518583815181106108cb576108cb6127bd565b6020026020010151610561565b8282815181106108ea576108ea6127bd565b60209081029190910101526108fe816127e9565b9050610893565b509392505050565b60cf8054610659906126cb565b60cb546001600160a01b031633146109445760405162461bcd60e51b81526004016105c890612786565b4260ce55565b60cc546001600160a01b031633146109745760405162461bcd60e51b81526004016105c890612850565b610792848484846115cd565b60cb546001600160a01b031633146109aa5760405162461bcd60e51b81526004016105c890612786565b60cd80546001600160a01b0319166001600160a01b0392909216919091179055565b60cb546001600160a01b031633146109f65760405162461bcd60e51b81526004016105c890612786565b60cc80546001600160a01b0319166001600160a01b0392909216919091179055565b60ca8054610659906126cb565b60d55433600090815260d660205260409020541115610a7e5760405162461bcd60e51b8152602060048201526015602482015274195e18d9595908195e18da185b99d9481b1a5b5a5d605a1b60448201526064016105c8565b80610a8b3360d254610561565b1015610ad95760405162461bcd60e51b815260206004820152601a60248201527f4856616c75653a206e6f7420656e6f75676820766f756368657200000000000060448201526064016105c8565b610ae63360d254836116b8565b33600090815260d6602052604081208054839290610b05908490612894565b909155505050565b60cb546001600160a01b03163314610b375760405162461bcd60e51b81526004016105c890612786565b60cf610b4382826128ed565b5050565b610b433383836117d4565b60cd546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e90602401602060405180830381865afa158015610b9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf91906129ac565b6001600160a01b031614610c0e5760405162461bcd60e51b8152602060048201526016602482015275242b30b63ab29d103737ba10383ab7359037bbb732b960511b60448201526064016105c8565b60d3548110158015610c22575060d4548111155b610c675760405162461bcd60e51b81526020600482015260166024820152754856616c75653a206e6f74206c75636b792070756e6b60501b60448201526064016105c8565b610c853360d1546046604051806020016040528060008152506115cd565b610c933360d25460016116b8565b60cd546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015610ce557600080fd5b505af11580156107dd573d6000803e3d6000fd5b60cb546001600160a01b03163314610d235760405162461bcd60e51b81526004016105c890612786565b60005b8551811015610dc357610d54868281518110610d4457610d446127bd565b60200260200101518686856118b4565b828181518110610d6657610d666127bd565b602002602001015160d76000888481518110610d8457610d846127bd565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055508080610dbb906127e9565b915050610d26565b505050505050565b6060600060d35460d454610ddf91906129c9565b610dea906001612894565b6001600160401b03811115610e0157610e0161208c565b604051908082528060200260200182016040528015610e2a578160200160208202803683370190505b5060d3549091505b60d4548111610eee5760cd546040516331a9108f60e11b8152600481018390526001600160a01b0390911690636352211e90602401602060405180830381865afa158015610e84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea891906129ac565b82610eb46001846129c9565b81518110610ec457610ec46127bd565b6001600160a01b039092166020928302919091019091015280610ee6816127e9565b915050610e32565b50919050565b6001600160a01b038516331480610f105750610f1085336104c1565b610f2c5760405162461bcd60e51b81526004016105c890612802565b6107dd8585858585611a0f565b60cc546001600160a01b03163314610f635760405162461bcd60e51b81526004016105c890612850565b610f6e8383836116b8565b505050565b600054610100900460ff1615808015610f935750600054600160ff909116105b80610fad5750303b158015610fad575060005460ff166001145b6110105760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105c8565b6000805460ff191660011790558015611033576000805461ff0019166101001790555b61103b611b4b565b6040805180820190915260068152654856616c756560d01b602082015260c99061106590826128ed565b50604080518082019091526002815261242b60f11b602082015260ca9061108c90826128ed565b5061109682610b0d565b60cb80546001600160a01b031916331790554260ce558015610b43576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60ce54611106906301e13380612894565b42101561114c5760405162461bcd60e51b8152602060048201526014602482015273242b30b63ab29d103737ba103732bb903cb2b0b960611b60448201526064016105c8565b33600090815260d66020526040812055565b6060816000036111855750506040805180820190915260018152600360fc1b602082015290565b8160005b81156111af5780611199816127e9565b91506111a89050600a836129dc565b9150611189565b6000816001600160401b038111156111c9576111c961208c565b6040519080825280601f01601f1916602001820160405280156111f3576020820181803683370190505b509050815b8515611280576112096001826129c9565b90506000611218600a886129dc565b61122390600a6129fe565b61122d90886129c9565b611238906030612a15565b905060008160f81b905080848481518110611255576112556127bd565b60200101906001600160f81b031916908160001a905350611277600a896129dc565b975050506111f8565b50949350505050565b6001600160a01b0383166112af5760405162461bcd60e51b81526004016105c890612a2e565b80518251146112d05760405162461bcd60e51b81526004016105c890612a71565b60003390506112f381856000868660405180602001604052806000815250611bb8565b60005b83518110156113bb576000848281518110611313576113136127bd565b602002602001015190506000848381518110611331576113316127bd565b60209081029190910181015160008481526065835260408082206001600160a01b038c1683529093529190912054909150818110156113825760405162461bcd60e51b81526004016105c890612ab9565b60009283526065602090815260408085206001600160a01b038b16865290915290922091039055806113b3816127e9565b9150506112f6565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161140c929190612afd565b60405180910390a4604080516020810190915260009052610792565b81518351146114495760405162461bcd60e51b81526004016105c890612a71565b6001600160a01b03841661146f5760405162461bcd60e51b81526004016105c890612b2b565b3361147e818787878787611bb8565b60005b845181101561156757600085828151811061149e5761149e6127bd565b6020026020010151905060008583815181106114bc576114bc6127bd565b60209081029190910181015160008481526065835260408082206001600160a01b038e16835290935291909120549091508181101561150d5760405162461bcd60e51b81526004016105c890612b70565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061154c908490612894565b9250508190555050505080611560906127e9565b9050611481565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516115b7929190612afd565b60405180910390a4610dc3818787878787611d31565b6001600160a01b0384166115f35760405162461bcd60e51b81526004016105c890612bba565b3360006115ff85611e8c565b9050600061160c85611e8c565b905061161d83600089858589611bb8565b60008681526065602090815260408083206001600160a01b038b1684529091528120805487929061164f908490612894565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46116af83600089898989611ed7565b50505050505050565b6001600160a01b0383166116de5760405162461bcd60e51b81526004016105c890612a2e565b3360006116ea84611e8c565b905060006116f784611e8c565b905061171783876000858560405180602001604052806000815250611bb8565b60008581526065602090815260408083206001600160a01b038a1684529091529020548481101561175a5760405162461bcd60e51b81526004016105c890612ab9565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46040805160208101909152600090526116af565b816001600160a01b0316836001600160a01b0316036118475760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016105c8565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166118da5760405162461bcd60e51b81526004016105c890612bba565b81518351146118fb5760405162461bcd60e51b81526004016105c890612a71565b3361190b81600087878787611bb8565b60005b84518110156119a757838181518110611929576119296127bd565b602002602001015160656000878481518110611947576119476127bd565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461198f9190612894565b9091555081905061199f816127e9565b91505061190e565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516119f8929190612afd565b60405180910390a46107dd81600087878787611d31565b6001600160a01b038416611a355760405162461bcd60e51b81526004016105c890612b2b565b336000611a4185611e8c565b90506000611a4e85611e8c565b9050611a5e838989858589611bb8565b60008681526065602090815260408083206001600160a01b038c16845290915290205485811015611aa15760405162461bcd60e51b81526004016105c890612b70565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611ae0908490612894565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611b40848a8a8a8a8a611ed7565b505050505050505050565b600054610100900460ff16611bb65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105c8565b565b6001600160a01b038516611c3f5760005b8351811015611c3d57828181518110611be457611be46127bd565b602002602001015160976000868481518110611c0257611c026127bd565b602002602001015181526020019081526020016000206000828254611c279190612894565b90915550611c369050816127e9565b9050611bc9565b505b6001600160a01b038416610dc35760005b83518110156116af576000848281518110611c6d57611c6d6127bd565b602002602001015190506000848381518110611c8b57611c8b6127bd565b6020026020010151905060006097600084815260200190815260200160002054905081811015611d0e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016105c8565b60009283526097602052604090922091039055611d2a816127e9565b9050611c50565b6001600160a01b0384163b15610dc35760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611d759089908990889088908890600401612bfb565b6020604051808303816000875af1925050508015611db0575060408051601f3d908101601f19168201909252611dad91810190612c59565b60015b611e5c57611dbc612c76565b806308c379a003611df55750611dd0612c92565b80611ddb5750611df7565b8060405162461bcd60e51b81526004016105c89190612060565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016105c8565b6001600160e01b0319811663bc197c8160e01b146116af5760405162461bcd60e51b81526004016105c890612d1b565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611ec657611ec66127bd565b602090810291909101015292915050565b6001600160a01b0384163b15610dc35760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611f1b9089908990889088908890600401612d63565b6020604051808303816000875af1925050508015611f56575060408051601f3d908101601f19168201909252611f5391810190612c59565b60015b611f6257611dbc612c76565b6001600160e01b0319811663f23a6e6160e01b146116af5760405162461bcd60e51b81526004016105c890612d1b565b6001600160a01b0381168114611fa757600080fd5b50565b60008060408385031215611fbd57600080fd5b8235611fc881611f92565b946020939093013593505050565b6001600160e01b031981168114611fa757600080fd5b600060208284031215611ffe57600080fd5b813561200981611fd6565b9392505050565b60005b8381101561202b578181015183820152602001612013565b50506000910152565b6000815180845261204c816020860160208601612010565b601f01601f19169290920160200192915050565b6020815260006120096020830184612034565b60006020828403121561208557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b03811182821017156120c7576120c761208c565b6040525050565b60006001600160401b038211156120e7576120e761208c565b5060051b60200190565b600082601f83011261210257600080fd5b8135602061210f826120ce565b60405161211c82826120a2565b83815260059390931b850182019282810191508684111561213c57600080fd5b8286015b8481101561216057803561215381611f92565b8352918301918301612140565b509695505050505050565b600082601f83011261217c57600080fd5b81356020612189826120ce565b60405161219682826120a2565b83815260059390931b85018201928281019150868411156121b657600080fd5b8286015b8481101561216057803583529183019183016121ba565b6000806000606084860312156121e657600080fd5b83356001600160401b03808211156121fd57600080fd5b612209878388016120f1565b9450602086013591508082111561221f57600080fd5b61222b8783880161216b565b9350604086013591508082111561224157600080fd5b5061224e8682870161216b565b9150509250925092565b60006001600160401b038311156122715761227161208c565b604051612288601f8501601f1916602001826120a2565b80915083815284848401111561229d57600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126122c657600080fd5b61200983833560208501612258565b600080600080600060a086880312156122ed57600080fd5b85356122f881611f92565b9450602086013561230881611f92565b935060408601356001600160401b038082111561232457600080fd5b61233089838a0161216b565b9450606088013591508082111561234657600080fd5b61235289838a0161216b565b9350608088013591508082111561236857600080fd5b50612375888289016122b5565b9150509295509295909350565b60006020828403121561239457600080fd5b813561200981611f92565b600080604083850312156123b257600080fd5b82356001600160401b03808211156123c957600080fd5b6123d5868387016120f1565b935060208501359150808211156123eb57600080fd5b506123f88582860161216b565b9150509250929050565b600081518084526020808501945080840160005b8381101561243257815187529582019590820190600101612416565b509495945050505050565b6020815260006120096020830184612402565b6000806000806080858703121561246657600080fd5b843561247181611f92565b9350602085013592506040850135915060608501356001600160401b0381111561249a57600080fd5b6124a6878288016122b5565b91505092959194509250565b6000602082840312156124c457600080fd5b81356001600160401b038111156124da57600080fd5b8201601f810184136124eb57600080fd5b6124fa84823560208401612258565b949350505050565b6000806040838503121561251557600080fd5b823561252081611f92565b91506020830135801515811461253557600080fd5b809150509250929050565b600080600080600060a0868803121561255857600080fd5b85356001600160401b038082111561256f57600080fd5b61257b89838a016120f1565b9650602088013591508082111561259157600080fd5b61259d89838a0161216b565b9550604088013591508082111561232457600080fd5b600080604083850312156125c657600080fd5b82356125d181611f92565b9150602083013561253581611f92565b6020808252825182820181905260009190848201906040850190845b818110156126225783516001600160a01b0316835292840192918401916001016125fd565b50909695505050505050565b600080600080600060a0868803121561264657600080fd5b853561265181611f92565b9450602086013561266181611f92565b9350604086013592506060860135915060808601356001600160401b0381111561268a57600080fd5b612375888289016122b5565b6000806000606084860312156126ab57600080fd5b83356126b681611f92565b95602085013595506040909401359392505050565b600181811c908216806126df57607f821691505b602082108103610eee57634e487b7160e01b600052602260045260246000fd5b600080845461270d816126cb565b60018281168015612725576001811461273a57612769565b60ff1984168752821515830287019450612769565b8860005260208060002060005b858110156127605781548a820152908401908201612747565b50505082870194505b50505050835161277d818360208801612010565b01949350505050565b6020808252601f908201527f4856616c75653a2063616c6c6572206973206e6f7420746865206f776e657200604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016127fb576127fb6127d3565b5060010190565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b60208082526024908201527f4856616c75653a2063616c6c6572206973206e6f742074686520636f6e74726f604082015263363632b960e11b606082015260800190565b808201808211156105f6576105f66127d3565b601f821115610f6e57600081815260208120601f850160051c810160208610156128ce5750805b601f850160051c820191505b81811015610dc3578281556001016128da565b81516001600160401b038111156129065761290661208c565b61291a8161291484546126cb565b846128a7565b602080601f83116001811461294f57600084156129375750858301515b600019600386901b1c1916600185901b178555610dc3565b600085815260208120601f198616915b8281101561297e5788860151825594840194600190910190840161295f565b508582101561299c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156129be57600080fd5b815161200981611f92565b818103818111156105f6576105f66127d3565b6000826129f957634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176105f6576105f66127d3565b60ff81811683821601908111156105f6576105f66127d3565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b604081526000612b106040830185612402565b8281036020840152612b228185612402565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090612c2790830186612402565b8281036060840152612c398186612402565b90508281036080840152612c4d8185612034565b98975050505050505050565b600060208284031215612c6b57600080fd5b815161200981611fd6565b600060033d1115612c8f5760046000803e5060005160e01c5b90565b600060443d1015612ca05790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715612ccf57505050505090565b8285019150815181811115612ce75750505050505090565b843d8701016020828501011115612d015750505050505090565b612d10602082860101876120a2565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612d9d90830184612034565b97965050505050505056fea2646970667358221220ad87f09bf608d414057ebbfdd1b5d3fa019c7e38694c57d84deb1c99de9b328164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xD717B05E GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xF5298ACA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0xF96B7BF9 EQ PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD717B05E EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xE1012A89 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xF11B1FDD EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0BCFC7F GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA0BCFC7F EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xA5AFB7E0 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x9642903F EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x9BA138C8 EQ PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x444B7AAF GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6BE55BB4 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x6BE55BB4 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x887BE052 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x8B0BB069 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x444B7AAF EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x4C25E11F EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0x210 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x1FE09DA3 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x2A36C108 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x340A9A1C EQ PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xE471525 EQ PUSH2 0x29F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x254 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E JUMP JUMPDEST PUSH2 0x292 PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x292 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x27A PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E1 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x22D5 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xCE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x2382 JUMP JUMPDEST PUSH1 0xD7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x33B PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x239F JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x27A PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x292 PUSH2 0x90D JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x2450 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2382 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2382 JUMP JUMPDEST PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH2 0x3DC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x2382 JUMP JUMPDEST PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x292 PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH2 0x3DC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x2502 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x27A PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x4F7 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x25E1 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x262E JUMP JUMPDEST PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x525 CALLDATASIZE PUSH1 0x4 PUSH2 0x2696 JUMP JUMPDEST PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0xF73 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH2 0x3DC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH1 0xD4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x62D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x5F6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x26CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x26CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCF PUSH2 0x6E7 DUP4 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6F8 SWAP3 SWAP2 SWAP1 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD3 SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x5F6 JUMPI POP POP PUSH1 0xD4 SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x792 JUMPI PUSH2 0x780 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x771 JUMPI PUSH2 0x771 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 PUSH2 0x1289 JUMP JUMPDEST DUP1 PUSH2 0x78A DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x753 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x7B4 JUMPI POP PUSH2 0x7B4 DUP6 CALLER PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH2 0x7DD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1428 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x864 JUMPI PUSH2 0x864 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x88D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x905 JUMPI PUSH2 0x8D8 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8B1 JUMPI PUSH2 0x8B1 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8CB JUMPI PUSH2 0x8CB PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x561 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8EA JUMPI PUSH2 0x8EA PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x8FE DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x893 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xCF DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST TIMESTAMP PUSH1 0xCE SSTORE JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2850 JUMP JUMPDEST PUSH2 0x792 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15CD JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xCD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0xD5 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x195E18D9595908195E18DA185B99D9481B1A5B5A5D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST DUP1 PUSH2 0xA8B CALLER PUSH1 0xD2 SLOAD PUSH2 0x561 JUMP JUMPDEST LT ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4856616C75653A206E6F7420656E6F75676820766F7563686572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0xAE6 CALLER PUSH1 0xD2 SLOAD DUP4 PUSH2 0x16B8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB05 SWAP1 DUP5 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0xCF PUSH2 0xB43 DUP3 DUP3 PUSH2 0x28ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB43 CALLER DUP4 DUP4 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBF SWAP2 SWAP1 PUSH2 0x29AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x242B30B63AB29D103737BA10383AB7359037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0xD3 SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI POP PUSH1 0xD4 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xC67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4856616C75653A206E6F74206C75636B792070756E6B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0xC85 CALLER PUSH1 0xD1 SLOAD PUSH1 0x46 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15CD JUMP JUMPDEST PUSH2 0xC93 CALLER PUSH1 0xD2 SLOAD PUSH1 0x1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xDC3 JUMPI PUSH2 0xD54 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD44 JUMPI PUSH2 0xD44 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP7 DUP6 PUSH2 0x18B4 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD66 JUMPI PUSH2 0xD66 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xD7 PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD84 JUMPI PUSH2 0xD84 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xDBB SWAP1 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD26 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xD3 SLOAD PUSH1 0xD4 SLOAD PUSH2 0xDDF SWAP2 SWAP1 PUSH2 0x29C9 JUMP JUMPDEST PUSH2 0xDEA SWAP1 PUSH1 0x1 PUSH2 0x2894 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE01 JUMPI PUSH2 0xE01 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE2A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0xD3 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0xD4 SLOAD DUP2 GT PUSH2 0xEEE JUMPI PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEA8 SWAP2 SWAP1 PUSH2 0x29AC JUMP JUMPDEST DUP3 PUSH2 0xEB4 PUSH1 0x1 DUP5 PUSH2 0x29C9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xEC4 JUMPI PUSH2 0xEC4 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0xEE6 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE32 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xF10 JUMPI POP PUSH2 0xF10 DUP6 CALLER PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH2 0x7DD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2850 JUMP JUMPDEST PUSH2 0xF6E DUP4 DUP4 DUP4 PUSH2 0x16B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xF93 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xFAD JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFAD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x1010 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1033 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x103B PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x4856616C7565 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC9 SWAP1 PUSH2 0x1065 SWAP1 DUP3 PUSH2 0x28ED JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x242B PUSH1 0xF1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xCA SWAP1 PUSH2 0x108C SWAP1 DUP3 PUSH2 0x28ED JUMP JUMPDEST POP PUSH2 0x1096 DUP3 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0xCE SSTORE DUP1 ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xCE SLOAD PUSH2 0x1106 SWAP1 PUSH4 0x1E13380 PUSH2 0x2894 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x114C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x242B30B63AB29D103737BA103732BB903CB2B0B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1185 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x11AF JUMPI DUP1 PUSH2 0x1199 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A8 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x29DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x11C9 JUMPI PUSH2 0x11C9 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0x1280 JUMPI PUSH2 0x1209 PUSH1 0x1 DUP3 PUSH2 0x29C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1218 PUSH1 0xA DUP9 PUSH2 0x29DC JUMP JUMPDEST PUSH2 0x1223 SWAP1 PUSH1 0xA PUSH2 0x29FE JUMP JUMPDEST PUSH2 0x122D SWAP1 DUP9 PUSH2 0x29C9 JUMP JUMPDEST PUSH2 0x1238 SWAP1 PUSH1 0x30 PUSH2 0x2A15 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1255 JUMPI PUSH2 0x1255 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1277 PUSH1 0xA DUP10 PUSH2 0x29DC JUMP JUMPDEST SWAP8 POP POP POP PUSH2 0x11F8 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x12D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x12F3 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x13BB JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1313 JUMPI PUSH2 0x1313 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1331 JUMPI PUSH2 0x1331 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x1382 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0x13B3 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12F6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x140C SWAP3 SWAP2 SWAP1 PUSH2 0x2AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x792 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x146F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2B2B JUMP JUMPDEST CALLER PUSH2 0x147E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x149E JUMPI PUSH2 0x149E PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14BC JUMPI PUSH2 0x14BC PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x150D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x154C SWAP1 DUP5 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x1560 SWAP1 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1481 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x15B7 SWAP3 SWAP2 SWAP1 PUSH2 0x2AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDC3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x15F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x15FF DUP6 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x160C DUP6 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH2 0x161D DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x164F SWAP1 DUP5 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x16AF DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1ED7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x16DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2A2E JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x16EA DUP5 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16F7 DUP5 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH2 0x1717 DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x175A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x16AF JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x18DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x18FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2A71 JUMP JUMPDEST CALLER PUSH2 0x190B DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x19A7 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1929 JUMPI PUSH2 0x1929 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x65 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1947 JUMPI PUSH2 0x1947 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x198F SWAP2 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x199F DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x190E JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x19F8 SWAP3 SWAP2 SWAP1 PUSH2 0x2AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x7DD DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2B2B JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1A41 DUP6 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A4E DUP6 PUSH2 0x1E8C JUMP JUMPDEST SWAP1 POP PUSH2 0x1A5E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1AA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2B70 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1AE0 SWAP1 DUP5 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1B40 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1ED7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1BB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1C3F JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1C3D JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1BE4 JUMPI PUSH2 0x1BE4 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x97 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1C02 JUMPI PUSH2 0x1C02 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C27 SWAP2 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1C36 SWAP1 POP DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BC9 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDC3 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x16AF JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C6D JUMPI PUSH2 0x1C6D PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C8B JUMPI PUSH2 0x1C8B PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E74206578636565647320746F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x616C537570706C79 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0x1D2A DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1D75 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2BFB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1DB0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1DAD SWAP2 DUP2 ADD SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E5C JUMPI PUSH2 0x1DBC PUSH2 0x2C76 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1DF5 JUMPI POP PUSH2 0x1DD0 PUSH2 0x2C92 JUMP JUMPDEST DUP1 PUSH2 0x1DDB JUMPI POP PUSH2 0x1DF7 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x16AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1EC6 JUMPI PUSH2 0x1EC6 PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1F1B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F56 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1F53 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F62 JUMPI PUSH2 0x1DBC PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x16AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1FC8 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1FA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2009 DUP2 PUSH2 0x1FD6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x202B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2013 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x204C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2009 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2034 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2085 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x20C7 JUMPI PUSH2 0x20C7 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x20E7 JUMPI PUSH2 0x20E7 PUSH2 0x208C JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x210F DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211C DUP3 DUP3 PUSH2 0x20A2 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x213C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2160 JUMPI DUP1 CALLDATALOAD PUSH2 0x2153 DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2140 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x217C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2189 DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2196 DUP3 DUP3 PUSH2 0x20A2 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x21B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2160 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x21FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2209 DUP8 DUP4 DUP9 ADD PUSH2 0x20F1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x221F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x222B DUP8 DUP4 DUP9 ADD PUSH2 0x216B JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224E DUP7 DUP3 DUP8 ADD PUSH2 0x216B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2271 PUSH2 0x208C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2288 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x20A2 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x229D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2009 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x22F8 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2308 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2330 DUP10 DUP4 DUP11 ADD PUSH2 0x216B JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2352 DUP10 DUP4 DUP11 ADD PUSH2 0x216B JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2375 DUP9 DUP3 DUP10 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2009 DUP2 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x23C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23D5 DUP7 DUP4 DUP8 ADD PUSH2 0x20F1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x23EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F8 DUP6 DUP3 DUP7 ADD PUSH2 0x216B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2432 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2416 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2009 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2402 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2471 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x249A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24A6 DUP8 DUP3 DUP9 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x24EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24FA DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2258 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2520 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x256F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x257B DUP10 DUP4 DUP11 ADD PUSH2 0x20F1 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x259D DUP10 DUP4 DUP11 ADD PUSH2 0x216B JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x25D1 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2535 DUP2 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2622 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x25FD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2651 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2661 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x268A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2375 DUP9 DUP3 DUP10 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x26B6 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x26DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xEEE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x270D DUP2 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x2725 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x273A JUMPI PUSH2 0x2769 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x2769 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2760 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x2747 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x277D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2010 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x4856616C75653A2063616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x27FB JUMPI PUSH2 0x27FB PUSH2 0x27D3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4856616C75653A2063616C6C6572206973206E6F742074686520636F6E74726F PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x363632B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5F6 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xF6E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x28CE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDC3 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28DA JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2906 JUMPI PUSH2 0x2906 PUSH2 0x208C JUMP JUMPDEST PUSH2 0x291A DUP2 PUSH2 0x2914 DUP5 SLOAD PUSH2 0x26CB JUMP JUMPDEST DUP5 PUSH2 0x28A7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x294F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2937 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x297E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x295F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x299C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2009 DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5F6 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x29F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5F6 JUMPI PUSH2 0x5F6 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5F6 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2B10 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2402 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B22 DUP2 DUP6 PUSH2 0x2402 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2C27 SWAP1 DUP4 ADD DUP7 PUSH2 0x2402 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2C39 DUP2 DUP7 PUSH2 0x2402 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2C4D DUP2 DUP6 PUSH2 0x2034 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2009 DUP2 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2C8F JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2CA0 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2CCF JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2CE7 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2D01 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2D10 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x20A2 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2D9D SWAP1 DUP4 ADD DUP5 PUSH2 0x2034 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP8 CREATE SWAP12 0xF6 ADDMOD 0xD4 EQ SDIV PUSH31 0xBBFDD1B5D3FA019C7E38694C57D84DEB1C99DE9B328164736F6C6343000811 STOP CALLER ","sourceMap":"242:4293:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2593:227:1;;;;;;:::i;:::-;;:::i;:::-;;;616:25:23;;;604:2;589:18;2593:227:1;;;;;;;;1600:349;;;;;;:::i;:::-;;:::i;:::-;;;1203:14:23;;1196:22;1178:41;;1166:2;1151:18;1600:349:1;1038:187:23;299:30:20;;;:::i;:::-;;;;;;;:::i;743:46::-;;;;;;3397:160:19;;;;;;:::i;:::-;;:::i;3843:128::-;;;;;;:::i;:::-;;:::i;1453:253::-;;;;;;:::i;:::-;;:::i;:::-;;4472:426:1;;;;;;:::i;:::-;;:::i;492:42:20:-;;;;;;587:46;;;;;;956:47;;;;;;:::i;:::-;;;;;;;;;;;;;;2977:508:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1149:131:4:-;;;;;;:::i;:::-;1206:4;1033:16;;;:12;:16;;;;;;-1:-1:-1;;;1149:131:4;540:41:20;;;:::i;2965:100:19:-;;;:::i;1712:189::-;;;;;;:::i;:::-;;:::i;639:46:20:-;;;;;;3071:96:19;;;;;;:::i;:::-;;:::i;902:48:20:-;;;;;;:::i;:::-;;;;;;;;;;;;;;373:31;;;;;-1:-1:-1;;;;;373:31:20;;;;;;-1:-1:-1;;;;;9467:32:23;;;9449:51;;9437:2;9422:18;373:31:20;9303:203:23;3285:102:19;;;;;;:::i;:::-;;:::i;335:32:20:-;;;:::i;2073:335:19:-;;;;;;:::i;:::-;;:::i;452:34:20:-;;;;;-1:-1:-1;;;;;452:34:20;;;3177:102:19;;;;;;:::i;:::-;;:::i;3553:153:1:-;;;;;;:::i;:::-;;:::i;2414:445:19:-;;;;;;:::i;:::-;;:::i;945:111:4:-;;;;;;:::i;:::-;1007:7;1033:16;;;:12;:16;;;;;;;945:111;691:46:20;;;;;;849;;;;;;1065:382:19;;;;;;:::i;:::-;;:::i;3773:166:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3895:27:1;;;3872:4;3895:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3773:166;3563:274:19;;;:::i;:::-;;;;;;;:::i;4006:394:1:-;;;;;;:::i;:::-;;:::i;1907:160:19:-;;;;;;:::i;:::-;;:::i;308:258::-;;;;;;:::i;:::-;;:::i;410:36:20:-;;;;;-1:-1:-1;;;;;410:36:20;;;795:48;;;;;;2865:94:19;;;:::i;2593:227:1:-;2679:7;-1:-1:-1;;;;;2706:21:1;;2698:76;;;;-1:-1:-1;;;2698:76:1;;14250:2:23;2698:76:1;;;14232:21:23;14289:2;14269:18;;;14262:30;14328:34;14308:18;;;14301:62;-1:-1:-1;;;14379:18:23;;;14372:40;14429:19;;2698:76:1;;;;;;;;;-1:-1:-1;2791:13:1;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2791:22:1;;;;;;;;;;2593:227;;;;;:::o;1600:349::-;1724:4;-1:-1:-1;;;;;;1759:52:1;;-1:-1:-1;;;1759:52:1;;:131;;-1:-1:-1;;;;;;;1827:63:1;;-1:-1:-1;;;1827:63:1;1759:131;:183;;;-1:-1:-1;;;;;;;;;;1168:51:11;;;1906:36:1;1060:166:11;299:30:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3397:160:19:-;3457:13;3513:15;3530:18;3540:7;3530:9;:18::i;:::-;3496:53;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3482:68;;3397:160;;;:::o;3843:128::-;3897:4;3931:10;;3920:7;:21;;:44;;;;-1:-1:-1;;3956:8:19;;-1:-1:-1;3945:19:19;;3843:128::o;1453:253::-;638:5;;-1:-1:-1;;;;;638:5:19;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:19;;;;;;;:::i;:::-;1605:9:::1;1600:100;1624:4;:11;1620:1;:15;1600:100;;;1656:33;1667:4;1672:1;1667:7;;;;;;;;:::i;:::-;;;;;;;1676:3;1681:7;1656:10;:33::i;:::-;1637:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1600:100;;;;1453:253:::0;;;:::o;4472:426:1:-;-1:-1:-1;;;;;4697:20:1;;929:10:10;4697:20:1;;:60;;-1:-1:-1;4721:36:1;4738:4;929:10:10;3773:166:1;:::i;4721:36::-;4676:153;;;;-1:-1:-1;;;4676:153:1;;;;;;;:::i;:::-;4839:52;4862:4;4868:2;4872:3;4877:7;4886:4;4839:22;:52::i;:::-;4472:426;;;;;:::o;2977:508::-;3128:16;3187:3;:10;3168:8;:15;:29;3160:83;;;;-1:-1:-1;;;3160:83:1;;17376:2:23;3160:83:1;;;17358:21:23;17415:2;17395:18;;;17388:30;17454:34;17434:18;;;17427:62;-1:-1:-1;;;17505:18:23;;;17498:39;17554:19;;3160:83:1;17174:405:23;3160:83:1;3254:30;3301:8;:15;-1:-1:-1;;;;;3287:30:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3287:30:1;;3254:63;;3333:9;3328:120;3352:8;:15;3348:1;:19;3328:120;;;3407:30;3417:8;3426:1;3417:11;;;;;;;;:::i;:::-;;;;;;;3430:3;3434:1;3430:6;;;;;;;;:::i;:::-;;;;;;;3407:9;:30::i;:::-;3388:13;3402:1;3388:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3369:3;;;:::i;:::-;;;3328:120;;;-1:-1:-1;3465:13:1;2977:508;-1:-1:-1;;;2977:508:1:o;540:41:20:-;;;;;;;:::i;2965:100:19:-;638:5;;-1:-1:-1;;;;;638:5:19;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:19;;;;;;;:::i;:::-;3043:15:::1;3024:16;:34:::0;2965:100::o;1712:189::-;799:10;;-1:-1:-1;;;;;799:10:19;785;:24;764:107;;;;-1:-1:-1;;;764:107:19;;;;;;;:::i;:::-;1862:32:::1;1868:2;1872:7;1881:6;1889:4;1862:5;:32::i;3071:96::-:0;638:5;;-1:-1:-1;;;;;638:5:19;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:19;;;;;;;:::i;:::-;3140:8:::1;:20:::0;;-1:-1:-1;;;;;;3140:20:19::1;-1:-1:-1::0;;;;;3140:20:19;;;::::1;::::0;;;::::1;::::0;;3071:96::o;3285:102::-;638:5;;-1:-1:-1;;;;;638:5:19;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:19;;;;;;;:::i;:::-;3356:10:::1;:24:::0;;-1:-1:-1;;;;;;3356:24:19::1;-1:-1:-1::0;;;;;3356:24:19;;;::::1;::::0;;;::::1;::::0;;3285:102::o;335:32:20:-;;;;;;;:::i;2073:335:19:-;2184:13;;2169:10;2155:25;;;;:13;:25;;;;;;:42;;2147:76;;;;-1:-1:-1;;;2147:76:19;;18191:2:23;2147:76:19;;;18173:21:23;18230:2;18210:18;;;18203:30;-1:-1:-1;;;18249:18:23;;;18242:51;18310:18;;2147:76:19;17989:345:23;2147:76:19;2275:6;2241:30;2251:10;2263:7;;2241:9;:30::i;:::-;:40;;2233:79;;;;-1:-1:-1;;;2233:79:19;;18541:2:23;2233:79:19;;;18523:21:23;18580:2;18560:18;;;18553:30;18619:28;18599:18;;;18592:56;18665:18;;2233:79:19;18339:350:23;2233:79:19;2322:34;2328:10;2340:7;;2349:6;2322:5;:34::i;:::-;2380:10;2366:25;;;;:13;:25;;;;;:35;;2395:6;;2366:25;:35;;2395:6;;2366:35;:::i;:::-;;;;-1:-1:-1;;;2073:335:19:o;3177:102::-;638:5;;-1:-1:-1;;;;;638:5:19;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:19;;;;;;;:::i;:::-;3247:15:::1;:25;3265:7:::0;3247:15;:25:::1;:::i;:::-;;3177:102:::0;:::o;3553:153:1:-;3647:52;929:10:10;3680:8:1;3690;3647:18;:52::i;2414:445:19:-;2493:8;;:25;;-1:-1:-1;;;2493:25:19;;;;;616::23;;;2522:10:19;;-1:-1:-1;;;;;2493:8:19;;:16;;589:18:23;;2493:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2493:39:19;;2472:108;;;;-1:-1:-1;;;2472:108:19;;21360:2:23;2472:108:19;;;21342:21:23;21399:2;21379:18;;;21372:30;-1:-1:-1;;;21418:18:23;;;21411:52;21480:18;;2472:108:19;21158:346:23;2472:108:19;2622:10;;2611:7;:21;;:44;;;;;2647:8;;2636:7;:19;;2611:44;2590:113;;;;-1:-1:-1;;;2590:113:19;;21711:2:23;2590:113:19;;;21693:21:23;21750:2;21730:18;;;21723:30;-1:-1:-1;;;21769:18:23;;;21762:52;21831:18;;2590:113:19;21509:346:23;2590:113:19;2713:33;2719:10;2731:6;;2739:2;2713:33;;;;;;;;;;;;:5;:33::i;:::-;2756:29;2762:10;2774:7;;2783:1;2756:5;:29::i;:::-;2795:8;;:57;;-1:-1:-1;;;2795:57:19;;2817:10;2795:57;;;22100:34:23;2837:4:19;22150:18:23;;;22143:43;22202:18;;;22195:34;;;-1:-1:-1;;;;;2795:8:19;;;;:21;;22035:18:23;;2795:57:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1065:382;638:5;;-1:-1:-1;;;;;638:5:19;624:10;:19;603:97;;;;-1:-1:-1;;;603:97:19;;;;;;;:::i;:::-;1287:9:::1;1282:159;1306:2;:9;1302:1;:13;1282:159;;;1336:42;1347:2;1350:1;1347:5;;;;;;;;:::i;:::-;;;;;;;1354:8;1364:7;1373:4;1336:10;:42::i;:::-;1414:13;1428:1;1414:16;;;;;;;;:::i;:::-;;;;;;;1392:12;:19;1405:2;1408:1;1405:5;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;1392:19:19::1;-1:-1:-1::0;;;;;1392:19:19::1;;;;;;;;;;;;:38;;;;1317:3;;;;;:::i;:::-;;;;1282:159;;;;1065:382:::0;;;;;:::o;3563:274::-;3607:16;3635:20;3683:10;;3672:8;;:21;;;;:::i;:::-;:25;;3696:1;3672:25;:::i;:::-;-1:-1:-1;;;;;3658:40:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3658:40:19;-1:-1:-1;3722:10:19;;3635:63;;-1:-1:-1;3708:103:19;3739:8;;3734:1;:13;3708:103;;3781:8;;:19;;-1:-1:-1;;;3781:19:19;;;;;616:25:23;;;-1:-1:-1;;;;;3781:8:19;;;;:16;;589:18:23;;3781:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3768:3;3772:5;3776:1;3772;:5;:::i;:::-;3768:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3768:32:19;;;:10;;;;;;;;;;;:32;3749:3;;;;:::i;:::-;;;;3708:103;;;-1:-1:-1;3827:3:19;3563:274;-1:-1:-1;3563:274:19:o;4006:394:1:-;-1:-1:-1;;;;;4206:20:1;;929:10:10;4206:20:1;;:60;;-1:-1:-1;4230:36:1;4247:4;929:10:10;3773:166:1;:::i;4230:36::-;4185:153;;;;-1:-1:-1;;;4185:153:1;;;;;;;:::i;:::-;4348:45;4366:4;4372:2;4376;4380:6;4388:4;4348:17;:45::i;1907:160:19:-;799:10;;-1:-1:-1;;;;;799:10:19;785;:24;764:107;;;;-1:-1:-1;;;764:107:19;;;;;;;:::i;:::-;2032:28:::1;2038:4;2044:7;2053:6;2032:5;:28::i;:::-;1907:160:::0;;;:::o;308:258::-;3268:19:0;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:0;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:0;1476:19:9;:23;;;3376:66:0;;-1:-1:-1;3425:12:0;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:0;;22575:2:23;3314:201:0;;;22557:21:23;22614:2;22594:18;;;22587:30;22653:34;22633:18;;;22626:62;-1:-1:-1;;;22704:18:23;;;22697:44;22758:19;;3314:201:0;22373:410:23;3314:201:0;3525:12;:16;;-1:-1:-1;;3525:16:0;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:0;;;;;3551:65;391:22:19::1;:20;:22::i;:::-;423:15;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;423:15:19::1;::::0;::::1;::::0;:4:::1;::::0;:15:::1;::::0;:4;:15:::1;:::i;:::-;-1:-1:-1::0;448:13:19::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;448:13:19::1;::::0;::::1;::::0;:6:::1;::::0;:13:::1;::::0;:6;:13:::1;:::i;:::-;;471:16;482:4;471:10;:16::i;:::-;497:5;:18:::0;;-1:-1:-1;;;;;;497:18:19::1;505:10;497:18;::::0;;544:15:::1;525:16;:34:::0;3636:99:0;;;;3686:5;3670:21;;-1:-1:-1;;3670:21:0;;;3710:14;;-1:-1:-1;22940:36:23;;3710:14:0;;22928:2:23;22913:18;3710:14:0;;;;;;;3258:483;308:258:19;:::o;2865:94::-;968:16;;:27;;987:8;968:27;:::i;:::-;949:15;:46;;928:113;;;;-1:-1:-1;;;928:113:19;;23189:2:23;928:113:19;;;23171:21:23;23228:2;23208:18;;;23201:30;-1:-1:-1;;;23247:18:23;;;23240:50;23307:18;;928:113:19;22987:344:23;928:113:19;2937:10:::1;2951:1;2923:25:::0;;;:13:::1;:25;::::0;;;;:29;2865:94::o;3977:556::-;4031:13;4060:2;4066:1;4060:7;4056:48;;-1:-1:-1;;4083:10:19;;;;;;;;;;;;-1:-1:-1;;;4083:10:19;;;;;3977:556::o;4056:48::-;4125:2;4113:9;4158:66;4165:6;;4158:66;;4187:5;;;;:::i;:::-;;-1:-1:-1;4206:7:19;;-1:-1:-1;4211:2:19;4206:7;;:::i;:::-;;;4158:66;;;4233:17;4263:3;-1:-1:-1;;;;;4253:14:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4253:14:19;-1:-1:-1;4233:34:19;-1:-1:-1;4289:3:19;4302:196;4309:7;;4302:196;;4336:5;4340:1;4336;:5;:::i;:::-;4332:9;-1:-1:-1;4355:10:19;4386:7;4391:2;4386;:7;:::i;:::-;4385:14;;4397:2;4385:14;:::i;:::-;4380:19;;:2;:19;:::i;:::-;4369:31;;:2;:31;:::i;:::-;4355:46;;4415:9;4434:4;4427:12;;4415:24;;4463:2;4453:4;4458:1;4453:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;4453:12:19;;;;;;;;-1:-1:-1;4479:8:19;4485:2;4479:8;;:::i;:::-;;;4318:180;;4302:196;;;-1:-1:-1;4521:4:19;3977:556;-1:-1:-1;;;;3977:556:19:o;12239:943:1:-;-1:-1:-1;;;;;12386:18:1;;12378:66;;;;-1:-1:-1;;;12378:66:1;;;;;;;:::i;:::-;12476:7;:14;12462:3;:10;:28;12454:81;;;;-1:-1:-1;;;12454:81:1;;;;;;;:::i;:::-;12546:16;929:10:10;12546:31:1;;12588:66;12609:8;12619:4;12633:1;12637:3;12642:7;12588:66;;;;;;;;;;;;:20;:66::i;:::-;12670:9;12665:364;12689:3;:10;12685:1;:14;12665:364;;;12720:10;12733:3;12737:1;12733:6;;;;;;;;:::i;:::-;;;;;;;12720:19;;12753:14;12770:7;12778:1;12770:10;;;;;;;;:::i;:::-;;;;;;;;;;;;12795:19;12817:13;;;:9;:13;;;;;;-1:-1:-1;;;;;12817:19:1;;;;;;;;;;;;12770:10;;-1:-1:-1;12858:21:1;;;;12850:70;;;;-1:-1:-1;;;12850:70:1;;;;;;;:::i;:::-;12962:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;12962:19:1;;;;;;;;;;12984:20;;12962:42;;12701:3;;;;:::i;:::-;;;;12665:364;;;;13082:1;-1:-1:-1;;;;;13044:55:1;13068:4;-1:-1:-1;;;;;13044:55:1;13058:8;-1:-1:-1;;;;;13044:55:1;;13086:3;13091:7;13044:55;;;;;;;:::i;:::-;;;;;;;;13110:65;;;;;;;;;13154:1;13110:65;;;1065:382:19;6641:1115:1;6861:7;:14;6847:3;:10;:28;6839:81;;;;-1:-1:-1;;;6839:81:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6938:16:1;;6930:66;;;;-1:-1:-1;;;6930:66:1;;;;;;;:::i;:::-;929:10:10;7049:60:1;929:10:10;7080:4:1;7086:2;7090:3;7095:7;7104:4;7049:20;:60::i;:::-;7125:9;7120:411;7144:3;:10;7140:1;:14;7120:411;;;7175:10;7188:3;7192:1;7188:6;;;;;;;;:::i;:::-;;;;;;;7175:19;;7208:14;7225:7;7233:1;7225:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7250:19;7272:13;;;:9;:13;;;;;;-1:-1:-1;;;;;7272:19:1;;;;;;;;;;;;7225:10;;-1:-1:-1;7313:21:1;;;;7305:76;;;;-1:-1:-1;;;7305:76:1;;;;;;;:::i;:::-;7423:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7423:19:1;;;;;;;;;;7445:20;;;7423:42;;7493:17;;;;;;;:27;;7445:20;;7423:13;7493:27;;7445:20;;7493:27;:::i;:::-;;;;;;;;7161:370;;;7156:3;;;;:::i;:::-;;;7120:411;;;;7576:2;-1:-1:-1;;;;;7546:47:1;7570:4;-1:-1:-1;;;;;7546:47:1;7560:8;-1:-1:-1;;;;;7546:47:1;;7580:3;7585:7;7546:47;;;;;;;:::i;:::-;;;;;;;;7674:75;7710:8;7720:4;7726:2;7730:3;7735:7;7744:4;7674:35;:75::i;9038:709::-;-1:-1:-1;;;;;9185:16:1;;9177:62;;;;-1:-1:-1;;;9177:62:1;;;;;;;:::i;:::-;929:10:10;9250:16:1;9314:21;9332:2;9314:17;:21::i;:::-;9291:44;;9345:24;9372:25;9390:6;9372:17;:25::i;:::-;9345:52;;9408:66;9429:8;9447:1;9451:2;9455:3;9460:7;9469:4;9408:20;:66::i;:::-;9485:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;9485:17:1;;;;;;;;;:27;;9506:6;;9485:13;:27;;9506:6;;9485:27;:::i;:::-;;;;-1:-1:-1;;9527:52:1;;;26965:25:23;;;27021:2;27006:18;;26999:34;;;-1:-1:-1;;;;;9527:52:1;;;;9560:1;;9527:52;;;;;;26938:18:23;9527:52:1;;;;;;;9666:74;9697:8;9715:1;9719:2;9723;9727:6;9735:4;9666:30;:74::i;:::-;9167:580;;;9038:709;;;;:::o;11214:786::-;-1:-1:-1;;;;;11336:18:1;;11328:66;;;;-1:-1:-1;;;11328:66:1;;;;;;;:::i;:::-;929:10:10;11405:16:1;11469:21;11487:2;11469:17;:21::i;:::-;11446:44;;11500:24;11527:25;11545:6;11527:17;:25::i;:::-;11500:52;;11563:66;11584:8;11594:4;11608:1;11612:3;11617:7;11563:66;;;;;;;;;;;;:20;:66::i;:::-;11640:19;11662:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;11662:19:1;;;;;;;;;;11699:21;;;;11691:70;;;;-1:-1:-1;;;11691:70:1;;;;;;;:::i;:::-;11795:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;11795:19:1;;;;;;;;;;;;11817:20;;;11795:42;;11863:54;;26965:25:23;;;27006:18;;;26999:34;;;11795:19:1;;11863:54;;;;;;26938:18:23;11863:54:1;;;;;;;11928:65;;;;;;;;;11972:1;11928:65;;;1065:382:19;13318:323:1;13468:8;-1:-1:-1;;;;;13459:17:1;:5;-1:-1:-1;;;;;13459:17:1;;13451:71;;;;-1:-1:-1;;;13451:71:1;;27246:2:23;13451:71:1;;;27228:21:23;27285:2;27265:18;;;27258:30;27324:34;27304:18;;;27297:62;-1:-1:-1;;;27375:18:23;;;27368:39;27424:19;;13451:71:1;27044:405:23;13451:71:1;-1:-1:-1;;;;;13532:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13532:46:1;;;;;;;;;;13593:41;;1178::23;;;13593::1;;1151:18:23;13593:41:1;;;;;;;13318:323;;;:::o;10137:791::-;-1:-1:-1;;;;;10309:16:1;;10301:62;;;;-1:-1:-1;;;10301:62:1;;;;;;;:::i;:::-;10395:7;:14;10381:3;:10;:28;10373:81;;;;-1:-1:-1;;;10373:81:1;;;;;;;:::i;:::-;929:10:10;10507:66:1;929:10:10;10465:16:1;10550:2;10554:3;10559:7;10568:4;10507:20;:66::i;:::-;10589:9;10584:101;10608:3;:10;10604:1;:14;10584:101;;;10664:7;10672:1;10664:10;;;;;;;;:::i;:::-;;;;;;;10639:9;:17;10649:3;10653:1;10649:6;;;;;;;;:::i;:::-;;;;;;;10639:17;;;;;;;;;;;:21;10657:2;-1:-1:-1;;;;;10639:21:1;-1:-1:-1;;;;;10639:21:1;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;10620:3:1;;-1:-1:-1;10620:3:1;;;:::i;:::-;;;;10584:101;;;;10736:2;-1:-1:-1;;;;;10700:53:1;10732:1;-1:-1:-1;;;;;10700:53:1;10714:8;-1:-1:-1;;;;;10700:53:1;;10740:3;10745:7;10700:53;;;;;;;:::i;:::-;;;;;;;;10840:81;10876:8;10894:1;10898:2;10902:3;10907:7;10916:4;10840:35;:81::i;5348:947::-;-1:-1:-1;;;;;5529:16:1;;5521:66;;;;-1:-1:-1;;;5521:66:1;;;;;;;:::i;:::-;929:10:10;5598:16:1;5662:21;5680:2;5662:17;:21::i;:::-;5639:44;;5693:24;5720:25;5738:6;5720:17;:25::i;:::-;5693:52;;5756:60;5777:8;5787:4;5793:2;5797:3;5802:7;5811:4;5756:20;:60::i;:::-;5827:19;5849:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5849:19:1;;;;;;;;;;5886:21;;;;5878:76;;;;-1:-1:-1;;;5878:76:1;;;;;;;:::i;:::-;5988:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5988:19:1;;;;;;;;;;6010:20;;;5988:42;;6050:17;;;;;;;:27;;6010:20;;5988:13;6050:27;;6010:20;;6050:27;:::i;:::-;;;;-1:-1:-1;;6093:46:1;;;26965:25:23;;;27021:2;27006:18;;26999:34;;;-1:-1:-1;;;;;6093:46:1;;;;;;;;;;;;;;26938:18:23;6093:46:1;;;;;;;6220:68;6251:8;6261:4;6267:2;6271;6275:6;6283:4;6220:30;:68::i;:::-;5511:784;;;;5348:947;;;;;:::o;668:65:4:-;5363:13:0;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:0;;27656:2:23;5355:69:0;;;27638:21:23;27695:2;27675:18;;;27668:30;27734:34;27714:18;;;27707:62;-1:-1:-1;;;27785:18:23;;;27778:41;27836:19;;5355:69:0;27454:407:23;5355:69:0;668:65:4:o;1350:904::-;-1:-1:-1;;;;;1662:18:4;;1658:156;;1701:9;1696:108;1720:3;:10;1716:1;:14;1696:108;;;1779:7;1787:1;1779:10;;;;;;;;:::i;:::-;;;;;;;1755:12;:20;1768:3;1772:1;1768:6;;;;;;;;:::i;:::-;;;;;;;1755:20;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;1732:3:4;;-1:-1:-1;1732:3:4;;:::i;:::-;;;1696:108;;;;1658:156;-1:-1:-1;;;;;1828:16:4;;1824:424;;1865:9;1860:378;1884:3;:10;1880:1;:14;1860:378;;;1919:10;1932:3;1936:1;1932:6;;;;;;;;:::i;:::-;;;;;;;1919:19;;1956:14;1973:7;1981:1;1973:10;;;;;;;;:::i;:::-;;;;;;;1956:27;;2001:14;2018:12;:16;2031:2;2018:16;;;;;;;;;;;;2001:33;;2070:6;2060;:16;;2052:69;;;;-1:-1:-1;;;2052:69:4;;28068:2:23;2052:69:4;;;28050:21:23;28107:2;28087:18;;;28080:30;28146:34;28126:18;;;28119:62;-1:-1:-1;;;28197:18:23;;;28190:38;28245:19;;2052:69:4;27866:404:23;2052:69:4;2171:16;;;;:12;:16;;;;;;2190:15;;2171:34;;1896:3;;;:::i;:::-;;;1860:378;;16696:814:1;-1:-1:-1;;;;;16928:13:1;;1476:19:9;:23;16924:580:1;;16963:90;;-1:-1:-1;;;16963:90:1;;-1:-1:-1;;;;;16963:54:1;;;;;:90;;17018:8;;17028:4;;17034:3;;17039:7;;17048:4;;16963:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16963:90:1;;;;;;;;-1:-1:-1;;16963:90:1;;;;;;;;;;;;:::i;:::-;;;16959:535;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;17370:6;17363:14;;-1:-1:-1;;;17363:14:1;;;;;;;;:::i;16959:535::-;;;17417:62;;-1:-1:-1;;;17417:62:1;;30423:2:23;17417:62:1;;;30405:21:23;30462:2;30442:18;;;30435:30;30501:34;30481:18;;;30474:62;-1:-1:-1;;;30552:18:23;;;30545:50;30612:19;;17417:62:1;30221:416:23;16959:535:1;-1:-1:-1;;;;;;17132:71:1;;-1:-1:-1;;;17132:71:1;17128:168;;17227:50;;-1:-1:-1;;;17227:50:1;;;;;;;:::i;17516:193::-;17635:16;;;17649:1;17635:16;;;;;;;;;17582;;17610:22;;17635:16;;;;;;;;;;;;-1:-1:-1;17635:16:1;17610:41;;17672:7;17661:5;17667:1;17661:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17697:5;17516:193;-1:-1:-1;;17516:193:1:o;15943:747::-;-1:-1:-1;;;;;16150:13:1;;1476:19:9;:23;16146:538:1;;16185:83;;-1:-1:-1;;;16185:83:1;;-1:-1:-1;;;;;16185:49:1;;;;;:83;;16235:8;;16245:4;;16251:2;;16255:6;;16263:4;;16185:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16185:83:1;;;;;;;;-1:-1:-1;;16185:83:1;;;;;;;;;;;;:::i;:::-;;;16181:493;;;;:::i;:::-;-1:-1:-1;;;;;;16317:66:1;;-1:-1:-1;;;16317:66:1;16313:163;;16407:50;;-1:-1:-1;;;16407:50:1;;;;;;;:::i;14:131:23:-;-1:-1:-1;;;;;89:31:23;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:315::-;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:23:o;652:131::-;-1:-1:-1;;;;;;726:32:23;;716:43;;706:71;;773:1;770;763:12;788:245;846:6;899:2;887:9;878:7;874:23;870:32;867:52;;;915:1;912;905:12;867:52;954:9;941:23;973:30;997:5;973:30;:::i;:::-;1022:5;788:245;-1:-1:-1;;;788:245:23:o;1230:250::-;1315:1;1325:113;1339:6;1336:1;1333:13;1325:113;;;1415:11;;;1409:18;1396:11;;;1389:39;1361:2;1354:10;1325:113;;;-1:-1:-1;;1472:1:23;1454:16;;1447:27;1230:250::o;1485:271::-;1527:3;1565:5;1559:12;1592:6;1587:3;1580:19;1608:76;1677:6;1670:4;1665:3;1661:14;1654:4;1647:5;1643:16;1608:76;:::i;:::-;1738:2;1717:15;-1:-1:-1;;1713:29:23;1704:39;;;;1745:4;1700:50;;1485:271;-1:-1:-1;;1485:271:23:o;1761:220::-;1910:2;1899:9;1892:21;1873:4;1930:45;1971:2;1960:9;1956:18;1948:6;1930:45;:::i;1986:180::-;2045:6;2098:2;2086:9;2077:7;2073:23;2069:32;2066:52;;;2114:1;2111;2104:12;2066:52;-1:-1:-1;2137:23:23;;1986:180;-1:-1:-1;1986:180:23:o;2171:127::-;2232:10;2227:3;2223:20;2220:1;2213:31;2263:4;2260:1;2253:15;2287:4;2284:1;2277:15;2303:249;2413:2;2394:13;;-1:-1:-1;;2390:27:23;2378:40;;-1:-1:-1;;;;;2433:34:23;;2469:22;;;2430:62;2427:88;;;2495:18;;:::i;:::-;2531:2;2524:22;-1:-1:-1;;2303:249:23:o;2557:183::-;2617:4;-1:-1:-1;;;;;2642:6:23;2639:30;2636:56;;;2672:18;;:::i;:::-;-1:-1:-1;2717:1:23;2713:14;2729:4;2709:25;;2557:183::o;2745:799::-;2799:5;2852:3;2845:4;2837:6;2833:17;2829:27;2819:55;;2870:1;2867;2860:12;2819:55;2906:6;2893:20;2932:4;2955:43;2995:2;2955:43;:::i;:::-;3027:2;3021:9;3039:31;3067:2;3059:6;3039:31;:::i;:::-;3105:18;;;3197:1;3193:10;;;;3181:23;;3177:32;;;3139:15;;;;-1:-1:-1;3221:15:23;;;3218:35;;;3249:1;3246;3239:12;3218:35;3285:2;3277:6;3273:15;3297:217;3313:6;3308:3;3305:15;3297:217;;;3393:3;3380:17;3410:31;3435:5;3410:31;:::i;:::-;3454:18;;3492:12;;;;3330;;3297:217;;;-1:-1:-1;3532:6:23;2745:799;-1:-1:-1;;;;;;2745:799:23:o;3549:724::-;3603:5;3656:3;3649:4;3641:6;3637:17;3633:27;3623:55;;3674:1;3671;3664:12;3623:55;3710:6;3697:20;3736:4;3759:43;3799:2;3759:43;:::i;:::-;3831:2;3825:9;3843:31;3871:2;3863:6;3843:31;:::i;:::-;3909:18;;;4001:1;3997:10;;;;3985:23;;3981:32;;;3943:15;;;;-1:-1:-1;4025:15:23;;;4022:35;;;4053:1;4050;4043:12;4022:35;4089:2;4081:6;4077:15;4101:142;4117:6;4112:3;4109:15;4101:142;;;4183:17;;4171:30;;4221:12;;;;4134;;4101:142;;4278:821;4430:6;4438;4446;4499:2;4487:9;4478:7;4474:23;4470:32;4467:52;;;4515:1;4512;4505:12;4467:52;4555:9;4542:23;-1:-1:-1;;;;;4625:2:23;4617:6;4614:14;4611:34;;;4641:1;4638;4631:12;4611:34;4664:61;4717:7;4708:6;4697:9;4693:22;4664:61;:::i;:::-;4654:71;;4778:2;4767:9;4763:18;4750:32;4734:48;;4807:2;4797:8;4794:16;4791:36;;;4823:1;4820;4813:12;4791:36;4846:63;4901:7;4890:8;4879:9;4875:24;4846:63;:::i;:::-;4836:73;;4962:2;4951:9;4947:18;4934:32;4918:48;;4991:2;4981:8;4978:16;4975:36;;;5007:1;5004;4997:12;4975:36;;5030:63;5085:7;5074:8;5063:9;5059:24;5030:63;:::i;:::-;5020:73;;;4278:821;;;;;:::o;5104:468::-;5168:5;-1:-1:-1;;;;;5194:6:23;5191:30;5188:56;;;5224:18;;:::i;:::-;5273:2;5267:9;5285:69;5342:2;5321:15;;-1:-1:-1;;5317:29:23;5348:4;5313:40;5267:9;5285:69;:::i;:::-;5372:6;5363:15;;5402:6;5394;5387:22;5442:3;5433:6;5428:3;5424:16;5421:25;5418:45;;;5459:1;5456;5449:12;5418:45;5509:6;5504:3;5497:4;5489:6;5485:17;5472:44;5564:1;5557:4;5548:6;5540;5536:19;5532:30;5525:41;;5104:468;;;;;:::o;5577:220::-;5619:5;5672:3;5665:4;5657:6;5653:17;5649:27;5639:55;;5690:1;5687;5680:12;5639:55;5712:79;5787:3;5778:6;5765:20;5758:4;5750:6;5746:17;5712:79;:::i;5802:1071::-;5956:6;5964;5972;5980;5988;6041:3;6029:9;6020:7;6016:23;6012:33;6009:53;;;6058:1;6055;6048:12;6009:53;6097:9;6084:23;6116:31;6141:5;6116:31;:::i;:::-;6166:5;-1:-1:-1;6223:2:23;6208:18;;6195:32;6236:33;6195:32;6236:33;:::i;:::-;6288:7;-1:-1:-1;6346:2:23;6331:18;;6318:32;-1:-1:-1;;;;;6399:14:23;;;6396:34;;;6426:1;6423;6416:12;6396:34;6449:61;6502:7;6493:6;6482:9;6478:22;6449:61;:::i;:::-;6439:71;;6563:2;6552:9;6548:18;6535:32;6519:48;;6592:2;6582:8;6579:16;6576:36;;;6608:1;6605;6598:12;6576:36;6631:63;6686:7;6675:8;6664:9;6660:24;6631:63;:::i;:::-;6621:73;;6747:3;6736:9;6732:19;6719:33;6703:49;;6777:2;6767:8;6764:16;6761:36;;;6793:1;6790;6783:12;6761:36;;6816:51;6859:7;6848:8;6837:9;6833:24;6816:51;:::i;:::-;6806:61;;;5802:1071;;;;;;;;:::o;6878:247::-;6937:6;6990:2;6978:9;6969:7;6965:23;6961:32;6958:52;;;7006:1;7003;6996:12;6958:52;7045:9;7032:23;7064:31;7089:5;7064:31;:::i;7130:595::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;7365:9;7352:23;-1:-1:-1;;;;;7435:2:23;7427:6;7424:14;7421:34;;;7451:1;7448;7441:12;7421:34;7474:61;7527:7;7518:6;7507:9;7503:22;7474:61;:::i;:::-;7464:71;;7588:2;7577:9;7573:18;7560:32;7544:48;;7617:2;7607:8;7604:16;7601:36;;;7633:1;7630;7623:12;7601:36;;7656:63;7711:7;7700:8;7689:9;7685:24;7656:63;:::i;:::-;7646:73;;;7130:595;;;;;:::o;7730:435::-;7783:3;7821:5;7815:12;7848:6;7843:3;7836:19;7874:4;7903:2;7898:3;7894:12;7887:19;;7940:2;7933:5;7929:14;7961:1;7971:169;7985:6;7982:1;7979:13;7971:169;;;8046:13;;8034:26;;8080:12;;;;8115:15;;;;8007:1;8000:9;7971:169;;;-1:-1:-1;8156:3:23;;7730:435;-1:-1:-1;;;;;7730:435:23:o;8170:261::-;8349:2;8338:9;8331:21;8312:4;8369:56;8421:2;8410:9;8406:18;8398:6;8369:56;:::i;8436:592::-;8531:6;8539;8547;8555;8608:3;8596:9;8587:7;8583:23;8579:33;8576:53;;;8625:1;8622;8615:12;8576:53;8664:9;8651:23;8683:31;8708:5;8683:31;:::i;:::-;8733:5;-1:-1:-1;8785:2:23;8770:18;;8757:32;;-1:-1:-1;8836:2:23;8821:18;;8808:32;;-1:-1:-1;8891:2:23;8876:18;;8863:32;-1:-1:-1;;;;;8907:30:23;;8904:50;;;8950:1;8947;8940:12;8904:50;8973:49;9014:7;9005:6;8994:9;8990:22;8973:49;:::i;:::-;8963:59;;;8436:592;;;;;;;:::o;9737:450::-;9806:6;9859:2;9847:9;9838:7;9834:23;9830:32;9827:52;;;9875:1;9872;9865:12;9827:52;9915:9;9902:23;-1:-1:-1;;;;;9940:6:23;9937:30;9934:50;;;9980:1;9977;9970:12;9934:50;10003:22;;10056:4;10048:13;;10044:27;-1:-1:-1;10034:55:23;;10085:1;10082;10075:12;10034:55;10108:73;10173:7;10168:2;10155:16;10150:2;10146;10142:11;10108:73;:::i;:::-;10098:83;9737:450;-1:-1:-1;;;;9737:450:23:o;10192:416::-;10257:6;10265;10318:2;10306:9;10297:7;10293:23;10289:32;10286:52;;;10334:1;10331;10324:12;10286:52;10373:9;10360:23;10392:31;10417:5;10392:31;:::i;:::-;10442:5;-1:-1:-1;10499:2:23;10484:18;;10471:32;10541:15;;10534:23;10522:36;;10512:64;;10572:1;10569;10562:12;10512:64;10595:7;10585:17;;;10192:416;;;;;:::o;10613:1247::-;10817:6;10825;10833;10841;10849;10902:3;10890:9;10881:7;10877:23;10873:33;10870:53;;;10919:1;10916;10909:12;10870:53;10959:9;10946:23;-1:-1:-1;;;;;11029:2:23;11021:6;11018:14;11015:34;;;11045:1;11042;11035:12;11015:34;11068:61;11121:7;11112:6;11101:9;11097:22;11068:61;:::i;:::-;11058:71;;11182:2;11171:9;11167:18;11154:32;11138:48;;11211:2;11201:8;11198:16;11195:36;;;11227:1;11224;11217:12;11195:36;11250:63;11305:7;11294:8;11283:9;11279:24;11250:63;:::i;:::-;11240:73;;11366:2;11355:9;11351:18;11338:32;11322:48;;11395:2;11385:8;11382:16;11379:36;;;11411:1;11408;11401:12;11865:388;11933:6;11941;11994:2;11982:9;11973:7;11969:23;11965:32;11962:52;;;12010:1;12007;12000:12;11962:52;12049:9;12036:23;12068:31;12093:5;12068:31;:::i;:::-;12118:5;-1:-1:-1;12175:2:23;12160:18;;12147:32;12188:33;12147:32;12188:33;:::i;12258:658::-;12429:2;12481:21;;;12551:13;;12454:18;;;12573:22;;;12400:4;;12429:2;12652:15;;;;12626:2;12611:18;;;12400:4;12695:195;12709:6;12706:1;12703:13;12695:195;;;12774:13;;-1:-1:-1;;;;;12770:39:23;12758:52;;12865:15;;;;12830:12;;;;12806:1;12724:9;12695:195;;;-1:-1:-1;12907:3:23;;12258:658;-1:-1:-1;;;;;;12258:658:23:o;12921:734::-;13025:6;13033;13041;13049;13057;13110:3;13098:9;13089:7;13085:23;13081:33;13078:53;;;13127:1;13124;13117:12;13078:53;13166:9;13153:23;13185:31;13210:5;13185:31;:::i;:::-;13235:5;-1:-1:-1;13292:2:23;13277:18;;13264:32;13305:33;13264:32;13305:33;:::i;:::-;13357:7;-1:-1:-1;13411:2:23;13396:18;;13383:32;;-1:-1:-1;13462:2:23;13447:18;;13434:32;;-1:-1:-1;13517:3:23;13502:19;;13489:33;-1:-1:-1;;;;;13534:30:23;;13531:50;;;13577:1;13574;13567:12;13531:50;13600:49;13641:7;13632:6;13621:9;13617:22;13600:49;:::i;13660:383::-;13737:6;13745;13753;13806:2;13794:9;13785:7;13781:23;13777:32;13774:52;;;13822:1;13819;13812:12;13774:52;13861:9;13848:23;13880:31;13905:5;13880:31;:::i;:::-;13930:5;13982:2;13967:18;;13954:32;;-1:-1:-1;14033:2:23;14018:18;;;14005:32;;13660:383;-1:-1:-1;;;13660:383:23:o;14459:380::-;14538:1;14534:12;;;;14581;;;14602:61;;14656:4;14648:6;14644:17;14634:27;;14602:61;14709:2;14701:6;14698:14;14678:18;14675:38;14672:161;;14755:10;14750:3;14746:20;14743:1;14736:31;14790:4;14787:1;14780:15;14818:4;14815:1;14808:15;14970:1020;15146:3;15175:1;15208:6;15202:13;15238:36;15264:9;15238:36;:::i;:::-;15293:1;15310:18;;;15337:133;;;;15484:1;15479:356;;;;15303:532;;15337:133;-1:-1:-1;;15370:24:23;;15358:37;;15443:14;;15436:22;15424:35;;15415:45;;;-1:-1:-1;15337:133:23;;15479:356;15510:6;15507:1;15500:17;15540:4;15585:2;15582:1;15572:16;15610:1;15624:165;15638:6;15635:1;15632:13;15624:165;;;15716:14;;15703:11;;;15696:35;15759:16;;;;15653:10;;15624:165;;;15628:3;;;15818:6;15813:3;15809:16;15802:23;;15303:532;;;;;15866:6;15860:13;15882:68;15941:8;15936:3;15929:4;15921:6;15917:17;15882:68;:::i;:::-;15966:18;;14970:1020;-1:-1:-1;;;;14970:1020:23:o;15995:355::-;16197:2;16179:21;;;16236:2;16216:18;;;16209:30;16275:33;16270:2;16255:18;;16248:61;16341:2;16326:18;;15995:355::o;16355:127::-;16416:10;16411:3;16407:20;16404:1;16397:31;16447:4;16444:1;16437:15;16471:4;16468:1;16461:15;16487:127;16548:10;16543:3;16539:20;16536:1;16529:31;16579:4;16576:1;16569:15;16603:4;16600:1;16593:15;16619:135;16658:3;16679:17;;;16676:43;;16699:18;;:::i;:::-;-1:-1:-1;16746:1:23;16735:13;;16619:135::o;16759:410::-;16961:2;16943:21;;;17000:2;16980:18;;;16973:30;17039:34;17034:2;17019:18;;17012:62;-1:-1:-1;;;17105:2:23;17090:18;;17083:44;17159:3;17144:19;;16759:410::o;17584:400::-;17786:2;17768:21;;;17825:2;17805:18;;;17798:30;17864:34;17859:2;17844:18;;17837:62;-1:-1:-1;;;17930:2:23;17915:18;;17908:34;17974:3;17959:19;;17584:400::o;18694:125::-;18759:9;;;18780:10;;;18777:36;;;18793:18;;:::i;18824:545::-;18926:2;18921:3;18918:11;18915:448;;;18962:1;18987:5;18983:2;18976:17;19032:4;19028:2;19018:19;19102:2;19090:10;19086:19;19083:1;19079:27;19073:4;19069:38;19138:4;19126:10;19123:20;19120:47;;;-1:-1:-1;19161:4:23;19120:47;19216:2;19211:3;19207:12;19204:1;19200:20;19194:4;19190:31;19180:41;;19271:82;19289:2;19282:5;19279:13;19271:82;;;19334:17;;;19315:1;19304:13;19271:82;;19545:1352;19671:3;19665:10;-1:-1:-1;;;;;19690:6:23;19687:30;19684:56;;;19720:18;;:::i;:::-;19749:97;19839:6;19799:38;19831:4;19825:11;19799:38;:::i;:::-;19793:4;19749:97;:::i;:::-;19901:4;;19965:2;19954:14;;19982:1;19977:663;;;;20684:1;20701:6;20698:89;;;-1:-1:-1;20753:19:23;;;20747:26;20698:89;-1:-1:-1;;19502:1:23;19498:11;;;19494:24;19490:29;19480:40;19526:1;19522:11;;;19477:57;20800:81;;19947:944;;19977:663;14917:1;14910:14;;;14954:4;14941:18;;-1:-1:-1;;20013:20:23;;;20131:236;20145:7;20142:1;20139:14;20131:236;;;20234:19;;;20228:26;20213:42;;20326:27;;;;20294:1;20282:14;;;;20161:19;;20131:236;;;20135:3;20395:6;20386:7;20383:19;20380:201;;;20456:19;;;20450:26;-1:-1:-1;;20539:1:23;20535:14;;;20551:3;20531:24;20527:37;20523:42;20508:58;20493:74;;20380:201;-1:-1:-1;;;;;20627:1:23;20611:14;;;20607:22;20594:36;;-1:-1:-1;19545:1352:23:o;20902:251::-;20972:6;21025:2;21013:9;21004:7;21000:23;20996:32;20993:52;;;21041:1;21038;21031:12;20993:52;21073:9;21067:16;21092:31;21117:5;21092:31;:::i;22240:128::-;22307:9;;;22328:11;;;22325:37;;;22342:18;;:::i;23336:217::-;23376:1;23402;23392:132;;23446:10;23441:3;23437:20;23434:1;23427:31;23481:4;23478:1;23471:15;23509:4;23506:1;23499:15;23392:132;-1:-1:-1;23538:9:23;;23336:217::o;23558:168::-;23631:9;;;23662;;23679:15;;;23673:22;;23659:37;23649:71;;23700:18;;:::i;23731:148::-;23819:4;23798:12;;;23812;;;23794:31;;23837:13;;23834:39;;;23853:18;;:::i;23884:399::-;24086:2;24068:21;;;24125:2;24105:18;;;24098:30;24164:34;24159:2;24144:18;;24137:62;-1:-1:-1;;;24230:2:23;24215:18;;24208:33;24273:3;24258:19;;23884:399::o;24288:404::-;24490:2;24472:21;;;24529:2;24509:18;;;24502:30;24568:34;24563:2;24548:18;;24541:62;-1:-1:-1;;;24634:2:23;24619:18;;24612:38;24682:3;24667:19;;24288:404::o;24697:400::-;24899:2;24881:21;;;24938:2;24918:18;;;24911:30;24977:34;24972:2;24957:18;;24950:62;-1:-1:-1;;;25043:2:23;25028:18;;25021:34;25087:3;25072:19;;24697:400::o;25102:465::-;25359:2;25348:9;25341:21;25322:4;25385:56;25437:2;25426:9;25422:18;25414:6;25385:56;:::i;:::-;25489:9;25481:6;25477:22;25472:2;25461:9;25457:18;25450:50;25517:44;25554:6;25546;25517:44;:::i;:::-;25509:52;25102:465;-1:-1:-1;;;;;25102:465:23:o;25572:401::-;25774:2;25756:21;;;25813:2;25793:18;;;25786:30;25852:34;25847:2;25832:18;;25825:62;-1:-1:-1;;;25918:2:23;25903:18;;25896:35;25963:3;25948:19;;25572:401::o;25978:406::-;26180:2;26162:21;;;26219:2;26199:18;;;26192:30;26258:34;26253:2;26238:18;;26231:62;-1:-1:-1;;;26324:2:23;26309:18;;26302:40;26374:3;26359:19;;25978:406::o;26389:397::-;26591:2;26573:21;;;26630:2;26610:18;;;26603:30;26669:34;26664:2;26649:18;;26642:62;-1:-1:-1;;;26735:2:23;26720:18;;26713:31;26776:3;26761:19;;26389:397::o;28275:827::-;-1:-1:-1;;;;;28672:15:23;;;28654:34;;28724:15;;28719:2;28704:18;;28697:43;28634:3;28771:2;28756:18;;28749:31;;;28597:4;;28803:57;;28840:19;;28832:6;28803:57;:::i;:::-;28908:9;28900:6;28896:22;28891:2;28880:9;28876:18;28869:50;28942:44;28979:6;28971;28942:44;:::i;:::-;28928:58;;29035:9;29027:6;29023:22;29017:3;29006:9;29002:19;28995:51;29063:33;29089:6;29081;29063:33;:::i;:::-;29055:41;28275:827;-1:-1:-1;;;;;;;;28275:827:23:o;29107:249::-;29176:6;29229:2;29217:9;29208:7;29204:23;29200:32;29197:52;;;29245:1;29242;29235:12;29197:52;29277:9;29271:16;29296:30;29320:5;29296:30;:::i;29361:179::-;29396:3;29438:1;29420:16;29417:23;29414:120;;;29484:1;29481;29478;29463:23;-1:-1:-1;29521:1:23;29515:8;29510:3;29506:18;29414:120;29361:179;:::o;29545:671::-;29584:3;29626:4;29608:16;29605:26;29602:39;;;29545:671;:::o;29602:39::-;29668:2;29662:9;-1:-1:-1;;29733:16:23;29729:25;;29726:1;29662:9;29705:50;29784:4;29778:11;29808:16;-1:-1:-1;;;;;29914:2:23;29907:4;29899:6;29895:17;29892:25;29887:2;29879:6;29876:14;29873:45;29870:58;;;29921:5;;;;;29545:671;:::o;29870:58::-;29958:6;29952:4;29948:17;29937:28;;29994:3;29988:10;30021:2;30013:6;30010:14;30007:27;;;30027:5;;;;;;29545:671;:::o;30007:27::-;30111:2;30092:16;30086:4;30082:27;30078:36;30071:4;30062:6;30057:3;30053:16;30049:27;30046:69;30043:82;;;30118:5;;;;;;29545:671;:::o;30043:82::-;30134:57;30185:4;30176:6;30168;30164:19;30160:30;30154:4;30134:57;:::i;:::-;-1:-1:-1;30207:3:23;;29545:671;-1:-1:-1;;;;;29545:671:23:o;30642:404::-;30844:2;30826:21;;;30883:2;30863:18;;;30856:30;30922:34;30917:2;30902:18;;30895:62;-1:-1:-1;;;30988:2:23;30973:18;;30966:38;31036:3;31021:19;;30642:404::o;31051:561::-;-1:-1:-1;;;;;31348:15:23;;;31330:34;;31400:15;;31395:2;31380:18;;31373:43;31447:2;31432:18;;31425:34;;;31490:2;31475:18;;31468:34;;;31310:3;31533;31518:19;;31511:32;;;31273:4;;31560:46;;31586:19;;31578:6;31560:46;:::i;:::-;31552:54;31051:561;-1:-1:-1;;;;;;;31051:561:23:o"},"gasEstimates":{"creation":{"codeDepositCost":"2348400","executionCost":"135152","totalCost":"2483552"},"external":{"Hpoint()":"2373","balanceOf(address,uint256)":"2720","balanceOfBatch(address[],uint256[])":"infinite","baseMetadataURI()":"infinite","burn(address,uint256,uint256)":"infinite","burnBatch(address[],uint256[],uint256[])":"infinite","controller()":"2425","currentTimeStamp()":"2418","exchangeHValue(uint256)":"infinite","exchangeHoliday(uint256)":"infinite","exchangeLimit()":"2329","exchangeTimes(address)":"2635","exists(uint256)":"2562","hashPunk()":"2471","initialize(string)":"infinite","isApprovedForAll(address,address)":"infinite","isRare(uint256)":"4602","luckyEnd()":"2394","luckyStart()":"2397","mint(address,uint256,uint256,bytes)":"infinite","mintBatch(address[],uint256[],uint256[],uint256[],bytes)":"infinite","name()":"infinite","negtiveValue(address)":"2570","owner()":"2383","passId()":"2330","rareAddress()":"infinite","resetCurrentTimeStamp()":"24434","resetExchangeTimes()":"7547","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26744","setBaseUri(string)":"infinite","setController(address)":"26773","setHashPunk(address)":"26816","supportsInterface(bytes4)":"601","symbol()":"infinite","totalSupply(uint256)":"2538","uri(uint256)":"infinite","voucher()":"2417"},"internal":{"_uint2str(uint256)":"infinite"}},"methodIdentifiers":{"Hpoint()":"83d18f7a","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","baseMetadataURI()":"5b2bd79e","burn(address,uint256,uint256)":"f5298aca","burnBatch(address[],uint256[],uint256[])":"2a36c108","controller()":"f77c4791","currentTimeStamp()":"340a9a1c","exchangeHValue(uint256)":"a5afb7e0","exchangeHoliday(uint256)":"9642903f","exchangeLimit()":"d717b05e","exchangeTimes(address)":"8b0bb069","exists(uint256)":"4f558e79","hashPunk()":"9ba138c8","initialize(string)":"f62d1888","isApprovedForAll(address,address)":"e985e9c5","isRare(uint256)":"1fe09da3","luckyEnd()":"f7e056ee","luckyStart()":"0e471525","mint(address,uint256,uint256,bytes)":"731133e9","mintBatch(address[],uint256[],uint256[],uint256[],bytes)":"e1012a89","name()":"06fdde03","negtiveValue(address)":"4c25e11f","owner()":"8da5cb5b","passId()":"444b7aaf","rareAddress()":"f11b1fdd","resetCurrentTimeStamp()":"6be55bb4","resetExchangeTimes()":"f96b7bf9","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setBaseUri(string)":"a0bcfc7f","setController(address)":"92eefe9b","setHashPunk(address)":"887be052","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply(uint256)":"bd85b039","uri(uint256)":"0e89341c","voucher()":"cdda418c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Hpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMetadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exchangeHValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchangeHoliday\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exchangeTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hashPunk\",\"outputs\":[{\"internalType\":\"contract IHashPunk\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isRare\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"negtiveValues\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"negtiveValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"passId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rareAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetCurrentTimeStamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetExchangeTimes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"}],\"name\":\"setBaseUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHashPunk\",\"name\":\"_hashPunk\",\"type\":\"address\"}],\"name\":\"setHashPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voucher\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HValue.sol\":\"HValue\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155Upgradeable.sol\\\";\\nimport \\\"./IERC1155ReceiverUpgradeable.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURIUpgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {\\n    using AddressUpgradeable for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\\n        __ERC1155_init_unchained(uri_);\\n    }\\n\\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155Upgradeable).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(\\n        address from,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[47] private __gap;\\n}\\n\",\"keccak256\":\"0x6de308cde403f95519bf4b25123cbfe9126f2e0212564bb2ad3c23ac99f1a9cb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1155Upgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\\n *\\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\\n * clearly identified. Note: While a totalSupply of 1 might mean the\\n * corresponding is an NFT, there is no guarantees that no other token with the\\n * same id are not going to be minted.\\n */\\nabstract contract ERC1155SupplyUpgradeable is Initializable, ERC1155Upgradeable {\\n    function __ERC1155Supply_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1155Supply_init_unchained() internal onlyInitializing {\\n    }\\n    mapping(uint256 => uint256) private _totalSupply;\\n\\n    /**\\n     * @dev Total amount of tokens in with a given id.\\n     */\\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\\n        return _totalSupply[id];\\n    }\\n\\n    /**\\n     * @dev Indicates whether any token exist with a given id, or not.\\n     */\\n    function exists(uint256 id) public view virtual returns (bool) {\\n        return ERC1155SupplyUpgradeable.totalSupply(id) > 0;\\n    }\\n\\n    /**\\n     * @dev See {ERC1155-_beforeTokenTransfer}.\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        if (from == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                _totalSupply[ids[i]] += amounts[i];\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                uint256 id = ids[i];\\n                uint256 amount = amounts[i];\\n                uint256 supply = _totalSupply[id];\\n                require(supply >= amount, \\\"ERC1155: burn amount exceeds totalSupply\\\");\\n                unchecked {\\n                    _totalSupply[id] = supply - amount;\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xf7bdbcbb9fcf42997f280db8c02070e9c561406e6971ff680c6c43f92065ac9e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/HValue.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./HValueStorage.sol\\\";\\n\\ncontract HValue is ERC1155SupplyUpgradeable, HValueStorage {\\n\\n    function initialize(\\n        string memory _uri\\n    ) public initializer {\\n        __ERC1155Supply_init();\\n        name = \\\"HValue\\\";\\n        symbol = \\\"HV\\\";\\n        setBaseUri(_uri);\\n        owner = msg.sender;\\n        currentTimeStamp = block.timestamp;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(\\n            msg.sender == owner,\\n            \\\"HValue: caller is not the owner\\\"\\n        );\\n        _;\\n    }\\n    \\n    modifier onlyController() {\\n        require(\\n            msg.sender == controller,\\n            \\\"HValue: caller is not the controller\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyNewYear() {\\n        require(\\n            block.timestamp >= currentTimeStamp + 365 days,\\n            \\\"HValue: not new year\\\"\\n        );\\n        _;\\n    }\\n\\n    function mintBatch(\\n        address[] memory to,\\n        uint256[] memory tokenIds,\\n        uint256[] memory amounts,\\n        uint256[] memory negtiveValues,\\n        bytes memory data\\n    ) public onlyOwner {\\n        for (uint256 i = 0; i < to.length; i++) {\\n            _mintBatch(to[i], tokenIds, amounts, data);\\n            negtiveValue[to[i]] = negtiveValues[i];\\n        }\\n    }\\n\\n    function burnBatch(\\n        address[] memory from,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) public onlyOwner {\\n        for (uint256 i = 0; i < from.length; i++) {\\n            _burnBatch(from[i], ids, amounts);\\n        }\\n    }\\n\\n    function mint(\\n        address to,\\n        uint256 tokenId,\\n        uint256 amount,\\n        bytes memory data\\n    ) external onlyController {\\n        _mint(to, tokenId, amount, data);\\n    }\\n\\n    function burn(\\n        address from,\\n        uint256 tokenId,\\n        uint256 amount\\n    ) external onlyController {\\n        _burn(from, tokenId, amount);\\n    }\\n\\n    function exchangeHoliday(\\n        uint256 amount\\n    ) external {\\n        require(exchangeTimes[msg.sender] <= exchangeLimit, \\\"exceed exchange limit\\\");\\n        require(balanceOf(msg.sender, voucher) >= amount, \\\"HValue: not enough voucher\\\");\\n        _burn(msg.sender, voucher, amount);\\n        exchangeTimes[msg.sender] += amount;\\n    }\\n\\n    function exchangeHValue(uint256 tokenId) public {\\n        require(\\n            hashPunk.ownerOf(tokenId) == msg.sender,\\n            \\\"HValue: not punk owner\\\"\\n        );\\n        require(\\n            tokenId >= luckyStart && tokenId <= luckyEnd,\\n            \\\"HValue: not lucky punk\\\"\\n        );\\n        _mint(msg.sender, Hpoint, 70, \\\"\\\");\\n        _burn(msg.sender, voucher, 1);\\n        hashPunk.transferFrom(msg.sender, address(this), tokenId);\\n    }\\n\\n    function resetExchangeTimes() public onlyNewYear{\\n        exchangeTimes[msg.sender] = 0;\\n    }\\n\\n    function resetCurrentTimeStamp() public onlyOwner{\\n        currentTimeStamp = block.timestamp;\\n    }\\n\\n    function setHashPunk(IHashPunk _hashPunk) public onlyOwner {\\n        hashPunk = _hashPunk;\\n    }\\n    \\n    function setBaseUri(string memory baseUri) public onlyOwner {\\n        baseMetadataURI = baseUri;\\n    }\\n\\n    function setController(address _controller) public onlyOwner {\\n        controller = _controller;\\n    }\\n    \\n    function uri(uint256 tokenId) public view override returns (string memory) {\\n        return string(abi.encodePacked(baseMetadataURI, _uint2str(tokenId)));\\n    }\\n\\n    function rareAddress() public view returns (address[] memory) {\\n        address[] memory res = new address[](luckyEnd - luckyStart + 1);\\n        for (uint i = luckyStart; i <= luckyEnd; i++) {\\n            res[i - 1] = hashPunk.ownerOf(i);\\n        }\\n        return res;\\n    }\\n\\n    function isRare(uint256 tokenId) public view returns (bool) {\\n        return tokenId >= luckyStart && tokenId <= luckyEnd;\\n    }\\n\\n    function _uint2str(uint256 _i) internal pure returns (string memory) {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 j = _i;\\n        uint256 len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bStr = new bytes(len);\\n        uint256 k = len;\\n        while (_i != 0) {\\n            k = k - 1;\\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bStr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bStr);\\n    }\\n}\\n\",\"keccak256\":\"0x2845a07bca653c5fa9eaf425a870c2ac8fd07280f027a05012caa0ca109fee85\",\"license\":\"MIT\"},\"contracts/HValueStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHashPunk {\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n}\\n\\ncontract HValueStorage {\\n    string    public          name;\\n    string    public          symbol;\\n    address   public          owner;\\n    address   public          controller;\\n    IHashPunk public          hashPunk;\\n    uint256   public          currentTimeStamp;\\n    string    public          baseMetadataURI;\\n    uint256   public          passId           = 1;\\n    uint256   public          Hpoint           = 2;\\n    uint256   public          voucher          = 3;\\n    uint256   public          luckyStart       = 1;\\n    uint256   public          luckyEnd         = 500;\\n    uint256   public          exchangeLimit    = 3;\\n\\n    mapping(address => uint256) public exchangeTimes;\\n    mapping(address => uint256) public negtiveValue;\\n}\",\"keccak256\":\"0x5c378df1d5e2a5b28f3e5d31211f9f80ddd972b5fd42aba2b0c93211c989bf9f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"contracts/HValue.sol:HValue","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"contracts/HValue.sol:HValue","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2254,"contract":"contracts/HValue.sol:HValue","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":2298,"contract":"contracts/HValue.sol:HValue","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":197,"contract":"contracts/HValue.sol:HValue","label":"_balances","offset":0,"slot":"101","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":203,"contract":"contracts/HValue.sol:HValue","label":"_operatorApprovals","offset":0,"slot":"102","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":205,"contract":"contracts/HValue.sol:HValue","label":"_uri","offset":0,"slot":"103","type":"t_string_storage"},{"astId":1412,"contract":"contracts/HValue.sol:HValue","label":"__gap","offset":0,"slot":"104","type":"t_array(t_uint256)47_storage"},{"astId":1601,"contract":"contracts/HValue.sol:HValue","label":"_totalSupply","offset":0,"slot":"151","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1752,"contract":"contracts/HValue.sol:HValue","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":5453,"contract":"contracts/HValue.sol:HValue","label":"name","offset":0,"slot":"201","type":"t_string_storage"},{"astId":5455,"contract":"contracts/HValue.sol:HValue","label":"symbol","offset":0,"slot":"202","type":"t_string_storage"},{"astId":5457,"contract":"contracts/HValue.sol:HValue","label":"owner","offset":0,"slot":"203","type":"t_address"},{"astId":5459,"contract":"contracts/HValue.sol:HValue","label":"controller","offset":0,"slot":"204","type":"t_address"},{"astId":5462,"contract":"contracts/HValue.sol:HValue","label":"hashPunk","offset":0,"slot":"205","type":"t_contract(IHashPunk)5451"},{"astId":5464,"contract":"contracts/HValue.sol:HValue","label":"currentTimeStamp","offset":0,"slot":"206","type":"t_uint256"},{"astId":5466,"contract":"contracts/HValue.sol:HValue","label":"baseMetadataURI","offset":0,"slot":"207","type":"t_string_storage"},{"astId":5469,"contract":"contracts/HValue.sol:HValue","label":"passId","offset":0,"slot":"208","type":"t_uint256"},{"astId":5472,"contract":"contracts/HValue.sol:HValue","label":"Hpoint","offset":0,"slot":"209","type":"t_uint256"},{"astId":5475,"contract":"contracts/HValue.sol:HValue","label":"voucher","offset":0,"slot":"210","type":"t_uint256"},{"astId":5478,"contract":"contracts/HValue.sol:HValue","label":"luckyStart","offset":0,"slot":"211","type":"t_uint256"},{"astId":5481,"contract":"contracts/HValue.sol:HValue","label":"luckyEnd","offset":0,"slot":"212","type":"t_uint256"},{"astId":5484,"contract":"contracts/HValue.sol:HValue","label":"exchangeLimit","offset":0,"slot":"213","type":"t_uint256"},{"astId":5488,"contract":"contracts/HValue.sol:HValue","label":"exchangeTimes","offset":0,"slot":"214","type":"t_mapping(t_address,t_uint256)"},{"astId":5492,"contract":"contracts/HValue.sol:HValue","label":"negtiveValue","offset":0,"slot":"215","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IHashPunk)5451":{"encoding":"inplace","label":"contract IHashPunk","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/HValueStorage.sol":{"HValueStorage":{"abi":[{"inputs":[],"name":"Hpoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMetadataURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"controller","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"exchangeLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"exchangeTimes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hashPunk","outputs":[{"internalType":"contract IHashPunk","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyEnd","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"negtiveValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"passId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"voucher","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60806040526001600755600260085560036009556001600a556101f4600b556003600c5534801561002f57600080fd5b5061039c8061003f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638b0bb06911610097578063cdda418c11610066578063cdda418c146101d8578063d717b05e146101e1578063f77c4791146101ea578063f7e056ee146101fd57600080fd5b80638b0bb069146101725780638da5cb5b1461019257806395d89b41146101bd5780639ba138c8146101c557600080fd5b8063444b7aaf116100d3578063444b7aaf146101385780634c25e11f146101415780635b2bd79e1461016157806383d18f7a1461016957600080fd5b806306fdde03146100fa5780630e47152514610118578063340a9a1c1461012f575b600080fd5b610102610206565b60405161010f91906102ae565b60405180910390f35b610121600a5481565b60405190815260200161010f565b61012160055481565b61012160075481565b61012161014f3660046102fc565b600e6020526000908152604090205481565b610102610294565b61012160085481565b6101216101803660046102fc565b600d6020526000908152604090205481565b6002546101a5906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b6101026102a1565b6004546101a5906001600160a01b031681565b61012160095481565b610121600c5481565b6003546101a5906001600160a01b031681565b610121600b5481565b600080546102139061032c565b80601f016020809104026020016040519081016040528092919081815260200182805461023f9061032c565b801561028c5780601f106102615761010080835404028352916020019161028c565b820191906000526020600020905b81548152906001019060200180831161026f57829003601f168201915b505050505081565b600680546102139061032c565b600180546102139061032c565b600060208083528351808285015260005b818110156102db578581018301518582016040015282016102bf565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561030e57600080fd5b81356001600160a01b038116811461032557600080fd5b9392505050565b600181811c9082168061034057607f821691505b60208210810361036057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208f6831d6fde0f6edfbfb89ff87dc34ae856236895a781b85829d6c56d0dd37a164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x7 SSTORE PUSH1 0x2 PUSH1 0x8 SSTORE PUSH1 0x3 PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0xA SSTORE PUSH2 0x1F4 PUSH1 0xB SSTORE PUSH1 0x3 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C DUP1 PUSH2 0x3F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B0BB069 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCDDA418C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xD717B05E EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B0BB069 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x9BA138C8 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x444B7AAF GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x444B7AAF EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x4C25E11F EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xE471525 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x340A9A1C EQ PUSH2 0x12F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x121 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x294 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23F SWAP1 PUSH2 0x32C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x261 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2BF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x340 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x360 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH9 0x31D6FDE0F6EDFBFB89 SELFDESTRUCT DUP8 0xDC CALLVALUE 0xAE DUP6 PUSH3 0x36895A PUSH25 0x1B85829D6C56D0DD37A164736F6C6343000811003300000000 ","sourceMap":"270:736:20:-:0;;;632:1;587:46;;684:1;639:46;;736:1;691:46;;788:1;743:46;;840:3;795:48;;894:1;849:46;;270:736;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Hpoint_5472":{"entryPoint":null,"id":5472,"parameterSlots":0,"returnSlots":0},"@baseMetadataURI_5466":{"entryPoint":660,"id":5466,"parameterSlots":0,"returnSlots":0},"@controller_5459":{"entryPoint":null,"id":5459,"parameterSlots":0,"returnSlots":0},"@currentTimeStamp_5464":{"entryPoint":null,"id":5464,"parameterSlots":0,"returnSlots":0},"@exchangeLimit_5484":{"entryPoint":null,"id":5484,"parameterSlots":0,"returnSlots":0},"@exchangeTimes_5488":{"entryPoint":null,"id":5488,"parameterSlots":0,"returnSlots":0},"@hashPunk_5462":{"entryPoint":null,"id":5462,"parameterSlots":0,"returnSlots":0},"@luckyEnd_5481":{"entryPoint":null,"id":5481,"parameterSlots":0,"returnSlots":0},"@luckyStart_5478":{"entryPoint":null,"id":5478,"parameterSlots":0,"returnSlots":0},"@name_5453":{"entryPoint":518,"id":5453,"parameterSlots":0,"returnSlots":0},"@negtiveValue_5492":{"entryPoint":null,"id":5492,"parameterSlots":0,"returnSlots":0},"@owner_5457":{"entryPoint":null,"id":5457,"parameterSlots":0,"returnSlots":0},"@passId_5469":{"entryPoint":null,"id":5469,"parameterSlots":0,"returnSlots":0},"@symbol_5455":{"entryPoint":673,"id":5455,"parameterSlots":0,"returnSlots":0},"@voucher_5475":{"entryPoint":null,"id":5475,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":764,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IHashPunk_$5451__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":686,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":812,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1856:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:23","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:23","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:23"},"nodeType":"YulFunctionCall","src":"166:21:23"},"nodeType":"YulExpressionStatement","src":"166:21:23"},{"nodeType":"YulVariableDeclaration","src":"196:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:23"},"nodeType":"YulFunctionCall","src":"210:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:23"},"nodeType":"YulFunctionCall","src":"239:18:23"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:23"},"nodeType":"YulFunctionCall","src":"232:34:23"},"nodeType":"YulExpressionStatement","src":"232:34:23"},{"nodeType":"YulVariableDeclaration","src":"275:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:23"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:23"},"nodeType":"YulFunctionCall","src":"369:17:23"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:23"},"nodeType":"YulFunctionCall","src":"365:26:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:23"},"nodeType":"YulFunctionCall","src":"403:14:23"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:23"},"nodeType":"YulFunctionCall","src":"399:23:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:23"},"nodeType":"YulFunctionCall","src":"393:30:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:23"},"nodeType":"YulFunctionCall","src":"358:66:23"},"nodeType":"YulExpressionStatement","src":"358:66:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:23"},"nodeType":"YulFunctionCall","src":"302:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:23","statements":[{"nodeType":"YulAssignment","src":"318:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:23"},"nodeType":"YulFunctionCall","src":"323:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:23","statements":[]},"src":"294:140:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:23"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:23"},"nodeType":"YulFunctionCall","src":"454:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:23"},"nodeType":"YulFunctionCall","src":"450:31:23"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:23"},"nodeType":"YulFunctionCall","src":"443:42:23"},"nodeType":"YulExpressionStatement","src":"443:42:23"},{"nodeType":"YulAssignment","src":"494:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:23"},"nodeType":"YulFunctionCall","src":"525:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:23"},"nodeType":"YulFunctionCall","src":"542:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:23"},"nodeType":"YulFunctionCall","src":"521:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:23"},"nodeType":"YulFunctionCall","src":"506:45:23"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:23"},"nodeType":"YulFunctionCall","src":"502:54:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:23","type":""}],"src":"14:548:23"},{"body":{"nodeType":"YulBlock","src":"668:76:23","statements":[{"nodeType":"YulAssignment","src":"678:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"690:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"701:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"686:3:23"},"nodeType":"YulFunctionCall","src":"686:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"678:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"720:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"731:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"713:6:23"},"nodeType":"YulFunctionCall","src":"713:25:23"},"nodeType":"YulExpressionStatement","src":"713:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"637:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"648:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"659:4:23","type":""}],"src":"567:177:23"},{"body":{"nodeType":"YulBlock","src":"819:216:23","statements":[{"body":{"nodeType":"YulBlock","src":"865:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"874:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"877:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"867:6:23"},"nodeType":"YulFunctionCall","src":"867:12:23"},"nodeType":"YulExpressionStatement","src":"867:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"840:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"849:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"836:3:23"},"nodeType":"YulFunctionCall","src":"836:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"861:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"832:3:23"},"nodeType":"YulFunctionCall","src":"832:32:23"},"nodeType":"YulIf","src":"829:52:23"},{"nodeType":"YulVariableDeclaration","src":"890:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"916:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"903:12:23"},"nodeType":"YulFunctionCall","src":"903:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"894:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"989:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"998:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1001:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"991:6:23"},"nodeType":"YulFunctionCall","src":"991:12:23"},"nodeType":"YulExpressionStatement","src":"991:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"948:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"974:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"979:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"970:3:23"},"nodeType":"YulFunctionCall","src":"970:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"983:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"966:3:23"},"nodeType":"YulFunctionCall","src":"966:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"955:3:23"},"nodeType":"YulFunctionCall","src":"955:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"945:2:23"},"nodeType":"YulFunctionCall","src":"945:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"938:6:23"},"nodeType":"YulFunctionCall","src":"938:50:23"},"nodeType":"YulIf","src":"935:70:23"},{"nodeType":"YulAssignment","src":"1014:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"1024:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1014:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"785:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"796:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"808:6:23","type":""}],"src":"749:286:23"},{"body":{"nodeType":"YulBlock","src":"1141:102:23","statements":[{"nodeType":"YulAssignment","src":"1151:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1163:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1159:3:23"},"nodeType":"YulFunctionCall","src":"1159:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1151:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1193:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1208:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1224:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1229:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1220:3:23"},"nodeType":"YulFunctionCall","src":"1220:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"1233:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1216:3:23"},"nodeType":"YulFunctionCall","src":"1216:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1204:3:23"},"nodeType":"YulFunctionCall","src":"1204:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1186:6:23"},"nodeType":"YulFunctionCall","src":"1186:51:23"},"nodeType":"YulExpressionStatement","src":"1186:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1110:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1121:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1132:4:23","type":""}],"src":"1040:203:23"},{"body":{"nodeType":"YulBlock","src":"1367:102:23","statements":[{"nodeType":"YulAssignment","src":"1377:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1389:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1400:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1385:3:23"},"nodeType":"YulFunctionCall","src":"1385:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1377:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1419:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1434:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1450:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1455:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1446:3:23"},"nodeType":"YulFunctionCall","src":"1446:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"1459:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1442:3:23"},"nodeType":"YulFunctionCall","src":"1442:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1430:3:23"},"nodeType":"YulFunctionCall","src":"1430:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1412:6:23"},"nodeType":"YulFunctionCall","src":"1412:51:23"},"nodeType":"YulExpressionStatement","src":"1412:51:23"}]},"name":"abi_encode_tuple_t_contract$_IHashPunk_$5451__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1336:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1347:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1358:4:23","type":""}],"src":"1248:221:23"},{"body":{"nodeType":"YulBlock","src":"1529:325:23","statements":[{"nodeType":"YulAssignment","src":"1539:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1553:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1556:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1549:3:23"},"nodeType":"YulFunctionCall","src":"1549:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1539:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1570:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1600:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"1606:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1596:3:23"},"nodeType":"YulFunctionCall","src":"1596:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1574:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1647:31:23","statements":[{"nodeType":"YulAssignment","src":"1649:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1663:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1671:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1659:3:23"},"nodeType":"YulFunctionCall","src":"1659:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1649:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1627:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1620:6:23"},"nodeType":"YulFunctionCall","src":"1620:26:23"},"nodeType":"YulIf","src":"1617:61:23"},{"body":{"nodeType":"YulBlock","src":"1737:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1758:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1765:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1770:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1761:3:23"},"nodeType":"YulFunctionCall","src":"1761:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1751:6:23"},"nodeType":"YulFunctionCall","src":"1751:31:23"},"nodeType":"YulExpressionStatement","src":"1751:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1802:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1805:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1795:6:23"},"nodeType":"YulFunctionCall","src":"1795:15:23"},"nodeType":"YulExpressionStatement","src":"1795:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1830:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1833:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1823:6:23"},"nodeType":"YulFunctionCall","src":"1823:15:23"},"nodeType":"YulExpressionStatement","src":"1823:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1693:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1716:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1713:2:23"},"nodeType":"YulFunctionCall","src":"1713:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1690:2:23"},"nodeType":"YulFunctionCall","src":"1690:38:23"},"nodeType":"YulIf","src":"1687:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1509:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1518:6:23","type":""}],"src":"1474:380:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IHashPunk_$5451__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c80638b0bb06911610097578063cdda418c11610066578063cdda418c146101d8578063d717b05e146101e1578063f77c4791146101ea578063f7e056ee146101fd57600080fd5b80638b0bb069146101725780638da5cb5b1461019257806395d89b41146101bd5780639ba138c8146101c557600080fd5b8063444b7aaf116100d3578063444b7aaf146101385780634c25e11f146101415780635b2bd79e1461016157806383d18f7a1461016957600080fd5b806306fdde03146100fa5780630e47152514610118578063340a9a1c1461012f575b600080fd5b610102610206565b60405161010f91906102ae565b60405180910390f35b610121600a5481565b60405190815260200161010f565b61012160055481565b61012160075481565b61012161014f3660046102fc565b600e6020526000908152604090205481565b610102610294565b61012160085481565b6101216101803660046102fc565b600d6020526000908152604090205481565b6002546101a5906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b6101026102a1565b6004546101a5906001600160a01b031681565b61012160095481565b610121600c5481565b6003546101a5906001600160a01b031681565b610121600b5481565b600080546102139061032c565b80601f016020809104026020016040519081016040528092919081815260200182805461023f9061032c565b801561028c5780601f106102615761010080835404028352916020019161028c565b820191906000526020600020905b81548152906001019060200180831161026f57829003601f168201915b505050505081565b600680546102139061032c565b600180546102139061032c565b600060208083528351808285015260005b818110156102db578581018301518582016040015282016102bf565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561030e57600080fd5b81356001600160a01b038116811461032557600080fd5b9392505050565b600181811c9082168061034057607f821691505b60208210810361036057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208f6831d6fde0f6edfbfb89ff87dc34ae856236895a781b85829d6c56d0dd37a164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B0BB069 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCDDA418C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xD717B05E EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B0BB069 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x9BA138C8 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x444B7AAF GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x444B7AAF EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x4C25E11F EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xE471525 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x340A9A1C EQ PUSH2 0x12F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x121 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x294 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x121 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23F SWAP1 PUSH2 0x32C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x261 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2BF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x340 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x360 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH9 0x31D6FDE0F6EDFBFB89 SELFDESTRUCT DUP8 0xDC CALLVALUE 0xAE DUP6 PUSH3 0x36895A PUSH25 0x1B85829D6C56D0DD37A164736F6C6343000811003300000000 ","sourceMap":"270:736:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;299:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;743:46;;;;;;;;;713:25:23;;;701:2;686:18;743:46:20;567:177:23;492:42:20;;;;;;587:46;;;;;;956:47;;;;;;:::i;:::-;;;;;;;;;;;;;;540:41;;;:::i;639:46::-;;;;;;902:48;;;;;;:::i;:::-;;;;;;;;;;;;;;373:31;;;;;-1:-1:-1;;;;;373:31:20;;;;;;-1:-1:-1;;;;;1204:32:23;;;1186:51;;1174:2;1159:18;373:31:20;1040:203:23;335:32:20;;;:::i;452:34::-;;;;;-1:-1:-1;;;;;452:34:20;;;691:46;;;;;;849;;;;;;410:36;;;;;-1:-1:-1;;;;;410:36:20;;;795:48;;;;;;299:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;540:41::-;;;;;;;:::i;335:32::-;;;;;;;:::i;14:548:23:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;749:286::-;808:6;861:2;849:9;840:7;836:23;832:32;829:52;;;877:1;874;867:12;829:52;903:23;;-1:-1:-1;;;;;955:31:23;;945:42;;935:70;;1001:1;998;991:12;935:70;1024:5;749:286;-1:-1:-1;;;749:286:23:o;1474:380::-;1553:1;1549:12;;;;1596;;;1617:61;;1671:4;1663:6;1659:17;1649:27;;1617:61;1724:2;1716:6;1713:14;1693:18;1690:38;1687:161;;1770:10;1765:3;1761:20;1758:1;1751:31;1805:4;1802:1;1795:15;1833:4;1830:1;1823:15;1687:161;;1474:380;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"184800","executionCost":"132862","totalCost":"317662"},"external":{"Hpoint()":"2384","baseMetadataURI()":"infinite","controller()":"2403","currentTimeStamp()":"2363","exchangeLimit()":"2339","exchangeTimes(address)":"2507","hashPunk()":"2426","luckyEnd()":"2383","luckyStart()":"2341","name()":"infinite","negtiveValue(address)":"2529","owner()":"2382","passId()":"2318","symbol()":"infinite","voucher()":"2317"}},"methodIdentifiers":{"Hpoint()":"83d18f7a","baseMetadataURI()":"5b2bd79e","controller()":"f77c4791","currentTimeStamp()":"340a9a1c","exchangeLimit()":"d717b05e","exchangeTimes(address)":"8b0bb069","hashPunk()":"9ba138c8","luckyEnd()":"f7e056ee","luckyStart()":"0e471525","name()":"06fdde03","negtiveValue(address)":"4c25e11f","owner()":"8da5cb5b","passId()":"444b7aaf","symbol()":"95d89b41","voucher()":"cdda418c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Hpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMetadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exchangeTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hashPunk\",\"outputs\":[{\"internalType\":\"contract IHashPunk\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"negtiveValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"passId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voucher\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HValueStorage.sol\":\"HValueStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HValueStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHashPunk {\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n}\\n\\ncontract HValueStorage {\\n    string    public          name;\\n    string    public          symbol;\\n    address   public          owner;\\n    address   public          controller;\\n    IHashPunk public          hashPunk;\\n    uint256   public          currentTimeStamp;\\n    string    public          baseMetadataURI;\\n    uint256   public          passId           = 1;\\n    uint256   public          Hpoint           = 2;\\n    uint256   public          voucher          = 3;\\n    uint256   public          luckyStart       = 1;\\n    uint256   public          luckyEnd         = 500;\\n    uint256   public          exchangeLimit    = 3;\\n\\n    mapping(address => uint256) public exchangeTimes;\\n    mapping(address => uint256) public negtiveValue;\\n}\",\"keccak256\":\"0x5c378df1d5e2a5b28f3e5d31211f9f80ddd972b5fd42aba2b0c93211c989bf9f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":5453,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":5455,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":5457,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"owner","offset":0,"slot":"2","type":"t_address"},{"astId":5459,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"controller","offset":0,"slot":"3","type":"t_address"},{"astId":5462,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"hashPunk","offset":0,"slot":"4","type":"t_contract(IHashPunk)5451"},{"astId":5464,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"currentTimeStamp","offset":0,"slot":"5","type":"t_uint256"},{"astId":5466,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"baseMetadataURI","offset":0,"slot":"6","type":"t_string_storage"},{"astId":5469,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"passId","offset":0,"slot":"7","type":"t_uint256"},{"astId":5472,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"Hpoint","offset":0,"slot":"8","type":"t_uint256"},{"astId":5475,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"voucher","offset":0,"slot":"9","type":"t_uint256"},{"astId":5478,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"luckyStart","offset":0,"slot":"10","type":"t_uint256"},{"astId":5481,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"luckyEnd","offset":0,"slot":"11","type":"t_uint256"},{"astId":5484,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"exchangeLimit","offset":0,"slot":"12","type":"t_uint256"},{"astId":5488,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"exchangeTimes","offset":0,"slot":"13","type":"t_mapping(t_address,t_uint256)"},{"astId":5492,"contract":"contracts/HValueStorage.sol:HValueStorage","label":"negtiveValue","offset":0,"slot":"14","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IHashPunk)5451":{"encoding":"inplace","label":"contract IHashPunk","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"IHashPunk":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ownerOf(uint256)":"6352211e","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HValueStorage.sol\":\"IHashPunk\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HValueStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHashPunk {\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n}\\n\\ncontract HValueStorage {\\n    string    public          name;\\n    string    public          symbol;\\n    address   public          owner;\\n    address   public          controller;\\n    IHashPunk public          hashPunk;\\n    uint256   public          currentTimeStamp;\\n    string    public          baseMetadataURI;\\n    uint256   public          passId           = 1;\\n    uint256   public          Hpoint           = 2;\\n    uint256   public          voucher          = 3;\\n    uint256   public          luckyStart       = 1;\\n    uint256   public          luckyEnd         = 500;\\n    uint256   public          exchangeLimit    = 3;\\n\\n    mapping(address => uint256) public exchangeTimes;\\n    mapping(address => uint256) public negtiveValue;\\n}\",\"keccak256\":\"0x5c378df1d5e2a5b28f3e5d31211f9f80ddd972b5fd42aba2b0c93211c989bf9f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/HashPunk.sol":{"HashPunk":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"Hpoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"base","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMetadataURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hValue","outputs":[{"internalType":"contract IHValue","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_uri","type":"string"},{"internalType":"address","name":"_hValue","type":"address"},{"internalType":"uint256","name":"_base","type":"uint256"},{"internalType":"uint256","name":"_passIdBase","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyEnd","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"passId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"passIdBase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_base","type":"uint256"}],"name":"setBase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseUri","type":"string"}],"name":"setBaseUri","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IHValue","name":"_hValue","type":"address"}],"name":"setHValue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_passIdBase","type":"uint256"}],"name":"setPassIdBase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userToRareIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"voucher","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405260016073556101f460745534801561001b57600080fd5b506123aa8061002b6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806370a082311161010f578063a22cb465116100a2578063cdda418c11610071578063cdda418c14610409578063d5abeb0114610411578063e985e9c514610419578063f7e056ee1461042c57600080fd5b8063a22cb465146103bd578063a8a86457146103d0578063b88d4fde146103e3578063c87b56dd146103f657600080fd5b80638da5cb5b116100de5780638da5cb5b1461037c5780639332c9a51461038f57806395d89b41146103a2578063a0bcfc7f146103aa57600080fd5b806370a082311461034557806380893c171461035857806383d18f7a1461036157806389be0ad11461036957600080fd5b80631e214f0611610187578063444b7aaf11610156578063444b7aaf146103035780635001f3b51461030b5780635b2bd79e146103145780636352211e1461031c57600080fd5b80631e214f06146102b757806323b872dd146102ca57806338e80f68146102dd57806342842e0e146102f057600080fd5b8063095ea7b3116101c3578063095ea7b3146102725780630e4715251461028557806318160ddd1461029c5780631b2ef1ca146102a457600080fd5b80630178f6b9146101f557806301ffc9a71461020a57806306fdde0314610232578063081812fc14610247575b600080fd5b610208610203366004611b8d565b610435565b005b61021d610218366004611bc7565b61048a565b60405190151581526020015b60405180910390f35b61023a6104dc565b6040516102299190611c34565b61025a610255366004611c47565b61056e565b6040516001600160a01b039091168152602001610229565b610208610280366004611c60565b610603565b61028e60735481565b604051908152602001610229565b61028e610716565b6102086102b2366004611c8c565b61072d565b6102086102c5366004611d5a565b610c93565b6102086102d8366004611db9565b610e2b565b6102086102eb366004611c47565b610e5c565b6102086102fe366004611db9565b610e8b565b61028e600181565b61028e606f5481565b61023a610ea6565b61025a61032a366004611c47565b6000908152606a60205260409020546001600160a01b031690565b61028e610353366004611b8d565b610f34565b61028e606e5481565b61028e600281565b610208610377366004611c47565b610fbb565b60715461025a906001600160a01b031681565b60705461025a906001600160a01b031681565b61023a610fea565b6102086103b8366004611dfa565b610ff9565b6102086103cb366004611e2f565b611033565b61028e6103de366004611c60565b61103e565b6102086103f1366004611e6d565b61106f565b61023a610404366004611c47565b6110a7565b61028e600381565b60695461028e565b61021d610427366004611eed565b6110db565b61028e60745481565b6071546001600160a01b031633146104685760405162461bcd60e51b815260040161045f90611f1b565b60405180910390fd5b607080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b031982166380ac58cd60e01b14806104bb57506001600160e01b03198216635b5e139f60e01b145b806104d657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104eb90611f5c565b80601f016020809104026020016040519081016040528092919081815260200182805461051790611f5c565b80156105645780601f1061053957610100808354040283529160200191610564565b820191906000526020600020905b81548152906001019060200180831161054757829003601f168201915b5050505050905090565b6000818152606a60205260408120546001600160a01b03166105e75760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161045f565b506000908152606c60205260409020546001600160a01b031690565b6000818152606a60205260409020546001600160a01b039081169083168190036106795760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161045f565b336001600160a01b0382161480610695575061069581336110db565b6107075760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161045f565b6107118383611109565b505050565b60006068546069546107289190611fac565b905090565b3233146107565760405162461bcd60e51b8152602060048201526000602482015260440161045f565b60018214806107655750600282145b61079e5760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b604482015260640161045f565b600182036109895780606e546107b49190611fbf565b607054604051627eeac760e11b8152336004820152600160248201526001600160a01b039091169062fdd58e90604401602060405180830381865afa158015610801573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108259190611fd6565b10156108735760405162461bcd60e51b815260206004820152601e60248201527f696e73756666696369656e74205061737320436172642062616c616e63650000604482015260640161045f565b607054606e546001600160a01b039091169063f5298aca90339060019061089b908690611fbf565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091526044820152606401600060405180830381600087803b1580156108e957600080fd5b505af11580156108fd573d6000803e3d6000fd5b5050505061090b3382611170565b5060705460405163731133e960e01b8152336004820152600360248201526001604482015260806064820152600060848201526001600160a01b039091169063731133e99060a401600060405180830381600087803b15801561096d57600080fd5b505af1158015610981573d6000803e3d6000fd5b505050505050565b80606f546109979190611fbf565b607054604051634c25e11f60e01b81523360048201526001600160a01b0390911690634c25e11f90602401602060405180830381865afa1580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a039190611fd6565b607054604051627eeac760e11b8152336004820152600260248201526001600160a01b039091169062fdd58e90604401602060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190611fd6565b610a7e9190611fac565b1015610acc5760405162461bcd60e51b815260206004820152601b60248201527f696e73756666696369656e74204856616c75652062616c616e63650000000000604482015260640161045f565b607054606f546001600160a01b039091169063f5298aca903390600290610af4908690611fbf565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091526044820152606401600060405180830381600087803b158015610b4257600080fd5b505af1158015610b56573d6000803e3d6000fd5b505050506000610b663383611170565b905060005b8151811015610c1457607354828281518110610b8957610b89611fef565b602002602001015110158015610bba5750607454828281518110610baf57610baf611fef565b602002602001015111155b15610c02573360009081526075602052604090208251839083908110610be257610be2611fef565b602090810291909101810151825460018101845560009384529190922001555b80610c0c81612005565b915050610b6b565b5060705460405163731133e960e01b8152336004820152600360248201526001604482015260806064820152600060848201526001600160a01b039091169063731133e99060a401600060405180830381600087803b158015610c7657600080fd5b505af1158015610c8a573d6000803e3d6000fd5b50505050505050565b600054610100900460ff1615808015610cb35750600054600160ff909116105b80610ccd5750303b158015610ccd575060005460ff166001145b610d305760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161045f565b6000805460ff191660011790558015610d53576000805461ff0019166101001790555b610d9a604051806040016040528060088152602001674861736850756e6b60c01b81525060405180604001604052806002815260200161048560f41b815250610bb86113bb565b606e829055606f839055607080546001600160a01b0319166001600160a01b0386161790556072610dcb8682612064565b50607180546001600160a01b031916331790558015610e24576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b610e3533826113ed565b610e515760405162461bcd60e51b815260040161045f90612124565b6107118383836114db565b6071546001600160a01b03163314610e865760405162461bcd60e51b815260040161045f90611f1b565b606f55565b6107118383836040518060200160405280600081525061106f565b60728054610eb390611f5c565b80601f0160208091040260200160405190810160405280929190818152602001828054610edf90611f5c565b8015610f2c5780601f10610f0157610100808354040283529160200191610f2c565b820191906000526020600020905b815481529060010190602001808311610f0f57829003601f168201915b505050505081565b60006001600160a01b038216610f9f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161045f565b506001600160a01b03166000908152606b602052604090205490565b6071546001600160a01b03163314610fe55760405162461bcd60e51b815260040161045f90611f1b565b606e55565b6060606680546104eb90611f5c565b6071546001600160a01b031633146110235760405162461bcd60e51b815260040161045f90611f1b565b607261102f8282612064565b5050565b61102f338383611677565b6075602052816000526040600020818154811061105a57600080fd5b90600052602060002001600091509150505481565b61107933836113ed565b6110955760405162461bcd60e51b815260040161045f90612124565b6110a184848484611745565b50505050565b606060726110b483611778565b6040516020016110c5929190612175565b6040516020818303038152906040529050919050565b6001600160a01b039182166000908152606d6020908152604080832093909416825291909152205460ff1690565b6000818152606c6020908152604080832080546001600160a01b0319166001600160a01b03878116918217909255606a909352818420549151859492909116917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a45050565b60603332146111b95760405162461bcd60e51b815260206004820152601560248201527410dbdb9d1c9858dd1cc818d85b9b9bdd081b5a5b9d605a1b604482015260640161045f565b6001600160a01b03831661120f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161045f565b600082116112705760405162461bcd60e51b815260206004820152602860248201527f455243373231723a206e65656420746f206d696e74206174206c65617374206f6044820152673732903a37b5b2b760c11b606482015260840161045f565b8160685410156112d65760405162461bcd60e51b815260206004820152602b60248201527f455243373231723a206d696e74696e67206d6f726520746f6b656e732074686160448201526a6e20617661696c61626c6560a81b606482015260840161045f565b60685460008367ffffffffffffffff8111156112f4576112f4611cae565b60405190808252806020026020018201604052801561131d578160200160208202803683370190505b50905060005b8481101561137f57600061133787856118a4565b90508083838151811061134c5761134c611fef565b6020026020010181815250506113628782611936565b61136b846121fc565b9350508061137890612005565b9050611323565b5060688290556001600160a01b0385166000908152606b6020526040812080548692906113ad908490612213565b909155509095945050505050565b600054610100900460ff166113e25760405162461bcd60e51b815260040161045f90612226565b61071183838361198f565b6000818152606a60205260408120546001600160a01b03166114665760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161045f565b6070546001600160a01b03163303611480575060016104d6565b6000828152606a60205260409020546001600160a01b039081169084168114806114c35750836001600160a01b03166114b88461056e565b6001600160a01b0316145b806114d357506114d381856110db565b949350505050565b6000818152606a60205260409020546001600160a01b038481169116146115525760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161045f565b6001600160a01b0382166115b45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161045f565b6115bf600082611109565b6001600160a01b0383166000908152606b602052604081208054600192906115e8908490611fac565b90915550506001600160a01b0382166000908152606b60205260408120805460019290611616908490612213565b90915550506000818152606a602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b0316036116d85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161045f565b6001600160a01b038381166000818152606d6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6117508484846114db565b61175c848484846119dc565b6110a15760405162461bcd60e51b815260040161045f90612271565b60608160000361179f5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156117c957806117b381612005565b91506117c29050600a836122d9565b91506117a3565b60008167ffffffffffffffff8111156117e4576117e4611cae565b6040519080825280601f01601f19166020018201604052801561180e576020820181803683370190505b509050815b851561189b57611824600182611fac565b90506000611833600a886122d9565b61183e90600a611fbf565b6118489088611fac565b6118539060306122ed565b905060008160f81b90508084848151811061187057611870611fef565b60200101906001600160f81b031916908160001a905350611892600a896122d9565b97505050611813565b50949350505050565b600080833a4342446118b7600184611fac565b604080516001600160a01b0390971660208801528601949094526060850192909252608084015260a08301524060c08201523060e082015261010081018490526101200160408051601f198184030181529190528051602090910120905060006119218483612306565b905061192d8185611add565b95945050505050565b6000818152606a602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600054610100900460ff166119b65760405162461bcd60e51b815260040161045f90612226565b60656119c28482612064565b5060666119cf8382612064565b5060698190556068555050565b60006001600160a01b0384163b15611ad257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a2090339089908890889060040161231a565b6020604051808303816000875af1925050508015611a5b575060408051601f3d908101601f19168201909252611a5891810190612357565b60015b611ab8573d808015611a89576040519150601f19603f3d011682016040523d82523d6000602084013e611a8e565b606091505b508051600003611ab05760405162461bcd60e51b815260040161045f90612271565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506114d3565b506001949350505050565b60008281526067602052604081205481818103611afb575083611afe565b50805b6000611b0b600186611fac565b600081815260676020526040902054909150868214611b545780600003611b42576000878152606760205260409020829055611b54565b60008781526067602052604090208190555b8015611b6a576000828152606760205260408120555b509095945050505050565b6001600160a01b0381168114611b8a57600080fd5b50565b600060208284031215611b9f57600080fd5b8135611baa81611b75565b9392505050565b6001600160e01b031981168114611b8a57600080fd5b600060208284031215611bd957600080fd5b8135611baa81611bb1565b60005b83811015611bff578181015183820152602001611be7565b50506000910152565b60008151808452611c20816020860160208601611be4565b601f01601f19169290920160200192915050565b602081526000611baa6020830184611c08565b600060208284031215611c5957600080fd5b5035919050565b60008060408385031215611c7357600080fd5b8235611c7e81611b75565b946020939093013593505050565b60008060408385031215611c9f57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611cdf57611cdf611cae565b604051601f8501601f19908116603f01168101908282118183101715611d0757611d07611cae565b81604052809350858152868686011115611d2057600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611d4b57600080fd5b611baa83833560208501611cc4565b60008060008060808587031215611d7057600080fd5b843567ffffffffffffffff811115611d8757600080fd5b611d9387828801611d3a565b9450506020850135611da481611b75565b93969395505050506040820135916060013590565b600080600060608486031215611dce57600080fd5b8335611dd981611b75565b92506020840135611de981611b75565b929592945050506040919091013590565b600060208284031215611e0c57600080fd5b813567ffffffffffffffff811115611e2357600080fd5b6114d384828501611d3a565b60008060408385031215611e4257600080fd5b8235611e4d81611b75565b915060208301358015158114611e6257600080fd5b809150509250929050565b60008060008060808587031215611e8357600080fd5b8435611e8e81611b75565b93506020850135611e9e81611b75565b925060408501359150606085013567ffffffffffffffff811115611ec157600080fd5b8501601f81018713611ed257600080fd5b611ee187823560208401611cc4565b91505092959194509250565b60008060408385031215611f0057600080fd5b8235611f0b81611b75565b91506020830135611e6281611b75565b60208082526021908201527f4861736850756e6b3a2063616c6c6572206973206e6f7420746865206f776e656040820152603960f91b606082015260800190565b600181811c90821680611f7057607f821691505b602082108103611f9057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104d6576104d6611f96565b80820281158282048414176104d6576104d6611f96565b600060208284031215611fe857600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161201757612017611f96565b5060010190565b601f82111561071157600081815260208120601f850160051c810160208610156120455750805b601f850160051c820191505b8181101561098157828155600101612051565b815167ffffffffffffffff81111561207e5761207e611cae565b6120928161208c8454611f5c565b8461201e565b602080601f8311600181146120c757600084156120af5750858301515b600019600386901b1c1916600185901b178555610981565b600085815260208120601f198616915b828110156120f6578886015182559484019460019091019084016120d7565b50858210156121145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600080845461218381611f5c565b6001828116801561219b57600181146121b0576121df565b60ff19841687528215158302870194506121df565b8860005260208060002060005b858110156121d65781548a8201529084019082016121bd565b50505082870194505b5050505083516121f3818360208801611be4565b01949350505050565b60008161220b5761220b611f96565b506000190190565b808201808211156104d6576104d6611f96565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826122e8576122e86122c3565b500490565b60ff81811683821601908111156104d6576104d6611f96565b600082612315576123156122c3565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061234d90830184611c08565b9695505050505050565b60006020828403121561236957600080fd5b8151611baa81611bb156fea2646970667358221220c795623d395f96c289b6280101f6b42c25b0fef5d5e69dbe11236c3e2fcea02964736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x73 SSTORE PUSH2 0x1F4 PUSH1 0x74 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23AA DUP1 PUSH2 0x2B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCDDA418C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xA8A86457 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x9332C9A5 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xA0BCFC7F EQ PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x80893C17 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x89BE0AD1 EQ PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E214F06 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x444B7AAF GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x444B7AAF EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x5001F3B5 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E214F06 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x38E80F68 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xE471525 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x1B2EF1CA EQ PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x178F6B9 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x247 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC7 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x716 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB9 JUMP JUMPDEST PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB9 JUMP JUMPDEST PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x28E PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH2 0x25A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH2 0x25A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DFA JUMP JUMPDEST PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x103E JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0x106F JUMP JUMPDEST PUSH2 0x23A PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH2 0x28E JUMP JUMPDEST PUSH2 0x21D PUSH2 0x427 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EED JUMP JUMPDEST PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x28E PUSH1 0x74 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x70 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4BB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4D6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x4EB SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x517 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x564 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x539 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x564 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x547 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND DUP2 SWAP1 SUB PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x695 JUMPI POP PUSH2 0x695 DUP2 CALLER PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 PUSH2 0x1109 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x68 SLOAD PUSH1 0x69 SLOAD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 DUP3 EQ DUP1 PUSH2 0x765 JUMPI POP PUSH1 0x2 DUP3 EQ JUMPDEST PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1A5B9D985B1A59081A59 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 DUP3 SUB PUSH2 0x989 JUMPI DUP1 PUSH1 0x6E SLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH3 0xFDD58E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x801 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST LT ISZERO PUSH2 0x873 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E74205061737320436172642062616C616E63650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x6E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF5298ACA SWAP1 CALLER SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x89B SWAP1 DUP7 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x90B CALLER DUP3 PUSH2 0x1170 JUMP JUMPDEST POP PUSH1 0x70 SLOAD PUSH1 0x40 MLOAD PUSH4 0x731133E9 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x731133E9 SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x981 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6F SLOAD PUSH2 0x997 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4C25E11F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x4C25E11F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA03 SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH3 0xFDD58E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST LT ISZERO PUSH2 0xACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E74204856616C75652062616C616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x6F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF5298ACA SWAP1 CALLER SWAP1 PUSH1 0x2 SWAP1 PUSH2 0xAF4 SWAP1 DUP7 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xB66 CALLER DUP4 PUSH2 0x1170 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC14 JUMPI PUSH1 0x73 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB89 JUMPI PUSH2 0xB89 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO DUP1 ISZERO PUSH2 0xBBA JUMPI POP PUSH1 0x74 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBAF JUMPI PUSH2 0xBAF PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0xC02 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xBE2 JUMPI PUSH2 0xBE2 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE JUMPDEST DUP1 PUSH2 0xC0C DUP2 PUSH2 0x2005 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB6B JUMP JUMPDEST POP PUSH1 0x70 SLOAD PUSH1 0x40 MLOAD PUSH4 0x731133E9 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x731133E9 SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xCB3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xCCD JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xD30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xD53 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD9A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x4861736850756E6B PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x485 PUSH1 0xF4 SHL DUP2 MSTORE POP PUSH2 0xBB8 PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x6E DUP3 SWAP1 SSTORE PUSH1 0x6F DUP4 SWAP1 SSTORE PUSH1 0x70 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH1 0x72 PUSH2 0xDCB DUP7 DUP3 PUSH2 0x2064 JUMP JUMPDEST POP PUSH1 0x71 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE35 CALLER DUP3 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 DUP4 PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x6F SSTORE JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x106F JUMP JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH2 0xEB3 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEDF SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF2C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF01 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF2C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF0F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x6E SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x4EB SWAP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1023 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x72 PUSH2 0x102F DUP3 DUP3 PUSH2 0x2064 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x102F CALLER DUP4 DUP4 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x75 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x105A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1079 CALLER DUP4 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x1095 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x10A1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1745 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x72 PUSH2 0x10B4 DUP4 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10C5 SWAP3 SWAP2 SWAP1 PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x6A SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP2 MLOAD DUP6 SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 CALLER ORIGIN EQ PUSH2 0x11B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10DBDB9D1C9858DD1CC818D85B9B9BDD081B5A5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x120F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1270 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231723A206E65656420746F206D696E74206174206C65617374206F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3732903A37B5B2B7 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST DUP2 PUSH1 0x68 SLOAD LT ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231723A206D696E74696E67206D6F726520746F6B656E7320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E20617661696C61626C65 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12F4 JUMPI PUSH2 0x12F4 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x131D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x137F JUMPI PUSH1 0x0 PUSH2 0x1337 DUP8 DUP6 PUSH2 0x18A4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x134C JUMPI PUSH2 0x134C PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1362 DUP8 DUP3 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x136B DUP5 PUSH2 0x21FC JUMP JUMPDEST SWAP4 POP POP DUP1 PUSH2 0x1378 SWAP1 PUSH2 0x2005 JUMP JUMPDEST SWAP1 POP PUSH2 0x1323 JUMP JUMPDEST POP PUSH1 0x68 DUP3 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x13AD SWAP1 DUP5 SWAP1 PUSH2 0x2213 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2226 JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 DUP4 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1480 JUMPI POP PUSH1 0x1 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND DUP2 EQ DUP1 PUSH2 0x14C3 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14B8 DUP5 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x14D3 JUMPI POP PUSH2 0x14D3 DUP2 DUP6 PUSH2 0x10DB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x1552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH2 0x15BF PUSH1 0x0 DUP3 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x15E8 SWAP1 DUP5 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1616 SWAP1 DUP5 SWAP1 PUSH2 0x2213 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x16D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1750 DUP5 DUP5 DUP5 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x175C DUP5 DUP5 DUP5 DUP5 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x10A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x179F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x17C9 JUMPI DUP1 PUSH2 0x17B3 DUP2 PUSH2 0x2005 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C2 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x22D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E4 JUMPI PUSH2 0x17E4 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x180E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0x189B JUMPI PUSH2 0x1824 PUSH1 0x1 DUP3 PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1833 PUSH1 0xA DUP9 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x183E SWAP1 PUSH1 0xA PUSH2 0x1FBF JUMP JUMPDEST PUSH2 0x1848 SWAP1 DUP9 PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x1853 SWAP1 PUSH1 0x30 PUSH2 0x22ED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1870 JUMPI PUSH2 0x1870 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1892 PUSH1 0xA DUP10 PUSH2 0x22D9 JUMP JUMPDEST SWAP8 POP POP POP PUSH2 0x1813 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GASPRICE NUMBER TIMESTAMP DIFFICULTY PUSH2 0x18B7 PUSH1 0x1 DUP5 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x20 DUP9 ADD MSTORE DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE BLOCKHASH PUSH1 0xC0 DUP3 ADD MSTORE ADDRESS PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP2 ADD DUP5 SWAP1 MSTORE PUSH2 0x120 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1921 DUP5 DUP4 PUSH2 0x2306 JUMP JUMPDEST SWAP1 POP PUSH2 0x192D DUP2 DUP6 PUSH2 0x1ADD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x19B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2226 JUMP JUMPDEST PUSH1 0x65 PUSH2 0x19C2 DUP5 DUP3 PUSH2 0x2064 JUMP JUMPDEST POP PUSH1 0x66 PUSH2 0x19CF DUP4 DUP3 PUSH2 0x2064 JUMP JUMPDEST POP PUSH1 0x69 DUP2 SWAP1 SSTORE PUSH1 0x68 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1AD2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1A20 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x231A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A5B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1A58 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1AB8 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1A89 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A8E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1AB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x14D3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 DUP2 DUP2 SUB PUSH2 0x1AFB JUMPI POP DUP4 PUSH2 0x1AFE JUMP JUMPDEST POP DUP1 JUMPDEST PUSH1 0x0 PUSH2 0x1B0B PUSH1 0x1 DUP7 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP7 DUP3 EQ PUSH2 0x1B54 JUMPI DUP1 PUSH1 0x0 SUB PUSH2 0x1B42 JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST DUP1 ISZERO PUSH2 0x1B6A JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BAA DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BAA DUP2 PUSH2 0x1BB1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BFF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BE7 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1C20 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1BE4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1BAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1C7E DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1CDF JUMPI PUSH2 0x1CDF PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1D07 JUMPI PUSH2 0x1D07 PUSH2 0x1CAE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1D20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BAA DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D93 DUP8 DUP3 DUP9 ADD PUSH2 0x1D3A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1DA4 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1DD9 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1DE9 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E4D DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1E8E DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1E9E DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EE1 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1CC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F0B DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E62 DUP2 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4861736850756E6B3A2063616C6C6572206973206E6F7420746865206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1F70 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F90 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x1F96 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2017 JUMPI PUSH2 0x2017 PUSH2 0x1F96 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2045 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x981 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2051 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207E JUMPI PUSH2 0x207E PUSH2 0x1CAE JUMP JUMPDEST PUSH2 0x2092 DUP2 PUSH2 0x208C DUP5 SLOAD PUSH2 0x1F5C JUMP JUMPDEST DUP5 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x20C7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x20AF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x981 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x20F6 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x20D7 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2114 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x2183 DUP2 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x219B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x21B0 JUMPI PUSH2 0x21DF JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x21DF JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x21D6 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x21BD JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x21F3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1BE4 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x220B JUMPI PUSH2 0x220B PUSH2 0x1F96 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22E8 JUMPI PUSH2 0x22E8 PUSH2 0x22C3 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2315 JUMPI PUSH2 0x2315 PUSH2 0x22C3 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x234D SWAP1 DUP4 ADD DUP5 PUSH2 0x1C08 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1BAA DUP2 PUSH2 0x1BB1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 SWAP6 PUSH3 0x3D395F SWAP7 0xC2 DUP10 0xB6 0x28 ADD ADD 0xF6 0xB4 0x2C 0x25 0xB0 INVALID CREATE2 0xD5 0xE6 SWAP14 0xBE GT 0x23 PUSH13 0x3E2FCEA02964736F6C63430008 GT STOP CALLER ","sourceMap":"125:3326:21:-:0;;;1055:1:22;1012:44;;1105:3;1062:46;;125:3326:21;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Hpoint_5996":{"entryPoint":null,"id":5996,"parameterSlots":0,"returnSlots":0},"@__ERC721r_init_3889":{"entryPoint":5051,"id":3889,"parameterSlots":3,"returnSlots":0},"@__ERC721r_init_unchained_3917":{"entryPoint":6543,"id":3917,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_4888":{"entryPoint":null,"id":4888,"parameterSlots":3,"returnSlots":0},"@_approve_4772":{"entryPoint":4361,"id":4772,"parameterSlots":2,"returnSlots":0},"@_beforeTokenTransfer_4877":{"entryPoint":null,"id":4877,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_4866":{"entryPoint":6620,"id":4866,"parameterSlots":4,"returnSlots":1},"@_exists_4301":{"entryPoint":null,"id":4301,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_5937":{"entryPoint":5101,"id":5937,"parameterSlots":2,"returnSlots":1},"@_mintIdWithoutBalanceUpdate_4383":{"entryPoint":6454,"id":4383,"parameterSlots":2,"returnSlots":0},"@_mintRandom_4486":{"entryPoint":4464,"id":4486,"parameterSlots":2,"returnSlots":1},"@_msgSender_2240":{"entryPoint":null,"id":2240,"parameterSlots":0,"returnSlots":1},"@_safeTransfer_4283":{"entryPoint":5957,"id":4283,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_4804":{"entryPoint":5751,"id":4804,"parameterSlots":3,"returnSlots":0},"@_transfer_4748":{"entryPoint":5339,"id":4748,"parameterSlots":3,"returnSlots":0},"@_uint2str_5885":{"entryPoint":6008,"id":5885,"parameterSlots":1,"returnSlots":1},"@approve_4122":{"entryPoint":1539,"id":4122,"parameterSlots":2,"returnSlots":0},"@balanceOf_3990":{"entryPoint":3892,"id":3990,"parameterSlots":1,"returnSlots":1},"@baseMetadataURI_6010":{"entryPoint":3750,"id":6010,"parameterSlots":0,"returnSlots":0},"@base_6003":{"entryPoint":null,"id":6003,"parameterSlots":0,"returnSlots":0},"@getApproved_4143":{"entryPoint":1390,"id":4143,"parameterSlots":1,"returnSlots":1},"@getAvailableTokenAtIndex_4618":{"entryPoint":6877,"id":4618,"parameterSlots":2,"returnSlots":1},"@getRandomAvailableTokenId_4538":{"entryPoint":6308,"id":4538,"parameterSlots":2,"returnSlots":1},"@hValue_6006":{"entryPoint":null,"id":6006,"parameterSlots":0,"returnSlots":0},"@initialize_5544":{"entryPoint":3219,"id":5544,"parameterSlots":4,"returnSlots":0},"@isApprovedForAll_4178":{"entryPoint":4315,"id":4178,"parameterSlots":2,"returnSlots":1},"@isContract_1947":{"entryPoint":null,"id":1947,"parameterSlots":1,"returnSlots":1},"@isContract_2442":{"entryPoint":null,"id":2442,"parameterSlots":1,"returnSlots":1},"@luckyEnd_6016":{"entryPoint":null,"id":6016,"parameterSlots":0,"returnSlots":0},"@luckyStart_6013":{"entryPoint":null,"id":6013,"parameterSlots":0,"returnSlots":0},"@maxSupply_3966":{"entryPoint":null,"id":3966,"parameterSlots":0,"returnSlots":1},"@mint_5719":{"entryPoint":1837,"id":5719,"parameterSlots":2,"returnSlots":0},"@name_4018":{"entryPoint":1244,"id":4018,"parameterSlots":0,"returnSlots":1},"@ownerOf_4008":{"entryPoint":null,"id":4008,"parameterSlots":1,"returnSlots":1},"@owner_6008":{"entryPoint":null,"id":6008,"parameterSlots":0,"returnSlots":0},"@passIdBase_6001":{"entryPoint":null,"id":6001,"parameterSlots":0,"returnSlots":0},"@passId_5993":{"entryPoint":null,"id":5993,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_4224":{"entryPoint":3723,"id":4224,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_4254":{"entryPoint":4207,"id":4254,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_4160":{"entryPoint":4147,"id":4160,"parameterSlots":2,"returnSlots":0},"@setBaseUri_5732":{"entryPoint":4089,"id":5732,"parameterSlots":1,"returnSlots":0},"@setBase_5777":{"entryPoint":3676,"id":5777,"parameterSlots":1,"returnSlots":0},"@setHValue_5790":{"entryPoint":1077,"id":5790,"parameterSlots":1,"returnSlots":0},"@setPassIdBase_5765":{"entryPoint":4027,"id":5765,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2293":{"entryPoint":null,"id":2293,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3948":{"entryPoint":1162,"id":3948,"parameterSlots":1,"returnSlots":1},"@symbol_4028":{"entryPoint":4074,"id":4028,"parameterSlots":0,"returnSlots":1},"@tokenURI_5753":{"entryPoint":4263,"id":5753,"parameterSlots":1,"returnSlots":1},"@totalSupply_3958":{"entryPoint":1814,"id":3958,"parameterSlots":0,"returnSlots":1},"@transferFrom_4205":{"entryPoint":3627,"id":4205,"parameterSlots":3,"returnSlots":0},"@userToRareIds_6021":{"entryPoint":4158,"id":6021,"parameterSlots":0,"returnSlots":0},"@voucher_5999":{"entryPoint":null,"id":5999,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_string":{"entryPoint":7364,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":7482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7917,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7609,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":7789,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7727,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7264,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":9047,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IHValue_$5990":{"entryPoint":7053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":7674,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_addresst_uint256t_uint256":{"entryPoint":7514,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":7239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":7308,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_string":{"entryPoint":7176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8565,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8986,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IHValue_$5990__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7220,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8817,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32a53888ca69a743bbaa97a0e7d9316f442fadccf6d37bbebbe9ab28e7024e3e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_71947446ca525a6f47b4c26e39d45a716107b5eb5547cf11856e8d61c0fa00ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7963,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8dab769bb3e1b4a60276b85ee01ccc68a7073052ca1cb5124502172cc6982bf4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ffa3719eede42d3318b3817081dd67bc4c18fb5a15d06600fb820769c5c8571__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bb31380de390e4e0627ca842496a815f4aa25ce62aeb0a04ee78aed6e6c12b62__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8484,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8742,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc7e415b4d71800746fd56cd2e9f99a70019c07d161e9e43d2fe64c358808e78__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8723,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":8941,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8921,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8127,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8108,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":8222,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":8292,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7140,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":8700,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":8028,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":8197,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":8966,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":8086,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8899,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8175,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7342,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":7089,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_contract_IHValue":{"entryPoint":7029,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23813:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"68:86:23","statements":[{"body":{"nodeType":"YulBlock","src":"132:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"141:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"144:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"134:6:23"},"nodeType":"YulFunctionCall","src":"134:12:23"},"nodeType":"YulExpressionStatement","src":"134:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"91:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"102:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"117:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"122:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"113:3:23"},"nodeType":"YulFunctionCall","src":"113:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"126:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"109:3:23"},"nodeType":"YulFunctionCall","src":"109:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"98:3:23"},"nodeType":"YulFunctionCall","src":"98:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"88:2:23"},"nodeType":"YulFunctionCall","src":"88:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"81:6:23"},"nodeType":"YulFunctionCall","src":"81:50:23"},"nodeType":"YulIf","src":"78:70:23"}]},"name":"validator_revert_contract_IHValue","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"57:5:23","type":""}],"src":"14:140:23"},{"body":{"nodeType":"YulBlock","src":"245:186:23","statements":[{"body":{"nodeType":"YulBlock","src":"291:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:23"},"nodeType":"YulFunctionCall","src":"293:12:23"},"nodeType":"YulExpressionStatement","src":"293:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"266:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"275:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"262:3:23"},"nodeType":"YulFunctionCall","src":"262:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"287:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"258:3:23"},"nodeType":"YulFunctionCall","src":"258:32:23"},"nodeType":"YulIf","src":"255:52:23"},{"nodeType":"YulVariableDeclaration","src":"316:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"342:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"329:12:23"},"nodeType":"YulFunctionCall","src":"329:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"320:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"395:5:23"}],"functionName":{"name":"validator_revert_contract_IHValue","nodeType":"YulIdentifier","src":"361:33:23"},"nodeType":"YulFunctionCall","src":"361:40:23"},"nodeType":"YulExpressionStatement","src":"361:40:23"},{"nodeType":"YulAssignment","src":"410:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"420:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"410:6:23"}]}]},"name":"abi_decode_tuple_t_contract$_IHValue_$5990","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"211:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"222:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"234:6:23","type":""}],"src":"159:272:23"},{"body":{"nodeType":"YulBlock","src":"480:87:23","statements":[{"body":{"nodeType":"YulBlock","src":"545:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"554:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"557:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"547:6:23"},"nodeType":"YulFunctionCall","src":"547:12:23"},"nodeType":"YulExpressionStatement","src":"547:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"503:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"530:10:23","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"521:3:23"},"nodeType":"YulFunctionCall","src":"521:20:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"510:3:23"},"nodeType":"YulFunctionCall","src":"510:32:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"500:2:23"},"nodeType":"YulFunctionCall","src":"500:43:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"493:6:23"},"nodeType":"YulFunctionCall","src":"493:51:23"},"nodeType":"YulIf","src":"490:71:23"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"469:5:23","type":""}],"src":"436:131:23"},{"body":{"nodeType":"YulBlock","src":"641:176:23","statements":[{"body":{"nodeType":"YulBlock","src":"687:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"696:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"699:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"689:6:23"},"nodeType":"YulFunctionCall","src":"689:12:23"},"nodeType":"YulExpressionStatement","src":"689:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"662:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"671:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"658:3:23"},"nodeType":"YulFunctionCall","src":"658:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"654:3:23"},"nodeType":"YulFunctionCall","src":"654:32:23"},"nodeType":"YulIf","src":"651:52:23"},{"nodeType":"YulVariableDeclaration","src":"712:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"738:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"725:12:23"},"nodeType":"YulFunctionCall","src":"725:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"716:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"781:5:23"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"757:23:23"},"nodeType":"YulFunctionCall","src":"757:30:23"},"nodeType":"YulExpressionStatement","src":"757:30:23"},{"nodeType":"YulAssignment","src":"796:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"806:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"796:6:23"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"607:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"618:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"630:6:23","type":""}],"src":"572:245:23"},{"body":{"nodeType":"YulBlock","src":"917:92:23","statements":[{"nodeType":"YulAssignment","src":"927:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"939:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"950:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"935:3:23"},"nodeType":"YulFunctionCall","src":"935:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"927:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"994:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"987:6:23"},"nodeType":"YulFunctionCall","src":"987:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:23"},"nodeType":"YulFunctionCall","src":"980:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"962:6:23"},"nodeType":"YulFunctionCall","src":"962:41:23"},"nodeType":"YulExpressionStatement","src":"962:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"886:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"897:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"908:4:23","type":""}],"src":"822:187:23"},{"body":{"nodeType":"YulBlock","src":"1080:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1090:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1099:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1094:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1159:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1184:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"1189:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1180:3:23"},"nodeType":"YulFunctionCall","src":"1180:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1203:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"1208:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1199:3:23"},"nodeType":"YulFunctionCall","src":"1199:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1193:5:23"},"nodeType":"YulFunctionCall","src":"1193:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1173:6:23"},"nodeType":"YulFunctionCall","src":"1173:39:23"},"nodeType":"YulExpressionStatement","src":"1173:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1120:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"1123:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1117:2:23"},"nodeType":"YulFunctionCall","src":"1117:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1131:19:23","statements":[{"nodeType":"YulAssignment","src":"1133:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1142:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"1145:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1138:3:23"},"nodeType":"YulFunctionCall","src":"1138:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1133:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"1113:3:23","statements":[]},"src":"1109:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1242:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"1247:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1238:3:23"},"nodeType":"YulFunctionCall","src":"1238:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"1256:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1231:6:23"},"nodeType":"YulFunctionCall","src":"1231:27:23"},"nodeType":"YulExpressionStatement","src":"1231:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1058:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1063:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"1068:6:23","type":""}],"src":"1014:250:23"},{"body":{"nodeType":"YulBlock","src":"1319:221:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1329:26:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1349:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1343:5:23"},"nodeType":"YulFunctionCall","src":"1343:12:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1333:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1371:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"1376:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1364:6:23"},"nodeType":"YulFunctionCall","src":"1364:19:23"},"nodeType":"YulExpressionStatement","src":"1364:19:23"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1431:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1438:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1427:3:23"},"nodeType":"YulFunctionCall","src":"1427:16:23"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1449:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"1454:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1445:3:23"},"nodeType":"YulFunctionCall","src":"1445:14:23"},{"name":"length","nodeType":"YulIdentifier","src":"1461:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1392:34:23"},"nodeType":"YulFunctionCall","src":"1392:76:23"},"nodeType":"YulExpressionStatement","src":"1392:76:23"},{"nodeType":"YulAssignment","src":"1477:57:23","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1492:3:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1505:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1513:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1501:3:23"},"nodeType":"YulFunctionCall","src":"1501:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1522:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1518:3:23"},"nodeType":"YulFunctionCall","src":"1518:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1497:3:23"},"nodeType":"YulFunctionCall","src":"1497:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1488:3:23"},"nodeType":"YulFunctionCall","src":"1488:39:23"},{"kind":"number","nodeType":"YulLiteral","src":"1529:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1484:3:23"},"nodeType":"YulFunctionCall","src":"1484:50:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1477:3:23"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1296:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1303:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1311:3:23","type":""}],"src":"1269:271:23"},{"body":{"nodeType":"YulBlock","src":"1666:99:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1676:6:23"},"nodeType":"YulFunctionCall","src":"1676:21:23"},"nodeType":"YulExpressionStatement","src":"1676:21:23"},{"nodeType":"YulAssignment","src":"1706:53:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1732:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1744:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1755:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1740:3:23"},"nodeType":"YulFunctionCall","src":"1740:18:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1714:17:23"},"nodeType":"YulFunctionCall","src":"1714:45:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1706:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1635:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1646:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1657:4:23","type":""}],"src":"1545:220:23"},{"body":{"nodeType":"YulBlock","src":"1840:110:23","statements":[{"body":{"nodeType":"YulBlock","src":"1886:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1895:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1898:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1888:6:23"},"nodeType":"YulFunctionCall","src":"1888:12:23"},"nodeType":"YulExpressionStatement","src":"1888:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1861:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1870:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1857:3:23"},"nodeType":"YulFunctionCall","src":"1857:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1882:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1853:3:23"},"nodeType":"YulFunctionCall","src":"1853:32:23"},"nodeType":"YulIf","src":"1850:52:23"},{"nodeType":"YulAssignment","src":"1911:33:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1934:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1921:12:23"},"nodeType":"YulFunctionCall","src":"1921:23:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1911:6:23"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1806:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1817:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1829:6:23","type":""}],"src":"1770:180:23"},{"body":{"nodeType":"YulBlock","src":"2056:102:23","statements":[{"nodeType":"YulAssignment","src":"2066:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2078:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2089:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2074:3:23"},"nodeType":"YulFunctionCall","src":"2074:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2066:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2108:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2123:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2139:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2144:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2135:3:23"},"nodeType":"YulFunctionCall","src":"2135:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"2148:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2131:3:23"},"nodeType":"YulFunctionCall","src":"2131:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2119:3:23"},"nodeType":"YulFunctionCall","src":"2119:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2101:6:23"},"nodeType":"YulFunctionCall","src":"2101:51:23"},"nodeType":"YulExpressionStatement","src":"2101:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2025:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2036:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2047:4:23","type":""}],"src":"1955:203:23"},{"body":{"nodeType":"YulBlock","src":"2250:237:23","statements":[{"body":{"nodeType":"YulBlock","src":"2296:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2305:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2308:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2298:6:23"},"nodeType":"YulFunctionCall","src":"2298:12:23"},"nodeType":"YulExpressionStatement","src":"2298:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2271:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2280:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2267:3:23"},"nodeType":"YulFunctionCall","src":"2267:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2292:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2263:3:23"},"nodeType":"YulFunctionCall","src":"2263:32:23"},"nodeType":"YulIf","src":"2260:52:23"},{"nodeType":"YulVariableDeclaration","src":"2321:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2347:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2334:12:23"},"nodeType":"YulFunctionCall","src":"2334:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2325:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2400:5:23"}],"functionName":{"name":"validator_revert_contract_IHValue","nodeType":"YulIdentifier","src":"2366:33:23"},"nodeType":"YulFunctionCall","src":"2366:40:23"},"nodeType":"YulExpressionStatement","src":"2366:40:23"},{"nodeType":"YulAssignment","src":"2415:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"2425:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2415:6:23"}]},{"nodeType":"YulAssignment","src":"2439:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2466:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2477:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2462:3:23"},"nodeType":"YulFunctionCall","src":"2462:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2449:12:23"},"nodeType":"YulFunctionCall","src":"2449:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2439:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2208:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2219:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2231:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2239:6:23","type":""}],"src":"2163:324:23"},{"body":{"nodeType":"YulBlock","src":"2593:76:23","statements":[{"nodeType":"YulAssignment","src":"2603:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2615:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2626:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2611:3:23"},"nodeType":"YulFunctionCall","src":"2611:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2603:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2645:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"2656:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2638:6:23"},"nodeType":"YulFunctionCall","src":"2638:25:23"},"nodeType":"YulExpressionStatement","src":"2638:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2562:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2573:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2584:4:23","type":""}],"src":"2492:177:23"},{"body":{"nodeType":"YulBlock","src":"2761:161:23","statements":[{"body":{"nodeType":"YulBlock","src":"2807:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2816:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2819:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2809:6:23"},"nodeType":"YulFunctionCall","src":"2809:12:23"},"nodeType":"YulExpressionStatement","src":"2809:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2782:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2791:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2778:3:23"},"nodeType":"YulFunctionCall","src":"2778:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2803:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2774:3:23"},"nodeType":"YulFunctionCall","src":"2774:32:23"},"nodeType":"YulIf","src":"2771:52:23"},{"nodeType":"YulAssignment","src":"2832:33:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2855:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2842:12:23"},"nodeType":"YulFunctionCall","src":"2842:23:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2832:6:23"}]},{"nodeType":"YulAssignment","src":"2874:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2901:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2912:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2897:3:23"},"nodeType":"YulFunctionCall","src":"2897:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2884:12:23"},"nodeType":"YulFunctionCall","src":"2884:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2874:6:23"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2719:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2730:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2742:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2750:6:23","type":""}],"src":"2674:248:23"},{"body":{"nodeType":"YulBlock","src":"2959:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2976:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2983:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2988:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2979:3:23"},"nodeType":"YulFunctionCall","src":"2979:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2969:6:23"},"nodeType":"YulFunctionCall","src":"2969:31:23"},"nodeType":"YulExpressionStatement","src":"2969:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3016:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3019:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3009:6:23"},"nodeType":"YulFunctionCall","src":"3009:15:23"},"nodeType":"YulExpressionStatement","src":"3009:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3040:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3043:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3033:6:23"},"nodeType":"YulFunctionCall","src":"3033:15:23"},"nodeType":"YulExpressionStatement","src":"3033:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2927:127:23"},{"body":{"nodeType":"YulBlock","src":"3134:557:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3144:28:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3154:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3148:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3199:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3201:16:23"},"nodeType":"YulFunctionCall","src":"3201:18:23"},"nodeType":"YulExpressionStatement","src":"3201:18:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3187:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"3195:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3184:2:23"},"nodeType":"YulFunctionCall","src":"3184:14:23"},"nodeType":"YulIf","src":"3181:40:23"},{"nodeType":"YulVariableDeclaration","src":"3230:17:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3244:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3240:3:23"},"nodeType":"YulFunctionCall","src":"3240:7:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3234:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3256:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3276:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3270:5:23"},"nodeType":"YulFunctionCall","src":"3270:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3260:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3288:73:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3310:6:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3334:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3342:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3330:3:23"},"nodeType":"YulFunctionCall","src":"3330:15:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3347:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3326:3:23"},"nodeType":"YulFunctionCall","src":"3326:24:23"},{"kind":"number","nodeType":"YulLiteral","src":"3352:2:23","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3322:3:23"},"nodeType":"YulFunctionCall","src":"3322:33:23"},{"name":"_2","nodeType":"YulIdentifier","src":"3357:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3318:3:23"},"nodeType":"YulFunctionCall","src":"3318:42:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3306:3:23"},"nodeType":"YulFunctionCall","src":"3306:55:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3292:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3420:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3422:16:23"},"nodeType":"YulFunctionCall","src":"3422:18:23"},"nodeType":"YulExpressionStatement","src":"3422:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3379:10:23"},{"name":"_1","nodeType":"YulIdentifier","src":"3391:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3376:2:23"},"nodeType":"YulFunctionCall","src":"3376:18:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3399:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3411:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3396:2:23"},"nodeType":"YulFunctionCall","src":"3396:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3373:2:23"},"nodeType":"YulFunctionCall","src":"3373:46:23"},"nodeType":"YulIf","src":"3370:72:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3458:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3462:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3451:6:23"},"nodeType":"YulFunctionCall","src":"3451:22:23"},"nodeType":"YulExpressionStatement","src":"3451:22:23"},{"nodeType":"YulAssignment","src":"3482:15:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3491:6:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3482:5:23"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3513:6:23"},{"name":"length","nodeType":"YulIdentifier","src":"3521:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3506:6:23"},"nodeType":"YulFunctionCall","src":"3506:22:23"},"nodeType":"YulExpressionStatement","src":"3506:22:23"},{"body":{"nodeType":"YulBlock","src":"3566:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3575:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3578:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3568:6:23"},"nodeType":"YulFunctionCall","src":"3568:12:23"},"nodeType":"YulExpressionStatement","src":"3568:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3547:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"3552:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3543:3:23"},"nodeType":"YulFunctionCall","src":"3543:16:23"},{"name":"end","nodeType":"YulIdentifier","src":"3561:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3540:2:23"},"nodeType":"YulFunctionCall","src":"3540:25:23"},"nodeType":"YulIf","src":"3537:45:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3608:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3616:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3604:3:23"},"nodeType":"YulFunctionCall","src":"3604:17:23"},{"name":"src","nodeType":"YulIdentifier","src":"3623:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"3628:6:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3591:12:23"},"nodeType":"YulFunctionCall","src":"3591:44:23"},"nodeType":"YulExpressionStatement","src":"3591:44:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3659:6:23"},{"name":"length","nodeType":"YulIdentifier","src":"3667:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3655:3:23"},"nodeType":"YulFunctionCall","src":"3655:19:23"},{"kind":"number","nodeType":"YulLiteral","src":"3676:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3651:3:23"},"nodeType":"YulFunctionCall","src":"3651:30:23"},{"kind":"number","nodeType":"YulLiteral","src":"3683:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3644:6:23"},"nodeType":"YulFunctionCall","src":"3644:41:23"},"nodeType":"YulExpressionStatement","src":"3644:41:23"}]},"name":"abi_decode_available_length_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3103:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"3108:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"3116:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3124:5:23","type":""}],"src":"3059:632:23"},{"body":{"nodeType":"YulBlock","src":"3749:169:23","statements":[{"body":{"nodeType":"YulBlock","src":"3798:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:23"},"nodeType":"YulFunctionCall","src":"3800:12:23"},"nodeType":"YulExpressionStatement","src":"3800:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3777:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3785:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3773:3:23"},"nodeType":"YulFunctionCall","src":"3773:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"3792:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3769:3:23"},"nodeType":"YulFunctionCall","src":"3769:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3762:6:23"},"nodeType":"YulFunctionCall","src":"3762:35:23"},"nodeType":"YulIf","src":"3759:55:23"},{"nodeType":"YulAssignment","src":"3823:89:23","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3871:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3879:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3867:3:23"},"nodeType":"YulFunctionCall","src":"3867:17:23"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3899:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3886:12:23"},"nodeType":"YulFunctionCall","src":"3886:20:23"},{"name":"end","nodeType":"YulIdentifier","src":"3908:3:23"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"3832:34:23"},"nodeType":"YulFunctionCall","src":"3832:80:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3823:5:23"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3723:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"3731:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3739:5:23","type":""}],"src":"3696:222:23"},{"body":{"nodeType":"YulBlock","src":"4054:472:23","statements":[{"body":{"nodeType":"YulBlock","src":"4101:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4110:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4113:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4103:6:23"},"nodeType":"YulFunctionCall","src":"4103:12:23"},"nodeType":"YulExpressionStatement","src":"4103:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4075:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4084:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4071:3:23"},"nodeType":"YulFunctionCall","src":"4071:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4096:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4067:3:23"},"nodeType":"YulFunctionCall","src":"4067:33:23"},"nodeType":"YulIf","src":"4064:53:23"},{"nodeType":"YulVariableDeclaration","src":"4126:37:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4153:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4140:12:23"},"nodeType":"YulFunctionCall","src":"4140:23:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4130:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4206:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4215:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4218:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4208:6:23"},"nodeType":"YulFunctionCall","src":"4208:12:23"},"nodeType":"YulExpressionStatement","src":"4208:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4178:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"4186:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4175:2:23"},"nodeType":"YulFunctionCall","src":"4175:30:23"},"nodeType":"YulIf","src":"4172:50:23"},{"nodeType":"YulAssignment","src":"4231:60:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4263:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4274:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4259:3:23"},"nodeType":"YulFunctionCall","src":"4259:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4283:7:23"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4241:17:23"},"nodeType":"YulFunctionCall","src":"4241:50:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4231:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"4300:45:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4330:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4341:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4326:3:23"},"nodeType":"YulFunctionCall","src":"4326:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4313:12:23"},"nodeType":"YulFunctionCall","src":"4313:32:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4304:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4388:5:23"}],"functionName":{"name":"validator_revert_contract_IHValue","nodeType":"YulIdentifier","src":"4354:33:23"},"nodeType":"YulFunctionCall","src":"4354:40:23"},"nodeType":"YulExpressionStatement","src":"4354:40:23"},{"nodeType":"YulAssignment","src":"4403:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"4413:5:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4403:6:23"}]},{"nodeType":"YulAssignment","src":"4427:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4454:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4465:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4450:3:23"},"nodeType":"YulFunctionCall","src":"4450:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4437:12:23"},"nodeType":"YulFunctionCall","src":"4437:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4427:6:23"}]},{"nodeType":"YulAssignment","src":"4478:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4505:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4516:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4501:3:23"},"nodeType":"YulFunctionCall","src":"4501:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4488:12:23"},"nodeType":"YulFunctionCall","src":"4488:32:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4478:6:23"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3996:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4007:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4019:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4027:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4035:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4043:6:23","type":""}],"src":"3923:603:23"},{"body":{"nodeType":"YulBlock","src":"4635:370:23","statements":[{"body":{"nodeType":"YulBlock","src":"4681:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4690:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4693:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4683:6:23"},"nodeType":"YulFunctionCall","src":"4683:12:23"},"nodeType":"YulExpressionStatement","src":"4683:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4656:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4665:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4652:3:23"},"nodeType":"YulFunctionCall","src":"4652:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4677:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4648:3:23"},"nodeType":"YulFunctionCall","src":"4648:32:23"},"nodeType":"YulIf","src":"4645:52:23"},{"nodeType":"YulVariableDeclaration","src":"4706:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4732:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4719:12:23"},"nodeType":"YulFunctionCall","src":"4719:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4710:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4785:5:23"}],"functionName":{"name":"validator_revert_contract_IHValue","nodeType":"YulIdentifier","src":"4751:33:23"},"nodeType":"YulFunctionCall","src":"4751:40:23"},"nodeType":"YulExpressionStatement","src":"4751:40:23"},{"nodeType":"YulAssignment","src":"4800:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"4810:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4800:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"4824:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4856:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4867:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4852:3:23"},"nodeType":"YulFunctionCall","src":"4852:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4839:12:23"},"nodeType":"YulFunctionCall","src":"4839:32:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4828:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4914:7:23"}],"functionName":{"name":"validator_revert_contract_IHValue","nodeType":"YulIdentifier","src":"4880:33:23"},"nodeType":"YulFunctionCall","src":"4880:42:23"},"nodeType":"YulExpressionStatement","src":"4880:42:23"},{"nodeType":"YulAssignment","src":"4931:17:23","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4941:7:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4931:6:23"}]},{"nodeType":"YulAssignment","src":"4957:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4984:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4995:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4980:3:23"},"nodeType":"YulFunctionCall","src":"4980:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4967:12:23"},"nodeType":"YulFunctionCall","src":"4967:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4957:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4585:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4596:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4608:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4616:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4624:6:23","type":""}],"src":"4531:474:23"},{"body":{"nodeType":"YulBlock","src":"5080:186:23","statements":[{"body":{"nodeType":"YulBlock","src":"5126:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5135:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5138:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5128:6:23"},"nodeType":"YulFunctionCall","src":"5128:12:23"},"nodeType":"YulExpressionStatement","src":"5128:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5101:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"5110:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5097:3:23"},"nodeType":"YulFunctionCall","src":"5097:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"5122:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5093:3:23"},"nodeType":"YulFunctionCall","src":"5093:32:23"},"nodeType":"YulIf","src":"5090:52:23"},{"nodeType":"YulVariableDeclaration","src":"5151:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5177:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5164:12:23"},"nodeType":"YulFunctionCall","src":"5164:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5155:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5230:5:23"}],"functionName":{"name":"validator_revert_contract_IHValue","nodeType":"YulIdentifier","src":"5196:33:23"},"nodeType":"YulFunctionCall","src":"5196:40:23"},"nodeType":"YulExpressionStatement","src":"5196:40:23"},{"nodeType":"YulAssignment","src":"5245:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"5255:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5245:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5046:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5057:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5069:6:23","type":""}],"src":"5010:256:23"},{"body":{"nodeType":"YulBlock","src":"5388:102:23","statements":[{"nodeType":"YulAssignment","src":"5398:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5410:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5421:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5406:3:23"},"nodeType":"YulFunctionCall","src":"5406:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5398:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5440:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5455:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5471:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5476:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5467:3:23"},"nodeType":"YulFunctionCall","src":"5467:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"5480:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5463:3:23"},"nodeType":"YulFunctionCall","src":"5463:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5451:3:23"},"nodeType":"YulFunctionCall","src":"5451:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5433:6:23"},"nodeType":"YulFunctionCall","src":"5433:51:23"},"nodeType":"YulExpressionStatement","src":"5433:51:23"}]},"name":"abi_encode_tuple_t_contract$_IHValue_$5990__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5357:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5368:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5379:4:23","type":""}],"src":"5271:219:23"},{"body":{"nodeType":"YulBlock","src":"5575:242:23","statements":[{"body":{"nodeType":"YulBlock","src":"5621:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5630:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5633:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5623:6:23"},"nodeType":"YulFunctionCall","src":"5623:12:23"},"nodeType":"YulExpressionStatement","src":"5623:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5596:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"5605:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5592:3:23"},"nodeType":"YulFunctionCall","src":"5592:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"5617:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5588:3:23"},"nodeType":"YulFunctionCall","src":"5588:32:23"},"nodeType":"YulIf","src":"5585:52:23"},{"nodeType":"YulVariableDeclaration","src":"5646:37:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5673:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5660:12:23"},"nodeType":"YulFunctionCall","src":"5660:23:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5650:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5726:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5735:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5738:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5728:6:23"},"nodeType":"YulFunctionCall","src":"5728:12:23"},"nodeType":"YulExpressionStatement","src":"5728:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5698:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"5706:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5695:2:23"},"nodeType":"YulFunctionCall","src":"5695:30:23"},"nodeType":"YulIf","src":"5692:50:23"},{"nodeType":"YulAssignment","src":"5751:60:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5783:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5794:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5779:3:23"},"nodeType":"YulFunctionCall","src":"5779:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5803:7:23"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5761:17:23"},"nodeType":"YulFunctionCall","src":"5761:50:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5751:6:23"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5541:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5552:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5564:6:23","type":""}],"src":"5495:322:23"},{"body":{"nodeType":"YulBlock","src":"5906:341:23","statements":[{"body":{"nodeType":"YulBlock","src":"5952:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5961:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5964:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5954:6:23"},"nodeType":"YulFunctionCall","src":"5954:12:23"},"nodeType":"YulExpressionStatement","src":"5954:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5927:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"5936:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5923:3:23"},"nodeType":"YulFunctionCall","src":"5923:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"5948:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5919:3:23"},"nodeType":"YulFunctionCall","src":"5919:32:23"},"nodeType":"YulIf","src":"5916:52:23"},{"nodeType":"YulVariableDeclaration","src":"5977:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6003:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5990:12:23"},"nodeType":"YulFunctionCall","src":"5990:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5981:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6056:5:23"}],"functionName":{"name":"validator_revert_contract_IHValue","nodeType":"YulIdentifier","src":"6022:33:23"},"nodeType":"YulFunctionCall","src":"6022:40:23"},"nodeType":"YulExpressionStatement","src":"6022:40:23"},{"nodeType":"YulAssignment","src":"6071:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"6081:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6071:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"6095:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6127:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6138:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6123:3:23"},"nodeType":"YulFunctionCall","src":"6123:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6110:12:23"},"nodeType":"YulFunctionCall","src":"6110:32:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6099:7:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6199:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6208:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6211:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6201:6:23"},"nodeType":"YulFunctionCall","src":"6201:12:23"},"nodeType":"YulExpressionStatement","src":"6201:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6164:7:23"},{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6187:7:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6180:6:23"},"nodeType":"YulFunctionCall","src":"6180:15:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6173:6:23"},"nodeType":"YulFunctionCall","src":"6173:23:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6161:2:23"},"nodeType":"YulFunctionCall","src":"6161:36:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6154:6:23"},"nodeType":"YulFunctionCall","src":"6154:44:23"},"nodeType":"YulIf","src":"6151:64:23"},{"nodeType":"YulAssignment","src":"6224:17:23","value":{"name":"value_1","nodeType":"YulIdentifier","src":"6234:7:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6224:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5864:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5875:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5887:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5895:6:23","type":""}],"src":"5822:425:23"},{"body":{"nodeType":"YulBlock","src":"6382:683:23","statements":[{"body":{"nodeType":"YulBlock","src":"6429:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6438:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6441:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6431:6:23"},"nodeType":"YulFunctionCall","src":"6431:12:23"},"nodeType":"YulExpressionStatement","src":"6431:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6403:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"6412:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6399:3:23"},"nodeType":"YulFunctionCall","src":"6399:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"6424:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6395:3:23"},"nodeType":"YulFunctionCall","src":"6395:33:23"},"nodeType":"YulIf","src":"6392:53:23"},{"nodeType":"YulVariableDeclaration","src":"6454:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6480:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6467:12:23"},"nodeType":"YulFunctionCall","src":"6467:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6458:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6533:5:23"}],"functionName":{"name":"validator_revert_contract_IHValue","nodeType":"YulIdentifier","src":"6499:33:23"},"nodeType":"YulFunctionCall","src":"6499:40:23"},"nodeType":"YulExpressionStatement","src":"6499:40:23"},{"nodeType":"YulAssignment","src":"6548:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"6558:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6548:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"6572:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6604:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6615:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6600:3:23"},"nodeType":"YulFunctionCall","src":"6600:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6587:12:23"},"nodeType":"YulFunctionCall","src":"6587:32:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6576:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6662:7:23"}],"functionName":{"name":"validator_revert_contract_IHValue","nodeType":"YulIdentifier","src":"6628:33:23"},"nodeType":"YulFunctionCall","src":"6628:42:23"},"nodeType":"YulExpressionStatement","src":"6628:42:23"},{"nodeType":"YulAssignment","src":"6679:17:23","value":{"name":"value_1","nodeType":"YulIdentifier","src":"6689:7:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6679:6:23"}]},{"nodeType":"YulAssignment","src":"6705:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6732:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6743:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6728:3:23"},"nodeType":"YulFunctionCall","src":"6728:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6715:12:23"},"nodeType":"YulFunctionCall","src":"6715:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6705:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"6756:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6787:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6798:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6783:3:23"},"nodeType":"YulFunctionCall","src":"6783:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6770:12:23"},"nodeType":"YulFunctionCall","src":"6770:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6760:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6845:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6854:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6857:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6847:6:23"},"nodeType":"YulFunctionCall","src":"6847:12:23"},"nodeType":"YulExpressionStatement","src":"6847:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6817:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"6825:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6814:2:23"},"nodeType":"YulFunctionCall","src":"6814:30:23"},"nodeType":"YulIf","src":"6811:50:23"},{"nodeType":"YulVariableDeclaration","src":"6870:32:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6884:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"6895:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6880:3:23"},"nodeType":"YulFunctionCall","src":"6880:22:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6874:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6950:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6959:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6962:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6952:6:23"},"nodeType":"YulFunctionCall","src":"6952:12:23"},"nodeType":"YulExpressionStatement","src":"6952:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6929:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"6933:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:23"},"nodeType":"YulFunctionCall","src":"6925:13:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6940:7:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6921:3:23"},"nodeType":"YulFunctionCall","src":"6921:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6914:6:23"},"nodeType":"YulFunctionCall","src":"6914:35:23"},"nodeType":"YulIf","src":"6911:55:23"},{"nodeType":"YulAssignment","src":"6975:84:23","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7024:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"7028:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7020:3:23"},"nodeType":"YulFunctionCall","src":"7020:11:23"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7046:2:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7033:12:23"},"nodeType":"YulFunctionCall","src":"7033:16:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7051:7:23"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"6985:34:23"},"nodeType":"YulFunctionCall","src":"6985:74:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6975:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6324:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6335:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6347:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6355:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6363:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6371:6:23","type":""}],"src":"6252:813:23"},{"body":{"nodeType":"YulBlock","src":"7157:319:23","statements":[{"body":{"nodeType":"YulBlock","src":"7203:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7212:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7215:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7205:6:23"},"nodeType":"YulFunctionCall","src":"7205:12:23"},"nodeType":"YulExpressionStatement","src":"7205:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7178:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"7187:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7174:3:23"},"nodeType":"YulFunctionCall","src":"7174:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"7199:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7170:3:23"},"nodeType":"YulFunctionCall","src":"7170:32:23"},"nodeType":"YulIf","src":"7167:52:23"},{"nodeType":"YulVariableDeclaration","src":"7228:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7254:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7241:12:23"},"nodeType":"YulFunctionCall","src":"7241:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7232:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7307:5:23"}],"functionName":{"name":"validator_revert_contract_IHValue","nodeType":"YulIdentifier","src":"7273:33:23"},"nodeType":"YulFunctionCall","src":"7273:40:23"},"nodeType":"YulExpressionStatement","src":"7273:40:23"},{"nodeType":"YulAssignment","src":"7322:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"7332:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7322:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"7346:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7378:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7389:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7374:3:23"},"nodeType":"YulFunctionCall","src":"7374:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7361:12:23"},"nodeType":"YulFunctionCall","src":"7361:32:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7350:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7436:7:23"}],"functionName":{"name":"validator_revert_contract_IHValue","nodeType":"YulIdentifier","src":"7402:33:23"},"nodeType":"YulFunctionCall","src":"7402:42:23"},"nodeType":"YulExpressionStatement","src":"7402:42:23"},{"nodeType":"YulAssignment","src":"7453:17:23","value":{"name":"value_1","nodeType":"YulIdentifier","src":"7463:7:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7453:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7115:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7126:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7138:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7146:6:23","type":""}],"src":"7070:406:23"},{"body":{"nodeType":"YulBlock","src":"7655:223:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7672:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7683:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7665:6:23"},"nodeType":"YulFunctionCall","src":"7665:21:23"},"nodeType":"YulExpressionStatement","src":"7665:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7706:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7717:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7702:3:23"},"nodeType":"YulFunctionCall","src":"7702:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"7722:2:23","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7695:6:23"},"nodeType":"YulFunctionCall","src":"7695:30:23"},"nodeType":"YulExpressionStatement","src":"7695:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7745:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7756:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7741:3:23"},"nodeType":"YulFunctionCall","src":"7741:18:23"},{"hexValue":"4861736850756e6b3a2063616c6c6572206973206e6f7420746865206f776e65","kind":"string","nodeType":"YulLiteral","src":"7761:34:23","type":"","value":"HashPunk: caller is not the owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7734:6:23"},"nodeType":"YulFunctionCall","src":"7734:62:23"},"nodeType":"YulExpressionStatement","src":"7734:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7816:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7827:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7812:3:23"},"nodeType":"YulFunctionCall","src":"7812:18:23"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"7832:3:23","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7805:6:23"},"nodeType":"YulFunctionCall","src":"7805:31:23"},"nodeType":"YulExpressionStatement","src":"7805:31:23"},{"nodeType":"YulAssignment","src":"7845:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7857:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7868:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7853:3:23"},"nodeType":"YulFunctionCall","src":"7853:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7845:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_71947446ca525a6f47b4c26e39d45a716107b5eb5547cf11856e8d61c0fa00ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7632:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7646:4:23","type":""}],"src":"7481:397:23"},{"body":{"nodeType":"YulBlock","src":"7938:325:23","statements":[{"nodeType":"YulAssignment","src":"7948:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7962:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7965:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7958:3:23"},"nodeType":"YulFunctionCall","src":"7958:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7948:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"7979:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8009:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"8015:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8005:3:23"},"nodeType":"YulFunctionCall","src":"8005:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7983:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"8056:31:23","statements":[{"nodeType":"YulAssignment","src":"8058:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8080:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8068:3:23"},"nodeType":"YulFunctionCall","src":"8068:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8058:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8036:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8029:6:23"},"nodeType":"YulFunctionCall","src":"8029:26:23"},"nodeType":"YulIf","src":"8026:61:23"},{"body":{"nodeType":"YulBlock","src":"8146:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8167:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8174:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8179:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8170:3:23"},"nodeType":"YulFunctionCall","src":"8170:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8160:6:23"},"nodeType":"YulFunctionCall","src":"8160:31:23"},"nodeType":"YulExpressionStatement","src":"8160:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8211:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8214:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8204:6:23"},"nodeType":"YulFunctionCall","src":"8204:15:23"},"nodeType":"YulExpressionStatement","src":"8204:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8239:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8242:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8232:6:23"},"nodeType":"YulFunctionCall","src":"8232:15:23"},"nodeType":"YulExpressionStatement","src":"8232:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8102:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8125:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8133:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8122:2:23"},"nodeType":"YulFunctionCall","src":"8122:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8099:2:23"},"nodeType":"YulFunctionCall","src":"8099:38:23"},"nodeType":"YulIf","src":"8096:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7918:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7927:6:23","type":""}],"src":"7883:380:23"},{"body":{"nodeType":"YulBlock","src":"8442:234:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8459:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8470:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8452:6:23"},"nodeType":"YulFunctionCall","src":"8452:21:23"},"nodeType":"YulExpressionStatement","src":"8452:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8493:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8504:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8489:3:23"},"nodeType":"YulFunctionCall","src":"8489:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"8509:2:23","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8482:6:23"},"nodeType":"YulFunctionCall","src":"8482:30:23"},"nodeType":"YulExpressionStatement","src":"8482:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8532:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8543:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8528:3:23"},"nodeType":"YulFunctionCall","src":"8528:18:23"},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"8548:34:23","type":"","value":"ERC721: approved query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8521:6:23"},"nodeType":"YulFunctionCall","src":"8521:62:23"},"nodeType":"YulExpressionStatement","src":"8521:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8603:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8614:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8599:3:23"},"nodeType":"YulFunctionCall","src":"8599:18:23"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"8619:14:23","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8592:6:23"},"nodeType":"YulFunctionCall","src":"8592:42:23"},"nodeType":"YulExpressionStatement","src":"8592:42:23"},{"nodeType":"YulAssignment","src":"8643:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8655:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8666:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8651:3:23"},"nodeType":"YulFunctionCall","src":"8651:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8643:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8419:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8433:4:23","type":""}],"src":"8268:408:23"},{"body":{"nodeType":"YulBlock","src":"8855:223:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8872:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8883:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8865:6:23"},"nodeType":"YulFunctionCall","src":"8865:21:23"},"nodeType":"YulExpressionStatement","src":"8865:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8906:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8917:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8902:3:23"},"nodeType":"YulFunctionCall","src":"8902:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"8922:2:23","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8895:6:23"},"nodeType":"YulFunctionCall","src":"8895:30:23"},"nodeType":"YulExpressionStatement","src":"8895:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8945:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8956:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8941:3:23"},"nodeType":"YulFunctionCall","src":"8941:18:23"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"8961:34:23","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8934:6:23"},"nodeType":"YulFunctionCall","src":"8934:62:23"},"nodeType":"YulExpressionStatement","src":"8934:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9016:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9027:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9012:3:23"},"nodeType":"YulFunctionCall","src":"9012:18:23"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"9032:3:23","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9005:6:23"},"nodeType":"YulFunctionCall","src":"9005:31:23"},"nodeType":"YulExpressionStatement","src":"9005:31:23"},{"nodeType":"YulAssignment","src":"9045:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9057:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9068:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9053:3:23"},"nodeType":"YulFunctionCall","src":"9053:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9045:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8832:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8846:4:23","type":""}],"src":"8681:397:23"},{"body":{"nodeType":"YulBlock","src":"9257:246:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9274:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9285:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9267:6:23"},"nodeType":"YulFunctionCall","src":"9267:21:23"},"nodeType":"YulExpressionStatement","src":"9267:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9308:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9319:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9304:3:23"},"nodeType":"YulFunctionCall","src":"9304:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"9324:2:23","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9297:6:23"},"nodeType":"YulFunctionCall","src":"9297:30:23"},"nodeType":"YulExpressionStatement","src":"9297:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9347:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9358:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9343:3:23"},"nodeType":"YulFunctionCall","src":"9343:18:23"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77","kind":"string","nodeType":"YulLiteral","src":"9363:34:23","type":"","value":"ERC721: approve caller is not ow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9336:6:23"},"nodeType":"YulFunctionCall","src":"9336:62:23"},"nodeType":"YulExpressionStatement","src":"9336:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9418:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9429:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9414:3:23"},"nodeType":"YulFunctionCall","src":"9414:18:23"},{"hexValue":"6e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"9434:26:23","type":"","value":"ner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9407:6:23"},"nodeType":"YulFunctionCall","src":"9407:54:23"},"nodeType":"YulExpressionStatement","src":"9407:54:23"},{"nodeType":"YulAssignment","src":"9470:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9482:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9493:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9478:3:23"},"nodeType":"YulFunctionCall","src":"9478:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9470:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9234:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9248:4:23","type":""}],"src":"9083:420:23"},{"body":{"nodeType":"YulBlock","src":"9540:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9557:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9564:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9569:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9560:3:23"},"nodeType":"YulFunctionCall","src":"9560:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9550:6:23"},"nodeType":"YulFunctionCall","src":"9550:31:23"},"nodeType":"YulExpressionStatement","src":"9550:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9597:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9600:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9590:6:23"},"nodeType":"YulFunctionCall","src":"9590:15:23"},"nodeType":"YulExpressionStatement","src":"9590:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9621:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9624:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9614:6:23"},"nodeType":"YulFunctionCall","src":"9614:15:23"},"nodeType":"YulExpressionStatement","src":"9614:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9508:127:23"},{"body":{"nodeType":"YulBlock","src":"9689:79:23","statements":[{"nodeType":"YulAssignment","src":"9699:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9711:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"9714:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9707:3:23"},"nodeType":"YulFunctionCall","src":"9707:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9699:4:23"}]},{"body":{"nodeType":"YulBlock","src":"9740:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9742:16:23"},"nodeType":"YulFunctionCall","src":"9742:18:23"},"nodeType":"YulExpressionStatement","src":"9742:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9731:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"9737:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9728:2:23"},"nodeType":"YulFunctionCall","src":"9728:11:23"},"nodeType":"YulIf","src":"9725:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9671:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"9674:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9680:4:23","type":""}],"src":"9640:128:23"},{"body":{"nodeType":"YulBlock","src":"9947:110:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9964:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9975:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9957:6:23"},"nodeType":"YulFunctionCall","src":"9957:21:23"},"nodeType":"YulExpressionStatement","src":"9957:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9998:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10009:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9994:3:23"},"nodeType":"YulFunctionCall","src":"9994:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"10014:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9987:6:23"},"nodeType":"YulFunctionCall","src":"9987:29:23"},"nodeType":"YulExpressionStatement","src":"9987:29:23"},{"nodeType":"YulAssignment","src":"10025:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10037:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10048:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10033:3:23"},"nodeType":"YulFunctionCall","src":"10033:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10025:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9924:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9938:4:23","type":""}],"src":"9773:284:23"},{"body":{"nodeType":"YulBlock","src":"10236:160:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10253:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10264:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10246:6:23"},"nodeType":"YulFunctionCall","src":"10246:21:23"},"nodeType":"YulExpressionStatement","src":"10246:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10287:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10298:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10283:3:23"},"nodeType":"YulFunctionCall","src":"10283:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"10303:2:23","type":"","value":"10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10276:6:23"},"nodeType":"YulFunctionCall","src":"10276:30:23"},"nodeType":"YulExpressionStatement","src":"10276:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10326:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10337:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10322:3:23"},"nodeType":"YulFunctionCall","src":"10322:18:23"},{"hexValue":"696e76616c6964206964","kind":"string","nodeType":"YulLiteral","src":"10342:12:23","type":"","value":"invalid id"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10315:6:23"},"nodeType":"YulFunctionCall","src":"10315:40:23"},"nodeType":"YulExpressionStatement","src":"10315:40:23"},{"nodeType":"YulAssignment","src":"10364:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10376:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10387:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10372:3:23"},"nodeType":"YulFunctionCall","src":"10372:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10364:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10213:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10227:4:23","type":""}],"src":"10062:334:23"},{"body":{"nodeType":"YulBlock","src":"10453:116:23","statements":[{"nodeType":"YulAssignment","src":"10463:20:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10478:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"10481:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10474:3:23"},"nodeType":"YulFunctionCall","src":"10474:9:23"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"10463:7:23"}]},{"body":{"nodeType":"YulBlock","src":"10541:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10543:16:23"},"nodeType":"YulFunctionCall","src":"10543:18:23"},"nodeType":"YulExpressionStatement","src":"10543:18:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10512:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10505:6:23"},"nodeType":"YulFunctionCall","src":"10505:9:23"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10519:1:23"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"10526:7:23"},{"name":"x","nodeType":"YulIdentifier","src":"10535:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10522:3:23"},"nodeType":"YulFunctionCall","src":"10522:15:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10516:2:23"},"nodeType":"YulFunctionCall","src":"10516:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10502:2:23"},"nodeType":"YulFunctionCall","src":"10502:37:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10495:6:23"},"nodeType":"YulFunctionCall","src":"10495:45:23"},"nodeType":"YulIf","src":"10492:71:23"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10432:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"10435:1:23","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"10441:7:23","type":""}],"src":"10401:168:23"},{"body":{"nodeType":"YulBlock","src":"10703:145:23","statements":[{"nodeType":"YulAssignment","src":"10713:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10725:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10736:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10721:3:23"},"nodeType":"YulFunctionCall","src":"10721:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10713:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10755:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10770:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10786:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10791:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10782:3:23"},"nodeType":"YulFunctionCall","src":"10782:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"10795:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10778:3:23"},"nodeType":"YulFunctionCall","src":"10778:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10766:3:23"},"nodeType":"YulFunctionCall","src":"10766:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10748:6:23"},"nodeType":"YulFunctionCall","src":"10748:51:23"},"nodeType":"YulExpressionStatement","src":"10748:51:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10819:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10830:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10815:3:23"},"nodeType":"YulFunctionCall","src":"10815:18:23"},{"name":"value1","nodeType":"YulIdentifier","src":"10835:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10808:6:23"},"nodeType":"YulFunctionCall","src":"10808:34:23"},"nodeType":"YulExpressionStatement","src":"10808:34:23"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10664:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10675:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10683:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10694:4:23","type":""}],"src":"10574:274:23"},{"body":{"nodeType":"YulBlock","src":"10934:103:23","statements":[{"body":{"nodeType":"YulBlock","src":"10980:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10989:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10992:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10982:6:23"},"nodeType":"YulFunctionCall","src":"10982:12:23"},"nodeType":"YulExpressionStatement","src":"10982:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10955:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"10964:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10951:3:23"},"nodeType":"YulFunctionCall","src":"10951:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"10976:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10947:3:23"},"nodeType":"YulFunctionCall","src":"10947:32:23"},"nodeType":"YulIf","src":"10944:52:23"},{"nodeType":"YulAssignment","src":"11005:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11021:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11015:5:23"},"nodeType":"YulFunctionCall","src":"11015:16:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11005:6:23"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10900:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10911:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10923:6:23","type":""}],"src":"10853:184:23"},{"body":{"nodeType":"YulBlock","src":"11216:180:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11233:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11244:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11226:6:23"},"nodeType":"YulFunctionCall","src":"11226:21:23"},"nodeType":"YulExpressionStatement","src":"11226:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11267:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11278:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11263:3:23"},"nodeType":"YulFunctionCall","src":"11263:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"11283:2:23","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11256:6:23"},"nodeType":"YulFunctionCall","src":"11256:30:23"},"nodeType":"YulExpressionStatement","src":"11256:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11306:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11317:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11302:3:23"},"nodeType":"YulFunctionCall","src":"11302:18:23"},{"hexValue":"696e73756666696369656e74205061737320436172642062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"11322:32:23","type":"","value":"insufficient Pass Card balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11295:6:23"},"nodeType":"YulFunctionCall","src":"11295:60:23"},"nodeType":"YulExpressionStatement","src":"11295:60:23"},{"nodeType":"YulAssignment","src":"11364:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11376:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11387:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11372:3:23"},"nodeType":"YulFunctionCall","src":"11372:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11364:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc7e415b4d71800746fd56cd2e9f99a70019c07d161e9e43d2fe64c358808e78__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11193:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11207:4:23","type":""}],"src":"11042:354:23"},{"body":{"nodeType":"YulBlock","src":"11558:188:23","statements":[{"nodeType":"YulAssignment","src":"11568:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11580:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11591:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11576:3:23"},"nodeType":"YulFunctionCall","src":"11576:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11568:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11610:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11625:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11641:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11646:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11637:3:23"},"nodeType":"YulFunctionCall","src":"11637:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"11650:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11633:3:23"},"nodeType":"YulFunctionCall","src":"11633:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11621:3:23"},"nodeType":"YulFunctionCall","src":"11621:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11603:6:23"},"nodeType":"YulFunctionCall","src":"11603:51:23"},"nodeType":"YulExpressionStatement","src":"11603:51:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11674:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11685:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11670:3:23"},"nodeType":"YulFunctionCall","src":"11670:18:23"},{"name":"value1","nodeType":"YulIdentifier","src":"11690:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11663:6:23"},"nodeType":"YulFunctionCall","src":"11663:34:23"},"nodeType":"YulExpressionStatement","src":"11663:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11717:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11728:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11713:3:23"},"nodeType":"YulFunctionCall","src":"11713:18:23"},{"name":"value2","nodeType":"YulIdentifier","src":"11733:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11706:6:23"},"nodeType":"YulFunctionCall","src":"11706:34:23"},"nodeType":"YulExpressionStatement","src":"11706:34:23"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11511:9:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11522:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11530:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11538:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11549:4:23","type":""}],"src":"11401:345:23"},{"body":{"nodeType":"YulBlock","src":"12016:268:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12033:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12048:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12064:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12069:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12060:3:23"},"nodeType":"YulFunctionCall","src":"12060:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"12073:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12056:3:23"},"nodeType":"YulFunctionCall","src":"12056:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12044:3:23"},"nodeType":"YulFunctionCall","src":"12044:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12026:6:23"},"nodeType":"YulFunctionCall","src":"12026:51:23"},"nodeType":"YulExpressionStatement","src":"12026:51:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12097:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12108:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12093:3:23"},"nodeType":"YulFunctionCall","src":"12093:18:23"},{"name":"value1","nodeType":"YulIdentifier","src":"12113:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12086:6:23"},"nodeType":"YulFunctionCall","src":"12086:34:23"},"nodeType":"YulExpressionStatement","src":"12086:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12140:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12151:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12136:3:23"},"nodeType":"YulFunctionCall","src":"12136:18:23"},{"name":"value2","nodeType":"YulIdentifier","src":"12156:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12129:6:23"},"nodeType":"YulFunctionCall","src":"12129:34:23"},"nodeType":"YulExpressionStatement","src":"12129:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12183:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12194:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12179:3:23"},"nodeType":"YulFunctionCall","src":"12179:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"12199:3:23","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12172:6:23"},"nodeType":"YulFunctionCall","src":"12172:31:23"},"nodeType":"YulExpressionStatement","src":"12172:31:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12223:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12234:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12219:3:23"},"nodeType":"YulFunctionCall","src":"12219:19:23"},{"kind":"number","nodeType":"YulLiteral","src":"12240:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12212:6:23"},"nodeType":"YulFunctionCall","src":"12212:30:23"},"nodeType":"YulExpressionStatement","src":"12212:30:23"},{"nodeType":"YulAssignment","src":"12251:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12263:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12274:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12259:3:23"},"nodeType":"YulFunctionCall","src":"12259:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12251:4:23"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11969:9:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11980:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11988:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11996:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12007:4:23","type":""}],"src":"11751:533:23"},{"body":{"nodeType":"YulBlock","src":"12463:177:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12480:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12491:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12473:6:23"},"nodeType":"YulFunctionCall","src":"12473:21:23"},"nodeType":"YulExpressionStatement","src":"12473:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12514:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12525:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12510:3:23"},"nodeType":"YulFunctionCall","src":"12510:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"12530:2:23","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12503:6:23"},"nodeType":"YulFunctionCall","src":"12503:30:23"},"nodeType":"YulExpressionStatement","src":"12503:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12553:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12564:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12549:3:23"},"nodeType":"YulFunctionCall","src":"12549:18:23"},{"hexValue":"696e73756666696369656e74204856616c75652062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12569:29:23","type":"","value":"insufficient HValue balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12542:6:23"},"nodeType":"YulFunctionCall","src":"12542:57:23"},"nodeType":"YulExpressionStatement","src":"12542:57:23"},{"nodeType":"YulAssignment","src":"12608:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12620:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12631:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12616:3:23"},"nodeType":"YulFunctionCall","src":"12616:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12608:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_8dab769bb3e1b4a60276b85ee01ccc68a7073052ca1cb5124502172cc6982bf4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12440:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12454:4:23","type":""}],"src":"12289:351:23"},{"body":{"nodeType":"YulBlock","src":"12677:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12694:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12701:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12706:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12697:3:23"},"nodeType":"YulFunctionCall","src":"12697:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12687:6:23"},"nodeType":"YulFunctionCall","src":"12687:31:23"},"nodeType":"YulExpressionStatement","src":"12687:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12734:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12737:4:23","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12727:6:23"},"nodeType":"YulFunctionCall","src":"12727:15:23"},"nodeType":"YulExpressionStatement","src":"12727:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12758:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12761:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12751:6:23"},"nodeType":"YulFunctionCall","src":"12751:15:23"},"nodeType":"YulExpressionStatement","src":"12751:15:23"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12645:127:23"},{"body":{"nodeType":"YulBlock","src":"12824:88:23","statements":[{"body":{"nodeType":"YulBlock","src":"12855:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12857:16:23"},"nodeType":"YulFunctionCall","src":"12857:18:23"},"nodeType":"YulExpressionStatement","src":"12857:18:23"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12840:5:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12851:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12847:3:23"},"nodeType":"YulFunctionCall","src":"12847:6:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12837:2:23"},"nodeType":"YulFunctionCall","src":"12837:17:23"},"nodeType":"YulIf","src":"12834:43:23"},{"nodeType":"YulAssignment","src":"12886:20:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12897:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"12904:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12893:3:23"},"nodeType":"YulFunctionCall","src":"12893:13:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12886:3:23"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12806:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12816:3:23","type":""}],"src":"12777:135:23"},{"body":{"nodeType":"YulBlock","src":"13091:236:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13108:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13119:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13101:6:23"},"nodeType":"YulFunctionCall","src":"13101:21:23"},"nodeType":"YulExpressionStatement","src":"13101:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13142:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13153:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13138:3:23"},"nodeType":"YulFunctionCall","src":"13138:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"13158:2:23","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13131:6:23"},"nodeType":"YulFunctionCall","src":"13131:30:23"},"nodeType":"YulExpressionStatement","src":"13131:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13181:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13192:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13177:3:23"},"nodeType":"YulFunctionCall","src":"13177:18:23"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"13197:34:23","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13170:6:23"},"nodeType":"YulFunctionCall","src":"13170:62:23"},"nodeType":"YulExpressionStatement","src":"13170:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13252:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13263:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13248:3:23"},"nodeType":"YulFunctionCall","src":"13248:18:23"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"13268:16:23","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13241:6:23"},"nodeType":"YulFunctionCall","src":"13241:44:23"},"nodeType":"YulExpressionStatement","src":"13241:44:23"},{"nodeType":"YulAssignment","src":"13294:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13306:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13317:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13302:3:23"},"nodeType":"YulFunctionCall","src":"13302:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13294:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13068:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13082:4:23","type":""}],"src":"12917:410:23"},{"body":{"nodeType":"YulBlock","src":"13388:65:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13405:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"13408:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13398:6:23"},"nodeType":"YulFunctionCall","src":"13398:14:23"},"nodeType":"YulExpressionStatement","src":"13398:14:23"},{"nodeType":"YulAssignment","src":"13421:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13439:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13442:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13429:9:23"},"nodeType":"YulFunctionCall","src":"13429:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13421:4:23"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13371:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13379:4:23","type":""}],"src":"13332:121:23"},{"body":{"nodeType":"YulBlock","src":"13539:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"13572:425:23","statements":[{"nodeType":"YulVariableDeclaration","src":"13586:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"13596:1:23","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13590:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13617:2:23"},{"name":"array","nodeType":"YulIdentifier","src":"13621:5:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13610:6:23"},"nodeType":"YulFunctionCall","src":"13610:17:23"},"nodeType":"YulExpressionStatement","src":"13610:17:23"},{"nodeType":"YulVariableDeclaration","src":"13640:31:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13662:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"13666:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13652:9:23"},"nodeType":"YulFunctionCall","src":"13652:19:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"13644:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13684:57:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13707:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13717:1:23","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13724:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"13736:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13720:3:23"},"nodeType":"YulFunctionCall","src":"13720:19:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13713:3:23"},"nodeType":"YulFunctionCall","src":"13713:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13703:3:23"},"nodeType":"YulFunctionCall","src":"13703:38:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"13688:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"13778:23:23","statements":[{"nodeType":"YulAssignment","src":"13780:19:23","value":{"name":"data","nodeType":"YulIdentifier","src":"13795:4:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13780:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13760:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"13772:4:23","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13757:2:23"},"nodeType":"YulFunctionCall","src":"13757:20:23"},"nodeType":"YulIf","src":"13754:47:23"},{"nodeType":"YulVariableDeclaration","src":"13814:41:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13828:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13838:1:23","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13845:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"13850:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13841:3:23"},"nodeType":"YulFunctionCall","src":"13841:12:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13834:3:23"},"nodeType":"YulFunctionCall","src":"13834:20:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13824:3:23"},"nodeType":"YulFunctionCall","src":"13824:31:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"13818:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13868:24:23","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"13881:11:23"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"13872:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"13966:21:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13975:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"13982:2:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13968:6:23"},"nodeType":"YulFunctionCall","src":"13968:17:23"},"nodeType":"YulExpressionStatement","src":"13968:17:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13916:5:23"},{"name":"_2","nodeType":"YulIdentifier","src":"13923:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13913:2:23"},"nodeType":"YulFunctionCall","src":"13913:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13927:26:23","statements":[{"nodeType":"YulAssignment","src":"13929:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13942:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"13949:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13938:3:23"},"nodeType":"YulFunctionCall","src":"13938:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"13929:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"13909:3:23","statements":[]},"src":"13905:82:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13555:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"13560:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13552:2:23"},"nodeType":"YulFunctionCall","src":"13552:11:23"},"nodeType":"YulIf","src":"13549:448:23"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"13511:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"13518:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"13523:10:23","type":""}],"src":"13458:545:23"},{"body":{"nodeType":"YulBlock","src":"14093:81:23","statements":[{"nodeType":"YulAssignment","src":"14103:65:23","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14118:4:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14136:1:23","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"14139:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14132:3:23"},"nodeType":"YulFunctionCall","src":"14132:11:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14149:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14145:3:23"},"nodeType":"YulFunctionCall","src":"14145:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14128:3:23"},"nodeType":"YulFunctionCall","src":"14128:24:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14124:3:23"},"nodeType":"YulFunctionCall","src":"14124:29:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14114:3:23"},"nodeType":"YulFunctionCall","src":"14114:40:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14160:1:23","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"14163:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14156:3:23"},"nodeType":"YulFunctionCall","src":"14156:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14111:2:23"},"nodeType":"YulFunctionCall","src":"14111:57:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"14103:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14070:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"14076:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"14084:4:23","type":""}],"src":"14008:166:23"},{"body":{"nodeType":"YulBlock","src":"14275:1256:23","statements":[{"nodeType":"YulVariableDeclaration","src":"14285:24:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14305:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14299:5:23"},"nodeType":"YulFunctionCall","src":"14299:10:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"14289:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"14352:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14354:16:23"},"nodeType":"YulFunctionCall","src":"14354:18:23"},"nodeType":"YulExpressionStatement","src":"14354:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14324:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14332:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14321:2:23"},"nodeType":"YulFunctionCall","src":"14321:30:23"},"nodeType":"YulIf","src":"14318:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14427:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14465:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14459:5:23"},"nodeType":"YulFunctionCall","src":"14459:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14433:25:23"},"nodeType":"YulFunctionCall","src":"14433:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"14473:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"14383:43:23"},"nodeType":"YulFunctionCall","src":"14383:97:23"},"nodeType":"YulExpressionStatement","src":"14383:97:23"},{"nodeType":"YulVariableDeclaration","src":"14489:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"14506:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"14493:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14516:23:23","value":{"kind":"number","nodeType":"YulLiteral","src":"14535:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"14520:11:23","type":""}]},{"nodeType":"YulAssignment","src":"14548:24:23","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"14561:11:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14548:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14618:656:23","statements":[{"nodeType":"YulVariableDeclaration","src":"14632:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14651:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14663:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14659:3:23"},"nodeType":"YulFunctionCall","src":"14659:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14647:3:23"},"nodeType":"YulFunctionCall","src":"14647:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"14636:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14680:49:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14724:4:23"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"14694:29:23"},"nodeType":"YulFunctionCall","src":"14694:35:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"14684:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14742:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"14751:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14746:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"14829:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14854:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14872:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14877:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14868:3:23"},"nodeType":"YulFunctionCall","src":"14868:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14862:5:23"},"nodeType":"YulFunctionCall","src":"14862:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14847:6:23"},"nodeType":"YulFunctionCall","src":"14847:42:23"},"nodeType":"YulExpressionStatement","src":"14847:42:23"},{"nodeType":"YulAssignment","src":"14906:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14920:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14928:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14916:3:23"},"nodeType":"YulFunctionCall","src":"14916:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14906:6:23"}]},{"nodeType":"YulAssignment","src":"14947:40:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14964:9:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"14975:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14960:3:23"},"nodeType":"YulFunctionCall","src":"14960:27:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14947:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14776:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"14779:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14773:2:23"},"nodeType":"YulFunctionCall","src":"14773:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14788:28:23","statements":[{"nodeType":"YulAssignment","src":"14790:24:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14799:1:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"14802:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14795:3:23"},"nodeType":"YulFunctionCall","src":"14795:19:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14790:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"14769:3:23","statements":[]},"src":"14765:236:23"},{"body":{"nodeType":"YulBlock","src":"15049:166:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15067:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15094:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15099:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15090:3:23"},"nodeType":"YulFunctionCall","src":"15090:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15084:5:23"},"nodeType":"YulFunctionCall","src":"15084:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"15071:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15134:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"15146:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15173:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"15176:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15169:3:23"},"nodeType":"YulFunctionCall","src":"15169:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"15185:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15165:3:23"},"nodeType":"YulFunctionCall","src":"15165:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15195:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15191:3:23"},"nodeType":"YulFunctionCall","src":"15191:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15161:3:23"},"nodeType":"YulFunctionCall","src":"15161:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15157:3:23"},"nodeType":"YulFunctionCall","src":"15157:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15142:3:23"},"nodeType":"YulFunctionCall","src":"15142:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15127:6:23"},"nodeType":"YulFunctionCall","src":"15127:74:23"},"nodeType":"YulExpressionStatement","src":"15127:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"15020:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"15029:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15017:2:23"},"nodeType":"YulFunctionCall","src":"15017:19:23"},"nodeType":"YulIf","src":"15014:201:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15235:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15249:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"15252:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15245:3:23"},"nodeType":"YulFunctionCall","src":"15245:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"15261:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15241:3:23"},"nodeType":"YulFunctionCall","src":"15241:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15228:6:23"},"nodeType":"YulFunctionCall","src":"15228:36:23"},"nodeType":"YulExpressionStatement","src":"15228:36:23"}]},"nodeType":"YulCase","src":"14611:663:23","value":{"kind":"number","nodeType":"YulLiteral","src":"14616:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"15291:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15305:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"15318:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15309:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"15354:67:23","statements":[{"nodeType":"YulAssignment","src":"15372:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15391:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15396:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15387:3:23"},"nodeType":"YulFunctionCall","src":"15387:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15381:5:23"},"nodeType":"YulFunctionCall","src":"15381:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15372:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"15335:6:23"},"nodeType":"YulIf","src":"15332:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15441:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15500:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"15507:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"15447:52:23"},"nodeType":"YulFunctionCall","src":"15447:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15434:6:23"},"nodeType":"YulFunctionCall","src":"15434:81:23"},"nodeType":"YulExpressionStatement","src":"15434:81:23"}]},"nodeType":"YulCase","src":"15283:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14591:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14599:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14588:2:23"},"nodeType":"YulFunctionCall","src":"14588:14:23"},"nodeType":"YulSwitch","src":"14581:944:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"14260:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"14266:3:23","type":""}],"src":"14179:1352:23"},{"body":{"nodeType":"YulBlock","src":"15643:87:23","statements":[{"nodeType":"YulAssignment","src":"15653:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15665:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15676:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15661:3:23"},"nodeType":"YulFunctionCall","src":"15661:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15653:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15695:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15710:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"15718:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15706:3:23"},"nodeType":"YulFunctionCall","src":"15706:17:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15688:6:23"},"nodeType":"YulFunctionCall","src":"15688:36:23"},"nodeType":"YulExpressionStatement","src":"15688:36:23"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15612:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15623:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15634:4:23","type":""}],"src":"15536:194:23"},{"body":{"nodeType":"YulBlock","src":"15909:239:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15926:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15937:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15919:6:23"},"nodeType":"YulFunctionCall","src":"15919:21:23"},"nodeType":"YulExpressionStatement","src":"15919:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15960:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15971:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15956:3:23"},"nodeType":"YulFunctionCall","src":"15956:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"15976:2:23","type":"","value":"49"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15949:6:23"},"nodeType":"YulFunctionCall","src":"15949:30:23"},"nodeType":"YulExpressionStatement","src":"15949:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15999:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16010:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15995:3:23"},"nodeType":"YulFunctionCall","src":"15995:18:23"},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f","kind":"string","nodeType":"YulLiteral","src":"16015:34:23","type":"","value":"ERC721: transfer caller is not o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15988:6:23"},"nodeType":"YulFunctionCall","src":"15988:62:23"},"nodeType":"YulExpressionStatement","src":"15988:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16070:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16081:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16066:3:23"},"nodeType":"YulFunctionCall","src":"16066:18:23"},{"hexValue":"776e6572206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"16086:19:23","type":"","value":"wner nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16059:6:23"},"nodeType":"YulFunctionCall","src":"16059:47:23"},"nodeType":"YulExpressionStatement","src":"16059:47:23"},{"nodeType":"YulAssignment","src":"16115:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16127:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16138:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16123:3:23"},"nodeType":"YulFunctionCall","src":"16123:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16115:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15886:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15900:4:23","type":""}],"src":"15735:413:23"},{"body":{"nodeType":"YulBlock","src":"16327:232:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16344:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16355:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16337:6:23"},"nodeType":"YulFunctionCall","src":"16337:21:23"},"nodeType":"YulExpressionStatement","src":"16337:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16378:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16389:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16374:3:23"},"nodeType":"YulFunctionCall","src":"16374:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"16394:2:23","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16367:6:23"},"nodeType":"YulFunctionCall","src":"16367:30:23"},"nodeType":"YulExpressionStatement","src":"16367:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16417:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16428:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16413:3:23"},"nodeType":"YulFunctionCall","src":"16413:18:23"},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65","kind":"string","nodeType":"YulLiteral","src":"16433:34:23","type":"","value":"ERC721: balance query for the ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16406:6:23"},"nodeType":"YulFunctionCall","src":"16406:62:23"},"nodeType":"YulExpressionStatement","src":"16406:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16488:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16499:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16484:3:23"},"nodeType":"YulFunctionCall","src":"16484:18:23"},{"hexValue":"726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"16504:12:23","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16477:6:23"},"nodeType":"YulFunctionCall","src":"16477:40:23"},"nodeType":"YulExpressionStatement","src":"16477:40:23"},{"nodeType":"YulAssignment","src":"16526:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16538:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16549:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16534:3:23"},"nodeType":"YulFunctionCall","src":"16534:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16526:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16304:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16318:4:23","type":""}],"src":"16153:406:23"},{"body":{"nodeType":"YulBlock","src":"16748:836:23","statements":[{"nodeType":"YulVariableDeclaration","src":"16758:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"16769:1:23","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"16762:3:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16779:30:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16802:6:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16796:5:23"},"nodeType":"YulFunctionCall","src":"16796:13:23"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"16783:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16818:50:23","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"16858:9:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"16832:25:23"},"nodeType":"YulFunctionCall","src":"16832:36:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16822:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16877:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"16887:1:23","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16881:2:23","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16938:126:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16959:3:23"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"16968:9:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16983:3:23","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16979:3:23"},"nodeType":"YulFunctionCall","src":"16979:8:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16964:3:23"},"nodeType":"YulFunctionCall","src":"16964:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16952:6:23"},"nodeType":"YulFunctionCall","src":"16952:37:23"},"nodeType":"YulExpressionStatement","src":"16952:37:23"},{"nodeType":"YulAssignment","src":"17002:52:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17013:3:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17022:6:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17044:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17037:6:23"},"nodeType":"YulFunctionCall","src":"17037:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17030:6:23"},"nodeType":"YulFunctionCall","src":"17030:22:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17018:3:23"},"nodeType":"YulFunctionCall","src":"17018:35:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17009:3:23"},"nodeType":"YulFunctionCall","src":"17009:45:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17002:3:23"}]}]},"nodeType":"YulCase","src":"16931:133:23","value":{"kind":"number","nodeType":"YulLiteral","src":"16936:1:23","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"17080:349:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17101:1:23","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"17104:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17094:6:23"},"nodeType":"YulFunctionCall","src":"17094:17:23"},"nodeType":"YulExpressionStatement","src":"17094:17:23"},{"nodeType":"YulVariableDeclaration","src":"17124:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"17134:4:23","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"17128:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17151:31:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17176:1:23","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"17179:2:23"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17166:9:23"},"nodeType":"YulFunctionCall","src":"17166:16:23"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"17155:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17195:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"17204:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17199:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"17272:111:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17301:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"17306:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17297:3:23"},"nodeType":"YulFunctionCall","src":"17297:11:23"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"17316:7:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17310:5:23"},"nodeType":"YulFunctionCall","src":"17310:14:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17290:6:23"},"nodeType":"YulFunctionCall","src":"17290:35:23"},"nodeType":"YulExpressionStatement","src":"17290:35:23"},{"nodeType":"YulAssignment","src":"17342:27:23","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"17357:7:23"},{"name":"_1","nodeType":"YulIdentifier","src":"17366:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17353:3:23"},"nodeType":"YulFunctionCall","src":"17353:16:23"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"17342:7:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17229:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"17232:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17226:2:23"},"nodeType":"YulFunctionCall","src":"17226:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17240:19:23","statements":[{"nodeType":"YulAssignment","src":"17242:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17251:1:23"},{"name":"_2","nodeType":"YulIdentifier","src":"17254:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17247:3:23"},"nodeType":"YulFunctionCall","src":"17247:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17242:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"17222:3:23","statements":[]},"src":"17218:165:23"},{"nodeType":"YulAssignment","src":"17396:23:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17407:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"17412:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17403:3:23"},"nodeType":"YulFunctionCall","src":"17403:16:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17396:3:23"}]}]},"nodeType":"YulCase","src":"17073:356:23","value":{"kind":"number","nodeType":"YulLiteral","src":"17078:1:23","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"16908:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"16919:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16904:3:23"},"nodeType":"YulFunctionCall","src":"16904:18:23"},"nodeType":"YulSwitch","src":"16897:532:23"},{"nodeType":"YulVariableDeclaration","src":"17438:29:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17460:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17454:5:23"},"nodeType":"YulFunctionCall","src":"17454:13:23"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"17442:8:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17515:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"17523:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17511:3:23"},"nodeType":"YulFunctionCall","src":"17511:17:23"},{"name":"ret","nodeType":"YulIdentifier","src":"17530:3:23"},{"name":"length_1","nodeType":"YulIdentifier","src":"17535:8:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17476:34:23"},"nodeType":"YulFunctionCall","src":"17476:68:23"},"nodeType":"YulExpressionStatement","src":"17476:68:23"},{"nodeType":"YulAssignment","src":"17553:25:23","value":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"17564:3:23"},{"name":"length_1","nodeType":"YulIdentifier","src":"17569:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17560:3:23"},"nodeType":"YulFunctionCall","src":"17560:18:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17553:3:23"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16716:3:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16721:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16729:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16740:3:23","type":""}],"src":"16564:1020:23"},{"body":{"nodeType":"YulBlock","src":"17763:171:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17780:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17791:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17773:6:23"},"nodeType":"YulFunctionCall","src":"17773:21:23"},"nodeType":"YulExpressionStatement","src":"17773:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17814:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17825:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17810:3:23"},"nodeType":"YulFunctionCall","src":"17810:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"17830:2:23","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17803:6:23"},"nodeType":"YulFunctionCall","src":"17803:30:23"},"nodeType":"YulExpressionStatement","src":"17803:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17853:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17864:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17849:3:23"},"nodeType":"YulFunctionCall","src":"17849:18:23"},{"hexValue":"436f6e7472616374732063616e6e6f74206d696e74","kind":"string","nodeType":"YulLiteral","src":"17869:23:23","type":"","value":"Contracts cannot mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17842:6:23"},"nodeType":"YulFunctionCall","src":"17842:51:23"},"nodeType":"YulExpressionStatement","src":"17842:51:23"},{"nodeType":"YulAssignment","src":"17902:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17914:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17925:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17910:3:23"},"nodeType":"YulFunctionCall","src":"17910:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17902:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_32a53888ca69a743bbaa97a0e7d9316f442fadccf6d37bbebbe9ab28e7024e3e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17740:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17754:4:23","type":""}],"src":"17589:345:23"},{"body":{"nodeType":"YulBlock","src":"18113:182:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18130:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18141:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18123:6:23"},"nodeType":"YulFunctionCall","src":"18123:21:23"},"nodeType":"YulExpressionStatement","src":"18123:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18164:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18175:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18160:3:23"},"nodeType":"YulFunctionCall","src":"18160:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"18180:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18153:6:23"},"nodeType":"YulFunctionCall","src":"18153:30:23"},"nodeType":"YulExpressionStatement","src":"18153:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18203:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18214:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18199:3:23"},"nodeType":"YulFunctionCall","src":"18199:18:23"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"18219:34:23","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18192:6:23"},"nodeType":"YulFunctionCall","src":"18192:62:23"},"nodeType":"YulExpressionStatement","src":"18192:62:23"},{"nodeType":"YulAssignment","src":"18263:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18275:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18286:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18271:3:23"},"nodeType":"YulFunctionCall","src":"18271:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18263:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18090:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18104:4:23","type":""}],"src":"17939:356:23"},{"body":{"nodeType":"YulBlock","src":"18474:230:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18491:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18502:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18484:6:23"},"nodeType":"YulFunctionCall","src":"18484:21:23"},"nodeType":"YulExpressionStatement","src":"18484:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18525:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18536:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18521:3:23"},"nodeType":"YulFunctionCall","src":"18521:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"18541:2:23","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:23"},"nodeType":"YulFunctionCall","src":"18514:30:23"},"nodeType":"YulExpressionStatement","src":"18514:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18564:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18575:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18560:3:23"},"nodeType":"YulFunctionCall","src":"18560:18:23"},{"hexValue":"455243373231723a206e65656420746f206d696e74206174206c65617374206f","kind":"string","nodeType":"YulLiteral","src":"18580:34:23","type":"","value":"ERC721r: need to mint at least o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:23"},"nodeType":"YulFunctionCall","src":"18553:62:23"},"nodeType":"YulExpressionStatement","src":"18553:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18635:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18646:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18631:3:23"},"nodeType":"YulFunctionCall","src":"18631:18:23"},{"hexValue":"6e6520746f6b656e","kind":"string","nodeType":"YulLiteral","src":"18651:10:23","type":"","value":"ne token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18624:6:23"},"nodeType":"YulFunctionCall","src":"18624:38:23"},"nodeType":"YulExpressionStatement","src":"18624:38:23"},{"nodeType":"YulAssignment","src":"18671:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18683:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18694:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18679:3:23"},"nodeType":"YulFunctionCall","src":"18679:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18671:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_bb31380de390e4e0627ca842496a815f4aa25ce62aeb0a04ee78aed6e6c12b62__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18451:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18465:4:23","type":""}],"src":"18300:404:23"},{"body":{"nodeType":"YulBlock","src":"18883:233:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18900:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18911:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18893:6:23"},"nodeType":"YulFunctionCall","src":"18893:21:23"},"nodeType":"YulExpressionStatement","src":"18893:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18934:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18945:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18930:3:23"},"nodeType":"YulFunctionCall","src":"18930:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"18950:2:23","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18923:6:23"},"nodeType":"YulFunctionCall","src":"18923:30:23"},"nodeType":"YulExpressionStatement","src":"18923:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18973:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18984:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18969:3:23"},"nodeType":"YulFunctionCall","src":"18969:18:23"},{"hexValue":"455243373231723a206d696e74696e67206d6f726520746f6b656e7320746861","kind":"string","nodeType":"YulLiteral","src":"18989:34:23","type":"","value":"ERC721r: minting more tokens tha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18962:6:23"},"nodeType":"YulFunctionCall","src":"18962:62:23"},"nodeType":"YulExpressionStatement","src":"18962:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19044:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19055:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19040:3:23"},"nodeType":"YulFunctionCall","src":"19040:18:23"},{"hexValue":"6e20617661696c61626c65","kind":"string","nodeType":"YulLiteral","src":"19060:13:23","type":"","value":"n available"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19033:6:23"},"nodeType":"YulFunctionCall","src":"19033:41:23"},"nodeType":"YulExpressionStatement","src":"19033:41:23"},{"nodeType":"YulAssignment","src":"19083:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19095:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19106:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19091:3:23"},"nodeType":"YulFunctionCall","src":"19091:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19083:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ffa3719eede42d3318b3817081dd67bc4c18fb5a15d06600fb820769c5c8571__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18860:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18874:4:23","type":""}],"src":"18709:407:23"},{"body":{"nodeType":"YulBlock","src":"19168:89:23","statements":[{"body":{"nodeType":"YulBlock","src":"19195:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19197:16:23"},"nodeType":"YulFunctionCall","src":"19197:18:23"},"nodeType":"YulExpressionStatement","src":"19197:18:23"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19188:5:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19181:6:23"},"nodeType":"YulFunctionCall","src":"19181:13:23"},"nodeType":"YulIf","src":"19178:39:23"},{"nodeType":"YulAssignment","src":"19226:25:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19237:5:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19248:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19244:3:23"},"nodeType":"YulFunctionCall","src":"19244:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19233:3:23"},"nodeType":"YulFunctionCall","src":"19233:18:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19226:3:23"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19150:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19160:3:23","type":""}],"src":"19121:136:23"},{"body":{"nodeType":"YulBlock","src":"19310:77:23","statements":[{"nodeType":"YulAssignment","src":"19320:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19331:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"19334:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19327:3:23"},"nodeType":"YulFunctionCall","src":"19327:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19320:3:23"}]},{"body":{"nodeType":"YulBlock","src":"19359:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19361:16:23"},"nodeType":"YulFunctionCall","src":"19361:18:23"},"nodeType":"YulExpressionStatement","src":"19361:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19351:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"19354:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19348:2:23"},"nodeType":"YulFunctionCall","src":"19348:10:23"},"nodeType":"YulIf","src":"19345:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19293:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"19296:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19302:3:23","type":""}],"src":"19262:125:23"},{"body":{"nodeType":"YulBlock","src":"19566:233:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19583:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19594:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19576:6:23"},"nodeType":"YulFunctionCall","src":"19576:21:23"},"nodeType":"YulExpressionStatement","src":"19576:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19617:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19628:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19613:3:23"},"nodeType":"YulFunctionCall","src":"19613:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"19633:2:23","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19606:6:23"},"nodeType":"YulFunctionCall","src":"19606:30:23"},"nodeType":"YulExpressionStatement","src":"19606:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19656:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19667:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19652:3:23"},"nodeType":"YulFunctionCall","src":"19652:18:23"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"19672:34:23","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19645:6:23"},"nodeType":"YulFunctionCall","src":"19645:62:23"},"nodeType":"YulExpressionStatement","src":"19645:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19727:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19738:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19723:3:23"},"nodeType":"YulFunctionCall","src":"19723:18:23"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"19743:13:23","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19716:6:23"},"nodeType":"YulFunctionCall","src":"19716:41:23"},"nodeType":"YulExpressionStatement","src":"19716:41:23"},{"nodeType":"YulAssignment","src":"19766:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19778:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19789:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19774:3:23"},"nodeType":"YulFunctionCall","src":"19774:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19766:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19543:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19557:4:23","type":""}],"src":"19392:407:23"},{"body":{"nodeType":"YulBlock","src":"19978:234:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19995:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20006:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19988:6:23"},"nodeType":"YulFunctionCall","src":"19988:21:23"},"nodeType":"YulExpressionStatement","src":"19988:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20029:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20040:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20025:3:23"},"nodeType":"YulFunctionCall","src":"20025:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"20045:2:23","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20018:6:23"},"nodeType":"YulFunctionCall","src":"20018:30:23"},"nodeType":"YulExpressionStatement","src":"20018:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20068:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20079:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20064:3:23"},"nodeType":"YulFunctionCall","src":"20064:18:23"},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"20084:34:23","type":"","value":"ERC721: operator query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20057:6:23"},"nodeType":"YulFunctionCall","src":"20057:62:23"},"nodeType":"YulExpressionStatement","src":"20057:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20139:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20150:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20135:3:23"},"nodeType":"YulFunctionCall","src":"20135:18:23"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"20155:14:23","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20128:6:23"},"nodeType":"YulFunctionCall","src":"20128:42:23"},"nodeType":"YulExpressionStatement","src":"20128:42:23"},{"nodeType":"YulAssignment","src":"20179:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20191:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20202:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20187:3:23"},"nodeType":"YulFunctionCall","src":"20187:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20179:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19955:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19969:4:23","type":""}],"src":"19804:408:23"},{"body":{"nodeType":"YulBlock","src":"20391:227:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20408:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20419:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20401:6:23"},"nodeType":"YulFunctionCall","src":"20401:21:23"},"nodeType":"YulExpressionStatement","src":"20401:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20442:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20453:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20438:3:23"},"nodeType":"YulFunctionCall","src":"20438:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"20458:2:23","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20431:6:23"},"nodeType":"YulFunctionCall","src":"20431:30:23"},"nodeType":"YulExpressionStatement","src":"20431:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20481:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20492:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20477:3:23"},"nodeType":"YulFunctionCall","src":"20477:18:23"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"20497:34:23","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20470:6:23"},"nodeType":"YulFunctionCall","src":"20470:62:23"},"nodeType":"YulExpressionStatement","src":"20470:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20552:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20563:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20548:3:23"},"nodeType":"YulFunctionCall","src":"20548:18:23"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"20568:7:23","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20541:6:23"},"nodeType":"YulFunctionCall","src":"20541:35:23"},"nodeType":"YulExpressionStatement","src":"20541:35:23"},{"nodeType":"YulAssignment","src":"20585:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20597:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20608:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20593:3:23"},"nodeType":"YulFunctionCall","src":"20593:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20585:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20368:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20382:4:23","type":""}],"src":"20217:401:23"},{"body":{"nodeType":"YulBlock","src":"20797:226:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20814:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20825:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20807:6:23"},"nodeType":"YulFunctionCall","src":"20807:21:23"},"nodeType":"YulExpressionStatement","src":"20807:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20848:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20859:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20844:3:23"},"nodeType":"YulFunctionCall","src":"20844:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"20864:2:23","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20837:6:23"},"nodeType":"YulFunctionCall","src":"20837:30:23"},"nodeType":"YulExpressionStatement","src":"20837:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20887:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20898:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20883:3:23"},"nodeType":"YulFunctionCall","src":"20883:18:23"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"20903:34:23","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20876:6:23"},"nodeType":"YulFunctionCall","src":"20876:62:23"},"nodeType":"YulExpressionStatement","src":"20876:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20958:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20969:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20954:3:23"},"nodeType":"YulFunctionCall","src":"20954:18:23"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"20974:6:23","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20947:6:23"},"nodeType":"YulFunctionCall","src":"20947:34:23"},"nodeType":"YulExpressionStatement","src":"20947:34:23"},{"nodeType":"YulAssignment","src":"20990:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21002:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21013:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20998:3:23"},"nodeType":"YulFunctionCall","src":"20998:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20990:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20774:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20788:4:23","type":""}],"src":"20623:400:23"},{"body":{"nodeType":"YulBlock","src":"21202:175:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21219:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21230:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21212:6:23"},"nodeType":"YulFunctionCall","src":"21212:21:23"},"nodeType":"YulExpressionStatement","src":"21212:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21253:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21264:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21249:3:23"},"nodeType":"YulFunctionCall","src":"21249:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"21269:2:23","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21242:6:23"},"nodeType":"YulFunctionCall","src":"21242:30:23"},"nodeType":"YulExpressionStatement","src":"21242:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21292:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21303:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21288:3:23"},"nodeType":"YulFunctionCall","src":"21288:18:23"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"21308:27:23","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21281:6:23"},"nodeType":"YulFunctionCall","src":"21281:55:23"},"nodeType":"YulExpressionStatement","src":"21281:55:23"},{"nodeType":"YulAssignment","src":"21345:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21357:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21368:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21353:3:23"},"nodeType":"YulFunctionCall","src":"21353:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21345:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21179:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21193:4:23","type":""}],"src":"21028:349:23"},{"body":{"nodeType":"YulBlock","src":"21556:240:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21573:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21584:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21566:6:23"},"nodeType":"YulFunctionCall","src":"21566:21:23"},"nodeType":"YulExpressionStatement","src":"21566:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21607:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21618:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21603:3:23"},"nodeType":"YulFunctionCall","src":"21603:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"21623:2:23","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21596:6:23"},"nodeType":"YulFunctionCall","src":"21596:30:23"},"nodeType":"YulExpressionStatement","src":"21596:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21646:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21657:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21642:3:23"},"nodeType":"YulFunctionCall","src":"21642:18:23"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"21662:34:23","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21635:6:23"},"nodeType":"YulFunctionCall","src":"21635:62:23"},"nodeType":"YulExpressionStatement","src":"21635:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21717:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21728:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21713:3:23"},"nodeType":"YulFunctionCall","src":"21713:18:23"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"21733:20:23","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21706:6:23"},"nodeType":"YulFunctionCall","src":"21706:48:23"},"nodeType":"YulExpressionStatement","src":"21706:48:23"},{"nodeType":"YulAssignment","src":"21763:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21775:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21786:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21771:3:23"},"nodeType":"YulFunctionCall","src":"21771:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21763:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21533:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21547:4:23","type":""}],"src":"21382:414:23"},{"body":{"nodeType":"YulBlock","src":"21833:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21850:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21857:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"21862:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21853:3:23"},"nodeType":"YulFunctionCall","src":"21853:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21843:6:23"},"nodeType":"YulFunctionCall","src":"21843:31:23"},"nodeType":"YulExpressionStatement","src":"21843:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21890:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21893:4:23","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21883:6:23"},"nodeType":"YulFunctionCall","src":"21883:15:23"},"nodeType":"YulExpressionStatement","src":"21883:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21914:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21917:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21907:6:23"},"nodeType":"YulFunctionCall","src":"21907:15:23"},"nodeType":"YulExpressionStatement","src":"21907:15:23"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21801:127:23"},{"body":{"nodeType":"YulBlock","src":"21979:74:23","statements":[{"body":{"nodeType":"YulBlock","src":"22002:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"22004:16:23"},"nodeType":"YulFunctionCall","src":"22004:18:23"},"nodeType":"YulExpressionStatement","src":"22004:18:23"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21999:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21992:6:23"},"nodeType":"YulFunctionCall","src":"21992:9:23"},"nodeType":"YulIf","src":"21989:35:23"},{"nodeType":"YulAssignment","src":"22033:14:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22042:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"22045:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22038:3:23"},"nodeType":"YulFunctionCall","src":"22038:9:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22033:1:23"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21964:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"21967:1:23","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"21973:1:23","type":""}],"src":"21933:120:23"},{"body":{"nodeType":"YulBlock","src":"22104:102:23","statements":[{"nodeType":"YulAssignment","src":"22114:38:23","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22129:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"22132:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22125:3:23"},"nodeType":"YulFunctionCall","src":"22125:12:23"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22143:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"22146:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22139:3:23"},"nodeType":"YulFunctionCall","src":"22139:12:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22121:3:23"},"nodeType":"YulFunctionCall","src":"22121:31:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22114:3:23"}]},{"body":{"nodeType":"YulBlock","src":"22178:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22180:16:23"},"nodeType":"YulFunctionCall","src":"22180:18:23"},"nodeType":"YulExpressionStatement","src":"22180:18:23"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"22167:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"22172:4:23","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22164:2:23"},"nodeType":"YulFunctionCall","src":"22164:13:23"},"nodeType":"YulIf","src":"22161:39:23"}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22087:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"22090:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"22096:3:23","type":""}],"src":"22058:148:23"},{"body":{"nodeType":"YulBlock","src":"22508:438:23","statements":[{"nodeType":"YulAssignment","src":"22518:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22530:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22541:3:23","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22526:3:23"},"nodeType":"YulFunctionCall","src":"22526:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22518:4:23"}]},{"nodeType":"YulVariableDeclaration","src":"22554:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22572:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"22577:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22568:3:23"},"nodeType":"YulFunctionCall","src":"22568:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"22581:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22564:3:23"},"nodeType":"YulFunctionCall","src":"22564:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22558:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22599:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22614:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"22622:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22610:3:23"},"nodeType":"YulFunctionCall","src":"22610:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22592:6:23"},"nodeType":"YulFunctionCall","src":"22592:34:23"},"nodeType":"YulExpressionStatement","src":"22592:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22646:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22657:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22642:3:23"},"nodeType":"YulFunctionCall","src":"22642:18:23"},{"name":"value1","nodeType":"YulIdentifier","src":"22662:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22635:6:23"},"nodeType":"YulFunctionCall","src":"22635:34:23"},"nodeType":"YulExpressionStatement","src":"22635:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22689:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22700:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22685:3:23"},"nodeType":"YulFunctionCall","src":"22685:18:23"},{"name":"value2","nodeType":"YulIdentifier","src":"22705:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22678:6:23"},"nodeType":"YulFunctionCall","src":"22678:34:23"},"nodeType":"YulExpressionStatement","src":"22678:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22732:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22743:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22728:3:23"},"nodeType":"YulFunctionCall","src":"22728:18:23"},{"name":"value3","nodeType":"YulIdentifier","src":"22748:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22721:6:23"},"nodeType":"YulFunctionCall","src":"22721:34:23"},"nodeType":"YulExpressionStatement","src":"22721:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22775:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22786:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22771:3:23"},"nodeType":"YulFunctionCall","src":"22771:19:23"},{"name":"value4","nodeType":"YulIdentifier","src":"22792:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22764:6:23"},"nodeType":"YulFunctionCall","src":"22764:35:23"},"nodeType":"YulExpressionStatement","src":"22764:35:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22819:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22830:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22815:3:23"},"nodeType":"YulFunctionCall","src":"22815:19:23"},{"name":"value5","nodeType":"YulIdentifier","src":"22836:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22808:6:23"},"nodeType":"YulFunctionCall","src":"22808:35:23"},"nodeType":"YulExpressionStatement","src":"22808:35:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22863:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22874:3:23","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22859:3:23"},"nodeType":"YulFunctionCall","src":"22859:19:23"},{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"22884:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"22892:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22880:3:23"},"nodeType":"YulFunctionCall","src":"22880:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22852:6:23"},"nodeType":"YulFunctionCall","src":"22852:44:23"},"nodeType":"YulExpressionStatement","src":"22852:44:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22916:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22927:3:23","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22912:3:23"},"nodeType":"YulFunctionCall","src":"22912:19:23"},{"name":"value7","nodeType":"YulIdentifier","src":"22933:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22905:6:23"},"nodeType":"YulFunctionCall","src":"22905:35:23"},"nodeType":"YulExpressionStatement","src":"22905:35:23"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22421:9:23","type":""},{"name":"value7","nodeType":"YulTypedName","src":"22432:6:23","type":""},{"name":"value6","nodeType":"YulTypedName","src":"22440:6:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"22448:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22456:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22464:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22472:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22480:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22488:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22499:4:23","type":""}],"src":"22211:735:23"},{"body":{"nodeType":"YulBlock","src":"22989:74:23","statements":[{"body":{"nodeType":"YulBlock","src":"23012:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"23014:16:23"},"nodeType":"YulFunctionCall","src":"23014:18:23"},"nodeType":"YulExpressionStatement","src":"23014:18:23"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23009:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23002:6:23"},"nodeType":"YulFunctionCall","src":"23002:9:23"},"nodeType":"YulIf","src":"22999:35:23"},{"nodeType":"YulAssignment","src":"23043:14:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23052:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"23055:1:23"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"23048:3:23"},"nodeType":"YulFunctionCall","src":"23048:9:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"23043:1:23"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22974:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"22977:1:23","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22983:1:23","type":""}],"src":"22951:112:23"},{"body":{"nodeType":"YulBlock","src":"23271:286:23","statements":[{"nodeType":"YulVariableDeclaration","src":"23281:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23299:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"23304:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23295:3:23"},"nodeType":"YulFunctionCall","src":"23295:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"23308:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23291:3:23"},"nodeType":"YulFunctionCall","src":"23291:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"23285:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23326:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23341:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"23349:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23337:3:23"},"nodeType":"YulFunctionCall","src":"23337:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23319:6:23"},"nodeType":"YulFunctionCall","src":"23319:34:23"},"nodeType":"YulExpressionStatement","src":"23319:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23373:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23384:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23369:3:23"},"nodeType":"YulFunctionCall","src":"23369:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23393:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"23401:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23389:3:23"},"nodeType":"YulFunctionCall","src":"23389:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23362:6:23"},"nodeType":"YulFunctionCall","src":"23362:43:23"},"nodeType":"YulExpressionStatement","src":"23362:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23425:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23436:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23421:3:23"},"nodeType":"YulFunctionCall","src":"23421:18:23"},{"name":"value2","nodeType":"YulIdentifier","src":"23441:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23414:6:23"},"nodeType":"YulFunctionCall","src":"23414:34:23"},"nodeType":"YulExpressionStatement","src":"23414:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23468:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23479:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23464:3:23"},"nodeType":"YulFunctionCall","src":"23464:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"23484:3:23","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23457:6:23"},"nodeType":"YulFunctionCall","src":"23457:31:23"},"nodeType":"YulExpressionStatement","src":"23457:31:23"},{"nodeType":"YulAssignment","src":"23497:54:23","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23523:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23535:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23546:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23531:3:23"},"nodeType":"YulFunctionCall","src":"23531:19:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"23505:17:23"},"nodeType":"YulFunctionCall","src":"23505:46:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23497:4:23"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23216:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23227:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23235:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23243:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23251:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23262:4:23","type":""}],"src":"23068:489:23"},{"body":{"nodeType":"YulBlock","src":"23642:169:23","statements":[{"body":{"nodeType":"YulBlock","src":"23688:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23697:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23700:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23690:6:23"},"nodeType":"YulFunctionCall","src":"23690:12:23"},"nodeType":"YulExpressionStatement","src":"23690:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23663:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"23672:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23659:3:23"},"nodeType":"YulFunctionCall","src":"23659:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"23684:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23655:3:23"},"nodeType":"YulFunctionCall","src":"23655:32:23"},"nodeType":"YulIf","src":"23652:52:23"},{"nodeType":"YulVariableDeclaration","src":"23713:29:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23732:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23726:5:23"},"nodeType":"YulFunctionCall","src":"23726:16:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"23717:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23775:5:23"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"23751:23:23"},"nodeType":"YulFunctionCall","src":"23751:30:23"},"nodeType":"YulExpressionStatement","src":"23751:30:23"},{"nodeType":"YulAssignment","src":"23790:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"23800:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23790:6:23"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23608:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23619:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23631:6:23","type":""}],"src":"23562:249:23"}]},"contents":"{\n    { }\n    function validator_revert_contract_IHValue(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IHValue_$5990(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IHValue(value)\n        value0 := value\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IHValue(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_IHValue(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IHValue(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IHValue(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IHValue(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IHValue_$5990__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IHValue(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IHValue(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IHValue(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IHValue(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IHValue(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_71947446ca525a6f47b4c26e39d45a716107b5eb5547cf11856e8d61c0fa00ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"HashPunk: caller is not the owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 0)\n        tail := add(headStart, 64)\n    }\n    function abi_encode_tuple_t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"invalid id\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_fc7e415b4d71800746fd56cd2e9f99a70019c07d161e9e43d2fe64c358808e78__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"insufficient Pass Card balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), 0)\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_8dab769bb3e1b4a60276b85ee01ccc68a7073052ca1cb5124502172cc6982bf4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"insufficient HValue balance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        end := add(ret, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_32a53888ca69a743bbaa97a0e7d9316f442fadccf6d37bbebbe9ab28e7024e3e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Contracts cannot mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bb31380de390e4e0627ca842496a815f4aa25ce62aeb0a04ee78aed6e6c12b62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC721r: need to mint at least o\")\n        mstore(add(headStart, 96), \"ne token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ffa3719eede42d3318b3817081dd67bc4c18fb5a15d06600fb820769c5c8571__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC721r: minting more tokens tha\")\n        mstore(add(headStart, 96), \"n available\")\n        tail := add(headStart, 128)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32_t_address_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), and(value6, _1))\n        mstore(add(headStart, 224), value7)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101f05760003560e01c806370a082311161010f578063a22cb465116100a2578063cdda418c11610071578063cdda418c14610409578063d5abeb0114610411578063e985e9c514610419578063f7e056ee1461042c57600080fd5b8063a22cb465146103bd578063a8a86457146103d0578063b88d4fde146103e3578063c87b56dd146103f657600080fd5b80638da5cb5b116100de5780638da5cb5b1461037c5780639332c9a51461038f57806395d89b41146103a2578063a0bcfc7f146103aa57600080fd5b806370a082311461034557806380893c171461035857806383d18f7a1461036157806389be0ad11461036957600080fd5b80631e214f0611610187578063444b7aaf11610156578063444b7aaf146103035780635001f3b51461030b5780635b2bd79e146103145780636352211e1461031c57600080fd5b80631e214f06146102b757806323b872dd146102ca57806338e80f68146102dd57806342842e0e146102f057600080fd5b8063095ea7b3116101c3578063095ea7b3146102725780630e4715251461028557806318160ddd1461029c5780631b2ef1ca146102a457600080fd5b80630178f6b9146101f557806301ffc9a71461020a57806306fdde0314610232578063081812fc14610247575b600080fd5b610208610203366004611b8d565b610435565b005b61021d610218366004611bc7565b61048a565b60405190151581526020015b60405180910390f35b61023a6104dc565b6040516102299190611c34565b61025a610255366004611c47565b61056e565b6040516001600160a01b039091168152602001610229565b610208610280366004611c60565b610603565b61028e60735481565b604051908152602001610229565b61028e610716565b6102086102b2366004611c8c565b61072d565b6102086102c5366004611d5a565b610c93565b6102086102d8366004611db9565b610e2b565b6102086102eb366004611c47565b610e5c565b6102086102fe366004611db9565b610e8b565b61028e600181565b61028e606f5481565b61023a610ea6565b61025a61032a366004611c47565b6000908152606a60205260409020546001600160a01b031690565b61028e610353366004611b8d565b610f34565b61028e606e5481565b61028e600281565b610208610377366004611c47565b610fbb565b60715461025a906001600160a01b031681565b60705461025a906001600160a01b031681565b61023a610fea565b6102086103b8366004611dfa565b610ff9565b6102086103cb366004611e2f565b611033565b61028e6103de366004611c60565b61103e565b6102086103f1366004611e6d565b61106f565b61023a610404366004611c47565b6110a7565b61028e600381565b60695461028e565b61021d610427366004611eed565b6110db565b61028e60745481565b6071546001600160a01b031633146104685760405162461bcd60e51b815260040161045f90611f1b565b60405180910390fd5b607080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b031982166380ac58cd60e01b14806104bb57506001600160e01b03198216635b5e139f60e01b145b806104d657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104eb90611f5c565b80601f016020809104026020016040519081016040528092919081815260200182805461051790611f5c565b80156105645780601f1061053957610100808354040283529160200191610564565b820191906000526020600020905b81548152906001019060200180831161054757829003601f168201915b5050505050905090565b6000818152606a60205260408120546001600160a01b03166105e75760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161045f565b506000908152606c60205260409020546001600160a01b031690565b6000818152606a60205260409020546001600160a01b039081169083168190036106795760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161045f565b336001600160a01b0382161480610695575061069581336110db565b6107075760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161045f565b6107118383611109565b505050565b60006068546069546107289190611fac565b905090565b3233146107565760405162461bcd60e51b8152602060048201526000602482015260440161045f565b60018214806107655750600282145b61079e5760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b604482015260640161045f565b600182036109895780606e546107b49190611fbf565b607054604051627eeac760e11b8152336004820152600160248201526001600160a01b039091169062fdd58e90604401602060405180830381865afa158015610801573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108259190611fd6565b10156108735760405162461bcd60e51b815260206004820152601e60248201527f696e73756666696369656e74205061737320436172642062616c616e63650000604482015260640161045f565b607054606e546001600160a01b039091169063f5298aca90339060019061089b908690611fbf565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091526044820152606401600060405180830381600087803b1580156108e957600080fd5b505af11580156108fd573d6000803e3d6000fd5b5050505061090b3382611170565b5060705460405163731133e960e01b8152336004820152600360248201526001604482015260806064820152600060848201526001600160a01b039091169063731133e99060a401600060405180830381600087803b15801561096d57600080fd5b505af1158015610981573d6000803e3d6000fd5b505050505050565b80606f546109979190611fbf565b607054604051634c25e11f60e01b81523360048201526001600160a01b0390911690634c25e11f90602401602060405180830381865afa1580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a039190611fd6565b607054604051627eeac760e11b8152336004820152600260248201526001600160a01b039091169062fdd58e90604401602060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190611fd6565b610a7e9190611fac565b1015610acc5760405162461bcd60e51b815260206004820152601b60248201527f696e73756666696369656e74204856616c75652062616c616e63650000000000604482015260640161045f565b607054606f546001600160a01b039091169063f5298aca903390600290610af4908690611fbf565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091526044820152606401600060405180830381600087803b158015610b4257600080fd5b505af1158015610b56573d6000803e3d6000fd5b505050506000610b663383611170565b905060005b8151811015610c1457607354828281518110610b8957610b89611fef565b602002602001015110158015610bba5750607454828281518110610baf57610baf611fef565b602002602001015111155b15610c02573360009081526075602052604090208251839083908110610be257610be2611fef565b602090810291909101810151825460018101845560009384529190922001555b80610c0c81612005565b915050610b6b565b5060705460405163731133e960e01b8152336004820152600360248201526001604482015260806064820152600060848201526001600160a01b039091169063731133e99060a401600060405180830381600087803b158015610c7657600080fd5b505af1158015610c8a573d6000803e3d6000fd5b50505050505050565b600054610100900460ff1615808015610cb35750600054600160ff909116105b80610ccd5750303b158015610ccd575060005460ff166001145b610d305760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161045f565b6000805460ff191660011790558015610d53576000805461ff0019166101001790555b610d9a604051806040016040528060088152602001674861736850756e6b60c01b81525060405180604001604052806002815260200161048560f41b815250610bb86113bb565b606e829055606f839055607080546001600160a01b0319166001600160a01b0386161790556072610dcb8682612064565b50607180546001600160a01b031916331790558015610e24576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b610e3533826113ed565b610e515760405162461bcd60e51b815260040161045f90612124565b6107118383836114db565b6071546001600160a01b03163314610e865760405162461bcd60e51b815260040161045f90611f1b565b606f55565b6107118383836040518060200160405280600081525061106f565b60728054610eb390611f5c565b80601f0160208091040260200160405190810160405280929190818152602001828054610edf90611f5c565b8015610f2c5780601f10610f0157610100808354040283529160200191610f2c565b820191906000526020600020905b815481529060010190602001808311610f0f57829003601f168201915b505050505081565b60006001600160a01b038216610f9f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161045f565b506001600160a01b03166000908152606b602052604090205490565b6071546001600160a01b03163314610fe55760405162461bcd60e51b815260040161045f90611f1b565b606e55565b6060606680546104eb90611f5c565b6071546001600160a01b031633146110235760405162461bcd60e51b815260040161045f90611f1b565b607261102f8282612064565b5050565b61102f338383611677565b6075602052816000526040600020818154811061105a57600080fd5b90600052602060002001600091509150505481565b61107933836113ed565b6110955760405162461bcd60e51b815260040161045f90612124565b6110a184848484611745565b50505050565b606060726110b483611778565b6040516020016110c5929190612175565b6040516020818303038152906040529050919050565b6001600160a01b039182166000908152606d6020908152604080832093909416825291909152205460ff1690565b6000818152606c6020908152604080832080546001600160a01b0319166001600160a01b03878116918217909255606a909352818420549151859492909116917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a45050565b60603332146111b95760405162461bcd60e51b815260206004820152601560248201527410dbdb9d1c9858dd1cc818d85b9b9bdd081b5a5b9d605a1b604482015260640161045f565b6001600160a01b03831661120f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161045f565b600082116112705760405162461bcd60e51b815260206004820152602860248201527f455243373231723a206e65656420746f206d696e74206174206c65617374206f6044820152673732903a37b5b2b760c11b606482015260840161045f565b8160685410156112d65760405162461bcd60e51b815260206004820152602b60248201527f455243373231723a206d696e74696e67206d6f726520746f6b656e732074686160448201526a6e20617661696c61626c6560a81b606482015260840161045f565b60685460008367ffffffffffffffff8111156112f4576112f4611cae565b60405190808252806020026020018201604052801561131d578160200160208202803683370190505b50905060005b8481101561137f57600061133787856118a4565b90508083838151811061134c5761134c611fef565b6020026020010181815250506113628782611936565b61136b846121fc565b9350508061137890612005565b9050611323565b5060688290556001600160a01b0385166000908152606b6020526040812080548692906113ad908490612213565b909155509095945050505050565b600054610100900460ff166113e25760405162461bcd60e51b815260040161045f90612226565b61071183838361198f565b6000818152606a60205260408120546001600160a01b03166114665760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161045f565b6070546001600160a01b03163303611480575060016104d6565b6000828152606a60205260409020546001600160a01b039081169084168114806114c35750836001600160a01b03166114b88461056e565b6001600160a01b0316145b806114d357506114d381856110db565b949350505050565b6000818152606a60205260409020546001600160a01b038481169116146115525760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161045f565b6001600160a01b0382166115b45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161045f565b6115bf600082611109565b6001600160a01b0383166000908152606b602052604081208054600192906115e8908490611fac565b90915550506001600160a01b0382166000908152606b60205260408120805460019290611616908490612213565b90915550506000818152606a602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b0316036116d85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161045f565b6001600160a01b038381166000818152606d6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6117508484846114db565b61175c848484846119dc565b6110a15760405162461bcd60e51b815260040161045f90612271565b60608160000361179f5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156117c957806117b381612005565b91506117c29050600a836122d9565b91506117a3565b60008167ffffffffffffffff8111156117e4576117e4611cae565b6040519080825280601f01601f19166020018201604052801561180e576020820181803683370190505b509050815b851561189b57611824600182611fac565b90506000611833600a886122d9565b61183e90600a611fbf565b6118489088611fac565b6118539060306122ed565b905060008160f81b90508084848151811061187057611870611fef565b60200101906001600160f81b031916908160001a905350611892600a896122d9565b97505050611813565b50949350505050565b600080833a4342446118b7600184611fac565b604080516001600160a01b0390971660208801528601949094526060850192909252608084015260a08301524060c08201523060e082015261010081018490526101200160408051601f198184030181529190528051602090910120905060006119218483612306565b905061192d8185611add565b95945050505050565b6000818152606a602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600054610100900460ff166119b65760405162461bcd60e51b815260040161045f90612226565b60656119c28482612064565b5060666119cf8382612064565b5060698190556068555050565b60006001600160a01b0384163b15611ad257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a2090339089908890889060040161231a565b6020604051808303816000875af1925050508015611a5b575060408051601f3d908101601f19168201909252611a5891810190612357565b60015b611ab8573d808015611a89576040519150601f19603f3d011682016040523d82523d6000602084013e611a8e565b606091505b508051600003611ab05760405162461bcd60e51b815260040161045f90612271565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506114d3565b506001949350505050565b60008281526067602052604081205481818103611afb575083611afe565b50805b6000611b0b600186611fac565b600081815260676020526040902054909150868214611b545780600003611b42576000878152606760205260409020829055611b54565b60008781526067602052604090208190555b8015611b6a576000828152606760205260408120555b509095945050505050565b6001600160a01b0381168114611b8a57600080fd5b50565b600060208284031215611b9f57600080fd5b8135611baa81611b75565b9392505050565b6001600160e01b031981168114611b8a57600080fd5b600060208284031215611bd957600080fd5b8135611baa81611bb1565b60005b83811015611bff578181015183820152602001611be7565b50506000910152565b60008151808452611c20816020860160208601611be4565b601f01601f19169290920160200192915050565b602081526000611baa6020830184611c08565b600060208284031215611c5957600080fd5b5035919050565b60008060408385031215611c7357600080fd5b8235611c7e81611b75565b946020939093013593505050565b60008060408385031215611c9f57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611cdf57611cdf611cae565b604051601f8501601f19908116603f01168101908282118183101715611d0757611d07611cae565b81604052809350858152868686011115611d2057600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611d4b57600080fd5b611baa83833560208501611cc4565b60008060008060808587031215611d7057600080fd5b843567ffffffffffffffff811115611d8757600080fd5b611d9387828801611d3a565b9450506020850135611da481611b75565b93969395505050506040820135916060013590565b600080600060608486031215611dce57600080fd5b8335611dd981611b75565b92506020840135611de981611b75565b929592945050506040919091013590565b600060208284031215611e0c57600080fd5b813567ffffffffffffffff811115611e2357600080fd5b6114d384828501611d3a565b60008060408385031215611e4257600080fd5b8235611e4d81611b75565b915060208301358015158114611e6257600080fd5b809150509250929050565b60008060008060808587031215611e8357600080fd5b8435611e8e81611b75565b93506020850135611e9e81611b75565b925060408501359150606085013567ffffffffffffffff811115611ec157600080fd5b8501601f81018713611ed257600080fd5b611ee187823560208401611cc4565b91505092959194509250565b60008060408385031215611f0057600080fd5b8235611f0b81611b75565b91506020830135611e6281611b75565b60208082526021908201527f4861736850756e6b3a2063616c6c6572206973206e6f7420746865206f776e656040820152603960f91b606082015260800190565b600181811c90821680611f7057607f821691505b602082108103611f9057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104d6576104d6611f96565b80820281158282048414176104d6576104d6611f96565b600060208284031215611fe857600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161201757612017611f96565b5060010190565b601f82111561071157600081815260208120601f850160051c810160208610156120455750805b601f850160051c820191505b8181101561098157828155600101612051565b815167ffffffffffffffff81111561207e5761207e611cae565b6120928161208c8454611f5c565b8461201e565b602080601f8311600181146120c757600084156120af5750858301515b600019600386901b1c1916600185901b178555610981565b600085815260208120601f198616915b828110156120f6578886015182559484019460019091019084016120d7565b50858210156121145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600080845461218381611f5c565b6001828116801561219b57600181146121b0576121df565b60ff19841687528215158302870194506121df565b8860005260208060002060005b858110156121d65781548a8201529084019082016121bd565b50505082870194505b5050505083516121f3818360208801611be4565b01949350505050565b60008161220b5761220b611f96565b506000190190565b808201808211156104d6576104d6611f96565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826122e8576122e86122c3565b500490565b60ff81811683821601908111156104d6576104d6611f96565b600082612315576123156122c3565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061234d90830184611c08565b9695505050505050565b60006020828403121561236957600080fd5b8151611baa81611bb156fea2646970667358221220c795623d395f96c289b6280101f6b42c25b0fef5d5e69dbe11236c3e2fcea02964736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCDDA418C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xA8A86457 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x9332C9A5 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xA0BCFC7F EQ PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x80893C17 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x89BE0AD1 EQ PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E214F06 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x444B7AAF GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x444B7AAF EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x5001F3B5 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E214F06 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x38E80F68 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xE471525 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x1B2EF1CA EQ PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x178F6B9 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x247 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC7 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x716 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB9 JUMP JUMPDEST PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB9 JUMP JUMPDEST PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x28E PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH2 0x25A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH2 0x25A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DFA JUMP JUMPDEST PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2F JUMP JUMPDEST PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x103E JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0x106F JUMP JUMPDEST PUSH2 0x23A PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH2 0x28E JUMP JUMPDEST PUSH2 0x21D PUSH2 0x427 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EED JUMP JUMPDEST PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x28E PUSH1 0x74 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x70 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4BB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4D6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x4EB SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x517 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x564 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x539 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x564 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x547 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND DUP2 SWAP1 SUB PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x695 JUMPI POP PUSH2 0x695 DUP2 CALLER PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 PUSH2 0x1109 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x68 SLOAD PUSH1 0x69 SLOAD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 DUP3 EQ DUP1 PUSH2 0x765 JUMPI POP PUSH1 0x2 DUP3 EQ JUMPDEST PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1A5B9D985B1A59081A59 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 DUP3 SUB PUSH2 0x989 JUMPI DUP1 PUSH1 0x6E SLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH3 0xFDD58E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x801 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST LT ISZERO PUSH2 0x873 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E74205061737320436172642062616C616E63650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x6E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF5298ACA SWAP1 CALLER SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x89B SWAP1 DUP7 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x90B CALLER DUP3 PUSH2 0x1170 JUMP JUMPDEST POP PUSH1 0x70 SLOAD PUSH1 0x40 MLOAD PUSH4 0x731133E9 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x731133E9 SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x981 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6F SLOAD PUSH2 0x997 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4C25E11F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x4C25E11F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA03 SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH3 0xFDD58E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST LT ISZERO PUSH2 0xACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E74204856616C75652062616C616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x6F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF5298ACA SWAP1 CALLER SWAP1 PUSH1 0x2 SWAP1 PUSH2 0xAF4 SWAP1 DUP7 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xB66 CALLER DUP4 PUSH2 0x1170 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC14 JUMPI PUSH1 0x73 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB89 JUMPI PUSH2 0xB89 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO DUP1 ISZERO PUSH2 0xBBA JUMPI POP PUSH1 0x74 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBAF JUMPI PUSH2 0xBAF PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0xC02 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xBE2 JUMPI PUSH2 0xBE2 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE JUMPDEST DUP1 PUSH2 0xC0C DUP2 PUSH2 0x2005 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB6B JUMP JUMPDEST POP PUSH1 0x70 SLOAD PUSH1 0x40 MLOAD PUSH4 0x731133E9 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x731133E9 SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xCB3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xCCD JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xD30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xD53 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD9A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x4861736850756E6B PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x485 PUSH1 0xF4 SHL DUP2 MSTORE POP PUSH2 0xBB8 PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x6E DUP3 SWAP1 SSTORE PUSH1 0x6F DUP4 SWAP1 SSTORE PUSH1 0x70 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH1 0x72 PUSH2 0xDCB DUP7 DUP3 PUSH2 0x2064 JUMP JUMPDEST POP PUSH1 0x71 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE35 CALLER DUP3 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 DUP4 PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x6F SSTORE JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x106F JUMP JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH2 0xEB3 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEDF SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF2C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF01 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF2C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF0F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x6E SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x4EB SWAP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1023 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x72 PUSH2 0x102F DUP3 DUP3 PUSH2 0x2064 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x102F CALLER DUP4 DUP4 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x75 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x105A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1079 CALLER DUP4 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x1095 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x10A1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1745 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x72 PUSH2 0x10B4 DUP4 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10C5 SWAP3 SWAP2 SWAP1 PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x6A SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP2 MLOAD DUP6 SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 CALLER ORIGIN EQ PUSH2 0x11B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10DBDB9D1C9858DD1CC818D85B9B9BDD081B5A5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x120F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1270 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231723A206E65656420746F206D696E74206174206C65617374206F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3732903A37B5B2B7 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST DUP2 PUSH1 0x68 SLOAD LT ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231723A206D696E74696E67206D6F726520746F6B656E7320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E20617661696C61626C65 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12F4 JUMPI PUSH2 0x12F4 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x131D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x137F JUMPI PUSH1 0x0 PUSH2 0x1337 DUP8 DUP6 PUSH2 0x18A4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x134C JUMPI PUSH2 0x134C PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1362 DUP8 DUP3 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x136B DUP5 PUSH2 0x21FC JUMP JUMPDEST SWAP4 POP POP DUP1 PUSH2 0x1378 SWAP1 PUSH2 0x2005 JUMP JUMPDEST SWAP1 POP PUSH2 0x1323 JUMP JUMPDEST POP PUSH1 0x68 DUP3 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x13AD SWAP1 DUP5 SWAP1 PUSH2 0x2213 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2226 JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 DUP4 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1480 JUMPI POP PUSH1 0x1 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND DUP2 EQ DUP1 PUSH2 0x14C3 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14B8 DUP5 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x14D3 JUMPI POP PUSH2 0x14D3 DUP2 DUP6 PUSH2 0x10DB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x1552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45F JUMP JUMPDEST PUSH2 0x15BF PUSH1 0x0 DUP3 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x15E8 SWAP1 DUP5 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1616 SWAP1 DUP5 SWAP1 PUSH2 0x2213 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x16D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1750 DUP5 DUP5 DUP5 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x175C DUP5 DUP5 DUP5 DUP5 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x10A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x179F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x17C9 JUMPI DUP1 PUSH2 0x17B3 DUP2 PUSH2 0x2005 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C2 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x22D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E4 JUMPI PUSH2 0x17E4 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x180E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0x189B JUMPI PUSH2 0x1824 PUSH1 0x1 DUP3 PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1833 PUSH1 0xA DUP9 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x183E SWAP1 PUSH1 0xA PUSH2 0x1FBF JUMP JUMPDEST PUSH2 0x1848 SWAP1 DUP9 PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x1853 SWAP1 PUSH1 0x30 PUSH2 0x22ED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1870 JUMPI PUSH2 0x1870 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1892 PUSH1 0xA DUP10 PUSH2 0x22D9 JUMP JUMPDEST SWAP8 POP POP POP PUSH2 0x1813 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GASPRICE NUMBER TIMESTAMP DIFFICULTY PUSH2 0x18B7 PUSH1 0x1 DUP5 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x20 DUP9 ADD MSTORE DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE BLOCKHASH PUSH1 0xC0 DUP3 ADD MSTORE ADDRESS PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP2 ADD DUP5 SWAP1 MSTORE PUSH2 0x120 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1921 DUP5 DUP4 PUSH2 0x2306 JUMP JUMPDEST SWAP1 POP PUSH2 0x192D DUP2 DUP6 PUSH2 0x1ADD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x19B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2226 JUMP JUMPDEST PUSH1 0x65 PUSH2 0x19C2 DUP5 DUP3 PUSH2 0x2064 JUMP JUMPDEST POP PUSH1 0x66 PUSH2 0x19CF DUP4 DUP3 PUSH2 0x2064 JUMP JUMPDEST POP PUSH1 0x69 DUP2 SWAP1 SSTORE PUSH1 0x68 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1AD2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1A20 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x231A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A5B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1A58 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1AB8 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1A89 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A8E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1AB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x14D3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 DUP2 DUP2 SUB PUSH2 0x1AFB JUMPI POP DUP4 PUSH2 0x1AFE JUMP JUMPDEST POP DUP1 JUMPDEST PUSH1 0x0 PUSH2 0x1B0B PUSH1 0x1 DUP7 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP7 DUP3 EQ PUSH2 0x1B54 JUMPI DUP1 PUSH1 0x0 SUB PUSH2 0x1B42 JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x1B54 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST DUP1 ISZERO PUSH2 0x1B6A JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BAA DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BAA DUP2 PUSH2 0x1BB1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BFF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BE7 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1C20 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1BE4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1BAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1C7E DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1CDF JUMPI PUSH2 0x1CDF PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1D07 JUMPI PUSH2 0x1D07 PUSH2 0x1CAE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1D20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BAA DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D93 DUP8 DUP3 DUP9 ADD PUSH2 0x1D3A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1DA4 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1DD9 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1DE9 DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E4D DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1E8E DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1E9E DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EE1 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1CC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F0B DUP2 PUSH2 0x1B75 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E62 DUP2 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4861736850756E6B3A2063616C6C6572206973206E6F7420746865206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1F70 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F90 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x1F96 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2017 JUMPI PUSH2 0x2017 PUSH2 0x1F96 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2045 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x981 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2051 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207E JUMPI PUSH2 0x207E PUSH2 0x1CAE JUMP JUMPDEST PUSH2 0x2092 DUP2 PUSH2 0x208C DUP5 SLOAD PUSH2 0x1F5C JUMP JUMPDEST DUP5 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x20C7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x20AF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x981 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x20F6 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x20D7 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2114 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x2183 DUP2 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x219B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x21B0 JUMPI PUSH2 0x21DF JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x21DF JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x21D6 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x21BD JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x21F3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1BE4 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x220B JUMPI PUSH2 0x220B PUSH2 0x1F96 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22E8 JUMPI PUSH2 0x22E8 PUSH2 0x22C3 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x1F96 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2315 JUMPI PUSH2 0x2315 PUSH2 0x22C3 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x234D SWAP1 DUP4 ADD DUP5 PUSH2 0x1C08 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1BAA DUP2 PUSH2 0x1BB1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 SWAP6 PUSH3 0x3D395F SWAP7 0xC2 DUP10 0xB6 0x28 ADD ADD 0xF6 0xB4 0x2C 0x25 0xB0 INVALID CREATE2 0xD5 0xE6 SWAP14 0xBE GT 0x23 PUSH13 0x3E2FCEA02964736F6C63430008 GT STOP CALLER ","sourceMap":"125:3326:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2359:86;;;;;;:::i;:::-;;:::i;:::-;;2275:344:18;;;;;;:::i;:::-;;:::i;:::-;;;987:14:23;;980:22;962:41;;950:2;935:18;2275:344:18;;;;;;;;3469:98;;;:::i;:::-;;;;;;;:::i;4993:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2119:32:23;;;2101:51;;2089:2;2074:18;4993:217:18;1955:203:23;4519:413:18;;;;;;:::i;:::-;;:::i;1012:44:22:-;;;;;;;;;2638:25:23;;;2626:2;2611:18;1012:44:22;2492:177:23;2629:117:18;;;:::i;705:1012:21:-;;;;;;:::i;:::-;;:::i;189:356::-;;;;;;:::i;:::-;;:::i;5720:330:18:-;;;;;;:::i;:::-;;:::i;2275:78:21:-;;;;;;:::i;:::-;;:::i;6116:179:18:-;;;;;;:::i;:::-;;:::i;699:35:22:-;;733:1;699:35;;862:28;;;;;;967:39;;;:::i;3170:237:18:-;;;;;;:::i;:::-;3242:7;3277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;3277:16:18;;3170:237;2908:205;;;;;;:::i;:::-;;:::i;822:34:22:-;;;;;;740:35;;774:1;740:35;;2167:102:21;;;;;;:::i;:::-;;:::i;932:29:22:-;;;;;-1:-1:-1;;;;;932:29:22;;;896:30;;;;;-1:-1:-1;;;;;896:30:22;;;3631:102:18;;;:::i;1774:104:21:-;;;;;;:::i;:::-;;:::i;5277:153:18:-;;;;;;:::i;:::-;;:::i;1114:47:22:-;;;;;;:::i;:::-;;:::i;6361:320:18:-;;;;;;:::i;:::-;;:::i;1944:217:21:-;;;;;;:::i;:::-;;:::i;781:35:22:-;;815:1;781:35;;2756:93:18;2832:10;;2756:93;;5496:162;;;;;;:::i;:::-;;:::i;1062:46:22:-;;;;;;2359:86:21;617:5;;-1:-1:-1;;;;;617:5:21;603:10;:19;582:99;;;;-1:-1:-1;;;582:99:21;;;;;;;:::i;:::-;;;;;;;;;2422:6:::1;:16:::0;;-1:-1:-1;;;;;;2422:16:21::1;-1:-1:-1::0;;;;;2422:16:21;;;::::1;::::0;;;::::1;::::0;;2359:86::o;2275:344:18:-;2399:4;-1:-1:-1;;;;;;2434:51:18;;-1:-1:-1;;;2434:51:18;;:126;;-1:-1:-1;;;;;;;2501:59:18;;-1:-1:-1;;;2501:59:18;2434:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:11;;;2576:36:18;2415:197;2275:344;-1:-1:-1;;2275:344:18:o;3469:98::-;3523:13;3555:5;3548:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3469:98;:::o;4993:217::-;5069:7;8241:16;;;:7;:16;;;;;;-1:-1:-1;;;;;8241:16:18;5088:73;;;;-1:-1:-1;;;5088:73:18;;8470:2:23;5088:73:18;;;8452:21:23;8509:2;8489:18;;;8482:30;8548:34;8528:18;;;8521:62;-1:-1:-1;;;8599:18:23;;;8592:42;8651:19;;5088:73:18;8268:408:23;5088:73:18;-1:-1:-1;5179:24:18;;;;:15;:24;;;;;;-1:-1:-1;;;;;5179:24:18;;4993:217::o;4519:413::-;4599:13;3277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;3277:16:18;;;;4668:11;;;;;4660:57;;;;-1:-1:-1;;;4660:57:18;;8883:2:23;4660:57:18;;;8865:21:23;8922:2;8902:18;;;8895:30;8961:34;8941:18;;;8934:62;-1:-1:-1;;;9012:18:23;;;9005:31;9053:19;;4660:57:18;8681:397:23;4660:57:18;929:10:10;-1:-1:-1;;;;;4749:21:18;;;;:62;;-1:-1:-1;4774:37:18;4791:5;929:10:10;5496:162:18;:::i;4774:37::-;4728:165;;;;-1:-1:-1;;;4728:165:18;;9285:2:23;4728:165:18;;;9267:21:23;9324:2;9304:18;;;9297:30;9363:34;9343:18;;;9336:62;9434:26;9414:18;;;9407:54;9478:19;;4728:165:18;9083:420:23;4728:165:18;4904:21;4913:2;4917:7;4904:8;:21::i;:::-;4589:343;4519:413;;:::o;2629:117::-;2681:7;2720:19;;2707:10;;:32;;;;:::i;:::-;2700:39;;2629:117;:::o;705:1012:21:-;772:9;785:10;772:23;764:36;;;;-1:-1:-1;;;764:36:21;;9975:2:23;764:36:21;;;9957:21:23;-1:-1:-1;9994:18:23;;;9987:29;10033:18;;764:36:21;9773:284:23;764:36:21;733:1:22;818:2:21;:12;:28;;;;774:1:22;834:2:21;:12;818:28;810:51;;;;-1:-1:-1;;;810:51:21;;10264:2:23;810:51:21;;;10246:21:23;10303:2;10283:18;;;10276:30;-1:-1:-1;;;10322:18:23;;;10315:40;10372:18;;810:51:21;10062:334:23;810:51:21;733:1:22;875:2:21;:12;871:329;;964:6;951:10;;:19;;;;:::i;:::-;911:6;;:36;;-1:-1:-1;;;911:36:21;;928:10;911:36;;;10748:51:23;911:6:21;10815:18:23;;;10808:34;-1:-1:-1;;;;;911:6:21;;;;:16;;10721:18:23;;911:36:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;903:102;;;;-1:-1:-1;;;903:102:21;;11244:2:23;903:102:21;;;11226:21:23;11283:2;11263:18;;;11256:30;11322:32;11302:18;;;11295:60;11372:18;;903:102:21;11042:354:23;903:102:21;1019:6;;1051:10;;-1:-1:-1;;;;;1019:6:21;;;;:11;;1031:10;;1019:6;;1051:19;;1064:6;;1051:19;:::i;:::-;1019:52;;-1:-1:-1;;;;;;1019:52:21;;;;;;;-1:-1:-1;;;;;11621:32:23;;;1019:52:21;;;11603:51:23;11670:18;;;11663:34;;;;11713:18;;;11706:34;11576:18;;1019:52:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:31;1097:10;1109:6;1085:11;:31::i;:::-;-1:-1:-1;1130:6:21;;:39;;-1:-1:-1;;;1130:39:21;;1142:10;1130:39;;;12026:51:23;815:1:22;12093:18:23;;;12086:34;1130:6:21;12136:18:23;;;12129:34;12199:3;12179:18;;;12172:31;-1:-1:-1;12219:19:23;;;12212:30;-1:-1:-1;;;;;1130:6:21;;;;:11;;12259:19:23;;1130:39:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;705:1012;;:::o;871:329::-;1298:6;1291:4;;:13;;;;:::i;:::-;1256:6;;:31;;-1:-1:-1;;;1256:31:21;;1276:10;1256:31;;;2101:51:23;-1:-1:-1;;;;;1256:6:21;;;;:19;;2074:18:23;;1256:31:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1217:6;;:36;;-1:-1:-1;;;1217:36:21;;1234:10;1217:36;;;10748:51:23;774:1:22;10815:18:23;;;10808:34;-1:-1:-1;;;;;1217:6:21;;;;:16;;10721:18:23;;1217:36:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;;;:::i;:::-;:87;;1209:127;;;;-1:-1:-1;;;1209:127:21;;12491:2:23;1209:127:21;;;12473:21:23;12530:2;12510:18;;;12503:30;12569:29;12549:18;;;12542:57;12616:18;;1209:127:21;12289:351:23;1209:127:21;1346:6;;1378:4;;-1:-1:-1;;;;;1346:6:21;;;;:11;;1358:10;;774:1:22;;1378:13:21;;1385:6;;1378:13;:::i;:::-;1346:46;;-1:-1:-1;;;;;;1346:46:21;;;;;;;-1:-1:-1;;;;;11621:32:23;;;1346:46:21;;;11603:51:23;11670:18;;;11663:34;;;;11713:18;;;11706:34;11576:18;;1346:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1402:22;1427:31;1439:10;1451:6;1427:11;:31::i;:::-;1402:56;;1472:6;1468:194;1488:8;:15;1484:1;:19;1468:194;;;1540:10;;1527:8;1536:1;1527:11;;;;;;;;:::i;:::-;;;;;;;:23;;:48;;;;;1567:8;;1554;1563:1;1554:11;;;;;;;;:::i;:::-;;;;;;;:21;;1527:48;1524:128;;;1608:10;1594:25;;;;:13;:25;;;;;1625:11;;:8;;1634:1;;1625:11;;;;;;:::i;:::-;;;;;;;;;;;;1594:43;;;;;;;-1:-1:-1;1594:43:21;;;;;;;;;1524:128;1505:3;;;;:::i;:::-;;;;1468:194;;;-1:-1:-1;1671:6:21;;:39;;-1:-1:-1;;;1671:39:21;;1683:10;1671:39;;;12026:51:23;815:1:22;12093:18:23;;;12086:34;1671:6:21;12136:18:23;;;12129:34;12199:3;12179:18;;;12172:31;-1:-1:-1;12219:19:23;;;12212:30;-1:-1:-1;;;;;1671:6:21;;;;:11;;12259:19:23;;1671:39:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;754:963;705:1012;;:::o;189:356::-;3268:19:0;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:0;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:0;1476:19:9;:23;;;3376:66:0;;-1:-1:-1;3425:12:0;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:0;;13119:2:23;3314:201:0;;;13101:21:23;13158:2;13138:18;;;13131:30;13197:34;13177:18;;;13170:62;-1:-1:-1;;;13248:18:23;;;13241:44;13302:19;;3314:201:0;12917:410:23;3314:201:0;3525:12;:16;;-1:-1:-1;;3525:16:0;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:0;;;;;3551:65;349:38:21::1;;;;;;;;;;;;;;-1:-1:-1::0;;;349:38:21::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;349:38:21::1;;::::0;382:4:::1;349:14;:38::i;:::-;397:10;:24:::0;;;431:4:::1;:12:::0;;;453:6:::1;:25:::0;;-1:-1:-1;;;;;;453:25:21::1;-1:-1:-1::0;;;;;453:25:21;::::1;;::::0;;488:15:::1;:22;506:4:::0;488:15;:22:::1;:::i;:::-;-1:-1:-1::0;520:5:21::1;:18:::0;;-1:-1:-1;;;;;;520:18:21::1;528:10;520:18;::::0;;3636:99:0;;;;3686:5;3670:21;;-1:-1:-1;;3670:21:0;;;3710:14;;-1:-1:-1;15688:36:23;;3710:14:0;;15676:2:23;15661:18;3710:14:0;;;;;;;3636:99;3258:483;189:356:21;;;;:::o;5720:330:18:-;5909:41;929:10:10;5942:7:18;5909:18;:41::i;:::-;5901:103;;;;-1:-1:-1;;;5901:103:18;;;;;;;:::i;:::-;6015:28;6025:4;6031:2;6035:7;6015:9;:28::i;2275:78:21:-;617:5;;-1:-1:-1;;;;;617:5:21;603:10;:19;582:99;;;;-1:-1:-1;;;582:99:21;;;;;;;:::i;:::-;2334:4:::1;:12:::0;2275:78::o;6116:179:18:-;6249:39;6266:4;6272:2;6276:7;6249:39;;;;;;;;;;;;:16;:39::i;967::22:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2908:205:18:-;2980:7;-1:-1:-1;;;;;3007:19:18;;2999:74;;;;-1:-1:-1;;;2999:74:18;;16355:2:23;2999:74:18;;;16337:21:23;16394:2;16374:18;;;16367:30;16433:34;16413:18;;;16406:62;-1:-1:-1;;;16484:18:23;;;16477:40;16534:19;;2999:74:18;16153:406:23;2999:74:18;-1:-1:-1;;;;;;3090:16:18;;;;;:9;:16;;;;;;;2908:205::o;2167:102:21:-;617:5;;-1:-1:-1;;;;;617:5:21;603:10;:19;582:99;;;;-1:-1:-1;;;582:99:21;;;;;;;:::i;:::-;2238:10:::1;:24:::0;2167:102::o;3631::18:-;3687:13;3719:7;3712:14;;;;;:::i;1774:104:21:-;617:5;;-1:-1:-1;;;;;617:5:21;603:10;:19;582:99;;;;-1:-1:-1;;;582:99:21;;;;;;;:::i;:::-;1846:15:::1;:25;1864:7:::0;1846:15;:25:::1;:::i;:::-;;1774:104:::0;:::o;5277:153:18:-;5371:52;929:10:10;5404:8:18;5414;5371:18;:52::i;1114:47:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6361:320:18:-;6530:41;929:10:10;6563:7:18;6530:18;:41::i;:::-;6522:103;;;;-1:-1:-1;;;6522:103:18;;;;;;;:::i;:::-;6635:39;6649:4;6655:2;6659:7;6668:5;6635:13;:39::i;:::-;6361:320;;;;:::o;1944:217:21:-;2057:13;2117:15;2134:18;2144:7;2134:9;:18::i;:::-;2100:53;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2086:68;;1944:217;;;:::o;5496:162:18:-;-1:-1:-1;;;;;5616:25:18;;;5593:4;5616:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5496:162::o;14183:183::-;14257:24;;;;:15;:24;;;;;;;;:29;;-1:-1:-1;;;;;;14257:29:18;-1:-1:-1;;;;;14257:29:18;;;;;;;;;3277:7;:16;;;;;;;14301:58;;14257:24;;3277:16;;;;;14301:58;;;14183:183;;:::o;9100:1076::-;9175:13;929:10:10;9223:9:18;9207:25;9199:59;;;;-1:-1:-1;;;9199:59:18;;17791:2:23;9199:59:18;;;17773:21:23;17830:2;17810:18;;;17803:30;-1:-1:-1;;;17849:18:23;;;17842:51;17910:18;;9199:59:18;17589:345:23;9199:59:18;-1:-1:-1;;;;;9276:16:18;;9268:61;;;;-1:-1:-1;;;9268:61:18;;18141:2:23;9268:61:18;;;18123:21:23;;;18160:18;;;18153:30;18219:34;18199:18;;;18192:62;18271:18;;9268:61:18;17939:356:23;9268:61:18;9360:1;9347:10;:14;9339:67;;;;-1:-1:-1;;;9339:67:18;;18502:2:23;9339:67:18;;;18484:21:23;18541:2;18521:18;;;18514:30;18580:34;18560:18;;;18553:62;-1:-1:-1;;;18631:18:23;;;18624:38;18679:19;;9339:67:18;18300:404:23;9339:67:18;9557:10;9534:19;;:33;;9526:89;;;;-1:-1:-1;;;9526:89:18;;18911:2:23;9526:89:18;;;18893:21:23;18950:2;18930:18;;;18923:30;18989:34;18969:18;;;18962:62;-1:-1:-1;;;19040:18:23;;;19033:41;19091:19;;9526:89:18;18709:407:23;9526:89:18;9667:19;;9634:30;9727:10;9716:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9716:22:18;;9696:42;;9753:9;9748:299;9768:10;9764:1;:14;9748:299;;;9824:15;9842:56;9868:2;9872:25;9842;:56::i;:::-;9824:74;;9921:7;9912:3;9916:1;9912:6;;;;;;;;:::i;:::-;;;;;;:16;;;;;9942:40;9970:2;9974:7;9942:27;:40::i;:::-;10009:27;;;:::i;:::-;;;9785:262;9780:3;;;;:::i;:::-;;;9748:299;;;-1:-1:-1;10065:19:18;:47;;;-1:-1:-1;;;;;10122:13:18;;;;;;:9;:13;;;;;:27;;10139:10;;10122:13;:27;;10139:10;;10122:27;:::i;:::-;;;;-1:-1:-1;10166:3:18;;9100:1076;-1:-1:-1;;;;;9100:1076:18:o;1769:180::-;5363:13:0;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:0;;;;;;;:::i;:::-;1890:52:18::1;1915:5;1922:7;1931:10;1890:24;:52::i;3013:436:21:-:0;3107:4;8241:16:18;;;:7;:16;;;;;;-1:-1:-1;;;;;8241:16:18;3123:73:21;;;;-1:-1:-1;;;3123:73:21;;20006:2:23;3123:73:21;;;19988:21:23;20045:2;20025:18;;;20018:30;20084:34;20064:18;;;20057:62;-1:-1:-1;;;20135:18:23;;;20128:42;20187:19;;3123:73:21;19804:408:23;3123:73:21;3231:6;;-1:-1:-1;;;;;3231:6:21;3209:10;:29;3206:70;;-1:-1:-1;3261:4:21;3254:11;;3206:70;3285:13;3277:16:18;;;:7;:16;;;;;;-1:-1:-1;;;;;3277:16:18;;;;3354::21;;;;;:51;;;3398:7;-1:-1:-1;;;;;3374:31:21;:20;3386:7;3374:11;:20::i;:::-;-1:-1:-1;;;;;3374:31:21;;3354:51;:87;;;;3409:32;3426:5;3433:7;3409:16;:32::i;:::-;3346:96;3013:436;-1:-1:-1;;;;3013:436:21:o;13455:617:18:-;3242:7;3277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;13582:43:18;;;3277:16;;13582:43;13574:93;;;;-1:-1:-1;;;13574:93:18;;20419:2:23;13574:93:18;;;20401:21:23;20458:2;20438:18;;;20431:30;20497:34;20477:18;;;20470:62;-1:-1:-1;;;20548:18:23;;;20541:35;20593:19;;13574:93:18;20217:401:23;13574:93:18;-1:-1:-1;;;;;13685:16:18;;13677:65;;;;-1:-1:-1;;;13677:65:18;;20825:2:23;13677:65:18;;;20807:21:23;20864:2;20844:18;;;20837:30;20903:34;20883:18;;;20876:62;-1:-1:-1;;;20954:18:23;;;20947:34;20998:19;;13677:65:18;20623:400:23;13677:65:18;13854:29;13871:1;13875:7;13854:8;:29::i;:::-;-1:-1:-1;;;;;13894:15:18;;;;;;:9;:15;;;;;:20;;13913:1;;13894:15;:20;;13913:1;;13894:20;:::i;:::-;;;;-1:-1:-1;;;;;;;13924:13:18;;;;;;:9;:13;;;;;:18;;13941:1;;13924:13;:18;;13941:1;;13924:18;:::i;:::-;;;;-1:-1:-1;;13952:16:18;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;13952:21:18;-1:-1:-1;;;;;13952:21:18;;;;;;;;;13989:27;;13952:16;;13989:27;;;;;;;4589:343;4519:413;;:::o;14501:307::-;14651:8;-1:-1:-1;;;;;14642:17:18;:5;-1:-1:-1;;;;;14642:17:18;;14634:55;;;;-1:-1:-1;;;14634:55:18;;21230:2:23;14634:55:18;;;21212:21:23;21269:2;21249:18;;;21242:30;21308:27;21288:18;;;21281:55;21353:18;;14634:55:18;21028:349:23;14634:55:18;-1:-1:-1;;;;;14699:25:18;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;14699:46:18;;;;;;;;;;14760:41;;962::23;;;14760::18;;935:18:23;14760:41:18;;;;;;;14501:307;;;:::o;7543:::-;7694:28;7704:4;7710:2;7714:7;7694:9;:28::i;:::-;7740:48;7763:4;7769:2;7773:7;7782:5;7740:22;:48::i;:::-;7732:111;;;;-1:-1:-1;;;7732:111:18;;;;;;;:::i;2451:556:21:-;2505:13;2534:2;2540:1;2534:7;2530:48;;-1:-1:-1;;2557:10:21;;;;;;;;;;;;-1:-1:-1;;;2557:10:21;;;;;2451:556::o;2530:48::-;2599:2;2587:9;2632:66;2639:6;;2632:66;;2661:5;;;;:::i;:::-;;-1:-1:-1;2680:7:21;;-1:-1:-1;2685:2:21;2680:7;;:::i;:::-;;;2632:66;;;2707:17;2737:3;2727:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2727:14:21;-1:-1:-1;2707:34:21;-1:-1:-1;2763:3:21;2776:196;2783:7;;2776:196;;2810:5;2814:1;2810;:5;:::i;:::-;2806:9;-1:-1:-1;2829:10:21;2860:7;2865:2;2860;:7;:::i;:::-;2859:14;;2871:2;2859:14;:::i;:::-;2854:19;;:2;:19;:::i;:::-;2843:31;;:2;:31;:::i;:::-;2829:46;;2889:9;2908:4;2901:12;;2889:24;;2937:2;2927:4;2932:1;2927:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;2927:12:21;;;;;;;;-1:-1:-1;2953:8:21;2959:2;2953:8;;:::i;:::-;;;2792:180;;2776:196;;;-1:-1:-1;2995:4:21;2451:556;-1:-1:-1;;;;2451:556:21:o;10190:710:18:-;10303:7;;10426:2;10450:11;10483:12;10517:15;10554:16;10602;10617:1;10483:12;10602:16;:::i;:::-;10394:325;;;-1:-1:-1;;;;;22610:15:23;;;10394:325:18;;;22592:34:23;22642:18;;22635:34;;;;22685:18;;;22678:34;;;;22728:18;;;22721:34;22771:19;;;22764:35;10592:27:18;22815:19:23;;;22808:35;10649:4:18;22859:19:23;;;22852:44;22912:19;;;22905:35;;;22526:19;;10394:325:18;;;-1:-1:-1;;10394:325:18;;;;;;;;;10367:366;;10394:325;10367:366;;;;;-1:-1:-1;10346:397:18;10775:37;10787:25;10367:366;10775:37;:::i;:::-;10753:59;;10829:64;10854:11;10867:25;10829:24;:64::i;:::-;10822:71;10190:710;-1:-1:-1;;;;;10190:710:18:o;8798:296::-;8946:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;8946:21:18;-1:-1:-1;;;;;8946:21:18;;;;;;;;8991:33;;8946:16;;;8991:33;;8946:16;;8991:33;1846:25:21::1;1774:104:::0;:::o;1955:253:18:-;5363:13:0;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:0;;;;;;;:::i;:::-;2086:5:18::1;:13;2094:5:::0;2086;:13:::1;:::i;:::-;-1:-1:-1::0;2109:7:18::1;:17;2119:7:::0;2109;:17:::1;:::i;:::-;-1:-1:-1::0;2136:10:18::1;:23:::0;;;2169:19:::1;:32:::0;-1:-1:-1;;1955:253:18:o;15361:800::-;15511:4;-1:-1:-1;;;;;15531:13:18;;1476:19:9;:23;15527:628:18;;15566:83;;-1:-1:-1;;;15566:83:18;;-1:-1:-1;;;;;15566:47:18;;;;;:83;;929:10:10;;15628:4:18;;15634:7;;15643:5;;15566:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15566:83:18;;;;;;;;-1:-1:-1;;15566:83:18;;;;;;;;;;;;:::i;:::-;;;15562:541;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15827:6;:13;15844:1;15827:18;15823:266;;15869:60;;-1:-1:-1;;;15869:60:18;;;;;;;:::i;15823:266::-;16041:6;16035:13;16026:6;16022:2;16018:15;16011:38;15562:541;-1:-1:-1;;;;;;15699:62:18;-1:-1:-1;;;15699:62:18;;-1:-1:-1;15692:69:18;;15527:628;-1:-1:-1;16140:4:18;15361:800;;;;;;:::o;11015:1443::-;11135:7;11179:28;;;:16;:28;;;;;;11135:7;11245:15;;;11241:286;;-1:-1:-1;11356:10:18;11241:286;;;-1:-1:-1;11506:10:18;11241:286;11537:17;11557:29;11585:1;11557:25;:29;:::i;:::-;11596:22;11621:27;;;:16;:27;;;;;;11537:49;;-1:-1:-1;11662:23:18;;;11658:619;;11910:14;11928:1;11910:19;11906:361;;12024:28;;;;:16;:28;;;;;:40;;;11906:361;;;12207:28;;;;:16;:28;;;;;:45;;;11906:361;12290:19;;12286:134;;12382:27;;;;:16;:27;;;;;12375:34;12286:134;-1:-1:-1;12445:6:18;;11015:1443;-1:-1:-1;;;;;11015:1443:18:o;14:140:23:-;-1:-1:-1;;;;;98:31:23;;88:42;;78:70;;144:1;141;134:12;78:70;14:140;:::o;159:272::-;234:6;287:2;275:9;266:7;262:23;258:32;255:52;;;303:1;300;293:12;255:52;342:9;329:23;361:40;395:5;361:40;:::i;:::-;420:5;159:272;-1:-1:-1;;;159:272:23:o;436:131::-;-1:-1:-1;;;;;;510:32:23;;500:43;;490:71;;557:1;554;547:12;572:245;630:6;683:2;671:9;662:7;658:23;654:32;651:52;;;699:1;696;689:12;651:52;738:9;725:23;757:30;781:5;757:30;:::i;1014:250::-;1099:1;1109:113;1123:6;1120:1;1117:13;1109:113;;;1199:11;;;1193:18;1180:11;;;1173:39;1145:2;1138:10;1109:113;;;-1:-1:-1;;1256:1:23;1238:16;;1231:27;1014:250::o;1269:271::-;1311:3;1349:5;1343:12;1376:6;1371:3;1364:19;1392:76;1461:6;1454:4;1449:3;1445:14;1438:4;1431:5;1427:16;1392:76;:::i;:::-;1522:2;1501:15;-1:-1:-1;;1497:29:23;1488:39;;;;1529:4;1484:50;;1269:271;-1:-1:-1;;1269:271:23:o;1545:220::-;1694:2;1683:9;1676:21;1657:4;1714:45;1755:2;1744:9;1740:18;1732:6;1714:45;:::i;1770:180::-;1829:6;1882:2;1870:9;1861:7;1857:23;1853:32;1850:52;;;1898:1;1895;1888:12;1850:52;-1:-1:-1;1921:23:23;;1770:180;-1:-1:-1;1770:180:23:o;2163:324::-;2231:6;2239;2292:2;2280:9;2271:7;2267:23;2263:32;2260:52;;;2308:1;2305;2298:12;2260:52;2347:9;2334:23;2366:40;2400:5;2366:40;:::i;:::-;2425:5;2477:2;2462:18;;;;2449:32;;-1:-1:-1;;;2163:324:23:o;2674:248::-;2742:6;2750;2803:2;2791:9;2782:7;2778:23;2774:32;2771:52;;;2819:1;2816;2809:12;2771:52;-1:-1:-1;;2842:23:23;;;2912:2;2897:18;;;2884:32;;-1:-1:-1;2674:248:23:o;2927:127::-;2988:10;2983:3;2979:20;2976:1;2969:31;3019:4;3016:1;3009:15;3043:4;3040:1;3033:15;3059:632;3124:5;3154:18;3195:2;3187:6;3184:14;3181:40;;;3201:18;;:::i;:::-;3276:2;3270:9;3244:2;3330:15;;-1:-1:-1;;3326:24:23;;;3352:2;3322:33;3318:42;3306:55;;;3376:18;;;3396:22;;;3373:46;3370:72;;;3422:18;;:::i;:::-;3462:10;3458:2;3451:22;3491:6;3482:15;;3521:6;3513;3506:22;3561:3;3552:6;3547:3;3543:16;3540:25;3537:45;;;3578:1;3575;3568:12;3537:45;3628:6;3623:3;3616:4;3608:6;3604:17;3591:44;3683:1;3676:4;3667:6;3659;3655:19;3651:30;3644:41;;;;3059:632;;;;;:::o;3696:222::-;3739:5;3792:3;3785:4;3777:6;3773:17;3769:27;3759:55;;3810:1;3807;3800:12;3759:55;3832:80;3908:3;3899:6;3886:20;3879:4;3871:6;3867:17;3832:80;:::i;3923:603::-;4019:6;4027;4035;4043;4096:3;4084:9;4075:7;4071:23;4067:33;4064:53;;;4113:1;4110;4103:12;4064:53;4153:9;4140:23;4186:18;4178:6;4175:30;4172:50;;;4218:1;4215;4208:12;4172:50;4241;4283:7;4274:6;4263:9;4259:22;4241:50;:::i;:::-;4231:60;;;4341:2;4330:9;4326:18;4313:32;4354:40;4388:5;4354:40;:::i;:::-;3923:603;;4413:5;;-1:-1:-1;;;;4465:2:23;4450:18;;4437:32;;4516:2;4501:18;4488:32;;3923:603::o;4531:474::-;4608:6;4616;4624;4677:2;4665:9;4656:7;4652:23;4648:32;4645:52;;;4693:1;4690;4683:12;4645:52;4732:9;4719:23;4751:40;4785:5;4751:40;:::i;:::-;4810:5;-1:-1:-1;4867:2:23;4852:18;;4839:32;4880:42;4839:32;4880:42;:::i;:::-;4531:474;;4941:7;;-1:-1:-1;;;4995:2:23;4980:18;;;;4967:32;;4531:474::o;5495:322::-;5564:6;5617:2;5605:9;5596:7;5592:23;5588:32;5585:52;;;5633:1;5630;5623:12;5585:52;5673:9;5660:23;5706:18;5698:6;5695:30;5692:50;;;5738:1;5735;5728:12;5692:50;5761;5803:7;5794:6;5783:9;5779:22;5761:50;:::i;5822:425::-;5887:6;5895;5948:2;5936:9;5927:7;5923:23;5919:32;5916:52;;;5964:1;5961;5954:12;5916:52;6003:9;5990:23;6022:40;6056:5;6022:40;:::i;:::-;6081:5;-1:-1:-1;6138:2:23;6123:18;;6110:32;6180:15;;6173:23;6161:36;;6151:64;;6211:1;6208;6201:12;6151:64;6234:7;6224:17;;;5822:425;;;;;:::o;6252:813::-;6347:6;6355;6363;6371;6424:3;6412:9;6403:7;6399:23;6395:33;6392:53;;;6441:1;6438;6431:12;6392:53;6480:9;6467:23;6499:40;6533:5;6499:40;:::i;:::-;6558:5;-1:-1:-1;6615:2:23;6600:18;;6587:32;6628:42;6587:32;6628:42;:::i;:::-;6689:7;-1:-1:-1;6743:2:23;6728:18;;6715:32;;-1:-1:-1;6798:2:23;6783:18;;6770:32;6825:18;6814:30;;6811:50;;;6857:1;6854;6847:12;6811:50;6880:22;;6933:4;6925:13;;6921:27;-1:-1:-1;6911:55:23;;6962:1;6959;6952:12;6911:55;6985:74;7051:7;7046:2;7033:16;7028:2;7024;7020:11;6985:74;:::i;:::-;6975:84;;;6252:813;;;;;;;:::o;7070:406::-;7138:6;7146;7199:2;7187:9;7178:7;7174:23;7170:32;7167:52;;;7215:1;7212;7205:12;7167:52;7254:9;7241:23;7273:40;7307:5;7273:40;:::i;:::-;7332:5;-1:-1:-1;7389:2:23;7374:18;;7361:32;7402:42;7361:32;7402:42;:::i;7481:397::-;7683:2;7665:21;;;7722:2;7702:18;;;7695:30;7761:34;7756:2;7741:18;;7734:62;-1:-1:-1;;;7827:2:23;7812:18;;7805:31;7868:3;7853:19;;7481:397::o;7883:380::-;7962:1;7958:12;;;;8005;;;8026:61;;8080:4;8072:6;8068:17;8058:27;;8026:61;8133:2;8125:6;8122:14;8102:18;8099:38;8096:161;;8179:10;8174:3;8170:20;8167:1;8160:31;8214:4;8211:1;8204:15;8242:4;8239:1;8232:15;8096:161;;7883:380;;;:::o;9508:127::-;9569:10;9564:3;9560:20;9557:1;9550:31;9600:4;9597:1;9590:15;9624:4;9621:1;9614:15;9640:128;9707:9;;;9728:11;;;9725:37;;;9742:18;;:::i;10401:168::-;10474:9;;;10505;;10522:15;;;10516:22;;10502:37;10492:71;;10543:18;;:::i;10853:184::-;10923:6;10976:2;10964:9;10955:7;10951:23;10947:32;10944:52;;;10992:1;10989;10982:12;10944:52;-1:-1:-1;11015:16:23;;10853:184;-1:-1:-1;10853:184:23:o;12645:127::-;12706:10;12701:3;12697:20;12694:1;12687:31;12737:4;12734:1;12727:15;12761:4;12758:1;12751:15;12777:135;12816:3;12837:17;;;12834:43;;12857:18;;:::i;:::-;-1:-1:-1;12904:1:23;12893:13;;12777:135::o;13458:545::-;13560:2;13555:3;13552:11;13549:448;;;13596:1;13621:5;13617:2;13610:17;13666:4;13662:2;13652:19;13736:2;13724:10;13720:19;13717:1;13713:27;13707:4;13703:38;13772:4;13760:10;13757:20;13754:47;;;-1:-1:-1;13795:4:23;13754:47;13850:2;13845:3;13841:12;13838:1;13834:20;13828:4;13824:31;13814:41;;13905:82;13923:2;13916:5;13913:13;13905:82;;;13968:17;;;13949:1;13938:13;13905:82;;14179:1352;14305:3;14299:10;14332:18;14324:6;14321:30;14318:56;;;14354:18;;:::i;:::-;14383:97;14473:6;14433:38;14465:4;14459:11;14433:38;:::i;:::-;14427:4;14383:97;:::i;:::-;14535:4;;14599:2;14588:14;;14616:1;14611:663;;;;15318:1;15335:6;15332:89;;;-1:-1:-1;15387:19:23;;;15381:26;15332:89;-1:-1:-1;;14136:1:23;14132:11;;;14128:24;14124:29;14114:40;14160:1;14156:11;;;14111:57;15434:81;;14581:944;;14611:663;13405:1;13398:14;;;13442:4;13429:18;;-1:-1:-1;;14647:20:23;;;14765:236;14779:7;14776:1;14773:14;14765:236;;;14868:19;;;14862:26;14847:42;;14960:27;;;;14928:1;14916:14;;;;14795:19;;14765:236;;;14769:3;15029:6;15020:7;15017:19;15014:201;;;15090:19;;;15084:26;-1:-1:-1;;15173:1:23;15169:14;;;15185:3;15165:24;15161:37;15157:42;15142:58;15127:74;;15014:201;-1:-1:-1;;;;;15261:1:23;15245:14;;;15241:22;15228:36;;-1:-1:-1;14179:1352:23:o;15735:413::-;15937:2;15919:21;;;15976:2;15956:18;;;15949:30;16015:34;16010:2;15995:18;;15988:62;-1:-1:-1;;;16081:2:23;16066:18;;16059:47;16138:3;16123:19;;15735:413::o;16564:1020::-;16740:3;16769:1;16802:6;16796:13;16832:36;16858:9;16832:36;:::i;:::-;16887:1;16904:18;;;16931:133;;;;17078:1;17073:356;;;;16897:532;;16931:133;-1:-1:-1;;16964:24:23;;16952:37;;17037:14;;17030:22;17018:35;;17009:45;;;-1:-1:-1;16931:133:23;;17073:356;17104:6;17101:1;17094:17;17134:4;17179:2;17176:1;17166:16;17204:1;17218:165;17232:6;17229:1;17226:13;17218:165;;;17310:14;;17297:11;;;17290:35;17353:16;;;;17247:10;;17218:165;;;17222:3;;;17412:6;17407:3;17403:16;17396:23;;16897:532;;;;;17460:6;17454:13;17476:68;17535:8;17530:3;17523:4;17515:6;17511:17;17476:68;:::i;:::-;17560:18;;16564:1020;-1:-1:-1;;;;16564:1020:23:o;19121:136::-;19160:3;19188:5;19178:39;;19197:18;;:::i;:::-;-1:-1:-1;;;19233:18:23;;19121:136::o;19262:125::-;19327:9;;;19348:10;;;19345:36;;;19361:18;;:::i;19392:407::-;19594:2;19576:21;;;19633:2;19613:18;;;19606:30;19672:34;19667:2;19652:18;;19645:62;-1:-1:-1;;;19738:2:23;19723:18;;19716:41;19789:3;19774:19;;19392:407::o;21382:414::-;21584:2;21566:21;;;21623:2;21603:18;;;21596:30;21662:34;21657:2;21642:18;;21635:62;-1:-1:-1;;;21728:2:23;21713:18;;21706:48;21786:3;21771:19;;21382:414::o;21801:127::-;21862:10;21857:3;21853:20;21850:1;21843:31;21893:4;21890:1;21883:15;21917:4;21914:1;21907:15;21933:120;21973:1;21999;21989:35;;22004:18;;:::i;:::-;-1:-1:-1;22038:9:23;;21933:120::o;22058:148::-;22146:4;22125:12;;;22139;;;22121:31;;22164:13;;22161:39;;;22180:18;;:::i;22951:112::-;22983:1;23009;22999:35;;23014:18;;:::i;:::-;-1:-1:-1;23048:9:23;;22951:112::o;23068:489::-;-1:-1:-1;;;;;23337:15:23;;;23319:34;;23389:15;;23384:2;23369:18;;23362:43;23436:2;23421:18;;23414:34;;;23484:3;23479:2;23464:18;;23457:31;;;23262:4;;23505:46;;23531:19;;23523:6;23505:46;:::i;:::-;23497:54;23068:489;-1:-1:-1;;;;;;23068:489:23:o;23562:249::-;23631:6;23684:2;23672:9;23663:7;23659:23;23655:32;23652:52;;;23700:1;23697;23690:12;23652:52;23732:9;23726:16;23751:30;23775:5;23751:30;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1826000","executionCost":"46138","totalCost":"1872138"},"external":{"Hpoint()":"285","approve(address,uint256)":"33407","balanceOf(address)":"2629","base()":"2362","baseMetadataURI()":"infinite","getApproved(uint256)":"4805","hValue()":"2404","initialize(string,address,uint256,uint256)":"infinite","isApprovedForAll(address,address)":"infinite","luckyEnd()":"2405","luckyStart()":"2363","maxSupply()":"2358","mint(uint256,uint256)":"infinite","name()":"infinite","owner()":"2382","ownerOf(uint256)":"2588","passId()":"240","passIdBase()":"2363","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26722","setBase(uint256)":"24554","setBaseUri(string)":"infinite","setHValue(address)":"26752","setPassIdBase(uint256)":"24576","supportsInterface(bytes4)":"579","symbol()":"infinite","tokenURI(uint256)":"infinite","totalSupply()":"4583","transferFrom(address,address,uint256)":"infinite","userToRareIds(address,uint256)":"4805","voucher()":"239"},"internal":{"_isApprovedOrOwner(address,uint256)":"infinite","_uint2str(uint256)":"infinite"}},"methodIdentifiers":{"Hpoint()":"83d18f7a","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","base()":"5001f3b5","baseMetadataURI()":"5b2bd79e","getApproved(uint256)":"081812fc","hValue()":"9332c9a5","initialize(string,address,uint256,uint256)":"1e214f06","isApprovedForAll(address,address)":"e985e9c5","luckyEnd()":"f7e056ee","luckyStart()":"0e471525","maxSupply()":"d5abeb01","mint(uint256,uint256)":"1b2ef1ca","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","passId()":"444b7aaf","passIdBase()":"80893c17","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBase(uint256)":"38e80f68","setBaseUri(string)":"a0bcfc7f","setHValue(address)":"0178f6b9","setPassIdBase(uint256)":"89be0ad1","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","userToRareIds(address,uint256)":"a8a86457","voucher()":"cdda418c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Hpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"base\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMetadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hValue\",\"outputs\":[{\"internalType\":\"contract IHValue\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_hValue\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_base\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_passIdBase\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"passId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"passIdBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_base\",\"type\":\"uint256\"}],\"name\":\"setBase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"}],\"name\":\"setBaseUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHValue\",\"name\":\"_hValue\",\"type\":\"address\"}],\"name\":\"setHValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_passIdBase\",\"type\":\"uint256\"}],\"name\":\"setPassIdBase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userToRareIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voucher\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setBaseUri(string)\":{\"notice\":\"Sets a new baseURI for NFT.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HashPunk.sol\":\"HashPunk\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721ReceiverUpgradeable {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Upgradeable.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721MetadataUpgradeable is IERC721Upgradeable {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/ERC721rUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension. This does random batch minting.\\n */\\ncontract ERC721rUpgradeable is ContextUpgradeable, ERC165Upgradeable, IERC721Upgradeable, IERC721MetadataUpgradeable {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n    \\n    mapping(uint => uint) private _availableTokens;\\n    uint256 private _numAvailableTokens;\\n    uint256 private _maxSupply;\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    function __ERC721r_init(string memory name_, string memory symbol_, uint maxSupply_) internal onlyInitializing {\\n        __ERC721r_init_unchained(name_, symbol_, maxSupply_);\\n    }\\n\\n    function __ERC721r_init_unchained(string memory name_, string memory symbol_, uint maxSupply_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _maxSupply = maxSupply_;\\n        _numAvailableTokens = maxSupply_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\\n        return\\n            interfaceId == type(IERC721Upgradeable).interfaceId ||\\n            interfaceId == type(IERC721MetadataUpgradeable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n    \\n    function totalSupply() public view virtual returns (uint256) {\\n        return _maxSupply - _numAvailableTokens;\\n    }\\n    \\n    function maxSupply() public view virtual returns (uint256) {\\n        return _maxSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        //require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721rUpgradeable.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721rUpgradeable.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    function _mintIdWithoutBalanceUpdate(address to, uint256 tokenId) private {\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n        \\n        _owners[tokenId] = to;\\n        \\n        emit Transfer(address(0), to, tokenId);\\n        \\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    function _mintRandom(address to, uint _numToMint) internal virtual returns(uint[] memory){\\n        require(_msgSender() == tx.origin, \\\"Contracts cannot mint\\\");\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(_numToMint > 0, \\\"ERC721r: need to mint at least one token\\\");\\n        \\n        // TODO: Probably don't need this as it will underflow and revert automatically in this case\\n        require(_numAvailableTokens >= _numToMint, \\\"ERC721r: minting more tokens than available\\\");\\n        \\n        uint updatedNumAvailableTokens = _numAvailableTokens;\\n        uint[] memory res = new uint[](_numToMint);\\n        for (uint256 i; i < _numToMint; ++i) { // Do this ++ unchecked?\\n            uint256 tokenId = getRandomAvailableTokenId(to, updatedNumAvailableTokens);\\n            res[i] = tokenId;\\n            _mintIdWithoutBalanceUpdate(to, tokenId);\\n            \\n            --updatedNumAvailableTokens;\\n        }\\n        \\n        _numAvailableTokens = updatedNumAvailableTokens;\\n        _balances[to] += _numToMint;\\n        return res;\\n    }\\n        \\n    function getRandomAvailableTokenId(address to, uint updatedNumAvailableTokens)\\n        internal\\n        returns (uint256)\\n    {\\n        uint256 randomNum = uint256(\\n            keccak256(\\n                abi.encode(\\n                    to,\\n                    tx.gasprice,\\n                    block.number,\\n                    block.timestamp,\\n                    block.difficulty,\\n                    blockhash(block.number - 1),\\n                    address(this),\\n                    updatedNumAvailableTokens\\n                )\\n            )\\n        );\\n        uint256 randomIndex = randomNum % updatedNumAvailableTokens;\\n        return getAvailableTokenAtIndex(randomIndex, updatedNumAvailableTokens);\\n    }\\n\\n    // Implements https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle. Code taken from CryptoPhunksV2\\n    function getAvailableTokenAtIndex(uint256 indexToUse, uint updatedNumAvailableTokens)\\n        internal\\n        returns (uint256)\\n    {\\n        uint256 valAtIndex = _availableTokens[indexToUse];\\n        uint256 result;\\n        if (valAtIndex == 0) {\\n            // This means the index itself is still an available token\\n            result = indexToUse;\\n        } else {\\n            // This means the index itself is not an available token, but the val at that index is.\\n            result = valAtIndex;\\n        }\\n\\n        uint256 lastIndex = updatedNumAvailableTokens - 1;\\n        uint256 lastValInArray = _availableTokens[lastIndex];\\n        if (indexToUse != lastIndex) {\\n            // Replace the value at indexToUse, now that it's been used.\\n            // Replace it with the data from the last index in the array, since we are going to decrease the array size afterwards.\\n            if (lastValInArray == 0) {\\n                // This means the index itself is still an available token\\n                _availableTokens[indexToUse] = lastIndex;\\n            } else {\\n                // This means the index itself is not an available token, but the val at that index is.\\n                _availableTokens[indexToUse] = lastValInArray;\\n            }\\n        }\\n        if (lastValInArray != 0) {\\n            // Gas refund courtsey of @dievardump\\n            delete _availableTokens[lastIndex];\\n        }\\n        \\n        return result;\\n    }\\n    \\n    // Not as good as minting a specific tokenId, but will behave the same at the start\\n    // allowing you to explicitly mint some tokens at launch.\\n    function _mintAtIndex(address to, uint index) internal virtual {\\n        require(_msgSender() == tx.origin, \\\"Contracts cannot mint\\\");\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(_numAvailableTokens >= 1, \\\"ERC721r: minting more tokens than available\\\");\\n        \\n        uint tokenId = getAvailableTokenAtIndex(index, _numAvailableTokens);\\n        --_numAvailableTokens;\\n        \\n        _mintIdWithoutBalanceUpdate(to, tokenId);\\n        \\n        _balances[to] += 1;\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721rUpgradeable.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721rUpgradeable.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits a {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721ReceiverUpgradeable.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\",\"keccak256\":\"0x358e921923f1cd2a0a986c13f03949f8e1d087b92fcbd169cb426099428d29e6\",\"license\":\"MIT\"},\"contracts/HashPunk.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC721rUpgradeable.sol\\\";\\nimport \\\"./HashPunkStorage.sol\\\";\\n\\ncontract HashPunk is ERC721rUpgradeable, HashPunkStorage {\\n\\n    function initialize(\\n        string memory _uri,\\n        address _hValue,\\n        uint256 _base,\\n        uint256 _passIdBase\\n    ) public initializer {\\n        __ERC721r_init(\\\"HashPunk\\\", \\\"HP\\\", 3000);\\n        passIdBase = _passIdBase;\\n        base = _base;\\n        hValue = IHValue(_hValue);\\n        baseMetadataURI = _uri;\\n        owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(\\n            msg.sender == owner,\\n            \\\"HashPunk: caller is not the owner\\\"\\n        );\\n        _;\\n    }\\n\\n    function mint(uint256 id, uint256 amount) public {\\n        require(tx.origin == msg.sender, \\\"\\\");\\n        require(id == passId || id == Hpoint, \\\"invalid id\\\");\\n        if (id == passId) {\\n            require(hValue.balanceOf(msg.sender, passId) >= passIdBase * amount, \\\"insufficient Pass Card balance\\\");\\n            hValue.burn(msg.sender, passId, passIdBase * amount);\\n            _mintRandom(msg.sender, amount);\\n            hValue.mint(msg.sender, voucher, 1, \\\"\\\");\\n            return;\\n        }\\n        require(hValue.balanceOf(msg.sender, Hpoint) - hValue.negtiveValue(msg.sender) >= base * amount, \\\"insufficient HValue balance\\\");\\n        hValue.burn(msg.sender, Hpoint, base * amount);\\n        uint[] memory tokenIds = _mintRandom(msg.sender, amount);\\n        for(uint i = 0; i < tokenIds.length; i++) {\\n            if(tokenIds[i]>=luckyStart && tokenIds[i]<=luckyEnd) {\\n               userToRareIds[msg.sender].push(tokenIds[i]);\\n            }\\n        }\\n        hValue.mint(msg.sender, voucher, 1, \\\"\\\");\\n    }\\n\\n    /**\\n     * Sets a new baseURI for NFT.\\n     */\\n    function setBaseUri(string memory baseUri) external onlyOwner {\\n        baseMetadataURI = baseUri;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (string memory)\\n    {\\n        return string(abi.encodePacked(baseMetadataURI, _uint2str(tokenId)));\\n    }\\n\\n    function setPassIdBase(uint256 _passIdBase) public onlyOwner {\\n        passIdBase = _passIdBase;\\n    }\\n\\n    function setBase(uint256 _base) public onlyOwner {\\n        base = _base;\\n    }\\n\\n    function setHValue(IHValue _hValue) public onlyOwner {\\n        hValue = _hValue;\\n    }\\n\\n    function _uint2str(uint256 _i) internal pure returns (string memory) {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 j = _i;\\n        uint256 len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bStr = new bytes(len);\\n        uint256 k = len;\\n        while (_i != 0) {\\n            k = k - 1;\\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bStr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bStr);\\n    }\\n\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view override returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        if(msg.sender == address(hValue)) {\\n            return true;\\n        }\\n        address owner = ERC721rUpgradeable.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n}\\n\",\"keccak256\":\"0x8c21a3cf6aadf4fb745d31d31cc9b3b9a3da50571d5247d7fa3f143c0132fe05\",\"license\":\"MIT\"},\"contracts/HashPunkStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHValue {\\n\\n    function balanceOf(address account, uint256 id)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    function burn(\\n        address from,\\n        uint256 tokenId,\\n        uint256 amount\\n    ) external;\\n\\n    function mint(\\n        address to,\\n        uint256 tokenId,\\n        uint256 amount,\\n        bytes memory data\\n    ) external;\\n\\n    function negtiveValue(address _address) external view returns (uint256);\\n}\\n\\ncontract HashPunkStorage {\\n    uint256 public constant passId  = 1;\\n    uint256 public constant Hpoint  = 2;\\n    uint256 public constant voucher = 3;\\n    uint256 public          passIdBase;\\n    uint256 public          base;\\n    IHValue public          hValue;\\n    address public          owner;\\n    string  public          baseMetadataURI;\\n    uint256 public          luckyStart       = 1;\\n    uint256 public          luckyEnd         = 500;\\n    mapping(address => uint[]) public userToRareIds;\\n}\",\"keccak256\":\"0x8091645b99b505a32edda6171231c7720c2df8d64de86f74cde8706f232fdb49\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"contracts/HashPunk.sol:HashPunk","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"contracts/HashPunk.sol:HashPunk","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2254,"contract":"contracts/HashPunk.sol:HashPunk","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":2298,"contract":"contracts/HashPunk.sol:HashPunk","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":3842,"contract":"contracts/HashPunk.sol:HashPunk","label":"_name","offset":0,"slot":"101","type":"t_string_storage"},{"astId":3844,"contract":"contracts/HashPunk.sol:HashPunk","label":"_symbol","offset":0,"slot":"102","type":"t_string_storage"},{"astId":3848,"contract":"contracts/HashPunk.sol:HashPunk","label":"_availableTokens","offset":0,"slot":"103","type":"t_mapping(t_uint256,t_uint256)"},{"astId":3850,"contract":"contracts/HashPunk.sol:HashPunk","label":"_numAvailableTokens","offset":0,"slot":"104","type":"t_uint256"},{"astId":3852,"contract":"contracts/HashPunk.sol:HashPunk","label":"_maxSupply","offset":0,"slot":"105","type":"t_uint256"},{"astId":3856,"contract":"contracts/HashPunk.sol:HashPunk","label":"_owners","offset":0,"slot":"106","type":"t_mapping(t_uint256,t_address)"},{"astId":3860,"contract":"contracts/HashPunk.sol:HashPunk","label":"_balances","offset":0,"slot":"107","type":"t_mapping(t_address,t_uint256)"},{"astId":3864,"contract":"contracts/HashPunk.sol:HashPunk","label":"_tokenApprovals","offset":0,"slot":"108","type":"t_mapping(t_uint256,t_address)"},{"astId":3870,"contract":"contracts/HashPunk.sol:HashPunk","label":"_operatorApprovals","offset":0,"slot":"109","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":6001,"contract":"contracts/HashPunk.sol:HashPunk","label":"passIdBase","offset":0,"slot":"110","type":"t_uint256"},{"astId":6003,"contract":"contracts/HashPunk.sol:HashPunk","label":"base","offset":0,"slot":"111","type":"t_uint256"},{"astId":6006,"contract":"contracts/HashPunk.sol:HashPunk","label":"hValue","offset":0,"slot":"112","type":"t_contract(IHValue)5990"},{"astId":6008,"contract":"contracts/HashPunk.sol:HashPunk","label":"owner","offset":0,"slot":"113","type":"t_address"},{"astId":6010,"contract":"contracts/HashPunk.sol:HashPunk","label":"baseMetadataURI","offset":0,"slot":"114","type":"t_string_storage"},{"astId":6013,"contract":"contracts/HashPunk.sol:HashPunk","label":"luckyStart","offset":0,"slot":"115","type":"t_uint256"},{"astId":6016,"contract":"contracts/HashPunk.sol:HashPunk","label":"luckyEnd","offset":0,"slot":"116","type":"t_uint256"},{"astId":6021,"contract":"contracts/HashPunk.sol:HashPunk","label":"userToRareIds","offset":0,"slot":"117","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IHValue)5990":{"encoding":"inplace","label":"contract IHValue","numberOfBytes":"20"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"setBaseUri(string)":{"notice":"Sets a new baseURI for NFT."}},"version":1}}},"contracts/HashPunkStorage.sol":{"HashPunkStorage":{"abi":[{"inputs":[],"name":"Hpoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"base","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMetadataURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hValue","outputs":[{"internalType":"contract IHValue","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyEnd","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"luckyStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"passId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"passIdBase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userToRareIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"voucher","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405260016005556101f460065534801561001b57600080fd5b506103188061002b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806383d18f7a1161007157806383d18f7a146100f95780638da5cb5b146101015780639332c9a51461012c578063a8a864571461013f578063cdda418c14610152578063f7e056ee1461015a57600080fd5b80630e471525146100ae578063444b7aaf146100ca5780635001f3b5146100d25780635b2bd79e146100db57806380893c17146100f0575b600080fd5b6100b760055481565b6040519081526020015b60405180910390f35b6100b7600181565b6100b760015481565b6100e3610163565b6040516100c19190610222565b6100b760005481565b6100b7600281565b600354610114906001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b600254610114906001600160a01b031681565b6100b761014d366004610270565b6101f1565b6100b7600381565b6100b760065481565b60048054610170906102a8565b80601f016020809104026020016040519081016040528092919081815260200182805461019c906102a8565b80156101e95780601f106101be576101008083540402835291602001916101e9565b820191906000526020600020905b8154815290600101906020018083116101cc57829003601f168201915b505050505081565b6007602052816000526040600020818154811061020d57600080fd5b90600052602060002001600091509150505481565b600060208083528351808285015260005b8181101561024f57858101830151858201604001528201610233565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561028357600080fd5b82356001600160a01b038116811461029a57600080fd5b946020939093013593505050565b600181811c908216806102bc57607f821691505b6020821081036102dc57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208620cc1759f2c2e66ea3430d44553a29ba64895efb2329ab912f1200e97a935364736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH2 0x1F4 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x318 DUP1 PUSH2 0x2B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83D18F7A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x9332C9A5 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xA8A86457 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE471525 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x444B7AAF EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x5001F3B5 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x80893C17 EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB7 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0xB7 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x222 JUMP JUMPDEST PUSH2 0xB7 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB7 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x114 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x114 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB7 PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0xB7 PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0xB7 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x170 SWAP1 PUSH2 0x2A8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19C SWAP1 PUSH2 0x2A8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x233 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 KECCAK256 0xCC OR MSIZE CALLCODE 0xC2 0xE6 PUSH15 0xA3430D44553A29BA64895EFB2329AB SWAP2 0x2F SLT STOP 0xE9 PUSH27 0x935364736F6C634300081100330000000000000000000000000000 ","sourceMap":"668:496:22:-:0;;;1055:1;1012:44;;1105:3;1062:46;;668:496;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Hpoint_5996":{"entryPoint":null,"id":5996,"parameterSlots":0,"returnSlots":0},"@baseMetadataURI_6010":{"entryPoint":355,"id":6010,"parameterSlots":0,"returnSlots":0},"@base_6003":{"entryPoint":null,"id":6003,"parameterSlots":0,"returnSlots":0},"@hValue_6006":{"entryPoint":null,"id":6006,"parameterSlots":0,"returnSlots":0},"@luckyEnd_6016":{"entryPoint":null,"id":6016,"parameterSlots":0,"returnSlots":0},"@luckyStart_6013":{"entryPoint":null,"id":6013,"parameterSlots":0,"returnSlots":0},"@owner_6008":{"entryPoint":null,"id":6008,"parameterSlots":0,"returnSlots":0},"@passIdBase_6001":{"entryPoint":null,"id":6001,"parameterSlots":0,"returnSlots":0},"@passId_5993":{"entryPoint":null,"id":5993,"parameterSlots":0,"returnSlots":0},"@userToRareIds_6021":{"entryPoint":497,"id":6021,"parameterSlots":0,"returnSlots":0},"@voucher_5999":{"entryPoint":null,"id":5999,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":624,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IHValue_$5990__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":680,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1922:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:23","statements":[{"nodeType":"YulAssignment","src":"125:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:23"},"nodeType":"YulFunctionCall","src":"133:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:23"},"nodeType":"YulFunctionCall","src":"160:25:23"},"nodeType":"YulExpressionStatement","src":"160:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:23","type":""}],"src":"14:177:23"},{"body":{"nodeType":"YulBlock","src":"317:427:23","statements":[{"nodeType":"YulVariableDeclaration","src":"327:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"337:2:23","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"331:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"355:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"366:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"348:6:23"},"nodeType":"YulFunctionCall","src":"348:21:23"},"nodeType":"YulExpressionStatement","src":"348:21:23"},{"nodeType":"YulVariableDeclaration","src":"378:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"398:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"392:5:23"},"nodeType":"YulFunctionCall","src":"392:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"382:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"436:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:23"},"nodeType":"YulFunctionCall","src":"421:18:23"},{"name":"length","nodeType":"YulIdentifier","src":"441:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"414:6:23"},"nodeType":"YulFunctionCall","src":"414:34:23"},"nodeType":"YulExpressionStatement","src":"414:34:23"},{"nodeType":"YulVariableDeclaration","src":"457:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"466:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"461:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"526:90:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"555:9:23"},{"name":"i","nodeType":"YulIdentifier","src":"566:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:23"},"nodeType":"YulFunctionCall","src":"551:17:23"},{"kind":"number","nodeType":"YulLiteral","src":"570:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"547:3:23"},"nodeType":"YulFunctionCall","src":"547:26:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"589:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"597:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"585:3:23"},"nodeType":"YulFunctionCall","src":"585:14:23"},{"name":"_1","nodeType":"YulIdentifier","src":"601:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"581:3:23"},"nodeType":"YulFunctionCall","src":"581:23:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"575:5:23"},"nodeType":"YulFunctionCall","src":"575:30:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:23"},"nodeType":"YulFunctionCall","src":"540:66:23"},"nodeType":"YulExpressionStatement","src":"540:66:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"487:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"490:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"484:2:23"},"nodeType":"YulFunctionCall","src":"484:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"498:19:23","statements":[{"nodeType":"YulAssignment","src":"500:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"509:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"512:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"505:3:23"},"nodeType":"YulFunctionCall","src":"505:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"500:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"480:3:23","statements":[]},"src":"476:140:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"640:9:23"},{"name":"length","nodeType":"YulIdentifier","src":"651:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"636:3:23"},"nodeType":"YulFunctionCall","src":"636:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"660:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"632:3:23"},"nodeType":"YulFunctionCall","src":"632:31:23"},{"kind":"number","nodeType":"YulLiteral","src":"665:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"625:6:23"},"nodeType":"YulFunctionCall","src":"625:42:23"},"nodeType":"YulExpressionStatement","src":"625:42:23"},{"nodeType":"YulAssignment","src":"676:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"692:9:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"711:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"719:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"707:3:23"},"nodeType":"YulFunctionCall","src":"707:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"728:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"724:3:23"},"nodeType":"YulFunctionCall","src":"724:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"703:3:23"},"nodeType":"YulFunctionCall","src":"703:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"688:3:23"},"nodeType":"YulFunctionCall","src":"688:45:23"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"684:3:23"},"nodeType":"YulFunctionCall","src":"684:54:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"676:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"286:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"297:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"308:4:23","type":""}],"src":"196:548:23"},{"body":{"nodeType":"YulBlock","src":"850:102:23","statements":[{"nodeType":"YulAssignment","src":"860:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"872:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"883:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"868:3:23"},"nodeType":"YulFunctionCall","src":"868:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"860:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"902:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"917:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"933:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"938:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"929:3:23"},"nodeType":"YulFunctionCall","src":"929:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"942:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"925:3:23"},"nodeType":"YulFunctionCall","src":"925:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"913:3:23"},"nodeType":"YulFunctionCall","src":"913:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:23"},"nodeType":"YulFunctionCall","src":"895:51:23"},"nodeType":"YulExpressionStatement","src":"895:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"819:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"830:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"841:4:23","type":""}],"src":"749:203:23"},{"body":{"nodeType":"YulBlock","src":"1074:102:23","statements":[{"nodeType":"YulAssignment","src":"1084:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1096:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1107:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1092:3:23"},"nodeType":"YulFunctionCall","src":"1092:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1084:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1126:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1141:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1157:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1162:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1153:3:23"},"nodeType":"YulFunctionCall","src":"1153:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"1166:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1149:3:23"},"nodeType":"YulFunctionCall","src":"1149:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1137:3:23"},"nodeType":"YulFunctionCall","src":"1137:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1119:6:23"},"nodeType":"YulFunctionCall","src":"1119:51:23"},"nodeType":"YulExpressionStatement","src":"1119:51:23"}]},"name":"abi_encode_tuple_t_contract$_IHValue_$5990__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1043:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1054:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1065:4:23","type":""}],"src":"957:219:23"},{"body":{"nodeType":"YulBlock","src":"1268:267:23","statements":[{"body":{"nodeType":"YulBlock","src":"1314:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1323:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1326:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1316:6:23"},"nodeType":"YulFunctionCall","src":"1316:12:23"},"nodeType":"YulExpressionStatement","src":"1316:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1289:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1298:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1285:3:23"},"nodeType":"YulFunctionCall","src":"1285:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1310:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1281:3:23"},"nodeType":"YulFunctionCall","src":"1281:32:23"},"nodeType":"YulIf","src":"1278:52:23"},{"nodeType":"YulVariableDeclaration","src":"1339:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1365:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1352:12:23"},"nodeType":"YulFunctionCall","src":"1352:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1343:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1438:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1447:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1450:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1440:6:23"},"nodeType":"YulFunctionCall","src":"1440:12:23"},"nodeType":"YulExpressionStatement","src":"1440:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1397:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1408:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1423:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1428:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1419:3:23"},"nodeType":"YulFunctionCall","src":"1419:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"1432:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1415:3:23"},"nodeType":"YulFunctionCall","src":"1415:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1404:3:23"},"nodeType":"YulFunctionCall","src":"1404:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1394:2:23"},"nodeType":"YulFunctionCall","src":"1394:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1387:6:23"},"nodeType":"YulFunctionCall","src":"1387:50:23"},"nodeType":"YulIf","src":"1384:70:23"},{"nodeType":"YulAssignment","src":"1463:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"1473:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:23"}]},{"nodeType":"YulAssignment","src":"1487:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1514:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1525:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1510:3:23"},"nodeType":"YulFunctionCall","src":"1510:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1497:12:23"},"nodeType":"YulFunctionCall","src":"1497:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1487:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1226:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1237:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1249:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1257:6:23","type":""}],"src":"1181:354:23"},{"body":{"nodeType":"YulBlock","src":"1595:325:23","statements":[{"nodeType":"YulAssignment","src":"1605:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1619:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1622:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1615:3:23"},"nodeType":"YulFunctionCall","src":"1615:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1605:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1636:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1666:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"1672:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1662:3:23"},"nodeType":"YulFunctionCall","src":"1662:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1640:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1713:31:23","statements":[{"nodeType":"YulAssignment","src":"1715:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1729:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1737:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1725:3:23"},"nodeType":"YulFunctionCall","src":"1725:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1715:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1693:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1686:6:23"},"nodeType":"YulFunctionCall","src":"1686:26:23"},"nodeType":"YulIf","src":"1683:61:23"},{"body":{"nodeType":"YulBlock","src":"1803:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1824:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1831:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1836:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1827:3:23"},"nodeType":"YulFunctionCall","src":"1827:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1817:6:23"},"nodeType":"YulFunctionCall","src":"1817:31:23"},"nodeType":"YulExpressionStatement","src":"1817:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1868:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1871:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1861:6:23"},"nodeType":"YulFunctionCall","src":"1861:15:23"},"nodeType":"YulExpressionStatement","src":"1861:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1896:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1899:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1889:6:23"},"nodeType":"YulFunctionCall","src":"1889:15:23"},"nodeType":"YulExpressionStatement","src":"1889:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1759:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1782:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1790:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1779:2:23"},"nodeType":"YulFunctionCall","src":"1779:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1756:2:23"},"nodeType":"YulFunctionCall","src":"1756:38:23"},"nodeType":"YulIf","src":"1753:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1575:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1584:6:23","type":""}],"src":"1540:380:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IHValue_$5990__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c806383d18f7a1161007157806383d18f7a146100f95780638da5cb5b146101015780639332c9a51461012c578063a8a864571461013f578063cdda418c14610152578063f7e056ee1461015a57600080fd5b80630e471525146100ae578063444b7aaf146100ca5780635001f3b5146100d25780635b2bd79e146100db57806380893c17146100f0575b600080fd5b6100b760055481565b6040519081526020015b60405180910390f35b6100b7600181565b6100b760015481565b6100e3610163565b6040516100c19190610222565b6100b760005481565b6100b7600281565b600354610114906001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b600254610114906001600160a01b031681565b6100b761014d366004610270565b6101f1565b6100b7600381565b6100b760065481565b60048054610170906102a8565b80601f016020809104026020016040519081016040528092919081815260200182805461019c906102a8565b80156101e95780601f106101be576101008083540402835291602001916101e9565b820191906000526020600020905b8154815290600101906020018083116101cc57829003601f168201915b505050505081565b6007602052816000526040600020818154811061020d57600080fd5b90600052602060002001600091509150505481565b600060208083528351808285015260005b8181101561024f57858101830151858201604001528201610233565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561028357600080fd5b82356001600160a01b038116811461029a57600080fd5b946020939093013593505050565b600181811c908216806102bc57607f821691505b6020821081036102dc57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208620cc1759f2c2e66ea3430d44553a29ba64895efb2329ab912f1200e97a935364736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83D18F7A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x83D18F7A EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x9332C9A5 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xA8A86457 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xCDDA418C EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xF7E056EE EQ PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE471525 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x444B7AAF EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x5001F3B5 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x5B2BD79E EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x80893C17 EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB7 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0xB7 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x222 JUMP JUMPDEST PUSH2 0xB7 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB7 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x114 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x114 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB7 PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0xB7 PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0xB7 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x170 SWAP1 PUSH2 0x2A8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19C SWAP1 PUSH2 0x2A8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x233 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 KECCAK256 0xCC OR MSIZE CALLCODE 0xC2 0xE6 PUSH15 0xA3430D44553A29BA64895EFB2329AB SWAP2 0x2F SLT STOP 0xE9 PUSH27 0x935364736F6C634300081100330000000000000000000000000000 ","sourceMap":"668:496:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:44;;;;;;;;;160:25:23;;;148:2;133:18;1012:44:22;;;;;;;;699:35;;733:1;699:35;;862:28;;;;;;967:39;;;:::i;:::-;;;;;;;:::i;822:34::-;;;;;;740:35;;774:1;740:35;;932:29;;;;;-1:-1:-1;;;;;932:29:22;;;;;;-1:-1:-1;;;;;913:32:23;;;895:51;;883:2;868:18;932:29:22;749:203:23;896:30:22;;;;;-1:-1:-1;;;;;896:30:22;;;1114:47;;;;;;:::i;:::-;;:::i;781:35::-;;815:1;781:35;;1062:46;;;;;;967:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1114:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:548:23:-;308:4;337:2;366;355:9;348:21;398:6;392:13;441:6;436:2;425:9;421:18;414:34;466:1;476:140;490:6;487:1;484:13;476:140;;;585:14;;;581:23;;575:30;551:17;;;570:2;547:26;540:66;505:10;;476:140;;;480:3;665:1;660:2;651:6;640:9;636:22;632:31;625:42;735:2;728;724:7;719:2;711:6;707:15;703:29;692:9;688:45;684:54;676:62;;;;196:548;;;;:::o;1181:354::-;1249:6;1257;1310:2;1298:9;1289:7;1285:23;1281:32;1278:52;;;1326:1;1323;1316:12;1278:52;1352:23;;-1:-1:-1;;;;;1404:31:23;;1394:42;;1384:70;;1450:1;1447;1440:12;1384:70;1473:5;1525:2;1510:18;;;;1497:32;;-1:-1:-1;;;1181:354:23:o;1540:380::-;1619:1;1615:12;;;;1662;;;1683:61;;1737:4;1729:6;1725:17;1715:27;;1683:61;1790:2;1782:6;1779:14;1759:18;1756:38;1753:161;;1836:10;1831:3;1827:20;1824:1;1817:31;1871:4;1868:1;1861:15;1899:4;1896:1;1889:15;1753:161;;1540:380;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"158400","executionCost":"44414","totalCost":"202814"},"external":{"Hpoint()":"184","base()":"2329","baseMetadataURI()":"infinite","hValue()":"2381","luckyEnd()":"2394","luckyStart()":"2285","owner()":"2359","passId()":"207","passIdBase()":"2373","userToRareIds(address,uint256)":"4764","voucher()":"272"}},"methodIdentifiers":{"Hpoint()":"83d18f7a","base()":"5001f3b5","baseMetadataURI()":"5b2bd79e","hValue()":"9332c9a5","luckyEnd()":"f7e056ee","luckyStart()":"0e471525","owner()":"8da5cb5b","passId()":"444b7aaf","passIdBase()":"80893c17","userToRareIds(address,uint256)":"a8a86457","voucher()":"cdda418c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Hpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"base\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMetadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hValue\",\"outputs\":[{\"internalType\":\"contract IHValue\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luckyStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"passId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"passIdBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userToRareIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voucher\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HashPunkStorage.sol\":\"HashPunkStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HashPunkStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHValue {\\n\\n    function balanceOf(address account, uint256 id)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    function burn(\\n        address from,\\n        uint256 tokenId,\\n        uint256 amount\\n    ) external;\\n\\n    function mint(\\n        address to,\\n        uint256 tokenId,\\n        uint256 amount,\\n        bytes memory data\\n    ) external;\\n\\n    function negtiveValue(address _address) external view returns (uint256);\\n}\\n\\ncontract HashPunkStorage {\\n    uint256 public constant passId  = 1;\\n    uint256 public constant Hpoint  = 2;\\n    uint256 public constant voucher = 3;\\n    uint256 public          passIdBase;\\n    uint256 public          base;\\n    IHValue public          hValue;\\n    address public          owner;\\n    string  public          baseMetadataURI;\\n    uint256 public          luckyStart       = 1;\\n    uint256 public          luckyEnd         = 500;\\n    mapping(address => uint[]) public userToRareIds;\\n}\",\"keccak256\":\"0x8091645b99b505a32edda6171231c7720c2df8d64de86f74cde8706f232fdb49\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6001,"contract":"contracts/HashPunkStorage.sol:HashPunkStorage","label":"passIdBase","offset":0,"slot":"0","type":"t_uint256"},{"astId":6003,"contract":"contracts/HashPunkStorage.sol:HashPunkStorage","label":"base","offset":0,"slot":"1","type":"t_uint256"},{"astId":6006,"contract":"contracts/HashPunkStorage.sol:HashPunkStorage","label":"hValue","offset":0,"slot":"2","type":"t_contract(IHValue)5990"},{"astId":6008,"contract":"contracts/HashPunkStorage.sol:HashPunkStorage","label":"owner","offset":0,"slot":"3","type":"t_address"},{"astId":6010,"contract":"contracts/HashPunkStorage.sol:HashPunkStorage","label":"baseMetadataURI","offset":0,"slot":"4","type":"t_string_storage"},{"astId":6013,"contract":"contracts/HashPunkStorage.sol:HashPunkStorage","label":"luckyStart","offset":0,"slot":"5","type":"t_uint256"},{"astId":6016,"contract":"contracts/HashPunkStorage.sol:HashPunkStorage","label":"luckyEnd","offset":0,"slot":"6","type":"t_uint256"},{"astId":6021,"contract":"contracts/HashPunkStorage.sol:HashPunkStorage","label":"userToRareIds","offset":0,"slot":"7","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_contract(IHValue)5990":{"encoding":"inplace","label":"contract IHValue","numberOfBytes":"20"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"IHValue":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"negtiveValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","burn(address,uint256,uint256)":"f5298aca","mint(address,uint256,uint256,bytes)":"731133e9","negtiveValue(address)":"4c25e11f","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"negtiveValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HashPunkStorage.sol\":\"IHValue\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HashPunkStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface IHValue {\\n\\n    function balanceOf(address account, uint256 id)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    function burn(\\n        address from,\\n        uint256 tokenId,\\n        uint256 amount\\n    ) external;\\n\\n    function mint(\\n        address to,\\n        uint256 tokenId,\\n        uint256 amount,\\n        bytes memory data\\n    ) external;\\n\\n    function negtiveValue(address _address) external view returns (uint256);\\n}\\n\\ncontract HashPunkStorage {\\n    uint256 public constant passId  = 1;\\n    uint256 public constant Hpoint  = 2;\\n    uint256 public constant voucher = 3;\\n    uint256 public          passIdBase;\\n    uint256 public          base;\\n    IHValue public          hValue;\\n    address public          owner;\\n    string  public          baseMetadataURI;\\n    uint256 public          luckyStart       = 1;\\n    uint256 public          luckyEnd         = 500;\\n    mapping(address => uint[]) public userToRareIds;\\n}\",\"keccak256\":\"0x8091645b99b505a32edda6171231c7720c2df8d64de86f74cde8706f232fdb49\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}